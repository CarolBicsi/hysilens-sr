// Code generated by protoc-gen-zig
///! package protocol
const std = @import("std");
const Allocator = std.mem.Allocator;
const ArrayList = std.ArrayList;

const protobuf = @import("protobuf");
const ManagedString = protobuf.ManagedString;
const fd = protobuf.fd;

pub const PlayerActionType = enum(i32) {
    PLAYER_ACTION_NONE = 0,
    PLAYER_ACTION_REGISTER = 1,
    PLAYER_ACTION_LOGIN = 2,
    PLAYER_ACTION_LOGOUT = 3,
    PLAYER_ACTION_ADD_EXP = 4,
    PLAYER_ACTION_LEVEL_UP = 5,
    PLAYER_ACTION_ADD_MATERIAL = 6,
    PLAYER_ACTION_SAVE_STAT = 7,
    PLAYER_ACTION_TRAVEL_BROCHURE_INTERACT = 8,
    PLAYER_ACTION_RECHARGE = 101,
    PLAYER_ACTION_BUY_GOODS = 102,
    PLAYER_ACTION_ADD_COIN = 103,
    PLAYER_ACTION_MONTH_CARD_DAILY_HCOIN = 104,
    PLAYER_ACTION_MONTH_CARD_BUY_MCOIN = 105,
    PLAYER_ACTION_RECHARGE_FREE_COIN = 106,
    PLAYER_ACTION_ADD_MONTH_CARD = 107,
    PLAYER_ACTION_RECHARGE_GIFT_PAY = 108,
    PLAYER_ACTION_RECHARGE_GIFT_FREE = 109,
    PLAYER_ACTION_RECHARGE_BENEFIT = 110,
    PLAYER_ACTION_RECHARGE_GIFT_TAKE_REWARD = 111,
    PLAYER_ACTION_RECHARGE_GIFT_REACH = 112,
    PLAYER_ACTION_RECHARGE_BENEFIT_REACH = 113,
    PLAYER_ACTION_MISSION_ACCEPT = 201,
    PLAYER_ACTION_MISSION_FINISH = 202,
    PLAYER_ACTION_MISSION_FAIL = 203,
    PLAYER_ACTION_MAIN_MISSION_ACCEPT = 204,
    PLAYER_ACTION_SUB_MISSION_ACCEPT = 205,
    PLAYER_ACTION_MAIN_MISSION_FINISH = 206,
    PLAYER_ACTION_SUB_MISSION_FINISH = 207,
    PLAYER_ACTION_DAILY_TASK_FINISH = 208,
    PLAYER_ACTION_DAILY_TASK_TAKE_REWARD = 209,
    PLAYER_ACTION_NPC_TALK_REWARD = 210,
    PLAYER_ACTION_MAIN_MISSION_RECOVER = 211,
    PLAYER_ACTION_MAIN_MISSION_DISABLE = 212,
    PLAYER_ACTION_CONSUME_ITEM_SUB_MISSION_FINISH = 213,
    PLAYER_ACTION_ITEM_MONITOR_ALL_SOURCES = 999,
    PLAYER_ACTION_GM = 1001,
    PLAYER_ACTION_CUSTOM_OP = 1002,
    PLAYER_ACTION_CHECK_SUM = 1003,
    PLAYER_ACTION_PLAYER_LOCATION = 1004,
    PLAYER_ACTION_CHANGE_LANGUAGE = 1005,
    PLAYER_ACTION_CLIENT_REPORT = 1006,
    PLAYER_ACTION_ACE_REPORT = 1007,
    PLAYER_ACTION_PLAYER_POWER_INFO = 1008,
    PLAYER_ACTION_DAILY_REFRESH = 1009,
    PLAYER_ACTION_AVATAR_VALUE_INFO = 1010,
    PLAYER_ACTION_MOVE_CHECK_FAILED_REPORT = 1011,
    PLAYER_ACTION_BATTLE_FAILED_REPORT = 1012,
    PLAYER_ACTION_SECURITY_REPORT = 1013,
    PLAYER_ACTION_AVATAR_PROMOTION = 1101,
    PLAYER_ACTION_AVATAR_ADD = 1103,
    PLAYER_ACTION_AVATAR_USE_EXP_ITEM = 1104,
    PLAYER_ACTION_AVATAR_LEVEL_UP = 1105,
    PLAYER_ACTION_SKILL_TREE_UP = 1106,
    PLAYER_ACTION_AVATAR_HP_CHANGE = 1107,
    PLAYER_ACTION_AVATAR_MP_CHANGE = 1108,
    PLAYER_ACTION_AVATAR_ADD_EXP = 1109,
    PLAYER_ACTION_AVATAR_RANK_UP = 1110,
    PLAYER_ACTION_AVATAR_REPEATED = 1111,
    PLAYER_ACTION_MP_MAX_CHANGE = 1112,
    PLAYER_ACTION_AVATAR_TAKE_PROMOTION_REWARD = 1113,
    PLAYER_ACTION_AVATAR_RELIC_AFFIX_INFO = 1114,
    PLAYER_ACTION_AVATAR_MARK = 1115,
    PLAYER_ACTION_AVATAR_SYSTEM_POWER_RESET = 1116,
    PLAYER_ACTION_AVATAR_CHANGE_PATH = 1119,
    PLAYER_ACTION_SET_GROWTH_TARGET_AVATAR = 1120,
    PLAYER_ACTION_DEL_AVATAR = 1121,
    PLAYER_ACTION_AVATAR_SKIN_CHANGE = 1122,
    PLAYER_ACTION_SET_GROWTH_TARGET_FUNCTION_CONFIG = 1123,
    PLAYER_ACTION_AVATAR_SKIN_ACTIVITY_REISSUE = 1124,
    PLAYER_ACTION_SET_AVATAR_ENHANCED_ID = 1125,
    PLAYER_ACTION_STAGE_BEGIN = 1202,
    PLAYER_ACTION_STAGE_END = 1203,
    PLAYER_ACTION_COCOON_STAGE_BEGIN = 1205,
    PLAYER_ACTION_COCOON_STAGE_END = 1206,
    PLAYER_ACTION_FARM_ELEMENT_END = 1207,
    PLAYER_ACTION_ELEMENT_STAGE_END = 1208,
    PLAYER_ACTION_COCOON_SWEEP = 1209,
    PLAYER_ACTION_FARM_ELEMENT_SWEEP = 1210,
    PLAYER_ACTION_RECOVER_STAMINA = 1301,
    PLAYER_ACTION_EXCHANGE_STAMINA = 1302,
    PLAYER_ACTION_LOGIN_REWARD = 1303,
    PLAYER_ACTION_MODIFY_NICKNAME = 1304,
    PLAYER_ACTION_GET_LEVEL_REWARD = 1305,
    PLAYER_ACTION_WORLD_LEVEL_UP = 1306,
    PLAYER_ACTION_ADD_STAMINA = 1307,
    PLAYER_ACTION_GAMEPLAY_BIRTHDAY_REWARD_MAIL = 1308,
    PLAYER_ACTION_RECHARGE_REBATE_REWARD = 1309,
    PLAYER_ACTION_GAMEPLAY_BIRTHDAY_SET = 1310,
    PLAYER_ACTION_RESERVE_STAMINA_EXCHANGE = 1311,
    PLAYER_ACTION_RESERVE_STAMINA_ADD = 1312,
    PLAYER_ACTION_RESERVE_STAMINA_CHANGE = 1313,
    PLAYER_ACTION_NOW_STAMINA = 1314,
    PLAYER_ACTION_FTC_RESET_NICKNAME = 1315,
    PLAYER_ACTION_MAIL = 1401,
    PLAYER_ACTION_MAIL_OP_BY_USER = 1402,
    PLAYER_ACTION_MAIL_OP_BY_MUIP = 1403,
    PLAYER_ACTION_MAIL_OP_BY_GM = 1404,
    PLAYER_ACTION_MAIL_OP_BY_FULL = 1405,
    PLAYER_ACTION_MAIL_OP_BY_EXPIRE = 1406,
    PLAYER_ACTION_MAIL_OP_BY_INTERNAL = 1407,
    PLAYER_ACTION_ADD_MAIL = 1408,
    PLAYER_ACTION_DEL_MAIL = 1409,
    PLAYER_ACTION_TAKE_ATTACHMENT = 1410,
    PLAYER_ACTION_READ_MAIL = 1411,
    PLAYER_ACTION_BATTLE_AVATAR = 1501,
    PLAYER_ACTION_BATTLE_MONSTER = 1502,
    PLAYER_ACTION_BATTLE_END = 1504,
    PLAYER_ACTION_BATTLE_REPLAY = 1505,
    PLAYER_ACTION_BATTLE_AVATAR_DEATH = 1506,
    PLAYER_ACTION_BATTLE_SWITCH_PHASE = 1507,
    PLAYER_ACTION_BATTLE_MONSTER_SKILL = 1508,
    PLAYER_ACTION_BATTLE_REBATTLE = 1509,
    PLAYER_ACTION_BATTLE_AVATAR_SERVANT = 1510,
    PLAYER_ACTION_MISSION_REWARD = 1602,
    PLAYER_ACTION_QUEST_ACCEPT = 1603,
    PLAYER_ACTION_QUEST_FINISH = 1604,
    PLAYER_ACTION_QUEST_REMOVE = 1605,
    PLAYER_ACTION_QUEST_REWARD = 1606,
    PLAYER_ACTION_QUEST_AUTO_CLOSE = 1607,
    PLAYER_ACTION_QUEST_EXPIRED = 1608,
    PLAYER_ACTION_MISSION_REQUIRED = 1609,
    PLAYER_ACTION_SUBMISSION_REWARD = 1610,
    PLAYER_ACTION_ACHIEVEMENT_LEVEL_REWARD = 1611,
    PLAYER_ACTION_QUEST_DELETE = 1612,
    PLAYER_ACTION_SUB_MISSION_REWARD = 1613,
    PLAYER_ACTION_MISSION_COMPENSATE = 1614,
    PLAYER_ACTION_MISSION_RECYCLE = 1615,
    PLAYER_ACTION_QUEST_RESET = 1616,
    PLAYER_ACTION_QUEST_OPTIONAL_REWARD = 1617,
    PLAYER_ACTION_MCV_CHANGE = 1618,
    PLAYER_ACTION_QUEST_REISSUE = 1619,
    PLAYER_ACTION_PROP_INTERACT = 1704,
    PLAYER_ACTION_AVATAR_MAZE_SKILL = 1705,
    PLAYER_ACTION_ENTER_MAZE = 1706,
    PLAYER_ACTION_ORDINARY_INTERACT = 1707,
    PLAYER_ACTION_CHEST_INTERACT = 1708,
    PLAYER_ACTION_CHECK_POINT_UNLOCK = 1709,
    PLAYER_ACTION_CHECK_POINT_INTERACT = 1710,
    PLAYER_ACTION_CHECK_POINT_REVIVE = 1711,
    PLAYER_ACTION_CHECK_POINT_TRANSFER = 1712,
    PLAYER_ACTION_MONSTER_INTERACT = 1714,
    PLAYER_ACTION_NPC_INTERACT = 1716,
    PLAYER_ACTION_PROP_HIT = 1717,
    PLAYER_ACTION_PRELOGUE_REVIVE = 1718,
    PLAYER_ACTION_PROP_STATE = 1719,
    PLAYER_ACTION_CHECK_POINT_RECOVER = 1720,
    PLAYER_ACTION_MECHANISM_BAR = 1722,
    PLAYER_ACTION_SUBMIT_ORIGAMI_ITEM = 1723,
    PLAYER_ACTION_MAZE_BUFF_DROP_ITEM = 1724,
    PLAYER_ACTION_FSV_CHANGE = 1725,
    PLAYER_ACTION_TIMELINE_PROP_STATE = 1726,
    PLAYER_ACTION_GROUP_PROPERTY_CHANGE = 1727,
    PLAYER_ACTION_EQUIPMENT_PROMOTION = 1901,
    PLAYER_ACTION_ADD_ITEM = 1902,
    PLAYER_ACTION_USE_ITEM = 1904,
    PLAYER_ACTION_EQUIPMENT_RANK_UP = 1905,
    PLAYER_ACTION_EQUIPMENT_LEVEL_UP = 1906,
    PLAYER_ACTION_EXP_UP_EQUIPMENT_RETURN = 1907,
    PLAYER_ACTION_BAG_FULL_REWARD_MAIL = 1908,
    PLAYER_ACTION_EQUIPMENT_ADD = 1909,
    PLAYER_ACTION_EQUIPMENT_WEAR = 1910,
    PLAYER_ACTION_ITEM_COMPOSE = 1911,
    PLAYER_ACTION_RELIC_LEVEL_UP = 1912,
    PLAYER_ACTION_EXP_UP_RELIC_RETURN = 1913,
    PLAYER_ACTION_RELIC_NUM_CHANGED = 1914,
    PLAYER_ACTION_RELIC_WEAR = 1915,
    PLAYER_ACTION_RELIC_COMPOSE = 1916,
    PLAYER_ACTION_SELL_ITEM = 1917,
    PLAYER_ACTION_UNLOCK_MUSIC = 1918,
    PLAYER_ACTION_EXCHANGE_HCOIN_WITH_PAY_MCOIN = 1919,
    PLAYER_ACTION_GET_REWARD = 1920,
    PLAYER_ACTION_EXCHANGE_HCOIN_WITH_FREE_MCOIN = 1921,
    PLAYER_ACTION_ITEM_COMPOSE_FORMULA_UNLOCK = 1922,
    PLAYER_ACTION_EXCHANGE_HCOIN = 1923,
    PLAYER_ACTION_CITY_SHOP_LEVEL_REWARD = 1924,
    PLAYER_ACTION_ITEM_RECYCLE = 1925,
    PLAYER_ACTION_MUSEUM_FUNDS_CONSUME = 1926,
    PLAYER_ACTION_MUSEUM_EVENT_BUY_STUFF = 1927,
    PLAYER_ACTION_MUSEUM_MARKET_BUY_STUFF = 1928,
    PLAYER_ACTION_MUSEUM_RANDOM_EVENT = 1929,
    PLAYER_ACTION_MUSEUM_INITIAL_ITEM = 1930,
    PLAYER_ACTION_OPTIONAL_BOX_REWARD = 1931,
    PLAYER_ACTION_DESTROY_ITEM = 1932,
    PLAYER_ACTION_TRANSFER_EXP = 1933,
    PLAYER_ACTION_ONDUTY_USE = 1934,
    PLAYER_ACTION_ITEM_MARK = 1935,
    PLAYER_ACTION_RELIC_DISCARD = 1936,
    PLAYER_ACTION_GENERAL_VIRTUAL_ITEM_CHANGE = 1937,
    PLAYER_ACTION_RELIC_LOCK = 1938,
    PLAYER_ACTION_RELIC_FILTER_PLAN_SAVE = 1939,
    PLAYER_ACTION_RELIC_FILTER_PLAN_DELETE = 1940,
    PLAYER_ACTION_RELIC_FILTER_PLAN_MARK = 1941,
    PLAYER_ACTION_RELIC_SELL = 1942,
    PLAYER_ACTION_RELIC_REFORGE = 1943,
    PLAYER_ACTION_RELIC_SMART_WEAR_CUSTOM_PLAN = 1944,
    PLAYER_ACTION_RECOVER_RELIC = 1945,
    PLAYER_ACTION_RECOVER_EQUIPMENT = 1946,
    PLAYER_ACTION_EQUIPMENT_SELL = 1947,
    PLAYER_ACTION_RELIC_SMART_WEAR_PIN_RELIC = 1948,
    PLAYER_ACTION_RELIC_COCOON_SETTING = 1949,
    PLAYER_ACTION_PERSONAL_CARD_CHANGE = 1950,
    PLAYER_ACTION_PHONE_CASE_CHANGE = 1951,
    PLAYER_ACTION_DELIVERY_ITEM_REWARD = 1952,
    PLAYER_ACTION_ITEM_AUTO_TRANSFER = 1953,
    PLAYER_ACTION_ITEM_AUTO_TRANSFER_IN_BAG = 1954,
    PLAYER_ACTION_ITEM_AUTO_TRANSFER_ON_ADD = 1955,
    PLAYER_ACTION_TUTORIAL_GUIDE_FINISH = 2001,
    PLAYER_ACTION_TUTORIAL = 2002,
    PLAYER_ACTION_TUTORIAL_GUIDE = 2003,
    PLAYER_ACTION_MONSTER_DROP = 2101,
    PLAYER_ACTION_FINISH_CHALLENGE = 2201,
    PLAYER_ACTION_CHALLENGE_STARS = 2202,
    PLAYER_ACTION_CHALLENGE_START = 2203,
    PLAYER_ACTION_CHALLENGE_END = 2204,
    PLAYER_ACTION_CHALLENGE_WIN = 2205,
    PLAYER_ACTION_CHALLENGE_FAIL = 2206,
    PLAYER_ACTION_CHALLENGE_LEAVE = 2207,
    PLAYER_ACTION_CHALLENGE_SWITCH = 2208,
    PLAYER_ACTION_CHALLENGE_BONUS_REWARD = 2210,
    PLAYER_ACTION_CHALLENGE_STARS_REWARD = 2211,
    PLAYER_ACTION_CHALLENGE_RESTART = 2212,
    PLAYER_ACTION_CHALLENGE_STORY_START = 2213,
    PLAYER_ACTION_CHALLENGE_STORY_END = 2214,
    PLAYER_ACTION_CHALLENGE_FAST_PASS = 2215,
    PLAYER_ACTION_CHALLENGE_STORY_FAST_PASS = 2216,
    PLAYER_ACTION_CHALLENGE_MEMORY_FAST_PASS = 2217,
    PLAYER_ACTION_CHALLENGE_BATTLE_TARGET = 2218,
    PLAYER_ACTION_CHALLENGE_BOSS_END = 2219,
    PLAYER_ACTION_CHALLENGE_BOSS_FAST_PASS = 2220,
    PLAYER_ACTION_CHALLENGE_START_PARTIAL = 2221,
    PLAYER_ACTION_CHALLENGE_BOSS_PHASE_START = 2222,
    PLAYER_ACTION_CHALLENGE_BOSS_PHASE_END = 2223,
    PLAYER_ACTION_CHALLENGE_BOSS_PHASE_END_BEFORE_BATTLE = 2224,
    PLAYER_ACTION_CHALLENGE_RECOMMEND_LINEUP = 2225,
    PLAYER_ACTION_CHALLENGE_STORY_FEVER_BATTLE_END = 2226,
    PLAYER_ACTION_TEAM_INFO_CHANGE = 2301,
    PLAYER_ACTION_CHANGE_CURRENT_AVATAR = 2302,
    PLAYER_ACTION_CREATE_VIRTUAL_TEAM = 2303,
    PLAYER_ACTION_TEAM_NAME_EDIT = 2304,
    PLAYER_ACTION_AVATAR_BUFF_CHANGE = 2401,
    PLAYER_ACTION_ENV_BUFF_CHANGE = 2402,
    PLAYER_ACTION_GAME_CORE = 2403,
    PLAYER_ACTION_AVATAR_GLOBAL_BUFF = 2404,
    PLAYER_ACTION_ROGUE_EXPLORE_START = 2501,
    PLAYER_ACTION_ROGUE_ENTER_ROOM = 2502,
    PLAYER_ACTION_ROGUE_LEAVE_ROOM = 2503,
    PLAYER_ACTION_ROGUE_EXPLORE_FINISH = 2504,
    PLAYER_ACTION_ROGUE_SELECT_BUFF = 2505,
    PLAYER_ACTION_ROGUE_ROLL_BUFF = 2506,
    PLAYER_ACTION_ROGUE_REVIVE = 2507,
    PLAYER_ACTION_ROGUE_CHALLENGE_START = 2512,
    PLAYER_ACTION_ROGUE_MIRACLE = 2514,
    PLAYER_ACTION_ROGUE_ADD_BUFF = 2515,
    PLAYER_ACTION_ROGUE_PICK_AVATAR = 2516,
    PLAYER_ACTION_ROGUE_SEASON_CHANGED = 2522,
    PLAYER_ACTION_ROGUE_AEON_LEVEL_UP = 2524,
    PLAYER_ACTION_ROGUE_OPEN_DOOR = 2525,
    PLAYER_ACTION_ROGUE_SCORE_REWARD = 2526,
    PLAYER_ACTION_ROGUE_ENHANCE_BUFF = 2527,
    PLAYER_ACTION_ROGUE_SELECT_BONUS = 2528,
    PLAYER_ACTION_ROGUE_AREA_FIRST_REWARD = 2529,
    PLAYER_ACTION_ROGUE_ENABLE_TALENT = 2530,
    PLAYER_ACTION_ROGUE_AEON_UNLOCK = 2531,
    PLAYER_ACTION_ROGUE_AEON_ADD_EXP = 2532,
    PLAYER_ACTION_ROGUE_IMMERSE_LEVEL_UP = 2533,
    PLAYER_ACTION_ROGUE_SELECT_MIRACLE = 2534,
    PLAYER_ACTION_ROGUE_UNLOCK_AREA = 2535,
    PLAYER_ACTION_ROGUE_EXPLORE_SCORE_CHANGE = 2536,
    PLAYER_ACTION_ROGUE_UPDATE_REWARD_POOL = 2537,
    PLAYER_ACTION_ROGUE_SWAP_BUFF = 2539,
    PLAYER_ACTION_ROGUE_WEEKLY_REFRESH = 2540,
    PLAYER_ACTION_ROGUE_EXCHANGE_KEY = 2541,
    PLAYER_ACTION_ROGUE_GET_OBJECT_REWARD = 2542,
    PLAYER_ACTION_ROGUE_AREA_MONSTER_DROP = 2543,
    PLAYER_ACTION_ROGUE_ADD_MIRACLE = 2544,
    PLAYER_ACTION_ROGUE_SWAP_MIRACLE = 2545,
    PLAYER_ACTION_ROGUE_OPEN_OBJECT_REWARD = 2546,
    PLAYER_ACTION_ROGUE_AEON_EFFECT = 2547,
    PLAYER_ACTION_ROGUE_REFORGE_BUFF = 2548,
    PLAYER_ACTION_ROGUE_TRADE_MIRACLE = 2549,
    PLAYER_ACTION_ROGUE_REMOVE_AVATAR = 2550,
    PLAYER_ACTION_ROGUE_DIALOGUE_SELECT = 2551,
    PLAYER_ACTION_ROGUE_SELECT_AEON = 2552,
    PLAYER_ACTION_ROGUE_DIALOGUE_FINISH = 2553,
    PLAYER_ACTION_ROGUE_HANDBOOK_REWARD = 2554,
    PLAYER_ACTION_ROGUE_ADVENTURE_ROOM_REWARD = 2555,
    PLAYER_ACTION_ROGUE_SHOP_BUY = 2556,
    PLAYER_ACTION_ROGUE_REPAIR_MIRACLE = 2557,
    PLAYER_ACTION_ROGUE_REPLACE_ALL_MIRACLE = 2558,
    PLAYER_ACTION_ROGUE_MIRACLE_BROKEN = 2559,
    PLAYER_ACTION_ROGUE_SHOP_REFRESH = 2560,
    PLAYER_ACTION_ROGUE_LEVEL_MECHANISM = 2561,
    PLAYER_ACTION_ROGUE_REMOVE_MIRACLE = 2562,
    PLAYER_ACTION_ROGUE_DROP_BUFF = 2563,
    PLAYER_ACTION_ROGUE_DESTROY_MIRACLE = 2564,
    PLAYER_ACTION_ROGUE_ACTIVATE_FORMULA = 2565,
    PLAYER_ACTION_ROGUE_DEACTIVATE_FORMULA = 2566,
    PLAYER_ACTION_ROGUE_REMOVE_BUFF = 2567,
    PLAYER_ACTION_ROGUE_SELECT_FORMULA = 2568,
    PLAYER_ACTION_ROGUE_DROP_FORMULA = 2569,
    PLAYER_ACTION_ROGUE_ROLL_FORMULA = 2570,
    PLAYER_ACTION_ROGUE_REFORGE_FORMULA = 2571,
    PLAYER_ACTION_ROGUE_COMPOSE_MIRACLE = 2572,
    PLAYER_ACTION_ROGUE_REFORGE_MIRACLE = 2573,
    PLAYER_ACTION_ROGUE_DO_GAMBLE = 2574,
    PLAYER_ACTION_ROGUE_KEYWORD_ACTIVATE = 2575,
    PLAYER_ACTION_ROGUE_KEYWORD_DEACTIVATE = 2576,
    PLAYER_ACTION_ROGUE_SOURCE_DEFAULT = 2577,
    PLAYER_ACTION_ROGUE_PLAYER_SELECT = 2578,
    PLAYER_ACTION_ROGUE_LAYER_SETTLEMENT = 2579,
    PLAYER_ACTION_ROGUE_FORMULA = 2580,
    PLAYER_ACTION_ROGUE_WORKBENCH = 2581,
    PLAYER_ACTION_ROGUE_MODIFIER = 2582,
    PLAYER_ACTION_ROGUE_REFORGE = 2583,
    PLAYER_ACTION_ROGUE_TALENT = 2584,
    PLAYER_ACTION_ROGUE_REROLL = 2585,
    PLAYER_ACTION_ROGUE_COIN_CHANGE = 2586,
    PLAYER_ACTION_ROGUE_MAGIC_SCEPTER_SHOP = 2587,
    PLAYER_ACTION_ROGUE_MAGIC_UNIT_SHOP = 2588,
    PLAYER_ACTION_ROGUE_MAGIC_SCEPTER_LEVEL_UP = 2589,
    PLAYER_ACTION_GACHA = 2601,
    PLAYER_ACTION_ADD_GACHA_TICKET = 2602,
    PLAYER_ACTION_GACHA_EXCHANGE = 2603,
    PLAYER_ACTION_SET_GACHA_DECIDE_ITEM = 2604,
    PLAYER_ACTION_EVENT_MISSION_ACCEPT = 2801,
    PLAYER_ACTION_EVENT_MISSION_FINISH = 2802,
    PLAYER_ACTION_EVENT_MISSION_REWARD = 2803,
    PLAYER_ACTION_RAID_FINISH = 2901,
    PLAYER_ACTION_RAID_BEGIN = 2902,
    PLAYER_ACTION_CHALLENGE_RAID_REWARD = 2903,
    PLAYER_ACTION_START_RAID = 2904,
    PLAYER_ACTION_END_RAID = 2905,
    PLAYER_ACTION_RAID_TARGET_FINISH = 2906,
    PLAYER_ACTION_ARCHIVE_RAID = 2907,
    PLAYER_ACTION_HERO_BASE_TYPE_CHANGE = 3051,
    PLAYER_ACTION_HERO_BASE_TYPE_ADD_BY_MISSION = 3052,
    PLAYER_ACTION_HERO_BASE_TYPE_ADD_BY_REQ = 3053,
    PLAYER_ACTION_HERO_BASE_TYPE_ADD = 3054,
    PLAYER_ACTION_DIALOGUE_SELECT = 3101,
    PLAYER_ACTION_EXPEDITION_START = 3151,
    PLAYER_ACTION_EXPEDITION_FINISH = 3152,
    PLAYER_ACTION_EXPEDITION_REWARD = 3153,
    PLAYER_ACTION_ACTIVITY_EXPEDITION_START = 3154,
    PLAYER_ACTION_ACTIVITY_EXPEDITION_FINISH = 3155,
    PLAYER_ACTION_ACTIVITY_EXPEDITION_REWARD = 3156,
    PLAYER_ACTION_ACTIVITY_EXPEDITION_BEGIN = 3157,
    PLAYER_ACTION_ACTIVITY_EXPEDITION_END = 3158,
    PLAYER_ACTION_ACTIVITY_LOGIN_REWARD = 3201,
    PLAYER_ACTION_FRIEND_REPORT = 3301,
    PLAYER_ACTION_ASSIST_REWARD = 3302,
    PLAYER_ACTION_ASSIST_AVATAR_REFRESH = 3303,
    PLAYER_ACTION_ASSIST_AVATAR_BATTLE_START = 3304,
    PLAYER_ACTION_ASSIST_AVATAR_BATTLE_END = 3305,
    PLAYER_ACTION_FRIEND_APPLY = 3306,
    PLAYER_ACTION_FRIEND_MANAGE = 3307,
    PLAYER_ACTION_FRIEND_BLACKLIST = 3308,
    PLAYER_ACTION_FRIEND_MODIFY_REMARK_NAME = 3309,
    PLAYER_ACTION_FRIEND_MARK = 3310,
    PLAYER_ACTION_FRIEND_ASSIST_LIST = 3311,
    PLAYER_ACTION_BATTLE_PASS_LEVEL_REWARD = 3202,
    PLAYER_ACTION_BATTLE_PASS_128TIER_REWARD = 3203,
    PLAYER_ACTION_BATTLE_PASS_LEVEL_REWARD_AUTO_MAIL = 3204,
    PLAYER_ACTION_BUY_BATTLE_PASS = 3205,
    PLAYER_ACTION_ADD_BATTLE_PASS_EXP = 3206,
    PLAYER_ACTION_BATTLE_PASS_LEVEL_UP = 3207,
    PLAYER_ACTION_BUY_BATTLE_PASS_LEVEL = 3208,
    PLAYER_ACTION_BATTLE_PASS_END_MAIL = 3209,
    PLAYER_ACTION_BATTLE_PASS_68TIER_REWARD = 3210,
    PLAYER_ACTION_MODIFY_SIGN = 3401,
    PLAYER_ACTION_DISPLAY_AVATAR_SET = 3402,
    PLAYER_ACTION_ASSIST_AVATAR_SET = 3403,
    PLAYER_ACTION_ACHIEVEMENT_FINISH = 3501,
    PLAYER_ACTION_ACHIEVEMENT_REWARD = 3502,
    PLAYER_ACTION_ACHIEVEMENT_ADD_EXP = 3503,
    PLAYER_ACTION_ACHIEVEMENT_LEVEL_UP = 3504,
    PLAYER_ACTION_PUNK_LORD_REWARD = 3601,
    PLAYER_ACTION_PUNK_LORD_BOSS_SEARCH = 3604,
    PLAYER_ACTION_PUNK_LORD_BOSS_SHARE = 3605,
    PLAYER_ACTION_START_PUNK_LORD_RAID = 3606,
    PLAYER_ACTION_PUNK_LORD_SUPPORT_TIMES = 3608,
    PLAYER_ACTION_PUNK_LORD_SCORE_REWARD = 3609,
    PLAYER_ACTION_PUNK_LORD_LIST_REFRESH = 3610,
    PLAYER_ACTION_PUNK_LORD_POWER_ATTACK = 3611,
    PLAYER_ACTION_PUNK_LORD_BATTLE_END = 3612,
    PLAYER_ACTION_PUNK_LORD_BOSS_DEATH = 3613,
    PLAYER_ACTION_PUNK_LORD_BOSS_SCORE = 3614,
    PLAYER_ACTION_DAILY_ACTIVE_LEVEL_REWARD = 3701,
    PLAYER_ACTION_DAILY_ACTIVE_ADD_POINT = 3702,
    PLAYER_ACTION_DAILY_ACTIVE_DELETE_OLD_QUEST = 3703,
    PLAYER_ACTION_FIGHT_ACTIVITY_BEGIN = 3791,
    PLAYER_ACTION_FIGHT_ACTIVITY_END = 3792,
    PLAYER_ACTION_FIGHT_ACTIVITY_REWARD = 3801,
    PLAYER_ACTION_ACTIVITY_END_MAIL = 3802,
    PLAYER_ACTION_APPOINTMENT_MAIL = 3803,
    PLAYER_ACTION_SHARE_REWARD = 3804,
    PLAYER_ACTION_ACTIVITY_TRIAL_REWARD = 3805,
    PLAYER_ACTION_ACTIVITY_TRIAL_START = 3806,
    PLAYER_ACTION_PS_PRE_ORDER_MAIL1 = 3811,
    PLAYER_ACTION_PS_PRE_ORDER_MAIL2 = 3812,
    PLAYER_ACTION_PS_LOGIN_MAIL = 3813,
    PLAYER_ACTION_LOGIN_MAIL = 3814,
    PLAYER_ACTION_GOOGLE_POINTS_100_MAIL = 3821,
    PLAYER_ACTION_GOOGLE_POINTS_150_MAIL = 3822,
    PLAYER_ACTION_TRAIN_VISITOR_BEHAVIOR_FINISH = 3901,
    PLAYER_ACTION_ENTER_VIEW_TRAIN = 3902,
    PLAYER_ACTION_TRAIN_VISITOR_BEHAVIOR_REWARD_FORCE_SEND = 3903,
    PLAYER_ACTION_TRAIN_VISITOR_REGISTER_OPEN = 3904,
    PLAYER_ACTION_TRAIN_VISITOR_BEHAVIOR_REWARD_FORCE_SEND_BY_REGISTER = 3905,
    PLAYER_ACTION_TRAIN_VISITOR_CLEAR_LAST_TRAIN_VISITOR = 3906,
    PLAYER_ACTION_TRAIN_VISITOR_REFRESH_TRAIN_VISITOR = 3907,
    PLAYER_ACTION_TRAIN_VISITOR_REFRESH_NPC = 3908,
    PLAYER_ACTION_MESSAGE_GROUP_ACCEPT = 3951,
    PLAYER_ACTION_MESSAGE_SECTION_ACCEPT = 3952,
    PLAYER_ACTION_MESSAGE_SECTION_FINISH = 3953,
    PLAYER_ACTION_MESSAGE_ITEM_FINISH = 3954,
    PLAYER_ACTION_FINISH_MESSAGE_GROUP_REWARD = 3955,
    PLAYER_ACTION_SUBSTITUTE_MESSAGE_GROUP_REWARD = 3956,
    PLAYER_ACTION_DELETE_MESSAGE_GROUP = 3957,
    PLAYER_ACTION_DELETE_MESSAGE_SECTION = 3958,
    PLAYER_ACTION_DELETE_MESSAGE_GROUP_BY_CONFIG = 3959,
    PLAYER_ACTION_DELETE_MESSAGE_GROUP_BY_ACTIVITY = 3960,
    PLAYER_ACTION_DELETE_MESSAGE_GROUP_BY_MISSION = 3961,
    PLAYER_ACTION_TEXT_JOIN_SAVE = 4001,
    PLAYER_ACTION_BOXING_CLUB_START = 4051,
    PLAYER_ACTION_BOXING_CLUB_FINISH = 4052,
    PLAYER_ACTION_BOXING_CLUB_PAUSE = 4053,
    PLAYER_ACTION_BOXING_CLUB_STAGE_START = 4054,
    PLAYER_ACTION_TALK_SEND = 4101,
    PLAYER_ACTION_SELECT_INCLINATION_TEXT = 4102,
    PLAYER_ACTION_MUSEUM_SETTLE_TURN_OPEN = 4201,
    PLAYER_ACTION_MUSEUM_UPGRADE_AREA = 4202,
    PLAYER_ACTION_MUSEUM_UPGRADE_AREA_STAT = 4203,
    PLAYER_ACTION_MUSEUM_DISPATCH_REWARD_REGULAR = 4204,
    PLAYER_ACTION_MUSEUM_DISPATCH_REWARD_DIRECTIONAL = 4205,
    PLAYER_ACTION_MUSEUM_PHASE_TARGET_FINISHED = 4206,
    PLAYER_ACTION_MUSEUM_GET_STUFF = 4207,
    PLAYER_ACTION_MUSEUM_GET_EXHIBIT = 4208,
    PLAYER_ACTION_MUSEUM_TAKE_COLLECT_MISSION = 4209,
    PLAYER_ACTION_MUSEUM_AREA_UNLOCK = 4210,
    PLAYER_ACTION_MUSEUM_AREA_UPGRADE = 4211,
    PLAYER_ACTION_MUSEUM_AREA_STAT_UPGRADE = 4212,
    PLAYER_ACTION_MUSEUM_ENTER_NEXT_ROUND = 4213,
    PLAYER_ACTION_MUSEUM_START_DISPATCH = 4214,
    PLAYER_ACTION_MUSEUM_SETTLE_DISPATCH = 4215,
    PLAYER_ACTION_MUSEUM_RENEW_POINT_CHANGED = 4216,
    PLAYER_ACTION_MUSEUM_TARGET_REWARD = 4217,
    PLAYER_ACTION_MUSEUM_PHASE_UPGRADE = 4218,
    PLAYER_ACTION_MUSEUM_COLLECT_REWARD = 4219,
    PLAYER_ACTION_MUSEUM_TARGET_START = 4220,
    PLAYER_ACTION_MUSEUM_TARGET_FINISH = 4221,
    PLAYER_ACTION_ACTIVITY_MONSTER_RESEARCH_CONSUME_MATERIAL = 4301,
    PLAYER_ACTION_ACTIVITY_MONSTER_RESEARCH_TAKE_REWARD = 4302,
    PLAYER_ACTION_PLAYER_RETURN_START = 4401,
    PLAYER_ACTION_PLAYER_RETURN_SIGN = 4402,
    PLAYER_ACTION_PLAYER_RETURN_POINT = 4403,
    PLAYER_ACTION_PLAYER_RETURN_COUNTDOWN = 4404,
    PLAYER_ACTION_PLAYER_RETURN_FINISH = 4405,
    PLAYER_ACTION_PLAYER_RETURN_COMPENSATE = 4406,
    PLAYER_ACTION_PLAYER_RETURN_GET_RELIC = 4407,
    PLAYER_ACTION_ROGUE_CHALLENGE_ACTIVITY_START = 4411,
    PLAYER_ACTION_ROGUE_CHALLENGE_ACTIVITY_FINISH = 4412,
    PLAYER_ACTION_ROGUE_CHALLENGE_ACTIVITY_SAVE = 4413,
    PLAYER_ACTION_AETHER_DIVIDE_USE_PASSIVE_SKILL_ITEM = 4450,
    PLAYER_ACTION_AETHER_DIVIDE_CLEAR_PASSIVE_SKILL = 4451,
    PLAYER_ACTION_AETHER_DIVIDE_FINISH_CHALLENGE = 4452,
    PLAYER_ACTION_AETHER_DIVIDE_OVERFLOW_CHUNK_REWARD = 4453,
    PLAYER_ACTION_AETHER_DIVIDE_LEVEL_UP = 4454,
    PLAYER_ACTION_AETHER_DIVIDE_NEW_REWARD = 4455,
    PLAYER_ACTION_AETHER_DIVIDE_MONSTER_ADD = 4456,
    PLAYER_ACTION_AETHER_DIVIDE_MONSTER_LEVEL = 4457,
    PLAYER_ACTION_AETHER_DIVIDE_MONSTER_SKILL_WEAR = 4458,
    PLAYER_ACTION_AETHER_DIVIDE_TEAM_CHANGE = 4459,
    PLAYER_ACTION_AETHER_DIVIDE_STAGE_BEGIN = 4460,
    PLAYER_ACTION_AETHER_DIVIDE_STAGE_END = 4461,
    PLAYER_ACTION_AETHER_DIVIDE_STAGE_ROLL = 4462,
    PLAYER_ACTION_ALLEY_EVENT_FINISH = 4501,
    PLAYER_ACTION_ALLEY_TAKE_REWARD = 4502,
    PLAYER_ACTION_ALLEY_PRESTIGE_LEVEL_UP = 4503,
    PLAYER_ACTION_ALLEY_LOGISTICS_FINISH = 4504,
    PLAYER_ACTION_ALLEY_PLACING_GAME_FINISH = 4505,
    PLAYER_ACTION_ALLEY_GUARANTEED_FUNDS = 4506,
    PLAYER_ACTION_ALLEY_TAKE_EVENT_REWARD = 4507,
    PLAYER_ACTION_ALLEY_SPECIAL_ORDER_FINISH = 4508,
    PLAYER_ACTION_SENSITIVE_WORD_SHIELD = 4601,
    PLAYER_ACTION_SENSITIVE_WORD_SERVER_INTERNAL_ERROR = 4602,
    PLAYER_ACTION_SENSITIVE_WORD_PLATFORM_ERROR = 4603,
    PLAYER_ACTION_TREASURE_DUNGEON_START = 4701,
    PLAYER_ACTION_TREASURE_DUNGEON_FINISH = 4702,
    PLAYER_ACTION_TREASURE_DUNGEON_ENTER_FLOOR = 4703,
    PLAYER_ACTION_TREASURE_DUNGEON_LEAVE_FLOOR = 4704,
    PLAYER_ACTION_TREASURE_DUNGEON_USE_ITEM = 4705,
    PLAYER_ACTION_TREASURE_DUNGEON_AVATAR_CHANGE = 4706,
    PLAYER_ACTION_TREASURE_DUNGEON_BATTLE_START = 4707,
    PLAYER_ACTION_TREASURE_DUNGEON_BATTLE_END = 4708,
    PLAYER_ACTION_TREASURE_DUNGEON_PICKUP_BUFF = 4709,
    PLAYER_ACTION_CHESS_ROGUE_FIRST_FINISH = 4801,
    PLAYER_ACTION_CHESS_ROGUE_GIVEUP_DICE = 4802,
    PLAYER_ACTION_CHESS_ROGUE_SUB_STORY_SELECT = 4803,
    PLAYER_ACTION_CHESS_ROGUE_ACTION_POINT = 4804,
    PLAYER_ACTION_CHESS_ROGUE_REVIVE_BY_PROP = 4805,
    PLAYER_ACTION_CHESS_ROGUE_START_LEVEL = 4806,
    PLAYER_ACTION_CHESS_ROGUE_DICE_EFFECT = 4807,
    PLAYER_ACTION_CHESS_ROGUE_MAIN_STORY_FINISH = 4808,
    PLAYER_ACTION_CHESS_ROGUE_AEON_TALENT_EFFECT = 4809,
    PLAYER_ACTION_CHESS_ROGUE_MODIFIER_OTHERS_EFFECT = 4810,
    PLAYER_ACTION_CHESS_ROGUE_ADD_BUFF = 4811,
    PLAYER_ACTION_CHESS_ROGUE_REFORGE_BUFF = 4812,
    PLAYER_ACTION_CHESS_ROGUE_BUFF_LEVEL_UP = 4813,
    PLAYER_ACTION_CHESS_ROGUE_ENHANCE_BUFF = 4814,
    PLAYER_ACTION_CHESS_ROGUE_ADD_MIRACLE = 4815,
    PLAYER_ACTION_CHESS_ROGUE_SWAP_MIRACLE = 4816,
    PLAYER_ACTION_CHESS_ROGUE_SELECT_BONUS = 4817,
    PLAYER_ACTION_CHESS_ROGUE_DIALOGUE_FINISH = 4818,
    PLAYER_ACTION_CHESS_ROGUE_SUB_STORY_FINISH = 4819,
    PLAYER_ACTION_CHESS_ROGUE_ADVENTURE_ROOM_FINISH = 4820,
    PLAYER_ACTION_CHESS_ROGUE_FINISH_LEVEL = 4821,
    PLAYER_ACTION_CHESS_ROGUE_START_LAYER = 4822,
    PLAYER_ACTION_CHESS_ROGUE_FINISH_LAYER = 4823,
    PLAYER_ACTION_CHESS_ROGUE_ENTER_ROOM = 4824,
    PLAYER_ACTION_CHESS_ROGUE_LEAVE_ROOM = 4825,
    PLAYER_ACTION_CHESS_ROGUE_ROLL_DICE = 4826,
    PLAYER_ACTION_CHESS_ROGUE_SELECT_DICE = 4827,
    PLAYER_ACTION_CHESS_ROGUE_UNLOCK_DICE = 4828,
    PLAYER_ACTION_CHESS_ROGUE_BOARD_EVENT = 4829,
    PLAYER_ACTION_CHESS_ROGUE_DIMENSION_POINT = 4830,
    PLAYER_ACTION_CHESS_ROGUE_PICK_AVATAR = 4831,
    PLAYER_ACTION_CHESS_ROGUE_REVIVE_AVATAR = 4832,
    PLAYER_ACTION_CHESS_ROGUE_NOUS_SUB_STORY_SELECT = 4833,
    PLAYER_ACTION_CHESS_ROGUE_LEVEL_MECHANISM = 4844,
    PLAYER_ACTION_CHESS_ROGUE_NOUS_START_LEVEL = 4845,
    PLAYER_ACTION_CHESS_ROGUE_NOUS_FINISH_LEVEL = 4846,
    PLAYER_ACTION_CHESS_ROGUE_NOUS_START_LAYER = 4847,
    PLAYER_ACTION_CHESS_ROGUE_NOUS_FINISH_LAYER = 4848,
    PLAYER_ACTION_CHESS_ROGUE_NOUS_ENTER_ROOM = 4849,
    PLAYER_ACTION_CHESS_ROGUE_NOUS_LEAVE_ROOM = 4850,
    PLAYER_ACTION_CHESS_ROGUE_NOUS_SELECT_DICE = 4851,
    PLAYER_ACTION_CHESS_ROGUE_NOUS_UNLOCK_DICE_BRANCH = 4852,
    PLAYER_ACTION_CHESS_ROGUE_NOUS_UNLOCK_DICE_SURFACE = 4853,
    PLAYER_ACTION_CHESS_ROGUE_NOUS_EDIT_DICE = 4854,
    PLAYER_ACTION_CHESS_ROGUE_NOUS_VALUE_CHANGE = 4855,
    PLAYER_ACTION_CHESS_ROGUE_NOUS_MAIN_STORY_TRIGGER = 4856,
    PLAYER_ACTION_CHESS_ROGUE_NOUS_MAIN_STORY_FINISH = 4857,
    PLAYER_ACTION_CHESS_ROGUE_NOUS_SUB_STORY_TRIGGER = 4858,
    PLAYER_ACTION_CHESS_ROGUE_NOUS_SUB_STORY_FINISH = 4859,
    PLAYER_ACTION_CHESS_ROGUE_NOUS_ENABLE_TALENT = 4860,
    PLAYER_ACTION_CHESS_ROGUE_SELECT_BUFF = 4861,
    PLAYER_ACTION_CHESS_ROGUE_SELECT_MIRACLE = 4862,
    PLAYER_ACTION_CHESS_ROGUE_REMOVE_MIRACLE = 4863,
    PLAYER_ACTION_CHESS_ROGUE_BOARD_CELL = 4864,
    PLAYER_ACTION_FANTASTIC_STORY_BATTLE_BEGIN = 4901,
    PLAYER_ACTION_FANTASTIC_STORY_BATTLE_END = 4902,
    PLAYER_ACTION_ROGUE_ENDLESS_REWARD = 4950,
    PLAYER_ACTION_ROGUE_ENDLESS_LEVEL_START = 4951,
    PLAYER_ACTION_ROGUE_ENDLESS_STAGE_BEGIN = 4952,
    PLAYER_ACTION_ROGUE_ENDLESS_STAGE_END = 4953,
    PLAYER_ACTION_BATTLE_COLLEGE_REWARD = 5001,
    PLAYER_ACTION_COMMON_ROGUE_MIRACLE_FOR_BUFF_SHOP = 5051,
    PLAYER_ACTION_COMMON_ROGUE_ADVENTURE_ROOM_FINISH = 5052,
    PLAYER_ACTION_COMMON_ROGUE_BUY_BUFF_SHOP = 5053,
    PLAYER_ACTION_COMMON_ROGUE_BUY_BUFF_SHOP_REFRESH = 5054,
    PLAYER_ACTION_COMMON_ROGUE_COLLECTION_UNLOCK = 5055,
    PLAYER_ACTION_COMMON_ROGUE_COLLECTION_SET = 5056,
    PLAYER_ACTION_COMMON_ROGUE_EXHIBITION_UNLOCK = 5057,
    PLAYER_ACTION_COMMON_ROGUE_EXHIBITION_SET = 5058,
    PLAYER_ACTION_COMMON_ROGUE_CHEST_INTERACT = 5059,
    PLAYER_ACTION_COMMON_ROGUE_ADVENTURE_ROOM_WOLFGUN_FINISH = 5060,
    PLAYER_ACTION_HELIOBUS_POST_INCOME_REWARD = 5101,
    PLAYER_ACTION_HELIOBUS_POST_FANS_REWARD = 5102,
    PLAYER_ACTION_HELIOBUS_LEVEL_UPGRADE = 5103,
    PLAYER_ACTION_HELIOBUS_POST_REPLY_REWARD = 5104,
    PLAYER_ACTION_HELIOBUS_COMMENT_REPLY_REWARD = 5105,
    PLAYER_ACTION_HELIOBUS_CHALLENGE_FIRST_REWARD = 5106,
    PLAYER_ACTION_HELIOBUS_FANS_ADD = 5107,
    PLAYER_ACTION_HELIOBUS_ACTION_DAY_SETTLE = 5108,
    PLAYER_ACTION_HELIOBUS_SKILL_UNLOCK = 5109,
    PLAYER_ACTION_HELIOBUS_STAGE_BEGIN = 5110,
    PLAYER_ACTION_HELIOBUS_STAGE_END = 5111,
    PLAYER_ACTION_HELIOBUS_SNS_READ = 5112,
    PLAYER_ACTION_HELIOBUS_SNS_POST_UNLOCK = 5113,
    PLAYER_ACTION_HELIOBUS_SNS_COMMENT_UNLOCK = 5114,
    PLAYER_ACTION_HELIOBUS_SNS_COMMENT = 5115,
    PLAYER_ACTION_HELIOBUS_SNS_POST = 5116,
    PLAYER_ACTION_HELIOBUS_SNS_LIKE = 5117,
    PLAYER_ACTION_HELIOBUS_PHASE_UPGRADE = 5118,
    PLAYER_ACTION_PS_POINT_CARD_30_REWARD = 5201,
    PLAYER_ACTION_PS_POINT_CARD_50_REWARD = 5202,
    PLAYER_ACTION_PS_POINT_CARD_100_REWARD = 5203,
    PLAYER_ACTION_PSN_PLUS_GIFT_REWARD = 5204,
    PLAYER_ACTION_APPLE_GIFT_CARD_REWARD = 5205,
    PLAYER_ACTION_HEART_DIAL_SUBMIT_ITEM = 5301,
    PLAYER_ACTION_HEART_DIAL_DIALOGUE_PERFORM = 5302,
    PLAYER_ACTION_HEART_DIAL_TRACE_CONSUME = 5303,
    PLAYER_ACTION_HEART_DIAL_CHANGE_EMOTION = 5304,
    PLAYER_ACTION_TRAVEL_BROCHURE_ADD_DEFAULT_PASTER = 5401,
    PLAYER_ACTION_SPACE_ZOO_BORN = 5501,
    PLAYER_ACTION_SPACE_ZOO_MUTATE = 5502,
    PLAYER_ACTION_SPACE_ZOO_DELETE = 5503,
    PLAYER_ACTION_SPACE_ZOO_EXCHANGE_ITEM = 5504,
    PLAYER_ACTION_SPACE_ZOO_EXP_POINT = 5505,
    PLAYER_ACTION_SPACE_ZOO_TAKE_REWARD = 5506,
    PLAYER_ACTION_SPACE_ZOO_COLLECTION = 5507,
    PLAYER_ACTION_SPACE_ZOO_SHOW = 5508,
    PLAYER_ACTION_SPACE_ZOO_SPECIAL_DATA = 5509,
    PLAYER_ACTION_STRONG_CHALLENGE_BATTLE_BEGIN = 5701,
    PLAYER_ACTION_STRONG_CHALLENGE_BATTLE_END = 5702,
    PLAYER_ACTION_ROLL_SHOP_DO_GACHA = 5751,
    PLAYER_ACTION_ROLL_SHOP_TAKE_REWARD = 5752,
    PLAYER_ACTION_OFFERING_SUBMIT_ITEM = 5801,
    PLAYER_ACTION_OFFERING_TAKE_REWARD = 5802,
    PLAYER_ACTION_TRAVEL_BROCHURE_PAGE_UNLOCK = 5851,
    PLAYER_ACTION_TRAVEL_BROCHURE_PAGE_INTERACT_AWARD = 5852,
    PLAYER_ACTION_TRAVEL_BROCHURE_STICKER_UNLOCK = 5853,
    PLAYER_ACTION_TRAVEL_BROCHURE_STICKER_APPLY = 5854,
    PLAYER_ACTION_TRAVEL_BROCHURE_STICKER_REMOVE = 5855,
    PLAYER_ACTION_TRAVEL_BROCHURE_PAGE_RESET = 5856,
    PLAYER_ACTION_TRACK_MAIN_MISSION_ID = 5901,
    PLAYER_ACTION_WOLF_BRO_BEGIN = 5911,
    PLAYER_ACTION_WOLF_BRO_GROUP_STATE_CHANGE = 5912,
    PLAYER_ACTION_WOLF_BRO_END = 5913,
    PLAYER_ACTION_WOLF_BRO_BULLET_ZERO = 5914,
    PLAYER_ACTION_WOLF_BRO_ACTIVATE_BULLET = 5915,
    PLAYER_ACTION_WOLF_BRO_BULLET_NUM_CHANGE = 5916,
    PLAYER_ACTION_WOLF_BRO_USE_BULLET_NULL = 5917,
    PLAYER_ACTION_WOLF_BRO_USE_BULLET_HIT_MONSTER = 5918,
    PLAYER_ACTION_WOLF_BRO_PICK_UP_BULLET = 5919,
    PLAYER_ACTION_WOLF_BRO_RESTORE_ARCHIVE = 5920,
    PLAYER_ACTION_TELEVISION_ACTIVITY_BATTLE_BEGIN = 5921,
    PLAYER_ACTION_TELEVISION_ACTIVITY_BATTLE_END = 5922,
    PLAYER_ACTION_FEVER_TIME_ACTIVITY_BATTLE_BEGIN = 5923,
    PLAYER_ACTION_FEVER_TIME_ACTIVITY_BATTLE_END = 5924,
    PLAYER_ACTION_GUN_PLAY_END = 5925,
    PLAYER_ACTION_ACTIVITY_STAR_FIGHT_BEGIN = 5926,
    PLAYER_ACTION_ACTIVITY_STAR_FIGHT_END = 5927,
    PLAYER_ACTION_MAP_ROTATION_ENTER_REGION = 5931,
    PLAYER_ACTION_MAP_ROTATION_LEAVE_REGION = 5932,
    PLAYER_ACTION_MAP_ROTATION_INTERACT_CHARGER = 5933,
    PLAYER_ACTION_MAP_ROTATION_DEPLOY_ROTATER = 5934,
    PLAYER_ACTION_MAP_ROTATION_ROTATE_MAP = 5935,
    PLAYER_ACTION_MAP_ROTATION_ADD_ENERGY = 5936,
    PLAYER_ACTION_MAP_ROTATION_SET_MAX_ENERGY = 5937,
    PLAYER_ACTION_MAP_ROTATION_REMOVE_ROTATER = 5938,
    PLAYER_ACTION_MAP_ROTATION_AUTO_DEPLOY_ROTATER = 5939,
    PLAYER_ACTION_MAP_ROTATION_AUTO_REMOVE_ROTATER = 5940,
    PLAYER_ACTION_DRINK_MAKER_ADD_TIPS = 5951,
    PLAYER_ACTION_DRINK_MAKER_FINISH_CHALLENGE = 5952,
    PLAYER_ACTION_DRINK_MAKER_GUEST_MAX_FAITH_REWARD = 5953,
    PLAYER_ACTION_DRINK_MAKER_MAKE_DRINK = 5954,
    PLAYER_ACTION_DRINK_MAKER_SAVE_CUSTOM_DRINK = 5955,
    PLAYER_ACTION_DRINK_MAKER_END_SEQUENCE = 5956,
    PLAYER_ACTION_DRINK_MAKER_CHEERS_MAKE_DRINK = 5957,
    PLAYER_ACTION_DRINK_MAKER_CHEERS_NPC_DRINK = 5958,
    PLAYER_ACTION_CHANGE_STORY_LINE = 6001,
    PLAYER_ACTION_CONTENT_PACKAGE_STATUS_CHANGE = 6011,
    PLAYER_ACTION_CONTENT_PACKAGE_TRACK_CHANGE = 6012,
    PLAYER_ACTION_CONTENT_PACKAGE_ACCEPT_MAIN_MISSION = 6013,
    PLAYER_ACTION_WORLD_DIRECT_UNLOCK = 6041,
    PLAYER_ACTION_MONOPOLY_TURN_FINISH = 6051,
    PLAYER_ACTION_MONOPOLY_ASSET_TURNTAX = 6052,
    PLAYER_ACTION_MONOPOLY_ASSET_BONUS = 6053,
    PLAYER_ACTION_MONOPOLY_EVENT_EFFECT = 6054,
    PLAYER_ACTION_MONOPOLY_MINI_GAME_SETTLE = 6055,
    PLAYER_ACTION_MONOPOLY_GAME_RAISE_RATIO = 6056,
    PLAYER_ACTION_MONOPOLY_MOVE_ROLL_DICE = 6057,
    PLAYER_ACTION_MONOPOLY_MOVE = 6059,
    PLAYER_ACTION_MONOPOLY_BUY_GOODS = 6060,
    PLAYER_ACTION_MONOPOLY_UPGRADE_ASSET = 6061,
    PLAYER_ACTION_MONOPOLY_EVENT_REROLL_RANDOM = 6062,
    PLAYER_ACTION_MONOPOLY_DAILY_REFRESH = 6063,
    PLAYER_ACTION_MONOPOLY_GAME_GUESS_BUY_INFORMATION = 6064,
    PLAYER_ACTION_MONOPOLY_DAILY_FIRST_ENTER_ACTIVITY = 6065,
    PLAYER_ACTION_MONOPOLY_SOCIAL_EVENT = 6066,
    PLAYER_ACTION_MONOPOLY_RAFFLE_TICKET_REWARD = 6067,
    PLAYER_ACTION_MONOPOLY_LIKE = 6068,
    PLAYER_ACTION_MONOPOLY_PHASE_REWARD = 6069,
    PLAYER_ACTION_MONOPOLY_MBTI_REPORT_REWARD = 6070,
    PLAYER_ACTION_MONOPOLY_DAILY_SETTLE = 6071,
    PLAYER_ACTION_MONOPOLY_START = 6072,
    PLAYER_ACTION_MONOPOLY_GET_BUFF = 6073,
    PLAYER_ACTION_MONOPOLY_ASSET_FUNDS_CHANGE = 6074,
    PLAYER_ACTION_MONOPOLY_ASSET_UPGRADE = 6075,
    PLAYER_ACTION_MONOPOLY_DIRECT_COIN_GAME_SETTLE = 6076,
    PLAYER_ACTION_MONOPOLY_EXTRACT_RAFFLE_TICKET = 6077,
    PLAYER_ACTION_MONOPOLY_MBTI_PROGRESS_CHANGE = 6078,
    PLAYER_ACTION_MONOPOLY_QUIZ_GAME_SETTLE = 6079,
    PLAYER_ACTION_MONOPOLY_EVENT_SETTLE = 6080,
    PLAYER_ACTION_MONOPOLY_ITEM_CHANGE = 6081,
    PLAYER_ACTION_MONOPOLY_CELL_TRIGGER = 6082,
    PLAYER_ACTION_MONOPOLY_EVENT_TRIGGER = 6083,
    PLAYER_ACTION_MONOPOLY_CLICK_EFFECT = 6084,
    PLAYER_ACTION_EVOLVE_BUILD_LEVEL_FINISH = 6101,
    PLAYER_ACTION_EVOLVE_BUILD_SHOP_ABILITY_UP = 6102,
    PLAYER_ACTION_EVOLVE_BUILD_SHOP_ABILITY_DOWN = 6103,
    PLAYER_ACTION_EVOLVE_BUILD_TAKE_EXP_REWARD = 6104,
    PLAYER_ACTION_EVOLVE_BUILD_BATTLE_END_ADD_COIN = 6105,
    PLAYER_ACTION_EVOLVE_BUILD_SHOP_ABILITY_RESET = 6106,
    PLAYER_ACTION_EVOLVE_BUILD_LEVEL_START = 6107,
    PLAYER_ACTION_EVOLVE_BUILD_LEVEL_END = 6108,
    PLAYER_ACTION_EVOLVE_BUILD_STAGE_START = 6109,
    PLAYER_ACTION_EVOLVE_BUILD_STAGE_END = 6110,
    PLAYER_ACTION_EVOLVE_BUILD_LEVEL_LEAVE = 6111,
    PLAYER_ACTION_CLOCK_PARK_UNLOCK_SCRIPT = 6151,
    PLAYER_ACTION_CLOCK_PARK_UNLOCK_TALENT = 6152,
    PLAYER_ACTION_CLOCK_PARK_FINISH_SCRIPT = 6153,
    PLAYER_ACTION_CLOCK_PARK_ROUND_UPDATE = 6154,
    PLAYER_ACTION_CLOCK_PARK_SCRIPT_BEGIN = 6155,
    PLAYER_ACTION_ROGUE_TOURN_START_LEVEL = 6200,
    PLAYER_ACTION_ROGUE_TOURN_FINISH_LEVEL = 6201,
    PLAYER_ACTION_ROGUE_TOURN_EXP_REWARD = 6202,
    PLAYER_ACTION_ROGUE_TOURN_FINISH_WEEK_CHALLENGE = 6203,
    PLAYER_ACTION_ROGUE_TOURN_PERMANENT_TALENT_EFFECT = 6204,
    PLAYER_ACTION_ROGUE_TOURN_FINISH_FORMULA_STORY = 6205,
    PLAYER_ACTION_ROGUE_TOURN_REVIVE = 6206,
    PLAYER_ACTION_ROGUE_TOURN_STAGE_BEGIN = 6207,
    PLAYER_ACTION_ROGUE_TOURN_STAGE_END = 6208,
    PLAYER_ACTION_ROGUE_TOURN_PERMANENT_ENABLE_TALENT = 6209,
    PLAYER_ACTION_ROGUE_TOURN_PERMANENT_RESET_TALENT = 6210,
    PLAYER_ACTION_ROGUE_TOURN_COCOON_STAGE_BEGIN = 6211,
    PLAYER_ACTION_ROGUE_TOURN_COCOON_STAGE_END = 6212,
    PLAYER_ACTION_ROGUE_TOURN_EXP_UPDATE = 6213,
    PLAYER_ACTION_ROGUE_TOURN_ENTER_ROOM = 6214,
    PLAYER_ACTION_ROGUE_TOURN_LEAVE_ROOM = 6215,
    PLAYER_ACTION_ROGUE_TOURN_ARCHIVE_SAVE = 6216,
    PLAYER_ACTION_ROGUE_TOURN_SELECT_BONUS = 6217,
    PLAYER_ACTION_ROGUE_TOURN_DIALOGUE_FINISH = 6218,
    PLAYER_ACTION_ROGUE_TOURN_DO_GAMBLE = 6219,
    PLAYER_ACTION_ROGUE_TOURN_ROOM_CONTENT_GENERATE = 6220,
    PLAYER_ACTION_ROGUE_TOURN_ADD_MIRACLE = 6221,
    PLAYER_ACTION_ROGUE_TOURN_REMOVE_MIRACLE = 6222,
    PLAYER_ACTION_ROGUE_TOURN_SELECT_MIRACLE = 6223,
    PLAYER_ACTION_ROGUE_TOURN_DROP_MIRACLE = 6224,
    PLAYER_ACTION_ROGUE_TOURN_ADD_BUFF = 6225,
    PLAYER_ACTION_ROGUE_TOURN_SELECT_BUFF = 6226,
    PLAYER_ACTION_ROGUE_TOURN_BUFF_LEVEL_UP = 6227,
    PLAYER_ACTION_ROGUE_TOURN_REMOVE_BUFF = 6228,
    PLAYER_ACTION_ROGUE_TOURN_ADD_FORMULA = 6229,
    PLAYER_ACTION_ROGUE_TOURN_REMOVE_FORMULA = 6230,
    PLAYER_ACTION_ROGUE_TOURN_SELECT_FORMULA = 6231,
    PLAYER_ACTION_ROGUE_TOURN_ACTIVATE_FORMULA = 6232,
    PLAYER_ACTION_ROGUE_TOURN_ADVENTURE_ROOM_FINISH = 6233,
    PLAYER_ACTION_ROGUE_TOURN_ALTER_LINEUP = 6234,
    PLAYER_ACTION_ROGUE_TOURN_SEASON_ENABLE_TALENT = 6235,
    PLAYER_ACTION_ROGUE_TOURN_TITAN_START_LEVEL = 6236,
    PLAYER_ACTION_ROGUE_TOURN_TITAN_FINISH_LEVEL = 6237,
    PLAYER_ACTION_ROGUE_TOURN_TITAN_ENTER_ROOM = 6238,
    PLAYER_ACTION_ROGUE_TOURN_TITAN_LEAVE_ROOM = 6239,
    PLAYER_ACTION_ROGUE_TOURN_TITAN_STAGE_BEGIN = 6240,
    PLAYER_ACTION_ROGUE_TOURN_TITAN_STAGE_END = 6241,
    PLAYER_ACTION_ROGUE_TOURN_TITAN_ARCHIVE_SAVE = 6243,
    PLAYER_ACTION_ROGUE_TOURN_TITAN_ADD_TITAN_BLESS = 6244,
    PLAYER_ACTION_ROGUE_TOURN_TITAN_SELECT_TITAN_BLESS = 6245,
    PLAYER_ACTION_ROGUE_TOURN_DIVISION_CHANGE = 6246,
    PLAYER_ACTION_ROGUE_TOURN_SELECT_RE_ROLL_MIRACLE = 6247,
    PLAYER_ACTION_ROGUE_TOURN_TRIGGER_BATTLE_BY_SHOP = 6248,
    PLAYER_ACTION_ROGUE_WORKBENCH_REFORGE_FORMULA = 6281,
    PLAYER_ACTION_ROGUE_WORKBENCH_REFORGE_MIRACLE = 6282,
    PLAYER_ACTION_ROGUE_WORKBENCH_COMPOSE_MIRACLE = 6283,
    PLAYER_ACTION_ROGUE_WORKBENCH_REFORGE_BUFF = 6284,
    PLAYER_ACTION_ROGUE_WORKBENCH_ENHANCE_BUFF = 6285,
    PLAYER_ACTION_MATCH_THREE_PVE_SETTLE = 6301,
    PLAYER_ACTION_MATCH_THREE_SETTLE = 6302,
    PLAYER_ACTION_FIGHT_MATCH3_GAME_START = 6303,
    PLAYER_ACTION_FIGHT_MATCH3_GAME_END = 6304,
    PLAYER_ACTION_FIGHT_MATCH3_TURN_END = 6305,
    PLAYER_ACTION_MATCH_THREE_BIRD_POS = 6306,
    PLAYER_ACTION_MULTIPLE_PLAY_INVITE = 6307,
    PLAYER_ACTION_MULTIPLE_PLAY_INVITE_RESPOND = 6308,
    PLAYER_ACTION_MULTIPLE_PLAY_LOBBY_ENTER = 6309,
    PLAYER_ACTION_MULTIPLE_PLAY_LOBBY_QUIT = 6310,
    PLAYER_ACTION_MULTIPLE_PLAY_LOBBY_KICK = 6311,
    PLAYER_ACTION_MULTIPLE_PLAY_LOBBY_MATCH = 6312,
    PLAYER_ACTION_MARBLE_SETTLE = 6313,
    PLAYER_ACTION_MATCH_THREE_SOLO_SETTLE = 6314,
    PLAYER_ACTION_MATCH_THREE_V2_BATTLEITEM_LEVELUP = 6315,
    PLAYER_ACTION_MATCH_THREE_V2_PVE_SETTLE = 6316,
    PLAYER_ACTION_MATCH_THREE_V2_PVP_SETTLE = 6317,
    PLAYER_ACTION_MATCH3_SOLO_GAME_START = 6318,
    PLAYER_ACTION_MATCH3_SOLO_GAME_END = 6319,
    PLAYER_ACTION_MATCH3_SOLO_ROUND_END = 6320,
    PLAYER_ACTION_SWORD_TRAINING_LEARN_SKILL = 6351,
    PLAYER_ACTION_SWORD_TRAINING_NORMAL_ACTION = 6352,
    PLAYER_ACTION_SWORD_TRAINING_STORY_EFFECT = 6353,
    PLAYER_ACTION_SWORD_TRAINING_ENDING_HINT = 6354,
    PLAYER_ACTION_SWORD_TRAINING_ACTION_HINT = 6355,
    PLAYER_ACTION_SWORD_TRAINING_RESTORE_GAME_BY_EXAM = 6356,
    PLAYER_ACTION_SWORD_TRAINING_STORY_LINE_FIRST_CLEAR = 6357,
    PLAYER_ACTION_SWORD_TRAINING_TAKE_ENDING_REWARD = 6358,
    PLAYER_ACTION_SWORD_TRAINING_STORY_LINE_BEGIN = 6359,
    PLAYER_ACTION_SWORD_TRAINING_ENTER_TURN = 6360,
    PLAYER_ACTION_SWORD_TRAINING_PLAN_ACTION = 6361,
    PLAYER_ACTION_SWORD_TRAINING_ACTION_PHASE_END = 6362,
    PLAYER_ACTION_SWORD_TRAINING_STORY = 6363,
    PLAYER_ACTION_SWORD_TRAINING_STATUS_CHANGE = 6364,
    PLAYER_ACTION_SWORD_TRAINING_MOOD_CHANGE = 6365,
    PLAYER_ACTION_SWORD_TRAINING_BATTLE_BEGIN = 6366,
    PLAYER_ACTION_SWORD_TRAINING_BATTLE_END = 6367,
    PLAYER_ACTION_SWORD_TRAINING_COMBAT_RANK_CHANGE = 6368,
    PLAYER_ACTION_SWORD_TRAINING_STORY_LINE_END = 6369,
    PLAYER_ACTION_SWORD_TRAINING_RESUME_STORY_LINE = 6370,
    PLAYER_ACTION_SWORD_TRAINING_GAME_SUCCESS = 6371,
    PLAYER_ACTION_SWORD_TRAINING_GAME_GIVE_UP = 6372,
    PLAYER_ACTION_SWORD_TRAINING_EXAM = 6374,
    PLAYER_ACTION_SWORD_TRAINING_DIALOGUE = 6375,
    PLAYER_ACTION_SWORD_TRAINING_SET_SKILL_TRACE = 6376,
    PLAYER_ACTION_FIGHT_FEST_FINISH_SCORE_RACE_MISSION = 6401,
    PLAYER_ACTION_FIGHT_FEST_FINISH_SCORE_RACE_PHASE = 6402,
    PLAYER_ACTION_FIGHT_FEST_RACE_START = 6403,
    PLAYER_ACTION_FIGHT_FEST_RACE_END = 6404,
    PLAYER_ACTION_FIGHT_FEST_CHALLENGE_START = 6405,
    PLAYER_ACTION_FIGHT_FEST_CHALLENGE_END = 6406,
    PLAYER_ACTION_FIGHT_FEST_GET_COACH_ITEM = 6407,
    PLAYER_ACTION_FIGHT_FEST_ACCEPT_SCORE_RACE_MISSION = 6408,
    PLAYER_ACTION_PET_USE = 6451,
    PLAYER_ACTION_MUSIC_RHYTHM_PASS_LEVEL_STAR = 6501,
    PLAYER_ACTION_MUSIC_RHYTHM_LEVEL_BEGIN = 6502,
    PLAYER_ACTION_MUSIC_RHYTHM_LEVEL_END = 6503,
    PLAYER_ACTION_TRACK_PHOTO_STAGE_BEGIN = 6551,
    PLAYER_ACTION_TRACK_PHOTO_STAGE_END = 6552,
    PLAYER_ACTION_SUMMON_ACTIVITY_BATTLE_BEGIN = 6561,
    PLAYER_ACTION_SUMMON_ACTIVITY_BATTLE_END = 6562,
    PLAYER_ACTION_RAID_COLLECTION_ENTER_NEXT_RAID = 6571,
    PLAYER_ACTION_DIFFICULTY_ADJUSTMENT_SET = 6572,
    PLAYER_ACTION_DIFFICULTY_ADJUSTMENT_UNSET = 6573,
    PLAYER_ACTION_ROGUE_ARCADE_ADVENTURE_ROOM_START = 6580,
    PLAYER_ACTION_ROGUE_ARCADE_ADVENTURE_ROOM_FINISH = 6581,
    PLAYER_ACTION_ROGUE_MAGIC_START_LEVEL = 6601,
    PLAYER_ACTION_ROGUE_MAGIC_FINISH_LEVEL = 6602,
    PLAYER_ACTION_ROGUE_MAGIC_REVIVE = 6603,
    PLAYER_ACTION_ROGUE_MAGIC_ENTER_ROOM = 6604,
    PLAYER_ACTION_ROGUE_MAGIC_LEAVE_ROOM = 6605,
    PLAYER_ACTION_ROGUE_MAGIC_ADD_MIRACLE = 6606,
    PLAYER_ACTION_ROGUE_MAGIC_REMOVE_MIRACLE = 6607,
    PLAYER_ACTION_ROGUE_MAGIC_STAGE_BEGIN = 6608,
    PLAYER_ACTION_ROGUE_MAGIC_STAGE_END = 6609,
    PLAYER_ACTION_ROGUE_MAGIC_ENABLE_TALENT = 6610,
    PLAYER_ACTION_ROGUE_MAGIC_FINISH_STORY = 6611,
    PLAYER_ACTION_ROGUE_MAGIC_ADD_SCEPTER = 6612,
    PLAYER_ACTION_ROGUE_MAGIC_SELECT_SCEPTER = 6613,
    PLAYER_ACTION_ROGUE_MAGIC_MOUNT_UNIT = 6614,
    PLAYER_ACTION_ROGUE_MAGIC_AUTO_MOUNT_UNIT = 6615,
    PLAYER_ACTION_ROGUE_MAGIC_ADD_MAGIC_UNIT = 6616,
    PLAYER_ACTION_ROGUE_MAGIC_REMOVE_MAGIC_UNIT = 6617,
    PLAYER_ACTION_ROGUE_MAGIC_WORKBENCH_COMPOSE_MAGIC_UNIT = 6618,
    PLAYER_ACTION_ROGUE_MAGIC_WORKBENCH_REFORGE_MAGIC_UNIT = 6619,
    PLAYER_ACTION_ROGUE_MAGIC_WORKBENCH_LEVEL_UP_SCEPTER = 6620,
    PLAYER_ACTION_TRAIN_PARTY_GAME_PLAY_START = 6701,
    PLAYER_ACTION_TRAIN_PARTY_PHASE_BEGIN = 6702,
    PLAYER_ACTION_TRAIN_PARTY_PHASE_END = 6703,
    PLAYER_ACTION_TRAIN_PARTY_ROUND = 6704,
    PLAYER_ACTION_TRAIN_PARTY_MEETING_BEGIN = 6705,
    PLAYER_ACTION_TRAIN_PARTY_MEETING_END = 6706,
    PLAYER_ACTION_TRAIN_PARTY_MEETING_PLAY_CARD = 6707,
    PLAYER_ACTION_TRAIN_PARTY_MEETING_RE_ROLL = 6708,
    PLAYER_ACTION_TRAIN_PARTY_BUILD_AREA_UNLOCK = 6709,
    PLAYER_ACTION_TRAIN_PARTY_BUILD_STEP = 6710,
    PLAYER_ACTION_TRAIN_PARTY_BUILD_LEVEL_AWARD = 6711,
    PLAYER_ACTION_TRAIN_PARTY_BUILDING_DYNAMIC_BUFF = 6712,
    PLAYER_ACTION_TRAIN_PARTY_BUILD_DIY = 6713,
    PLAYER_ACTION_SWITCH_HAND_OP_PROP_STATE = 6801,
    PLAYER_ACTION_ERA_FLIPPER_CHANGE_REGION_STATE = 6811,
    PLAYER_ACTION_ERA_FLIPPER_CHANGE_PROP_STATE = 6812,
    PLAYER_ACTION_ACTIVITY_BENEFIT_REWARD = 6820,
    PLAYER_ACTION_ACTIVITY_BENEFIT_JOIN = 6821,
    PLAYER_ACTION_ACTIVITY_BENEFIT_INITIAL_REWARD = 6822,
    PLAYER_ACTION_PAM_SKIN_CHANGE_SKIN = 6851,
    PLAYER_ACTION_CHEST_FIND = 6861,
    PLAYER_ACTION_REISSUE_MARK_CHEST_ITEM_MAIL = 6862,
    PLAYER_ACTION_MARBLE_PASS_MATCH = 6871,
    PLAYER_ACTION_MARBLE_BUY_SEAL = 6872,
    PLAYER_ACTION_MARBLE_FIGHT_GAME_BEGIN = 6873,
    PLAYER_ACTION_MARBLE_FIGHT_GAME_END = 6874,
    PLAYER_ACTION_MARBLE_FIGHT_GAME_ROUND = 6875,
    PLAYER_ACTION_MARBLE_FIGHT_GAME_TURN = 6876,
    PLAYER_ACTION_PLANET_FES_LEVEL_UP = 6901,
    PLAYER_ACTION_PLANET_FES_ACTIVITY_INIT = 6902,
    PLAYER_ACTION_PLANET_FES_AVATAR_LEVEL_UP = 6903,
    PLAYER_ACTION_PLANET_FES_TAKE_REGION_PHASE_REWARD = 6904,
    PLAYER_ACTION_PLANET_FES_ADD_ITEM = 6905,
    PLAYER_ACTION_PLANET_FES_QUEST = 6906,
    PLAYER_ACTION_PLANET_FES_BUSINESS_DAY_FINISH = 6907,
    PLAYER_ACTION_PLANET_FES_AVATAR_STAR_UP = 6908,
    PLAYER_ACTION_PLANET_FES_UNLOCK_LAND = 6909,
    PLAYER_ACTION_PLANET_FES_BUSINESS_EVENT_FINISH = 6910,
    PLAYER_ACTION_PLANET_FES_ACTIVATE_CARD = 6911,
    PLAYER_ACTION_PLANET_FES_SKILL_LEVEL_UP = 6912,
    PLAYER_ACTION_PLANET_FES_GACHA = 6913,
    PLAYER_ACTION_PLANET_FES_BUSINESS_EVENT_HANDLE = 6914,
    PLAYER_ACTION_PLANET_FES_CARD_APPLY_PERMISSION = 6915,
    PLAYER_ACTION_PLANET_FES_CARD_INTERACT = 6916,
    PLAYER_ACTION_PLANET_FES_TO_SNS = 6917,
    PLAYER_ACTION_PLANET_FES_SET_WORK_AVATAR = 6918,
    PLAYER_ACTION_PLANET_FES_SUMMARY = 6919,
    PLAYER_ACTION_TAROT_BOOK_CHARACTER_LEVEL_UP = 6951,
    PLAYER_ACTION_TAROT_BOOK_OPEN_PACK = 6952,
    PLAYER_ACTION_TAROT_BOOK_UNLOCK_STORY = 6953,
    PLAYER_ACTION_TAROT_BOOK_UNLOCK_STORY_SINGLE = 6954,
    PLAYER_ACTION_TAROT_BOOK_FINISH_STORY = 6955,
    PLAYER_ACTION_TAROT_BOOK_FINISH_INTERACTION = 6956,
    PLAYER_ACTION_TAROT_BOOK_CHANGE_ENERGY = 6957,
    PLAYER_ACTION_TAROT_BOOK_UNLOCK_INTERACTION = 6958,
    PLAYER_ACTION_CHIMERA_ROUND_START = 6971,
    PLAYER_ACTION_CHIMERA_ROUND_WORK_START = 6972,
    PLAYER_ACTION_CHIMERA_ROUND_WORK_END = 6973,
    PLAYER_ACTION_CHIMERA_ENDLESS_START = 6974,
    PLAYER_ACTION_CHIMERA_ENDLESS_END = 6975,
    PLAYER_ACTION_CHIMERA_ENDLESS_WORK_START = 6976,
    PLAYER_ACTION_CHIMERA_ENDLESS_WORK_END = 6977,
    PLAYER_ACTION_CHIMERA_RANK_CHANGE = 6978,
    PLAYER_ACTION_CHIMERA_GET = 6979,
    PLAYER_ACTION_STORY_TOKEN_TAKE_ACTIVITY_REWARD = 6991,
    PLAYER_ACTION_REISSUE_AVATAR_TOKEN_ITEM = 6992,
    PLAYER_ACTION_AVATAR_DELIVER_REWARD_ACTIVITY_TAKE_REWARD = 7001,
    PLAYER_ACTION_ELF_RESTAURANT_BUY_FIELD = 7011,
    PLAYER_ACTION_ELF_RESTAURANT_PLANT_SEED = 7012,
    PLAYER_ACTION_ELF_RESTAURANT_RECYCLE_SEED = 7013,
    PLAYER_ACTION_ELF_RESTAURANT_HARVEST_CROP = 7014,
    PLAYER_ACTION_ELF_RESTAURANT_UPGRADE_EMPLOYEE_LEVEL = 7015,
    PLAYER_ACTION_ELF_RESTAURANT_UPGRADE_FACILITY_LEVEL = 7016,
    PLAYER_ACTION_ELF_RESTAURANT_UPGRADE_RECIPE_LEVEL = 7017,
    PLAYER_ACTION_ELF_RESTAURANT_BUY_SHOP_ITEM = 7018,
    PLAYER_ACTION_ELF_RESTAURANT_FINISH_TRADE_ORDER = 7019,
    PLAYER_ACTION_ELF_RESTAURANT_TAKE_VILLAGER_REWARD = 7020,
    PLAYER_ACTION_ELF_RESTAURANT_SETTLE_RESTAURANT_PLAY = 7021,
    PLAYER_ACTION_ELF_RESTAURANT_INIT = 7022,
    PLAYER_ACTION_ELF_RESTAURANT_SETTLE_PROGRESS = 7023,
    PLAYER_ACTION_ELF_RESTAURANT_SETTLE_DAY = 7024,
    PLAYER_ACTION_ELF_RESTAURANT_ADD_ITEM = 7025,
    PLAYER_ACTION_LOCAL_LEGEND_REWARD = 7031,
    PLAYER_ACTION_FATE_LEVEL_START = 7041,
    PLAYER_ACTION_FATE_LEVEL_SETTLE = 7042,
    PLAYER_ACTION_FATE_BATTLE_START = 7043,
    PLAYER_ACTION_FATE_BATTLE_END = 7044,
    PLAYER_ACTION_FATE_ADD_HOUGU = 7045,
    PLAYER_ACTION_FATE_SELECT_HOUGU = 7046,
    PLAYER_ACTION_FATE_SELECT_REIJU = 7047,
    PLAYER_ACTION_FATE_REFRESH_REIJU = 7048,
    PLAYER_ACTION_FATE_ADD_COIN = 7049,
    PLAYER_ACTION_FATE_BUY_BUFF = 7050,
    PLAYER_ACTION_FATE_SELL_BUFF = 7051,
    PLAYER_ACTION_FATE_REFRESH_SHOP = 7052,
    PLAYER_ACTION_FATE_LOCK_GOODS = 7053,
    PLAYER_ACTION_FATE_UNLOCK_GOODS = 7054,
    PLAYER_ACTION_FATE_TAKE_EXP_REWARD = 7055,
    PLAYER_ACTION_FATE_ADD_EXP = 7056,
    PLAYER_ACTION_FATE_MASTER_HP_CHANGE = 7057,
    PLAYER_ACTION_PARKOUR_START_LEVEL = 7061,
    PLAYER_ACTION_PARKOUR_END_LEVEL = 7062,
    PLAYER_ACTION_BASIN_CHEST_INTERACT_RESULT = 7091,
    PLAYER_ACTION_ROGUE_MIRACLE_SWAP = 7092,
    _,
};

pub const AvatarSlotType = enum(i32) {
    AVATAR_SLOT_1 = 0,
    AVATAR_SLOT_2 = 1,
    AVATAR_SLOT_3 = 2,
    _,
};

pub const ItemType = enum(i32) {
    ITEM_TYPE_NONE = 0,
    ITEM_AVATAR_CARD = 1,
    ITEM_EQUIPMENT = 2,
    ITEM_MATERIAL = 3,
    ITEM_AVATAR_EXP = 4,
    ITEM_RELIC = 5,
    _,
};

pub const VirtualItemType = enum(i32) {
    VIRTUAL_ITEM_NONE = 0,
    VIRTUAL_ITEM_HCOIN = 1,
    VIRTUAL_ITEM_SCOIN = 2,
    VIRTUAL_ITEM_MCOIN = 3,
    VIRTUAL_ITEM_STAMINA = 11,
    VIRTUAL_ITEM_RESERVE_STAMINA = 12,
    VIRTUAL_ITEM_AVATAR_EXP = 21,
    VIRTUAL_ITEM_EXP = 22,
    VIRTUAL_ITEM_DAILY_ACTIVE_POINT = 23,
    VIRTUAL_ITEM_MP_MAX = 24,
    VIRTUAL_ITEM_PLAYER_RETURN_POINT = 25,
    VIRTUAL_ITEM_BATTLE_COLLEGE_POINT = 26,
    VIRTUAL_ITEM_ROGUE_COIN = 31,
    VIRTUAL_ITEM_ROGUE_TALENT_COIN = 32,
    VIRTUAL_ITEM_ROGUE_REWARD_KEY = 33,
    VIRTUAL_ITEM_ACHIEVEMENT_EXP = 41,
    VIRTUAL_ITEM_BP_EXP = 51,
    VIRTUAL_ITEM_BP_REAL_EXP = 52,
    VIRTUAL_ITEM_MUSEUM_FUNDS = 53,
    VIRTUAL_TRAINPARTY_BUILDING_FUNDS = 54,
    VIRTUAL_TRAINPARTY_AREA_UNLOCK_COIN = 55,
    VIRTUAL_TRAINPARTY_MOBILITY = 56,
    VIRTUAL_ITEM_WARRIOR_EXP = 190,
    VIRTUAL_ITEM_ROGUE_EXP = 191,
    VIRTUAL_ITEM_MAGE_EXP = 192,
    VIRTUAL_ITEM_SHAMAN_EXP = 193,
    VIRTUAL_ITEM_WARLOCK_EXP = 194,
    VIRTUAL_ITEM_KNIGHT_EXP = 195,
    VIRTUAL_ITEM_PRIEST_EXP = 196,
    VIRTUAL_ITEM_PUNK_LORD_POINT = 100000,
    VIRTUAL_ITEM_GAMEPLAY_COUNTER_MONSTER_SNEAK_VISION = 280001,
    VIRTUAL_ITEM_GAMEPLAY_COUNTER_WOLF_BRO_BULLET = 280002,
    VIRTUAL_ITEM_ALLEY_FUNDS = 281001,
    VIRTUAL_ITEM_ROGUE_PUMAN_COUPON = 281012,
    VIRTUAL_ITEM_MONTH_CARD = 300101,
    VIRTUAL_ITEM_BP_NORMAL = 300102,
    VIRTUAL_ITEM_BP_DELUXE = 300103,
    VIRTUAL_ITEM_BP_UPGRADE = 300104,
    VIRTUAL_ITEM_HELIOBUS_FANS = 281002,
    VIRTUAL_ITEM_SPACE_ZOO_HYBRID_ITEM = 281003,
    VIRTUAL_ITEM_SPACE_ZOO_EXP_POINT = 281004,
    VIRTUAL_ITEM_ROGUE_NOUS_TALENT_COIN = 281013,
    VIRTUAL_ITEM_EVOLVE_BUILD_COIN = 281019,
    VIRTUAL_ITEM_DRINK_MAKER_TIP = 281005,
    VIRTUAL_ITEM_MONOPOLY_DICE = 281014,
    VIRTUAL_ITEM_MONOPOLY_COIN = 281015,
    VIRTUAL_ITEM_MONOPOLY_CHEATDICE = 281016,
    VIRTUAL_ITEM_MONOPOLY_REROLL = 281017,
    VIRTUAL_ITEM_ROGUE_TOURN_PERMANENT_TALENT_COIN = 281018,
    VIRTUAL_ITEM_ROGUE_TOURN_SEASON_TALENT_COIN = 281020,
    VIRTUAL_ITEM_ROGUE_TOURN_EXP = 281022,
    VIRTUAL_ITEM_MATCHTHREE_COIN = 281024,
    VIRTUAL_ITEM_SWORD_TRAINING_SKILL_POINT = 281023,
    VIRTUAL_ITEM_FIGHT_FEST_COIN = 281025,
    VIRTUAL_ITEM_ROGUE_MAGIC_TALENT_COIN = 281026,
    VIRTUAL_ITEM_EVOLVE_BUILD_SC_COIN = 281027,
    VIRTUAL_ITEM_EVOLVE_BUILD_REWARD_EXP = 281028,
    VIRTUAL_ITEM_MATCHTHREE_V2_COIN = 281029,
    _,
};

pub const GameplayCounterType = enum(i32) {
    GAMEPLAY_COUNTER_NONE = 0,
    GAMEPLAY_COUNTER_MONSTER_SNEAK_VISION = 280001,
    _,
};

pub const BlackLimitLevel = enum(i32) {
    BLACK_LIMIT_LEVEL_ALL = 0,
    _,
};

pub const AreaType = enum(i32) {
    AREA_NONE = 0,
    AREA_CN = 1,
    AREA_JP = 2,
    AREA_ASIA = 3,
    AREA_WEST = 4,
    AREA_KR = 5,
    AREA_OVERSEAS = 6,
    _,
};

pub const EntityType = enum(i32) {
    ENTITY_NONE = 0,
    ENTITY_AVATAR = 1,
    ENTITY_MONSTER = 2,
    ENTITY_NPC = 3,
    ENTITY_PROP = 4,
    ENTITY_TRIGGER = 5,
    ENTITY_ENV = 6,
    ENTITY_SUMMON_UNIT = 7,
    _,
};

pub const LanguageType = enum(i32) {
    LANGUAGE_NONE = 0,
    LANGUAGE_SC = 1,
    LANGUAGE_TC = 2,
    LANGUAGE_EN = 3,
    LANGUAGE_KR = 4,
    LANGUAGE_JP = 5,
    LANGUAGE_FR = 6,
    LANGUAGE_DE = 7,
    LANGUAGE_ES = 8,
    LANGUAGE_PT = 9,
    LANGUAGE_RU = 10,
    LANGUAGE_TH = 11,
    LANGUAGE_VI = 12,
    LANGUAGE_ID = 13,
    _,
};

pub const PlatformType = enum(i32) {
    EDITOR = 0,
    IOS = 1,
    ANDROID = 2,
    PC = 3,
    WEB = 4,
    WAP = 5,
    PS4 = 6,
    NINTENDO = 7,
    CLOUD_ANDROID = 8,
    CLOUD_PC = 9,
    CLOUD_IOS = 10,
    PS5 = 11,
    MAC = 12,
    CLOUD_MAC = 13,
    CLOUD_WEB_ANDROID = 20,
    CLOUD_WEB_IOS = 21,
    CLOUD_WEB_PC = 22,
    CLOUD_WEB_MAC = 23,
    CLOUD_WEB_TOUCH = 24,
    CLOUD_WEB_KEYBOARD = 25,
    CLOUD_DOUYIN_IOS = 27,
    CLOUD_DOUYIN_ANDROID = 28,
    _,
};

pub const ReloginType = enum(i32) {
    NO_KICK = 0,
    FORCE_KICK = 1,
    IDLE_KICK = 2,
    SILENCE = 3,
    _,
};

pub const AvatarType = enum(i32) {
    AVATAR_TYPE_NONE = 0,
    AVATAR_TRIAL_TYPE = 1,
    AVATAR_LIMIT_TYPE = 2,
    AVATAR_FORMAL_TYPE = 3,
    AVATAR_ASSIST_TYPE = 4,
    AVATAR_AETHER_DIVIDE_TYPE = 5,
    AVATAR_UPGRADE_AVAILABLE_TYPE = 6,
    _,
};

pub const MultiPathAvatarType = enum(i32) {
    MultiPathAvatarTypeNone = 0,
    Mar_7thKnightType = 1001,
    Mar_7thRogueType = 1224,
    BoyWarriorType = 8001,
    GirlWarriorType = 8002,
    BoyKnightType = 8003,
    GirlKnightType = 8004,
    BoyShamanType = 8005,
    GirlShamanType = 8006,
    BoyMemoryType = 8007,
    GirlMemoryType = 8008,
    _,
};

pub const JNICOEPPDFN = enum(i32) {
    AVATAR_TAG_NONE = 0,
    AVATAR_TAG_PLAYER_HAS_SET_ENHANCED_ID = 1,
    AVATAR_TAG_MAX = 32,
    _,
};

pub const Gender = enum(i32) {
    GenderNone = 0,
    GenderMan = 1,
    GenderWoman = 2,
    _,
};

pub const ProductType = enum(i32) {
    PRODUCT_NONE = 0,
    PRODUCT_NORMAL = 1,
    PRODUCT_LIMIT = 2,
    PRODUCT_LIMIT_NO_PAY = 3,
    PRODUCT_NO_PROCESS_ORDER = 4,
    _,
};

pub const ProductGiftType = enum(i32) {
    PRODUCT_GIFT_NONE = 0,
    PRODUCT_GIFT_COIN = 1,
    PRODUCT_GIFT_MONTH_CARD = 2,
    PRODUCT_GIFT_BP_68 = 3,
    PRODUCT_GIFT_BP_128 = 4,
    PRODUCT_GIFT_BP68_UPGRADE_128 = 5,
    PRODUCT_GIFT_POINT_CARD = 6,
    PRODUCT_GIFT_PS_PRE_ORDER_1 = 7,
    PRODUCT_GIFT_PS_PRE_ORDER_2 = 8,
    PRODUCT_GIFT_GOOGLE_POINTS_100 = 9,
    PRODUCT_GIFT_GOOGLE_POINTS_150 = 10,
    PRODUCT_GIFT_PS_POINT_CARD_030 = 11,
    PRODUCT_GIFT_PS_POINT_CARD_050 = 12,
    PRODUCT_GIFT_PS_POINT_CARD_100 = 13,
    PRODUCT_GIFT_PSN_PLUS = 14,
    PRODUCT_GIFT_SINGLE_6 = 15,
    PRODUCT_GIFT_DAILY_LOGIN_30 = 16,
    PRODUCT_GIFT_APPLE_GIFT_CARD = 17,
    PRODUCT_GIFT_FTC_UP_GACHA_TICKET_1 = 18,
    PRODUCT_GIFT_FTC_UP_GACHA_TICKET_10 = 19,
    PRODUCT_GIFT_FTC_NORMAL_GACHA_TICKET_1 = 20,
    PRODUCT_GIFT_FTC_NORMAL_GACHA_TICKET_10 = 21,
    PRODUCT_GIFT_TICKET_10 = 22,
    _,
};

pub const FeatureSwitchType = enum(i32) {
    FEATURE_SWITCH_NONE = 0,
    FEATURE_SWITCH_SHOP = 1,
    FEATURE_SWITCH_LINEUP_NAME = 2,
    FEATURE_SWITCH_RECHARGE_SHOP = 3,
    FEATURE_SWITCH_NICKNAME = 4,
    FEATURE_SWITCH_SIGNATURE = 5,
    FEATURE_SWITCH_BATTLEPASS = 6,
    FEATURE_SWITCH_PUNK_LORD = 7,
    FEATURE_SWITCH_MONTHCARD_DAILY = 8,
    FEATURE_SWITCH_PICTURE_SHARE = 9,
    FEATURE_SWITCH_ROGUE = 10,
    FEATURE_SWITCH_CHALLENGE = 11,
    FEATURE_SWITCH_COCOON = 12,
    FEATURE_SWITCH_RAID = 13,
    FEATURE_SWITCH_MAZE_PLANE_EVENT = 14,
    FEATURE_SWITCH_ACTIVITY_PANEL = 15,
    FEATURE_SWITCH_MAILBOX = 16,
    FEATURE_SWITCH_QUEST = 17,
    FEATURE_SWITCH_GACHA = 18,
    FEATURE_SWITCH_CHAT = 19,
    FEATURE_SWITCH_MODIFY_FRIEND_ALIAS = 20,
    FEATURE_SWITCH_USE_ITEM = 21,
    FEATURE_SWITCH_ACTIVITY_SCHEDULE = 22,
    FEATURE_SWITCH_FARM_ELEMENT = 23,
    FEATURE_SWITCH_ACHIEVEMENT_LEVEL = 24,
    FEATURE_SWITCH_DAILY_ACTIVE_LEVEL = 25,
    FEATURE_SWITCH_PLAYER_RETURN = 26,
    FEATURE_SWITCH_FIRST_SET_NICKNAME = 27,
    FEATURE_SWITCH_MAIN_MISSION_REWARD = 28,
    FEATURE_SWITCH_SUB_MISSION_REWARD = 29,
    FEATURE_SWITCH_PAM_MISSION = 30,
    FEATURE_SWITCH_DESTROY_ITEM = 32,
    FEATURE_SWITCH_CONSUME_ITEM_TURN = 33,
    FEATURE_SWITCH_ROGUE_MODIFIER = 34,
    FEATURE_SWITCH_CHESS_ROGUE = 35,
    FEATURE_SWITCH_CHESS_ROGUE_BOARD = 36,
    FEATURE_SWITCH_ROLL_SHOP = 37,
    FEATURE_SWITCH_H5_RETURN = 38,
    FEATURE_SWITCH_OFFERING = 39,
    FEATURE_SWITCH_SERVER_RED_POINT = 40,
    FEATURE_SWITCH_MONOPOLY_OPTION_RATIO = 41,
    FEATURE_SWITCH_MONOPOLY_GET_RAFFLE_TICKET = 42,
    FEATURE_SWITCH_MONOPOLY_TAKE_RAFFLE_REWARD = 43,
    FEATURE_SWITCH_CHALLENGE_RECOMMEND_LINEUP = 44,
    FEATURE_SWITCH_PSN_MEMBER_SHIP_CHECK = 45,
    FEATURE_SWITCH_PLAYER_BOARD_DEVELOPMENT = 46,
    FEATURE_SWITCH_PVP = 47,
    FEATURE_SWITCH_ROGUE_MODE = 48,
    FEATURE_SWITCH_ROGUE_TOURN_UGC = 49,
    FEATURE_SWITCH_RELIC_FILTER_PLAN_NAME = 50,
    FEATURE_SWITCH_MAZE_ITEM_USE_BUFF_DROP = 51,
    FEATURE_SWITCH_RED_DOT = 52,
    FEATURE_SWITCH_GAME_STATE_SERVICE = 53,
    FEATURE_SWITCH_BENEFIT_INDEX = 54,
    FEATURE_SWITCH_ROGUE_TOURN_BUILD_REF = 55,
    FEATURE_SWITCH_PRE_AVATAR_SET_GROWTH_TARGET = 56,
    FEATURE_SWITCH_IMPORT_RELIC_FILTER_PLAN = 58,
    FEATURE_SWITCH_GACHA_DECIDE_ITEM = 59,
    FEATURE_SWITCH_ITEM_SYNC = 60,
    FEATURE_SWITCH_RECHARGE_BENEFIT = 61,
    FEATURE_SWITCH_RECHARGE_GIFT = 62,
    FEATURE_SWITCH_ROGUE_TOURN_BUILD_REF_SHARE_CODE = 63,
    FEATURE_SWITCH_GACHA_AVATAR_TOAST = 64,
    FEATURE_SWITCH_ROGUE_TOURN_BUILD_REF_SHARE_CODE_RENAME = 65,
    FEATURE_SWITCH_RELIC_SMART_DISCARD = 66,
    FEATURE_SWITCH_PLANETFES_SOCIAL = 67,
    FEATURE_SWITCH_RELIC_REFORGE = 68,
    FEATURE_SWITCH_RELIC_COMPOSE = 69,
    FEATURE_SWITCH_RELIC_DECOMPOSE = 70,
    FEATURE_SWITCH_ROGUE_TOURN_COCOON = 71,
    FEATURE_SWITCH_ITEM_COMPOSE = 72,
    FEATURE_SWITCH_GROW_MATERIAL_AUTO_COMPLETE = 73,
    FEATURE_SWITCH_SKIP_PERFORMANCE = 74,
    FEATURE_SWITCH_FATE = 75,
    FEATURE_SWITCH_FATE_AVATAR_HANDBOOK = 76,
    FEATURE_SWITCH_ELF_RESTAURANT = 77,
    FEATURE_SWITCH_BATTLE_TIMEOUT_LEGAL = 78,
    _,
};

pub const SecretKeyType = enum(i32) {
    SECRET_KEY_NONE = 0,
    SECRET_KEY_SERVER_CHECK = 1,
    SECRET_KEY_VIDEO = 2,
    SECRET_KEY_BATTLE_TIME = 3,
    _,
};

pub const ReplayType = enum(i32) {
    REPLAY_TYPE_NONE = 0,
    REPLAY_TYPE_PUNK_LORD = 1,
    _,
};

pub const PunkLordShareType = enum(i32) {
    PUNK_LORD_SHARE_TYPE_NONE = 0,
    PUNK_LORD_SHARE_TYPE_FRIEND = 1,
    PUNK_LORD_SHARE_TYPE_ALL = 2,
    _,
};

pub const PunkLordAttackerStatus = enum(i32) {
    PUNK_LORD_ATTACKER_STATUS_NONE = 0,
    PUNK_LORD_ATTACKER_STATUS_ATTACKED = 1,
    PUNK_LORD_ATTACKER_STATUS_ATTACKING = 2,
    PUNK_LORD_ATTACKER_STATUS_ATTACKED_AND_ATTACKING = 3,
    _,
};

pub const PunkLordMonsterInfoNotifyReason = enum(i32) {
    PUNK_LORD_MONSTER_INFO_NOTIFY_REASON_NONE = 0,
    PUNK_LORD_MONSTER_INFO_NOTIFY_REASON_ENTER_RAID = 1,
    PUNK_LORD_MONSTER_INFO_NOTIFY_REASON_BATTLE_END = 2,
    PUNK_LORD_MONSTER_INFO_NOTIFY_REASON_LEAVE_RAID = 3,
    _,
};

pub const ChatType = enum(i32) {
    CHAT_TYPE_NONE = 0,
    CHAT_TYPE_PRIVATE = 1,
    CHAT_TYPE_GROUP = 2,
    _,
};

pub const MsgType = enum(i32) {
    MSG_TYPE_NONE = 0,
    MSG_TYPE_CUSTOM_TEXT = 1,
    MSG_TYPE_EMOJI = 2,
    MSG_TYPE_INVITE = 3,
    MSG_TYPE_PLANET_FES = 4,
    _,
};

pub const PlanetFesType = enum(i32) {
    PLANET_FES_MSG_CONTENT_NONE = 0,
    PLANET_FES_MSG_CONTENT_APPLY_REQ = 1,
    PLANET_FES_MSG_CONTENT_PIECE_OFFERED = 2,
    _,
};

pub const ShieldType = enum(i32) {
    SHIELD_TYPE_NONE = 0,
    SHIELD_TYPE_REPLACE = 1,
    SHIELD_TYPE_SHIED = 2,
    _,
};

pub const FuncUnlockIdType = enum(i32) {
    FUNC_UNLOCK_ID_NONE = 0,
    FUNC_UNLOCK_ID_RELIC = 403,
    FUNC_UNLOCK_ID_RELIC_NUM = 404,
    FUNC_UNLOCK_ID_EQUIPMENT = 401,
    FUNC_UNLOCK_ID_SKILLTREE = 402,
    FUNC_UNLOCK_ID_GACHA = 2300,
    FUNC_UNLOCK_ID_EXPEDITION = 3100,
    FUNC_UNLOCK_ID_COMPOSE = 4100,
    FUNC_UNLOCK_ID_FIGHTACTIVITY = 3700,
    _,
};

pub const AssistAvatarType = enum(i32) {
    ASSIST_AVATAR_UNKNOW = 0,
    ASSIST_AVATAR_LEVEL = 1,
    ASSIST_AVATAR_RANK = 2,
    _,
};

pub const DevelopmentType = enum(i32) {
    DEVELOPMENT_NONE = 0,
    DEVELOPMENT_ROGUE_COSMOS = 1,
    DEVELOPMENT_ROGUE_CHESS = 2,
    DEVELOPMENT_ROGUE_CHESS_NOUS = 3,
    DEVELOPMENT_MEMORY_CHALLENGE = 4,
    DEVELOPMENT_STORY_CHALLENGE = 5,
    DEVELOPMENT_UNLOCK_AVATAR = 6,
    DEVELOPMENT_UNLOCK_EQUIPMENT = 7,
    DEVELOPMENT_ACTIVITY_START = 8,
    DEVELOPMENT_ACTIVITY_END = 9,
    DEVELOPMENT_BOSS_CHALLENGE = 10,
    DEVELOPMENT_ROGUE_TOURN = 11,
    DEVELOPMENT_ROGUE_TOURN_WEEK = 12,
    DEVELOPMENT_ROGUE_MAGIC = 13,
    _,
};

pub const PlayingState = enum(i32) {
    PLAYING_STATE_NONE = 0,
    PLAYING_ROGUE_COSMOS = 1,
    PLAYING_ROGUE_CHESS = 2,
    PLAYING_ROGUE_CHESS_NOUS = 3,
    PLAYING_CHALLENGE_MEMORY = 4,
    PLAYING_CHALLENGE_STORY = 5,
    PLAYING_CHALLENGE_BOSS = 6,
    PLAYING_ROGUE_TOURN = 7,
    PLAYING_ROGUE_MAGIC = 8,
    _,
};

pub const MatchRoomCharacterType = enum(i32) {
    MatchRoomCharacter_None = 0,
    MatchRoomCharacter_Leader = 1,
    MatchRoomCharacter_Member = 2,
    MatchRoomCharacter_Watcher = 3,
    _,
};

pub const MatchRoomCharacterStatus = enum(i32) {
    MatchRoomCharacterStatus_None = 0,
    MatchRoomCharacterStatus_Idle = 1,
    MatchRoomCharacterStatus_Operating = 2,
    MatchRoomCharacterStatus_Ready = 3,
    MatchRoomCharacterStatus_Fighting = 4,
    MatchRoomCharacterStatus_Watching = 5,
    _,
};

pub const MGECFLOEOEG = enum(i32) {
    PLANET_FES_CARD_PIECE_APPLY_PERMISSION_REVIEW = 0,
    PLANET_FES_CARD_PIECE_APPLY_PERMISSION_FREE = 1,
    PLANET_FES_CARD_PIECE_PERMISSION_BAN = 2,
    _,
};

pub const GHANGCBOEMC = enum(i32) {
    PLANET_FES_CARD_PIECE_INTERACT_APPLYING = 0,
    PLANET_FES_CARD_PIECE_INTERACT_OFFERED = 1,
    PLANET_FES_CARD_PIECE_INTERACT_OFFER_TAKEN = 2,
    PLANET_FES_CARD_PIECE_INTERACT_APPLY_CANCELD = 3,
    PLANET_FES_CARD_PIECE_INTERACT_APPLY_COMPENSATED = 4,
    _,
};

pub const IJHBCBEOPFE = enum(i32) {
    PLANET_FES_CARD_PIECE_OFFER_SOURCE_REVIEW_APPLY = 0,
    PLANET_FES_CARD_PIECE_OFFER_SOURCE_FREE_APPLY = 1,
    PLANET_FES_CARD_PIECE_OFFER_SOURCE_GIVE = 2,
    _,
};

pub const DLBFAHOAGPH = enum(i32) {
    FATE_SOURCE_TYPE_NONE = 0,
    FATE_SOURCE_TYPE_FATE_BUFF = 1,
    FATE_SOURCE_TYPE_TRAIT_BUFF = 2,
    FATE_SOURCE_TYPE_REIJU = 3,
    FATE_SOURCE_TYPE_HOUGU = 4,
    FATE_SOURCE_TYPE_AFFIX = 5,
    FATE_SOURCE_TYPE_REIJU_AFFIX = 6,
    FATE_SOURCE_TYPE_LEVEL = 7,
    FATE_SOURCE_TYPE_MASTER = 8,
    FATE_SOURCE_TYPE_TRAIT = 9,
    _,
};

pub const ENHDPLIKFHM = enum(i32) {
    MATCH_THREE_VERSION_NONE = 0,
    MATCH_THREE_V1 = 1,
    MATCH_THREE_V2 = 2,
    _,
};

pub const DLLLEANDAIH = enum(i32) {
    FRIEND_RECOMMEND_LINEUP_TYPE_NONE = 0,
    FRIEND_RECOMMEND_LINEUP_TYPE_CHALLENGE = 1,
    FRIEND_RECOMMEND_LINEUP_TYPE_LOCAL_LEGEND = 2,
    _,
};

pub const BattleCheckStrategyType = enum(i32) {
    BATTLE_CHECK_STRATEGY_IDENTICAL = 0,
    BATTLE_CHECK_STRATEGY_SERVER = 1,
    BATTLE_CHECK_STRATEGY_CLIENT = 2,
    BATTLE_CHECK_STRATEGY_TIMEOUT_LEGAL = 3,
    _,
};

pub const BattleCheckResultType = enum(i32) {
    BATTLE_CHECK_RESULT_SUCC = 0,
    BATTLE_CHECK_RESULT_FAIL = 1,
    BATTLE_CHECK_RESULT_PASS = 2,
    _,
};

pub const BattleModuleType = enum(i32) {
    BATTLE_MODULE_MAZE = 0,
    BATTLE_MODULE_CHALLENGE = 1,
    BATTLE_MODULE_COCOON = 2,
    BATTLE_MODULE_ROGUE = 3,
    BATTLE_MODULE_CHALLENGE_ACTIVITY = 4,
    BATTLE_MODULE_TRIAL_LEVEL = 5,
    BATTLE_MODULE_AETHER_DIVIDE = 6,
    _,
};

pub const AetherdivideSpiritLineupType = enum(i32) {
    AETHERDIVIDE_SPIRIT_LINEUP_NONE = 0,
    AETHERDIVIDE_SPIRIT_LINEUP_NORMAL = 1,
    AETHERDIVIDE_SPIRIT_LINEUP_TRIAL = 2,
    _,
};

pub const BattleTargetType = enum(i32) {
    BATTLE_TARGET_TYPE_NONE = 0,
    BATTLE_TARGET_TYPE_SCORE = 1,
    BATTLE_TARGET_TYPE_ACHIEVEMENT = 2,
    BATTLE_TARGET_TYPE_RAID = 3,
    BATTLE_TARGET_TYPE_CHALLENGE_SCORE = 4,
    BATTLE_TARGET_TYPE_COMMON = 5,
    BATTLE_TARGET_TYPE_CLIENT_ACHIEVEMENT = 6,
    _,
};

pub const DeathSource = enum(i32) {
    UNKNOWN = 0,
    KILLED_BY_OTHERS = 1,
    KILLED_BY_SELF = 2,
    ESCAPE = 3,
    _,
};

pub const BattleTag = enum(i32) {
    TAG_NONE = 0,
    TAG_HIDE_NPC_MONSTER = 1,
    _,
};

pub const HEMBNDJAFDA = enum(i32) {
    NORMAL_CREATE = 0,
    FORM_CHANGE = 1,
    _,
};

pub const BattleEndReason = enum(i32) {
    BATTLE_END_REASON_NONE = 0,
    BATTLE_END_REASON_ALL_DIE = 1,
    BATTLE_END_REASON_TURN_LIMIT = 2,
    _,
};

pub const BattleStaticticEventType = enum(i32) {
    BATTLE_STATICTIC_EVENT_NONE = 0,
    BATTLE_STATICTIC_EVENT_TREASURE_DUNGEON_ADD_EXPLORE = 1,
    BATTLE_STATICTIC_EVENT_TREASURE_DUNGEON_OPEN_GRID = 2,
    BATTLE_STATICTIC_EVENT_TREASURE_DUNGEON_PICKUP_ITEM = 3,
    BATTLE_STATICTIC_EVENT_TREASURE_DUNGEON_USE_BUFF = 4,
    BATTLE_STATICTIC_EVENT_TELEVISION_ACTIVITY_UPDATE_MAZE_BUFF_LAYER = 5,
    BATTLE_STATICTIC_EVENT_ROGUE_TOURN_TITAN_EXTRA_COIN = 6,
    BATTLE_STATICTIC_EVENT_ROGUE_TOURN_TITAN_EXTRA_COIN_TIMES = 7,
    _,
};

pub const BOJGAKMDPDL = enum(i32) {
    EVOLVE_BUILD_FUNC_NONE = 0,
    EVOLVE_BUILD_FUNC_GEAR_RESET = 1,
    EVOLVE_BUILD_FUNC_GEAR_REMOVE = 2,
    EVOLVE_BUILD_FUNC_GEAR_SKIP = 3,
    EVOLVE_BUILD_FUNC_CARD_RESET = 4,
    _,
};

pub const JEGLEIKMNCL = enum(i32) {
    kNone = 0,
    kkillEliteMonsterNum = 1,
    kkillMonsterNum = 2,
    _,
};

pub const BattleEndStatus = enum(i32) {
    BATTLE_END_NONE = 0,
    BATTLE_END_WIN = 1,
    BATTLE_END_LOSE = 2,
    BATTLE_END_QUIT = 3,
    _,
};

pub const JEBLPLIAHNM = enum(i32) {
    MANUAL_AVATAR_UPGRADE_NONE = 0,
    MANUAL_AVATAR_UPGRADE_FATE = 1,
    _,
};

pub const FightGameMode = enum(i32) {
    FIGHT_GAME_MODE_NONE = 0,
    FIGHT_GAME_MODE_MATCH3 = 1,
    FIGHT_GAME_MODE_MARBLE = 2,
    FIGHT_GAME_MODE_MATCH3_SOLO = 3,
    _,
};

pub const FightKickoutType = enum(i32) {
    FIGHT_KICKOUT_UNKNOWN = 0,
    FIGHT_KICKOUT_BLACK = 1,
    FIGHT_KICKOUT_BY_GM = 2,
    FIGHT_KICKOUT_TIMEOUT = 3,
    FIGHT_KICKOUT_SESSION_RESET = 4,
    _,
};

pub const LobbyCharacterType = enum(i32) {
    LobbyCharacter_None = 0,
    LobbyCharacter_Leader = 1,
    LobbyCharacter_Member = 2,
    LobbyCharacter_Watcher = 3,
    _,
};

pub const LobbyCharacterStatus = enum(i32) {
    LobbyCharacterStatus_None = 0,
    LobbyCharacterStatus_Idle = 1,
    LobbyCharacterStatus_Operating = 2,
    LobbyCharacterStatus_Ready = 3,
    LobbyCharacterStatus_Fighting = 4,
    LobbyCharacterStatus_Watching = 5,
    LobbyCharacterStatus_Matching = 6,
    LobbyCharacterStatus_LobbyStartFight = 7,
    _,
};

pub const LobbyModifyType = enum(i32) {
    LobbyModifyType_None = 0,
    LobbyModifyType_Idle = 1,
    LobbyModifyType_Ready = 2,
    LobbyModifyType_Operating = 3,
    LobbyModifyType_CancelMatch = 4,
    LobbyModifyType_Match = 5,
    LobbyModifyType_QuitLobby = 6,
    LobbyModifyType_KickOut = 7,
    LobbyModifyType_TimeOut = 8,
    LobbyModifyType_JoinLobby = 9,
    LobbyModifyType_LobbyDismiss = 10,
    LobbyModifyType_MatchTimeOut = 11,
    LobbyModifyType_FightStart = 12,
    LobbyModifyType_Logout = 13,
    LobbyModifyType_FightEnd = 14,
    LobbyModifyType_FightRoomDestroyInInit = 15,
    LobbyModifyType_LobbyStartFight = 16,
    LobbyModifyType_LobbyStartFightTimeout = 17,
    _,
};

pub const FightRoomDestroyReason = enum(i32) {
    FIGHT_ROOM_DESTROY_REASON_NONE = 0,
    FIGHT_ROOM_DESTROY_REASON_SVR_STOP = 1,
    FIGHT_ROOM_DESTROY_REASON_GAME_END = 2,
    _,
};

pub const Match3FinishReason = enum(i32) {
    MATCH3_FINISH_REASON_DEFAULT = 0,
    MATCH3_FINISH_REASON_LEAVE = 1,
    MATCH3_FINISH_REASON_DIE = 2,
    MATCH3_FINISH_REASON_GAMEEND = 3,
    MATCH3_FINISH_REASON_KICKOUT = 4,
    MATCH3_FINISH_REASON_WIN = 5,
    MATCH3_FINISH_REASON_LOSE = 6,
    MATCH3_FINISH_REASON_TIE = 7,
    _,
};

pub const MatchUnitType = enum(i32) {
    MATCH_UNIT_TYPE_NONE = 0,
    MATCH_UNIT_TYPE_NORMAL = 1,
    MATCH_UNIT_TYPE_ROBOT = 2,
    MATCH_UNIT_TYPE_GM = 3,
    _,
};

pub const FFJPPNGGLFF = enum(i32) {
    FIGHT_PLAYER_RESULT_NONE = 0,
    FIGHT_PLAYER_RESULT_WIN = 1,
    FIGHT_PLAYER_RESULT_FAIL = 2,
    FIGHT_PLAYER_RESULT_DRAW = 3,
    _,
};

pub const IMAONMHILNE = enum(i32) {
    LOBBY_INTERACT_TYPE_NONE = 0,
    LOBBY_INTERACT_TYPE_REMIND_PREPARE = 1,
    _,
};

pub const Retcode = enum(i32) {
    RET_SUCC = 0,
    RET_FAIL = 1,
    RET_SERVER_INTERNAL_ERROR = 2,
    RET_TIMEOUT = 3,
    RET_REPEATED_REQ = 4,
    RET_REQ_PARA_INVALID = 5,
    RET_PLAYER_DATA_ERROR = 6,
    RET_PLAYER_CLIENT_PAUSED = 7,
    RET_FUNC_CHECK_FAILED = 8,
    RET_FEATURE_SWITCH_CLOSED = 9,
    RET_FREQ_OVER_LIMIT = 10,
    RET_SYSTEM_BUSY = 11,
    RET_PLAYER_NOT_ONLINE = 12,
    RET_OPERATION_IN_CD = 13,
    RET_REPEATE_LOGIN = 1000,
    RET_RETRY_LOGIN = 1001,
    RET_WAIT_LOGIN = 1002,
    RET_NOT_IN_WHITE_LIST = 1003,
    RET_IN_BLACK_LIST = 1004,
    RET_ACCOUNT_VERIFY_ERROR = 1005,
    RET_ACCOUNT_PARA_ERROR = 1006,
    RET_ANTI_ADDICT_LOGIN = 1007,
    RET_CHECK_SUM_ERROR = 1008,
    RET_REACH_MAX_PLAYER_NUM = 1009,
    RET_ALREADY_REGISTERED = 1010,
    RET_GENDER_ERROR = 1011,
    SET_NICKNAME_RET_CALLBACK_PROCESSING = 1012,
    RET_IN_GM_BIND_ACCESS = 1013,
    RET_QUEST_REWARD_ALREADY_TAKEN = 1100,
    RET_QUEST_NOT_ACCEPT = 1101,
    RET_QUEST_NOT_FINISH = 1102,
    RET_QUEST_STATUS_ERROR = 1103,
    RET_ACHIEVEMENT_LEVEL_NOT_REACH = 1104,
    RET_ACHIEVEMENT_LEVEL_ALREADY_TAKEN = 1105,
    RET_AVATAR_NOT_EXIST = 1200,
    RET_AVATAR_RES_EXP_NOT_ENOUGH = 1201,
    RET_AVATAR_EXP_REACH_PROMOTION_LIMIT = 1202,
    RET_AVATAR_REACH_MAX_PROMOTION = 1203,
    RET_SKILLTREE_CONFIG_NOT_EXIST = 1204,
    RET_SKILLTREE_ALREADY_UNLOCK = 1205,
    RET_SKILLTREE_PRE_LOCKED = 1206,
    RET_SKILLTREE_LEVEL_NOT_MEET = 1207,
    RET_SKILLTREE_RANK_NOT_MEET = 1208,
    RET_AVATAR_DRESS_NO_EQUIPMENT = 1209,
    RET_AVATAR_EXP_ITEM_NOT_EXIST = 1210,
    RET_SKILLTREE_POINT_LOCKED = 1211,
    RET_SKILLTREE_POINT_LEVEL_UPGRADE_NOT_MATCH = 1212,
    RET_SKILLTREE_POINT_LEVEL_REACH_MAX = 1213,
    RET_WORLD_LEVEL_NOT_MEET = 1214,
    RET_PLAYER_LEVEL_NOT_MEET = 1215,
    RET_AVATAR_RANK_NOT_MATCH = 1216,
    RET_AVATAR_RANK_REACH_MAX = 1217,
    RET_HERO_BASIC_TYPE_NOT_MATCH = 1218,
    RET_AVATAR_PROMOTION_NOT_MEET = 1219,
    RET_PROMOTION_REWARD_CONFIG_NOT_EXIST = 1220,
    RET_PROMOTION_REWARD_ALREADY_TAKEN = 1221,
    RET_AVATAR_SKIN_ITEM_NOT_EXIST = 1222,
    RET_AVATAR_SKIN_ALREADY_DRESSED = 1223,
    RET_AVATAR_NOT_DRESS_SKIN = 1224,
    RET_AVATAR_SKIN_NOT_MATCH_AVATAR = 1225,
    RET_AVATAR_PATH_NOT_MATCH = 1226,
    RET_AVATAR_ENHANCED_ID_NOT_EXIST = 1227,
    RET_AVATAR_ENHANCED_ID_ALREADY_SET = 1228,
    RET_AVATAR_NOT_CUR_ENHANCED_ID = 1229,
    RET_ITEM_NOT_EXIST = 1300,
    RET_ITEM_COST_NOT_ENOUGH = 1301,
    RET_ITEM_COST_TOO_MUCH = 1302,
    RET_ITEM_NO_COST = 1303,
    RET_ITEM_NOT_ENOUGH = 1304,
    RET_ITEM_INVALID = 1305,
    RET_ITEM_CONFIG_NOT_EXIST = 1306,
    RET_SCOIN_NOT_ENOUGH = 1307,
    RET_ITEM_REWARD_EXCEED_LIMIT = 1308,
    RET_ITEM_INVALID_USE = 1309,
    RET_ITEM_USE_CONFIG_NOT_EXIST = 1310,
    RET_REWARD_CONFIG_NOT_EXIST = 1311,
    RET_ITEM_EXCEED_LIMIT = 1312,
    RET_ITEM_COUNT_INVALID = 1313,
    RET_ITEM_USE_TARGET_TYPE_INVALID = 1314,
    RET_ITEM_USE_SATIETY_FULL = 1315,
    RET_ITEM_COMPOSE_NOT_EXIST = 1316,
    RET_RELIC_COMPOSE_NOT_EXIST = 1317,
    RET_ITEM_CAN_NOT_SELL = 1318,
    RET_ITEM_SELL_EXCEDD_LIMIT = 1319,
    RET_ITEM_NOT_IN_COST_LIST = 1320,
    RET_ITEM_SPECIAL_COST_NOT_ENOUGH = 1321,
    RET_ITEM_SPECIAL_COST_TOO_MUCH = 1322,
    RET_ITEM_FORMULA_NOT_EXIST = 1323,
    RET_ITEM_AUTO_GIFT_OPTIONAL_NOT_EXIST = 1324,
    RET_RELIC_COMPOSE_RELIC_INVALID = 1325,
    RET_RELIC_COMPOSE_MAIN_AFFIX_ID_INVALID = 1326,
    RET_RELIC_COMPOSE_WRONG_FORMULA_TYPE = 1327,
    RET_RELIC_COMPOSE_RELIC_NOT_EXIST = 1328,
    RET_RELIC_COMPOSE_BLACK_GOLD_COUNT_INVALID = 1329,
    RET_RELIC_COMPOSE_BLACK_GOLD_NOT_NEED = 1330,
    RET_MONTH_CARD_CANNOT_USE = 1331,
    RET_ITEM_REWARD_EXCEED_DISAPPEAR = 1332,
    RET_ITEM_NEED_RECYCLE = 1333,
    RET_ITEM_COMPOSE_EXCEED_LIMIT = 1334,
    RET_ITEM_CAN_NOT_DESTROY = 1335,
    RET_ITEM_ALREADY_MARK = 1336,
    RET_ITEM_MARK_EXCEED_LIMIT = 1337,
    RET_ITEM_NOT_MARK = 1338,
    RET_ITEN_TURN_FOOD_NOT_SET = 1339,
    RET_ITEM_TURN_FOOD_ALREADY_SET = 1340,
    RET_ITEM_TURN_FOOD_CONSUME_TYPE_ERROR = 1341,
    RET_ITEM_TURN_FOOD_SWITCH_ALREADY_OPEN = 1342,
    RET_ITEM_TURN_FOOD_SWITCH_ALREADY_CLOSE = 1343,
    RET_HCOIN_EXCHANGE_TOO_MUCH = 1344,
    RET_ITEM_TURN_FOOD_SCENE_TYPE_ERROR = 1345,
    RET_EQUIPMENT_ALREADY_DRESSED = 1350,
    RET_EQUIPMENT_NOT_EXIST = 1351,
    RET_EQUIPMENT_REACH_LEVEL_LIMIT = 1352,
    RET_EQUIPMENT_CONSUME_SELF = 1353,
    RET_EQUIPMENT_ALREADY_LOCKED = 1354,
    RET_EQUIPMENT_ALREADY_UNLOCKED = 1355,
    RET_EQUIPMENT_LOCKED = 1356,
    RET_EQUIPMENT_SELECT_NUM_OVER_LIMIT = 1357,
    RET_EQUIPMENT_RANK_UP_MUST_CONSUME_SAME_TID = 1358,
    RET_EQUIPMENT_PROMOTION_REACH_MAX = 1359,
    RET_EQUIPMENT_RANK_UP_REACH_MAX = 1360,
    RET_EQUIPMENT_LEVEL_REACH_MAX = 1361,
    RET_EQUIPMENT_EXCEED_LIMIT = 1362,
    RET_RELIC_NOT_EXIST = 1363,
    RET_RELIC_REACH_LEVEL_LIMIT = 1364,
    RET_RELIC_CONSUME_SELF = 1365,
    RET_RELIC_ALREADY_DRESSED = 1366,
    RET_RELIC_LOCKED = 1367,
    RET_RELIC_ALREADY_LOCKED = 1368,
    RET_RELIC_ALREADY_UNLOCKED = 1369,
    RET_RELIC_LEVEL_IS_NOT_ZERO = 1370,
    RET_UNIQUE_ID_REPEATED = 1371,
    RET_EQUIPMENT_LEVEL_NOT_MEET = 1372,
    RET_EQUIPMENT_ITEM_NOT_IN_COST_LIST = 1373,
    RET_EQUIPMENT_LEVEL_GREATER_THAN_ONE = 1374,
    RET_EQUIPMENT_ALREADY_RANKED = 1375,
    RET_RELIC_EXCEED_LIMIT = 1376,
    RET_RELIC_ALREADY_DISCARDED = 1377,
    RET_RELIC_ALREADY_UNDISCARDED = 1378,
    RET_EQUIPMENT_BATCH_LOCK_TOO_FAST = 1379,
    RET_RELIC_FILTER_PLAN_SLOT_EMPTY = 1380,
    RET_RELIC_FILTER_PLAN_NUM_EXCEED_LIMIT = 1381,
    RET_RELIC_FILTER_PLAN_NAME_UTF8_ERROR = 1382,
    RET_RELIC_FILTER_PLAN_NAME_FORMAT_ERROR = 1383,
    RET_RELIC_FILTER_PLAN_NO_CHANGE = 1384,
    RET_RELIC_REFORGE_NOT_CONFIRMED = 1385,
    RET_EQUIPMENT_ALREADY_LEVELUP = 1386,
    RET_EQUIPMENT_RARITY_ERROR = 1387,
    RET_LINEUP_INVALID_INDEX = 1400,
    RET_LINEUP_INVALID_MEMBER_POS = 1401,
    RET_LINEUP_SWAP_NOT_EXIST = 1402,
    RET_LINEUP_AVATAR_ALREADY_IN = 1403,
    RET_LINEUP_CREATE_AVATAR_ERROR = 1404,
    RET_LINEUP_AVATAR_INIT_ERROR = 1405,
    RET_LINEUP_NOT_EXIST = 1406,
    RET_LINEUP_ONLY_ONE_MEMBER = 1407,
    RET_LINEUP_SAME_LEADER_SLOT = 1408,
    RET_LINEUP_NO_LEADER_SELECT = 1409,
    RET_LINEUP_SWAP_SAME_SLOT = 1410,
    RET_LINEUP_AVATAR_NOT_EXIST = 1411,
    RET_LINEUP_TRIAL_AVATAR_CAN_NOT_QUIT = 1412,
    RET_LINEUP_VIRTUAL_LINEUP_PLANE_NOT_MATCH = 1413,
    RET_LINEUP_NOT_VALID_LEADER = 1414,
    RET_LINEUP_SAME_INDEX = 1415,
    RET_LINEUP_IS_EMPTY = 1416,
    RET_LINEUP_NAME_FORMAT_ERROR = 1417,
    RET_LINEUP_TYPE_NOT_MATCH = 1418,
    RET_LINEUP_REPLACE_ALL_FAILED = 1419,
    RET_LINEUP_NOT_ALLOW_EDIT = 1420,
    RET_LINEUP_AVATAR_IS_ALIVE = 1421,
    RET_LINEUP_ASSIST_HAS_ONLY_MEMBER = 1422,
    RET_LINEUP_ASSIST_CANNOT_SWITCH = 1423,
    RET_LINEUP_AVATAR_TYPE_INVALID = 1424,
    RET_LINEUP_NAME_UTF8_ERROR = 1425,
    RET_LINEUP_LEADER_LOCK = 1426,
    RET_LINEUP_STORY_LINE_NOT_MATCH = 1427,
    RET_LINEUP_AVATAR_LOCK = 1428,
    RET_LINEUP_AVATAR_INVALID = 1429,
    RET_LINEUP_AVATAR_ALREADY_INIT = 1430,
    RET_LINEUP_LIMITED = 1431,
    RET_MAIL_NOT_EXIST = 1700,
    RET_MAIL_RANGE_INVALID = 1701,
    RET_MAIL_MAIL_ID_INVALID = 1702,
    RET_MAIL_NO_MAIL_TAKE_ATTACHMENT = 1703,
    RET_MAIL_NO_MAIL_TO_DEL = 1704,
    RET_MAIL_TYPE_INVALID = 1705,
    RET_MAIL_PARA_INVALID = 1706,
    RET_MAIL_ATTACHEMENT_INVALID = 1707,
    RET_MAIL_TICKET_INVALID = 1708,
    RET_MAIL_TICKET_REPEATED = 1709,
    RET_STAGE_SETTLE_ERROR = 1800,
    RET_STAGE_CONFIG_NOT_EXIST = 1801,
    RET_STAGE_NOT_FOUND = 1802,
    RET_STAGE_COCOON_PROP_NOT_VALID = 1804,
    RET_STAGE_COCOON_WAVE_NOT_VALID = 1805,
    RET_STAGE_PROP_ID_NOT_EQUAL = 1806,
    RET_STAGE_COCOON_WAVE_OVER = 1807,
    RET_STAGE_WEEK_COCOON_OVER_CNT = 1808,
    RET_STAGE_COCOON_NOT_OPEN = 1809,
    RET_STAGE_TRIAL_NOT_OPEN = 1810,
    RET_STAGE_FARM_NOT_OPEN = 1811,
    RET_STAGE_FARM_TYPE_ERROR = 1812,
    RET_STAGE_FARM_SWEEP_CD = 1813,
    RET_CHAPTER_LOCK = 1900,
    RET_CHAPTER_CHALLENGE_NUM_NOT_ENOUGH = 1901,
    RET_CHAPTER_REWARD_ID_NOT_EXIST = 1902,
    RET_CHAPTER_REWARD_ALREADY_TAKEN = 1903,
    RET_BATTLE_STAGE_NOT_MATCH = 2000,
    RET_IN_BATTLE_NOW = 2001,
    RET_BATTLE_CHEAT = 2002,
    RET_BATTLE_FAIL = 2003,
    RET_BATTLE_NO_LINEUP = 2004,
    RET_BATTLE_LINEUP_EMPTY = 2005,
    RET_BATTLE_VERSION_NOT_MATCH = 2006,
    RET_BATTLE_QUIT_BY_SERVER = 2007,
    RET_IN_BATTLE_CHECK = 2008,
    RET_BATTLE_CHECK_NEED_RETRY = 2009,
    RET_BATTLE_COST_TIME_CHECK_FAIL = 2010,
    RET_LACK_EXCHANGE_STAMINA_TIMES = 2100,
    RET_LACK_STAMINA = 2101,
    RET_STAMINA_FULL = 2102,
    RET_AUTHKEY_SIGN_TYPE_ERROR = 2103,
    RET_AUTHKEY_SIGN_VER_ERROR = 2104,
    RET_NICKNAME_FORMAT_ERROR = 2105,
    RET_SENSITIVE_WORDS = 2106,
    RET_LEVEL_REWARD_HAS_TAKEN = 2107,
    RET_LEVEL_REWARD_LEVEL_ERROR = 2108,
    RET_LANGUAGE_INVALID = 2109,
    RET_NICKNAME_IN_CD = 2110,
    RET_GAMEPLAY_BIRTHDAY_INVALID = 2111,
    RET_GAMEPLAY_BIRTHDAY_ALREADY_SET = 2112,
    RET_NICKNAME_UTF8_ERROR = 2113,
    RET_NICKNAME_DIGIT_LIMIT_ERROR = 2114,
    RET_SENSITIVE_WORDS_PLATFORM_ERROR = 2115,
    RET_PLAYER_SETTING_TYPE_INVALID = 2116,
    RET_MAZE_LACK_TICKET = 2201,
    RET_MAZE_NOT_UNLOCK = 2202,
    RET_MAZE_NO_ABILITY = 2204,
    RET_MAZE_NO_PLANE = 2205,
    RET_MAZE_MAP_NOT_EXIST = 2207,
    RET_MAZE_MP_NOT_ENOUGH = 2213,
    RET_SPRING_NOT_ENABLE = 2214,
    RET_SPRING_TOO_FAR = 2216,
    RET_NOT_IN_MAZE = 2218,
    RET_MAZE_TIME_OF_DAY_TYPE_ERROR = 2223,
    RET_SCENE_TRANSFER_LOCKED_BY_TASK = 2224,
    RET_PLOT_NOT_UNLOCK = 2300,
    RET_MISSION_NOT_EXIST = 2400,
    RET_MISSION_ALREADY_DONE = 2401,
    RET_DAILY_TASK_NOT_FINISH = 2402,
    RET_DAILY_TASK_REWARD_HAS_TAKEN = 2403,
    RET_MISSION_NOT_FINISH = 2404,
    RET_MISSION_NOT_DOING = 2405,
    RET_MISSION_FINISH_WAY_NOT_MATCH = 2406,
    RET_MISSION_SCENE_NOT_MATCH = 2407,
    RET_MISSION_CUSTOM_VALUE_NOT_VALID = 2408,
    RET_MISSION_SUB_MISSION_NOT_MATCH = 2409,
    RET_ADVENTURE_MAP_NOT_EXIST = 2500,
    RET_SCENE_ENTITY_NOT_EXIST = 2600,
    RET_NOT_IN_SCENE = 2601,
    RET_SCENE_MONSTER_NOT_EXIST = 2602,
    RET_INTERACT_CONFIG_NOT_EXIST = 2603,
    RET_UNSUPPORTED_PROP_STATE = 2604,
    RET_SCENE_ENTRY_ID_NOT_MATCH = 2605,
    RET_SCENE_ENTITY_MOVE_CHECK_FAILED = 2606,
    RET_ASSIST_MONSTER_COUNT_LIMIT = 2607,
    RET_SCENE_USE_SKILL_FAIL = 2608,
    RET_PROP_IS_HIDDEN = 2609,
    RET_LOADING_SUCC_ALREADY = 2610,
    RET_SCENE_ENTITY_TYPE_INVALID = 2611,
    RET_INTERACT_TYPE_INVALID = 2612,
    RET_INTERACT_NOT_IN_REGION = 2613,
    RET_INTERACT_SUB_TYPE_INVALID = 2614,
    RET_NOT_LEADER_ENTITY = 2615,
    RET_MONSTER_IS_NOT_FARM_ELEMENT = 2616,
    RET_MONSTER_CONFIG_NOT_EXIST = 2617,
    RET_AVATAR_HP_ALREADY_FULL = 2618,
    RET_CUR_INTERACT_ENTITY_NOT_MATCH = 2619,
    RET_PLANE_TYPE_NOT_ALLOW = 2620,
    RET_GROUP_NOT_EXIST = 2621,
    RET_GROUP_SAVE_DATA_IN_CD = 2622,
    RET_GROUP_SAVE_LENGH_REACH_MAX = 2623,
    RET_RECENT_ELEMENT_NOT_EXIST = 2624,
    RET_RECENT_ELEMENT_STAGE_NOT_MATCH = 2625,
    RET_SCENE_POSITION_VERSION_NOT_MATCH = 2626,
    RET_GAMEPLAY_COUNTER_NOT_EXIST = 2627,
    RET_GAMEPLAY_COUNTER_NOT_ENOUGH = 2628,
    RET_GROUP_STATE_NOT_MATCH = 2629,
    RET_SCENE_ENTITY_POS_NOT_MATCH = 2630,
    RET_GROUP_STATE_CUSTOM_SAVE_DATA_OFF = 2631,
    RET_SCENE_NOT_MATCH = 2632,
    RET_PROP_TYPE_INVALID = 2633,
    RET_NOT_IN_CORRECT_SCENE = 2634,
    RET_NOT_IN_CORRECT_DIMENSION = 2635,
    RET_NOT_CORRECT_GROUP_PROPERTY_NAME = 2636,
    RET_BUY_TIMES_LIMIT = 2700,
    RET_BUY_LIMIT_TYPE = 2701,
    RET_SHOP_NOT_OPEN = 2702,
    RET_GOODS_NOT_OPEN = 2703,
    RET_CITY_LEVEL_REWARD_TAKEN = 2704,
    RET_CITY_LEVEL_NOT_MEET = 2705,
    RET_SINGLE_BUY_LIMIT = 2706,
    RET_TUTORIAL_NOT_UNLOCK = 2751,
    RET_TUTORIAL_UNLOCK_ALREADY = 2752,
    RET_TUTORIAL_FINISH_ALREADY = 2753,
    RET_TUTORIAL_PRE_NOT_UNLOCK = 2754,
    RET_TUTORIAL_PLAYER_LEVEL_NOT_MATCH = 2755,
    RET_TUTORIAL_TUTORIAL_NOT_FOUND = 2756,
    RET_CHALLENGE_NOT_EXIST = 2801,
    RET_CHALLENGE_NOT_UNLOCK = 2802,
    RET_CHALLENGE_ALREADY = 2803,
    RET_CHALLENGE_LINEUP_EDIT_FORBIDDEN = 2804,
    RET_CHALLENGE_LINEUP_EMPTY = 2805,
    RET_CHALLENGE_NOT_DOING = 2806,
    RET_CHALLENGE_NOT_FINISH = 2807,
    RET_CHALLENGE_TARGET_NOT_FINISH = 2808,
    RET_CHALLENGE_TARGET_REWARD_TAKEN = 2809,
    RET_CHALLENGE_TIME_NOT_VALID = 2810,
    RET_CHALLENGE_STARS_COUNT_NOT_MEET = 2811,
    RET_CHALLENGE_STARS_REWARD_TAKEN = 2812,
    RET_CHALLENGE_STARS_NOT_EXIST = 2813,
    RET_CHALLENGE_CUR_SCENE_NOT_ENTRY_FLOOR = 2814,
    RET_CHALLENGE_NO_TEAM_ARCHIVE = 2815,
    RET_CHALLENGE_LINEUP_AVATAR_TYPE_INVALID = 2816,
    RET_CHALLENGE_LINEUP_RECOMMEND_IN_CD = 2817,
    RET_BASIC_TYPE_ALREADY = 2850,
    RET_NO_BASIC_TYPE = 2851,
    RET_NOT_CHOOSE_BASIC_TYPE = 2852,
    RET_NOT_FUNC_CLOSE = 2853,
    RET_NOT_CHOOSE_GENDER = 2854,
    RET_NOT_REQ_UNLOCK_BASIC_TYPE = 2855,
    RET_AVATAR_PATH_LOCKED = 2856,
    RET_ROGUE_STATUS_NOT_MATCH = 2901,
    RET_ROGUE_SELECT_BUFF_NOT_EXIST = 2902,
    RET_ROGUE_COIN_NOT_ENOUGH = 2903,
    RET_ROGUE_STAMINA_NOT_ENOUGH = 2904,
    RET_ROGUE_APPRAISAL_COUNT_NOT_ENOUGH = 2905,
    RET_ROGUE_PROP_ALREADY_USED = 2906,
    RET_ROGUE_RECORD_ALREADY_SAVED = 2907,
    RET_ROGUE_ROLL_BUFF_MAX_COUNT = 2908,
    RET_ROGUE_PICK_AVATAR_INVALID = 2909,
    RET_ROGUE_QUEST_EXPIRE = 2910,
    RET_ROGUE_QUEST_REWARD_ALREADY = 2911,
    RET_ROGUE_REVIVE_COUNT_NOT_ENOUGH = 2912,
    RET_ROGUE_AREA_INVALID = 2913,
    RET_ROGUE_SCORE_REWARD_POOL_INVALID = 2914,
    RET_ROGUE_SCORE_REWARD_ROW_INVALID = 2915,
    RET_ROGUE_AEON_LEVEL_NOT_MEET = 2916,
    RET_ROGUE_AEON_LEVEL_REWARD_ALREADY_TAKEN = 2917,
    RET_ROGUE_AEON_CONFIG_NOT_EXIST = 2918,
    RET_ROGUE_TRIAL_AVATAR_INVALID = 2919,
    RET_ROGUE_HANDBOOK_REWARD_ALREADY_TAKEN = 2920,
    RET_ROGUE_ROOM_TYPE_NOT_MATCH = 2921,
    RET_ROGUE_SHOP_GOOD_NOT_FOUND = 2922,
    RET_ROGUE_SHOP_GOOD_ALREADY_BOUGHT = 2923,
    RET_ROGUE_SHOP_GOOD_ALREADY_OWN = 2924,
    RET_ROGUE_SHOP_MIRACLE_NOT_EXIST = 2925,
    RET_ROGUE_SHOP_NOT_EXIST = 2926,
    RET_ROGUE_SHOP_CANNOT_REFRESH = 2927,
    RET_ROGUE_SELECT_BUFF_CERTAIN_MISMATCH = 2928,
    RET_ROGUE_ACTION_QUEUE_NOT_EMPTY_BATTLE = 2929,
    RET_ROGUE_ACTION_QUEUE_NOT_EMPTY_OTHERS = 2930,
    RET_MISSION_EVENT_CONFIG_NOT_EXIST = 2951,
    RET_MISSION_EVENT_NOT_CLIENT = 2952,
    RET_MISSION_EVENT_FINISHED = 2953,
    RET_MISSION_EVENT_DOING = 2954,
    RET_HAS_CHALLENGE_MISSION_EVENT = 2955,
    RET_NOT_CHALLENGE_MISSION_EVENT = 2956,
    RET_GACHA_ID_NOT_EXIST = 3001,
    RET_GACHA_NUM_INVALID = 3002,
    RET_GACHA_FIRST_GACHA_MUST_ONE = 3003,
    RET_GACHA_REQ_DUPLICATED = 3004,
    RET_GACHA_NOT_IN_SCHEDULE = 3005,
    RET_GACHA_NEWBIE_CLOSE = 3006,
    RET_GACHA_TODAY_LIMITED = 3007,
    RET_GACHA_NOT_SUPPORT = 3008,
    RET_GACHA_CEILING_NOT_ENOUGH = 3009,
    RET_GACHA_CEILING_CLOSE = 3010,
    RET_GACHA_LOCKED = 3011,
    RET_GACHA_DECIDE_ITEM_TYPE_INVALID = 3012,
    RET_GACHA_DECIDE_ITEM_ID_INVALID = 3013,
    RET_NOT_IN_RAID = 3101,
    RET_RAID_DOING = 3102,
    RET_NOT_PROP = 3103,
    RET_RAID_ID_NOT_MATCH = 3104,
    RET_RAID_RESTART_NOT_MATCH = 3105,
    RET_RAID_LIMIT = 3106,
    RET_RAID_AVATAR_LIST_EMPTY = 3107,
    RET_RAID_AVATAR_NOT_EXIST = 3108,
    RET_CHALLENGE_RAID_REWARD_ALREADY = 3109,
    RET_CHALLENGE_RAID_SCORE_NOT_REACH = 3110,
    RET_CHALLENGE_RAID_NOT_OPEN = 3111,
    RET_RAID_FINISHED = 3112,
    RET_RAID_WORLD_LEVEL_NOT_LOCK = 3113,
    RET_RAID_CANNOT_USE_ASSIST = 3114,
    RET_RAID_AVATAR_NOT_MATCH = 3115,
    RET_RAID_CAN_NOT_SAVE = 3116,
    RET_RAID_NO_SAVE = 3117,
    RET_ACTIVITY_RAID_NOT_OPEN = 3118,
    RET_RAID_AVATAR_CAPTAIN_NOT_EXIST = 3119,
    RET_RAID_STORY_LINE_NOT_MATCH = 3120,
    RET_TALK_EVENT_ALREADY_TAKEN = 3151,
    RET_NPC_ALREADY_MEET = 3152,
    RET_NPC_NOT_IN_CONFIG = 3153,
    RET_DIALOGUE_GROUP_DISMATCH = 3154,
    RET_DIALOGUE_EVENT_INVALID = 3155,
    RET_TALK_EVENT_TAKE_PROTO_NOT_MATCH = 3156,
    RET_TALK_EVENT_NOT_VALID = 3157,
    RET_EXPEDITION_CONFIG_NOT_EXIST = 3201,
    RET_EXPEDITION_REWARD_CONFIG_NOT_EXIST = 3202,
    RET_EXPEDITION_NOT_UNLOCKED = 3203,
    RET_EXPEDITION_ALREADY_ACCEPTED = 3204,
    RET_EXPEDITION_REPEATED_AVATAR = 3205,
    RET_AVATAR_ALREADY_DISPATCHED = 3206,
    RET_EXPEDITION_NOT_ACCEPTED = 3207,
    RET_EXPEDITION_NOT_FINISH = 3208,
    RET_EXPEDITION_ALREADY_FINISH = 3209,
    RET_EXPEDITION_TEAM_COUNT_LIMIT = 3210,
    RET_EXPEDITION_AVATAR_NUM_NOT_MATCH = 3211,
    RET_EXPEDITION_NOT_OPEN = 3212,
    RET_EXPEDITION_FRIEND_AVATAR_NOT_VALID = 3213,
    RET_EXPEDITION_NOT_PUBLISHED = 3214,
    RET_LOGIN_ACTIVITY_HAS_TAKEN = 3301,
    RET_LOGIN_ACTIVITY_DAYS_LACK = 3302,
    RET_TRIAL_ACTIVITY_REWARD_ALREADY_TAKE = 3303,
    RET_TRIAL_ACTIVITY_STAGE_NOT_FINISH = 3304,
    RET_MATERIAL_SUBMIT_ACTIVITY_HAS_TAKEN = 3305,
    RET_MATERIAL_SUBMIT_ACTIVITY_MATERIAL_NOT_SUBMITTED = 3306,
    RET_MATERIAL_SUBMIT_ACTIVITY_MATERIAL_ALREADY_SUBMITTED = 3307,
    RET_FANTASTIC_STORY_ACTIVITY_STORY_ERROR = 3308,
    RET_FANTASTIC_STORY_ACTIVITY_STORY_NOT_OPEN = 3309,
    RET_FANTASTIC_STORY_ACTIVITY_BATTLE_ERROR = 3310,
    RET_FANTASTIC_STORY_ACTIVITY_BATTLE_NOT_OPEN = 3311,
    RET_FANTASTIC_STORY_ACTIVITY_BATTLE_AVATAR_ERROR = 3312,
    RET_FANTASTIC_STORY_ACTIVITY_BATTLE_BUFF_ERROR = 3313,
    RET_FANTASTIC_STORY_ACTIVITY_PRE_BATTLE_SCORE_NOT_ENOUGH = 3314,
    RET_TRIAL_ACTIVITY_ALREADY_IN_TRIAL_ACTIVITY = 3315,
    RET_COMMON_ACTIVITY_NOT_OPEN = 3316,
    RET_BENEFIT_NOT_READY = 3317,
    RET_COMMON_ACTIVITY_BUSY = 3318,
    RET_AVATAR_DELIVER_REWARD_PHASE_ERROR = 3319,
    RET_MESSAGE_CONFIG_NOT_EXIST = 3501,
    RET_MESSAGE_SECTION_NOT_TAKE = 3502,
    RET_MESSAGE_GROUP_NOT_TAKE = 3503,
    RET_MESSAGE_SECTION_ID_NOT_MATCH = 3504,
    RET_MESSAGE_SECTION_CAN_NOT_FINISH = 3505,
    RET_MESSAGE_ITEM_CAN_NOT_FINISH = 3506,
    RET_MESSAGE_ITEM_RAID_CAN_NOT_FINISH = 3507,
    RET_FRIEND_ALREADY_IS_FRIEND = 3601,
    RET_FRIEND_IS_NOT_FRIEND = 3602,
    RET_FRIEND_APPLY_EXPIRE = 3603,
    RET_FRIEND_IN_BLACKLIST = 3604,
    RET_FRIEND_NOT_IN_BLACKLIST = 3605,
    RET_FRIEND_NUMBER_LIMIT = 3606,
    RET_FRIEND_BLACKLIST_NUMBER_LIMIT = 3607,
    RET_FRIEND_DAILY_APPLY_LIMIT = 3608,
    RET_FRIEND_IN_HANDLE_LIMIT = 3609,
    RET_FRIEND_APPLY_IN_CD = 3610,
    RET_FRIEND_REMARK_NAME_FORMAT_ERROR = 3611,
    RET_FRIEND_PLAYER_NOT_FOUND = 3612,
    RET_FRIEND_IN_TARGET_BLACKLIST = 3613,
    RET_FRIEND_TARGET_NUMBER_LIMIT = 3614,
    RET_ASSIST_QUERY_TOO_FAST = 3615,
    RET_ASSIST_NOT_EXIST = 3616,
    RET_ASSIST_USED_ALREADY = 3617,
    RET_FRIEND_REPORT_REASON_FORMAT_ERROR = 3618,
    RET_FRIEND_REPORT_SENSITIVE_WORDS = 3619,
    RET_ASSIST_USED_TIMES_OVER = 3620,
    RET_ASSIST_QUIT_ALREADY = 3621,
    RET_ASSIST_AVATAR_IN_LINEUP = 3622,
    RET_ASSIST_NO_REWARD = 3623,
    RET_FRIEND_SEARCH_NUM_LIMIT = 3624,
    RET_FRIEND_SEARCH_IN_CD = 3625,
    RET_FRIEND_REMARK_NAME_UTF8_ERROR = 3626,
    RET_FRIEND_REPORT_REASON_UTF8_ERROR = 3627,
    RET_ASSIST_SET_ALREADY = 3628,
    RET_FRIEND_TARGET_FORBID_OTHER_APPLY = 3629,
    RET_FRIEND_MARKED_CNT_MAX = 3630,
    RET_FRIEND_MARKED_ALREADY = 3631,
    RET_FRIEND_NOT_MARKED = 3632,
    RET_FRIEND_CHALLENGE_LINEUP_RECOMMEND_IN_CD = 3633,
    RET_VIEW_PLAYER_CARD_IN_CD = 3634,
    RET_VIEW_PLAYER_BATTLE_RECORD_IN_CD = 3635,
    RET_PLAYER_BOARD_HEAD_ICON_NOT_EXIST = 3701,
    RET_PLAYER_BOARD_HEAD_ICON_LOCKED = 3702,
    RET_PLAYER_BOARD_HEAD_ICON_ALREADY_UNLOCKED = 3703,
    RET_PLAYER_BOARD_DISPLAY_AVATAR_NOT_EXIST = 3704,
    RET_PLAYER_BOARD_DISPLAY_AVATAR_EXCEED_LIMIT = 3705,
    RET_PLAYER_BOARD_DISPLAY_REPEATED_AVATAR = 3706,
    RET_PLAYER_BOARD_DISPLAY_AVATAR_SAME_POS = 3707,
    RET_PLAYER_BOARD_DISPLAY_AVATAR_LOCKED = 3708,
    RET_SIGNATURE_LENGTH_EXCEED_LIMIT = 3709,
    RET_SIGNATURE_SENSITIVE_WORDS = 3710,
    RET_PLAYER_BOARD_ASSIST_AVATAR_NOT_EXIST = 3712,
    RET_PLAYER_BOARD_ASSIST_AVATAR_LOCKED = 3713,
    RET_SIGNATURE_UTF8_ERROR = 3714,
    RET_PLAYER_BOARD_ASSIST_AVATAR_CNT_ERROR = 3715,
    RET_PLAYER_BOARD_PERSONAL_CARD_NOT_EXIST = 3716,
    RET_PLAYER_BOARD_PERSONAL_CARD_LOCKED = 3717,
    RET_PLAYER_BOARD_PERSONAL_NO_CHANGE = 3718,
    RET_BATTLE_PASS_TIER_NOT_VALID = 3801,
    RET_BATTLE_PASS_LEVEL_NOT_MEET = 3802,
    RET_BATTLE_PASS_REWARD_TAKE_ALREADY = 3803,
    RET_BATTLE_PASS_NOT_PREMIUM = 3804,
    RET_BATTLE_PASS_NOT_DOING = 3805,
    RET_BATTLE_PASS_LEVEL_INVALID = 3806,
    RET_BATTLE_PASS_NOT_UNLOCK = 3807,
    RET_BATTLE_PASS_NO_REWARD = 3808,
    RET_BATTLE_PASS_QUEST_NOT_VALID = 3809,
    RET_BATTLE_PASS_NOT_CHOOSE_OPTIONAL = 3810,
    RET_BATTLE_PASS_NOT_TAKE_REWARD = 3811,
    RET_BATTLE_PASS_OPTIONAL_NOT_VALID = 3812,
    RET_BATTLE_PASS_BUY_ALREADY = 3813,
    RET_BATTLE_PASS_NEAR_END = 3814,
    RET_MUSIC_LOCKED = 3901,
    RET_MUSIC_NOT_EXIST = 3902,
    RET_MUSIC_UNLOCK_FAILED = 3903,
    RET_PUNK_LORD_LACK_SUMMON_TIMES = 4001,
    RET_PUNK_LORD_ATTACKING_MONSTER_LIMIT = 4002,
    RET_PUNK_LORD_MONSTER_NOT_EXIST = 4003,
    RET_PUNK_LORD_MONSTER_ALREADY_SHARED = 4004,
    RET_PUNK_LORD_MONSTER_EXPIRED = 4005,
    RET_PUNK_LORD_SELF_MONSTER_ATTACK_LIMIT = 4006,
    RET_PUNK_LORD_LACK_SUPPORT_TIMES = 4007,
    RET_PUNK_LORD_MONSTER_ALREADY_KILLED = 4008,
    RET_PUNK_LORD_MONSTER_ATTACKER_LIMIT = 4009,
    RET_PUNK_LORD_WORLD_LEVLE_NOT_VALID = 4010,
    RET_PUNK_LORD_REWARD_LEVLE_NOT_EXIST = 4011,
    RET_PUNK_LORD_POINT_NOT_MEET = 4012,
    RET_PUNK_LORD_IN_ATTACKING = 4013,
    RET_PUNK_LORD_OPERATION_IN_CD = 4014,
    RET_PUNK_LORD_REWARD_ALREADY_TAKEN = 4015,
    RET_PUNK_LORD_OVER_BONUS_REWARD_LIMIT = 4016,
    RET_PUNK_LORD_NOT_IN_SCHEDULE = 4017,
    RET_PUNK_LORD_MONSTER_NOT_ATTACKED = 4018,
    RET_PUNK_LORD_MONSTER_NOT_KILLED = 4019,
    RET_PUNK_LORD_MONSTER_KILLED_SCORE_ALREADY_TAKE = 4020,
    RET_PUNK_LORD_REWARD_LEVLE_ALREADY_TAKE = 4021,
    RET_DAILY_ACTIVE_LEVEL_INVALID = 4101,
    RET_DAILY_ACTIVE_LEVEL_REWARD_ALREADY_TAKEN = 4102,
    RET_DAILY_ACTIVE_LEVEL_AP_NOT_ENOUGH = 4103,
    RET_DAILY_MEET_PAM = 4201,
    RET_REPLAY_ID_NOT_MATCH = 4251,
    RET_REPLAY_REQ_NOT_VALID = 4252,
    RET_FIGHT_ACTIVITY_DIFFICULTY_LEVEL_NOT_PASSED = 4301,
    RET_FIGHT_ACTIVITY_DIFFICULTY_LEVEL_REWARD_ALREADY_TAKE = 4302,
    RET_FIGHT_ACTIVITY_STAGE_NOT_OPEN = 4303,
    RET_FIGHT_ACTIVITY_LEVEL_NOT_UNLOCK = 4304,
    RET_TRAIN_VISITOR_VISITOR_NOT_EXIST = 4351,
    RET_TRAIN_VISITOR_BEHAVIOR_NOT_EXIST = 4352,
    RET_TRAIN_VISITOR_BEHAVIOR_FINISHED = 4353,
    RET_TRAIN_VISITOR_ALL_BEHAVIOR_REWARD_TAKEN = 4354,
    RET_TRAIN_VISITOR_GET_ON_MISSION_NOT_FINISH = 4355,
    RET_TRAIN_VISITOR_NOT_GET_OFF_OR_BE_TRAIN_MEMBER = 4356,
    RET_TEXT_JOIN_UNKNOW_IS_OVERRIDE = 4401,
    RET_TEXT_JOIN_ID_NOT_EXIST = 4402,
    RET_TEXT_JOIN_CAN_NOT_OVERRIDE = 4403,
    RET_TEXT_JOIN_ITEM_ID_ERROR = 4404,
    RET_TEXT_JOIN_SENSITIVE_CHECK_ERROR = 4405,
    RET_TEXT_JOIN_MUST_OVERRIDE = 4406,
    RET_TEXT_JOIN_TEXT_EMPTY = 4407,
    RET_TEXT_JOIN_TEXT_FORMAT_ERROR = 4408,
    RET_TEXT_JOIN_TEXT_UTF8_ERROR = 4409,
    RET_TEXT_JOIN_BATCH_REQ_ID_REPEAT = 4410,
    RET_TEXT_JOIN_TYPE_NOT_SUPPORT_BATCH_REQ = 4411,
    RET_TEXT_JOIN_AVATAR_ID_NOT_EXIST = 4412,
    RET_TEXT_JOIN_UNKNOW_TYPE = 4413,
    RET_PAM_MISSION_MISSION_ID_ERROR = 4451,
    RET_PAM_MISSION_MISSION_EXPIRE = 4452,
    RET_CHAT_TYPE_NOT_EXIST = 4501,
    RET_MSG_TYPE_NOT_EXIST = 4502,
    RET_CHAT_NO_TARGET_UID = 4503,
    RET_CHAT_MSG_EMPTY = 4504,
    RET_CHAT_MSG_EXCEED_LIMIT = 4505,
    RET_CHAT_MSG_SENSITIVE_CHECK_ERROR = 4506,
    RET_CHAT_MSG_UTF8_ERROR = 4507,
    RET_CHAT_FORBID_SWITCH_OPEN = 4508,
    RET_CHAT_FORBID = 4509,
    RET_CHAT_MSG_INCLUDE_SPECIAL_STR = 4510,
    RET_CHAT_MSG_EMOJI_NOT_EXIST = 4511,
    RET_CHAT_MSG_EMOJI_GENDER_NOT_MATCH = 4512,
    RET_CHAT_MSG_EMOJI_NOT_MARKED = 4513,
    RET_CHAT_MSG_EMOJI_ALREADY_MARKED = 4514,
    RET_CHAT_MSG_EMOJI_MARKED_MAX_LIMIT = 4515,
    RET_BOXING_CLUB_CHALLENGE_NOT_OPEN = 4601,
    RET_MUSEUM_NOT_OPEN = 4651,
    RET_MUSEUM_TURN_CNT_NOT_MATCH = 4652,
    RET_MUSEUM_PHASE_NOT_REACH = 4653,
    RET_MUSEUM_UNKNOW_STUFF = 4654,
    RET_MUSEUM_UNKNOW_AREA = 4655,
    RET_MUSEUM_UNKNOW_POS = 4656,
    RET_MUSEUM_STUFF_ALREADY_IN_AREA = 4657,
    RET_MUSEUM_STUFF_NOT_IN_AREA = 4658,
    RET_MUSEUM_GET_NPC_REPEAT = 4659,
    RET_MUSEUM_GET_NPC_UNLOCK = 4660,
    RET_MUSEUM_GET_NPC_NOT_ENOUGH = 4661,
    RET_MUSEUM_CHANGE_STUFF_AREA_ERROR = 4662,
    RET_MUSEUM_NOT_INIT = 4663,
    RET_MUSEUM_EVENT_ERROR = 4664,
    RET_MUSEUM_UNKNOW_CHOOSE_EVENT_ID = 4665,
    RET_MUSEUM_EVENT_ORDER_NOT_MATCH = 4666,
    RET_MUSEUM_EVENT_PHASE_NOT_UNLOCK = 4667,
    RET_MUSEUM_EVENT_MISSION_NOT_FOUND = 4668,
    RET_MUSEUM_AREA_LEVEL_UP_ALREADY = 4669,
    RET_MUSEUM_STUFF_ALREADY_USED = 4670,
    RET_MUSEUM_EVENT_ROUND_NOT_UNLOCK = 4671,
    RET_MUSEUM_STUFF_IN_AREA = 4672,
    RET_MUSEUM_STUFF_DISPATCH = 4673,
    RET_MUSEUM_IS_END = 4674,
    RET_MUSEUM_STUFF_LEAVING = 4675,
    RET_MUSEUM_EVENT_MISSION_NOT_FINISH = 4678,
    RET_MUSEUM_COLLECT_REWARD_NOT_EXIST = 4679,
    RET_MUSEUM_COLLECT_REWARD_ALREADY_TAKEN = 4680,
    RET_MUSEUM_ACCEPT_MISSION_MAX_LIMIT = 4681,
    RET_ROGUE_CHALLENGE_NOT_OPEN = 4701,
    RET_ROGUE_CHALLENGE_ASSIS_REFRESH_LIMIT = 4702,
    RET_ALLEY_NOT_INIT = 4721,
    RET_ALLEY_NOT_OPEN = 4722,
    RET_ALLEY_MAP_NOT_EXIST = 4724,
    RET_ALLEY_EMPTY_POS_LIST = 4725,
    RET_ALLEY_LINE_POS_INVALID = 4726,
    RET_ALLEY_SHOP_NOT_UNLOCK = 4727,
    RET_ALLEY_DEPOT_FULL = 4728,
    RET_ALLEY_SHOP_NOT_INCLUDE = 4729,
    RET_ALLEY_EVENT_NOT_UNLOCK = 4730,
    RET_ALLEY_EVENT_NOT_REFRESH = 4731,
    RET_ALLEY_EVENT_STATE_DOING = 4732,
    RET_ALLEY_EVENT_STATE_FINISH = 4733,
    RET_ALLEY_EVENT_ERROR = 4734,
    RET_ALLEY_REWARD_LEVEL_ERROR = 4735,
    RET_ALLEY_REWARD_PRESTIGE_NOT_ENOUGH = 4736,
    RET_ALLEY_SHIP_EMPTY = 4737,
    RET_ALLEY_SHIP_ID_DISMATCH = 4738,
    RET_ALLEY_SHIP_NOT_EXIST = 4739,
    RET_ALLEY_SHIP_NOT_UNLOCK = 4740,
    RET_ALLEY_GOODS_NOT_EXIST = 4741,
    RET_ALLEY_GOODS_NOT_UNLOCK = 4742,
    RET_ALLEY_PROFIT_NOT_POSITIVE = 4743,
    RET_ALLEY_SPECIAL_ORDER_DISMATCH = 4744,
    RET_ALLEY_ORDER_GOODS_OVER_LIMIT = 4745,
    RET_ALLEY_SPECIAL_ORDER_CONDITION_NOT_MEET = 4746,
    RET_ALLEY_DEPOT_SIZE_OVER_LIMIT = 4747,
    RET_ALLEY_GOODS_NOT_ENOUGH = 4748,
    RET_ALLEY_ORDER_INDEX_INVALID = 4749,
    RET_ALLEY_REWARD_ALREADY_TAKE = 4750,
    RET_ALLEY_REWARD_NOT_EXIST = 4751,
    RET_ALLEY_MAIN_MISSION_NOT_DOING = 4752,
    RET_ALLEY_CRITICAL_EVENT_NOT_FINISH = 4753,
    RET_ALLEY_SHOP_GOODS_NOT_VALID = 4754,
    RET_ALLEY_SLASH_NOT_OPEN = 4755,
    RET_ALLEY_PLACING_ANCHOR_INVALID = 4756,
    RET_ALLEY_PLACING_GOODS_INDEX_INVALID = 4757,
    RET_ALLEY_SAVE_MAP_TOO_QUICK = 4758,
    RET_ALLEY_MAP_NOT_LINK = 4759,
    RET_ALLEY_FUNDS_NOT_LOWER_BASE = 4760,
    RET_ALLEY_EVENT_NOT_FINISH = 4761,
    RET_ALLEY_NORMAL_ORDER_NOT_MEET = 4762,
    RET_PLAYER_RETURN_NOT_OPEN = 4801,
    RET_PLAYER_RETURN_IS_SIGNED = 4802,
    RET_PLAYER_RETURN_POINT_NOT_ENOUGH = 4803,
    RET_PLAYER_RETURN_CONDITION_INVALID = 4804,
    RET_PLAYER_RETURN_HAS_SIGNED = 4805,
    RET_PLAYER_RETURN_REWARD_TAKEN = 4806,
    RET_PLAYER_RETURN_RELIC_TAKEN = 4807,
    RET_AETHER_DIVIDE_NO_LINEUP = 4851,
    RET_AETHER_DIVIDE_LINEUP_INVALID = 4852,
    RET_CHAT_BUBBLE_ID_ERROR = 4901,
    RET_CHAT_BUBBLE_ID_NOT_UNLOCK = 4902,
    RET_PHONE_THEME_ID_ERROR = 4903,
    RET_PHONE_THEME_ID_NOT_UNLOCK = 4904,
    RET_CHAT_BUBBLE_SELECT_IS_CURRENT = 4905,
    RET_PHONE_THEME_SELECT_IS_CURRENT = 4906,
    RET_PHONE_CASE_ID_ERROR = 4907,
    RET_PHONE_CASE_ID_NOT_UNLOCK = 4908,
    RET_PHONE_CASE_SELECT_IS_CURRENT = 4909,
    RET_CHESS_ROGUE_CONFIG_NOT_FOUND = 4951,
    RET_CHESS_ROGUE_CONFIG_INVALID = 4952,
    RET_CHESS_ROGUE_NO_VALID_ROOM = 4963,
    RET_CHESS_ROGUE_NO_CELL_INFO = 4964,
    RET_CHESS_ROGUE_CELL_NOT_FINISH = 4965,
    RET_CHESS_ROGUE_CELL_IS_LOCKED = 4966,
    RET_CHESS_ROGUE_SCHEDULE_NOT_MATCH = 4967,
    RET_CHESS_ROGUE_STATUS_FAIL = 4968,
    RET_CHESS_ROGUE_AREA_NOT_EXIST = 4969,
    RET_CHESS_ROGUE_LINEUP_FAIL = 4970,
    RET_CHESS_ROGUE_AEON_FAIL = 4980,
    RET_CHESS_ROGUE_ENTER_CELL_FAIL = 4981,
    RET_CHESS_ROGUE_ROLL_DICE_FAIL = 4982,
    RET_CHESS_ROGUE_DICE_STATUS_FAIL = 4983,
    RET_CHESS_ROGUE_DICE_CNT_NOT_FULL = 4984,
    RET_CHESS_ROGUE_UNLOCK = 4985,
    RET_CHESS_ROGUE_PICK_AVATAR_FAIL = 4986,
    RET_CHESS_ROGUE_AVATAR_INVALID = 4987,
    RET_CHESS_ROGUE_CELL_CAN_NOT_SELECT = 4988,
    RET_CHESS_ROGUE_DICE_CONFIRMED = 4989,
    RET_CHESS_ROGUE_NOUS_DICE_NOT_MATCH = 4990,
    RET_CHESS_ROGUE_NOUS_DICE_RARITY_FAIL = 4991,
    RET_CHESS_ROGUE_NOUS_DICE_SURFACE_DUPLICATE = 4992,
    RET_CHESS_ROGUE_NOT_IN_ROGUE = 4993,
    RET_CHESS_ROGUE_NOUS_DICE_BRANCH_LIMIT = 4994,
    RET_HELIOBUS_NOT_OPEN = 5101,
    RET_HELIOBUS_SNS_POST_NOT_UNLOCK = 5102,
    RET_HELIOBUS_SNS_ALREADY_READ = 5103,
    RET_HELIOBUS_SNS_ALREADY_LIKED = 5104,
    RET_HELIOBUS_SNS_ALREADY_COMMENTED = 5105,
    RET_HELIOBUS_SNS_IN_MISSION = 5106,
    RET_HELIOBUS_SNS_ALREADY_POSTED = 5107,
    RET_HELIOBUS_SNS_NOT_DOING_MISSION = 5108,
    RET_HELIOBUS_REWARD_LEVEL_MAX = 5109,
    RET_HELIOBUS_INCOME_NOT_ENOUGH = 5110,
    RET_HELIOBUS_SNS_COMMENT_NOT_UNLOCK = 5111,
    RET_HELIOBUS_CHALLENGE_NOT_UNLOCK = 5112,
    RET_HELIOBUS_CHALLENGE_ID_ERROR = 5113,
    RET_HELIOBUS_SKILL_NOT_UNLOCK = 5114,
    RET_HELIOBUS_ACCEPT_POST_MISSION_FAIL = 5115,
    RET_HELIOBUS_SKILL_NOT_SELECTED = 5116,
    RET_HELIOBUS_PLANE_TYPE_INVALID = 5117,
    RET_REDDOT_PARAM_INVALID = 5151,
    RET_REDDOT_ACTIVITY_NOT_OPEN = 5152,
    RET_ROGUE_ENDLESS_ACTIVITY_CONFIG_ERROR = 5201,
    RET_ROGUE_ENDLESS_ACTIVITY_NOT_OPEN = 5202,
    RET_ROGUE_ENDLESS_ACTIVITY_OVER_BONUS_REWARD_LIMIT = 5203,
    RET_ROGUE_ENDLESS_ACTIVITY_SCORE_NOT_MEET = 5204,
    RET_ROGUE_ENDLESS_ACTIVITY_REWARD_LEVLE_ALREADY_TAKE = 5205,
    RET_HEART_DIAL_SCRIPT_NOT_FOUND = 5251,
    RET_HEART_DIAL_SCRIPT_EMOTION_THE_SAME = 5252,
    RET_HEART_DIAL_SCRIPT_STEP_NOT_NORMAL = 5253,
    RET_HEART_DIAL_SCRIPT_CONDITION_NOT_MATCH = 5254,
    RET_HEART_DIAL_SCRIPT_SUBMIT_ITEM_NUM_NOT_MATCH = 5255,
    RET_HEART_DIAL_SCRIPT_SUBMIT_ITEM_ID_NOT_MATCH = 5256,
    RET_HEART_DIAL_DIALOGUE_NOT_FOUND = 5257,
    RET_HEART_DIAL_DIALOGUE_ALREADY_PERFORMED = 5258,
    RET_HEART_DIAL_NPC_NOT_FOUND = 5259,
    RET_HEART_DIAL_TRACE_CONFIG_NOT_FOUND = 5260,
    RET_HEART_DIAL_FLOOR_TRACE_EXIST = 5261,
    RET_HEART_DIAL_TRACE_FLOOR_NOT_MATCH = 5262,
    RET_TRAVEL_BROCHURE_CONFIG_ERROR = 5301,
    RET_TRAVEL_BROCHURE_PARAM_INVALID = 5302,
    RET_TRAVEL_BROCHURE_LOCKED = 5303,
    RET_TRAVEL_BROCHURE_CANNOT_OPERATE = 5304,
    RET_TRAVEL_BROCHURE_WORLD_ID_NOT_MATCH = 5305,
    RET_TRAVEL_BROCHURE_HAS_NO_WORLD_BOOK = 5306,
    RET_TRAVEL_BROCHURE_PAGE_FULL = 5307,
    RET_MAP_ROTATION_NOT_IN_REGION = 5351,
    RET_MAP_ROTATION_ROTATER_ALREADY_DEPLOYED = 5352,
    RET_MAP_ROTATION_ENERGY_NOT_ENOUGH = 5353,
    RET_MAP_ROTATION_ENTITY_NOT_ON_CUR_POSE = 5354,
    RET_MAP_ROTATION_ROTATER_NOT_DEPLOYED = 5355,
    RET_MAP_ROTATION_POSE_ROTATER_MISMATCH = 5356,
    RET_MAP_ROTATION_ROTATER_NOT_REMOVABLE = 5357,
    RET_MAP_ROTATION_ROTATER_DISPOSABLE = 5358,
    RET_SPACE_ZOO_ACTIVITY_CAT_NOT_FOUND = 5401,
    RET_SPACE_ZOO_ACTIVITY_CAT_PARAM_INVALID = 5402,
    RET_SPACE_ZOO_ACTIVITY_CAT_ITEM_NOT_ENOUGH = 5403,
    RET_SPACE_ZOO_ACTIVITY_CAT_BAG_FULL = 5404,
    RET_SPACE_ZOO_ACTIVITY_CAT_NOT_TO_MUTATE = 5405,
    RET_SPACE_ZOO_ACTIVITY_CAT_STATE_ERROR = 5406,
    RET_SPACE_ZOO_ACTIVITY_CAT_CATTERY_LOCKED = 5407,
    RET_SPACE_ZOO_ACTIVITY_CAT_OUT_NOW = 5408,
    RET_SPACE_ZOO_ACTIVITY_CAT_CONFIG_NOT_FOUND = 5409,
    RET_SPACE_ZOO_ACTIVITY_CAT_FEATURE_NOT_FOUND = 5410,
    RET_SPACE_ZOO_ACTIVITY_CAT_ADD_CAT_ERROR = 5411,
    RET_SPACE_ZOO_ACTIVITY_CAT_MONEY_NOT_ENOUGH = 5412,
    RET_SPACE_ZOO_ACTIVITY_CAT_COND_NOT_MATCH = 5413,
    RET_STRONG_CHALLENGE_ACTIVITY_STAGE_CFG_MISS = 5501,
    RET_STRONG_CHALLENGE_ACTIVITY_STAGE_NOT_OPEN = 5502,
    RET_STRONG_CHALLENGE_ACTIVITY_BUFF_ERROR = 5503,
    RET_ROLL_SHOP_NOT_FOUND = 5551,
    RET_ROLL_SHOP_GROUP_EMPTY = 5552,
    RET_ROLL_SHOP_EMPTY = 5553,
    RET_ROLL_SHOP_GACHA_REQ_DUPLICATED = 5554,
    RET_ROLL_SHOP_RANDOM_ERROR = 5555,
    RET_ROLL_SHOP_GROUP_TYPE_NOT_FOUND = 5556,
    RET_ROLL_SHOP_HAS_STORED_REWARD_ALREADY = 5557,
    RET_ROLL_SHOP_NO_STORED_REWARD = 5558,
    RET_ROLL_SHOP_NOT_IN_VALID_SCENE = 5559,
    RET_ROLL_SHOP_INVALID_ROLL_SHOP_TYPE = 5560,
    RET_ACTIVITY_RAID_COLLECTION_PREV_NOT_FINISH = 5601,
    RET_ACTIVITY_RAID_COLLECTION_GROUP_ENTER_NEXT_UNAVAILABLE = 5602,
    RET_ACTIVITY_RAID_COLLECTION_IS_LAST = 5603,
    RET_ACTIVITY_RAID_COLLECTION_IS_NOT_NEXT = 5604,
    RET_OFFERING_NOT_UNLOCK = 5651,
    RET_OFFERING_LEVEL_NOT_UNLOCK = 5652,
    RET_OFFERING_REACH_MAX_LEVEL = 5653,
    RET_OFFERING_ITEM_NOT_ENOUGH = 5654,
    RET_OFFERING_LONGTAIL_NOT_OPEN = 5655,
    RET_OFFERING_REWARD_CONDITION = 5656,
    RET_DRINK_MAKER_CHAT_INVALID = 5701,
    RET_DRINK_MAKER_PARAM_INVALID = 5702,
    RET_DRINK_MAKER_PARAM_NOT_UNLOCK = 5703,
    RET_DRINK_MAKER_CONFIG_NOT_FOUND = 5704,
    RET_DRINK_MAKER_NOT_LAST_CHAT = 5705,
    RET_DRINK_MAKER_DAY_AND_FREE_PHASE_NOT_OPEN = 5706,
    RET_DRINK_MAKER_CHEERS_NOT_ABLE_TO_NEXT_GROUP = 5707,
    RET_DRINK_MAKER_CHEERS_DRINK_ALREADY_MADE = 5708,
    RET_DRINK_MAKER_CHEERS_ACTIVITY_NOT_OPEN = 5709,
    RET_DRINK_MAKER_CHEERS_MAKE_DRINK_PRE_MISSION_NOT_FINISHED = 5710,
    RET_MONOPOLY_NOT_OPEN = 5751,
    RET_MONOPOLY_CONFIG_ERROR = 5752,
    RET_MONOPOLY_DICE_NOT_ENOUGH = 5753,
    RET_MONOPOLY_CUR_CELL_NOT_FINISH = 5754,
    RET_MONOPOLY_COIN_NOT_ENOUGH = 5755,
    RET_MONOPOLY_CELL_WAIT_PENDING = 5756,
    RET_MONOPOLY_CELL_STATE_ERROR = 5757,
    RET_MONOPOLY_CELL_CONTENT_ERROR = 5758,
    RET_MONOPOLY_ITEM_NOT_ENOUGH = 5759,
    RET_MONOPOLY_CELL_CONTENT_CANNOT_GIVEUP = 5760,
    RET_MONOPOLY_ASSET_LEVEL_INVALID = 5761,
    RET_MONOPOLY_TURN_NOT_FINISH = 5762,
    RET_MONOPOLY_GUIDE_NOT_FINISH = 5763,
    RET_MONOPOLY_RAFFLE_REWARD_REISSUED = 5764,
    RET_MONOPOLY_NO_GAME_ACTIVE = 5771,
    RET_MONOPOLY_GAME_RATIO_NOT_INCREASABLE = 5772,
    RET_MONOPOLY_GAME_RATIO_MAX = 5773,
    RET_MONOPOLY_GAME_TARGET_RATIO_INVALID = 5774,
    RET_MONOPOLY_GAME_BINGO_FLIP_POS_INVALID = 5775,
    RET_MONOPOLY_GAME_GUESS_ALREADY_CHOOSE = 5776,
    RET_MONOPOLY_GAME_GUESS_CHOOSE_INVALID = 5777,
    RET_MONOPOLY_GAME_GUESS_INFORMATION_ALREADY_BOUGHT = 5778,
    RET_MONOPOLY_GAME_RAISE_RATIO_NOT_UNLOCK = 5779,
    RET_MONOPOLY_FRIEND_NOT_SYNCED = 5785,
    RET_MONOPOLY_GET_FRIEND_RANKING_LIST_IN_CD = 5786,
    RET_MONOPOLY_LIKE_TARGET_NOT_FRIEND = 5787,
    RET_MONOPOLY_DAILY_ALREADY_LIKED = 5788,
    RET_MONOPOLY_SOCIAL_EVENT_STATUS_NOT_MATCH = 5789,
    RET_MONOPOLY_SOCIAL_EVENT_SERVER_CACHE_NOT_EXIST = 5790,
    RET_MONOPOLY_ACTIVITY_ID_NOT_MATCH = 5791,
    RET_MONOPOLY_RAFFLE_POOL_NOT_EXIST = 5792,
    RET_MONOPOLY_RAFFLE_POOL_TIME_NOT_MATCH = 5793,
    RET_MONOPOLY_RAFFLE_POOL_PHASE_NOT_MEET = 5794,
    RET_MONOPOLY_RAFFLE_POOL_SHOW_TIME_NOT_MEET = 5795,
    RET_MONOPOLY_RAFFLE_TICKET_NOT_FOUND = 5796,
    RET_MONOPOLY_RAFFLE_TICKET_TIME_NOT_MEET = 5797,
    RET_MONOPOLY_RAFFLE_TICKET_REWARD_ALREADY_TAKEN = 5798,
    RET_MONOPOLY_RAFFLE_POOL_NOT_IN_RAFFLE_TIME = 5799,
    RET_MONOPOLY_MBTI_REPORT_REWARD_ALREADY_TAKEN = 5800,
    RET_EVOLVE_BUILD_LEVEL_GAMING = 5801,
    RET_EVEOLVE_BUILD_LEVEL_BAN_RANDOM = 5802,
    RET_EVOLVE_BUILD_FIRST_REWARD_ALREADY_TAKEN = 5803,
    RET_EVOLVE_BUILD_LEVEL_UNFINISH = 5804,
    RET_EVOLVE_BUILD_SHOP_ABILITY_MAX_LEVEL = 5805,
    RET_EVOLVE_BUILD_SHOP_ABILITY_MIN_LEVEL = 5806,
    RET_EVOLVE_BUILD_SHOP_ABILITY_NOT_GET = 5807,
    RET_EVOLVE_BUILD_LEVEL_LOCK = 5808,
    RET_EVOLVE_BUILD_EXP_NOT_ENOUGH = 5809,
    RET_EVOLVE_BUILD_SHOP_ABILITY_LEVEL_ERROR = 5810,
    RET_EVOLVE_BUILD_ACTIVITY_NOT_OPEN = 5811,
    RET_EVOLVE_BUILD_SHOP_ABILITY_EMPTY = 5812,
    RET_EVOLVE_BUILD_LEVEL_NOT_START = 5813,
    RET_EVOLVE_BUILD_SHOP_LOCK = 5814,
    RET_EVOLVE_BUILD_REWARD_LOCK = 5815,
    RET_EVOLVE_BUILD_REWARD_LEVEL_MAX = 5816,
    RET_EVOLVE_BUILD_REWARD_ALREADY_ALL_TAKEN = 5717,
    RET_EVOLVE_BUILD_SEASON_ERROR = 5718,
    RET_EVOLVE_BUILD_TEACH_SKIP_QUEST_NOT_FINISH = 5719,
    RET_CLOCK_PARK_CONFIG_ERROR = 5851,
    RET_CLOCK_PARK_EFFECT_ERROR = 5852,
    RET_CLOCK_PARK_SCRIPT_ALREADY_UNLOCK = 5853,
    RET_CLOCK_PARK_SCRIPT_UNLOCK_CONDITION_NOT_MEET = 5854,
    RET_CLOCK_PARK_TALENT_ALREADY_UNLOCK = 5855,
    RET_CLOCK_PARK_SCRIPT_LOCKED = 5856,
    RET_CLOCK_PARK_HAS_ONGOING_SCRIPT = 5857,
    RET_CLOCK_PARK_NO_ONGOING_SCRIPT = 5858,
    RET_CLOCK_PARK_DICE_PLACEMENT_ERROR = 5859,
    RET_CLOCK_PARK_MISMATCH_STATUS = 5860,
    RET_CLOCK_PARK_NO_BUFF = 5861,
    RET_CLOCK_PARK_SLOT_MACHINE_GACHA_REQ_DUPLICATED = 5862,
    RET_CLOCK_PARK_SLOT_MACHINE_COST_NOT_ENOUGH = 5863,
    RET_CLOCK_PARK_SLOT_MACHINE_GACHA_CNT_EXCEED_LIMIT = 5864,
    RET_CLOCK_PARK_NOT_OPEN = 5865,
    RET_TOURN_ROGUE_STATUS_MISMATCH = 5901,
    RET_MAGIC_ROGUE_STATUS_MISMATCH = 5902,
    RET_AUTO_MOUNT_MAGIC_UNIT_NO_MATCHED_MAGIC_SCEPTER = 5903,
    RET_MAGIC_UNIT_WORKBENCH_REFORGE_GEN_FAIL = 5904,
    RET_MATCH_ALREADY_IN_MATCH = 6201,
    RET_MATCH_NOT_IN_MATCH = 6202,
    RET_MATCH_PLAY_NOT_OPEN = 6203,
    RET_CROSS_STATE_ERROR = 6204,
    RET_MATCH_VERSION_NOT_EQUAL = 6205,
    RET_MATCH_PLAYER_NOT_IN_LOBBY_ROOM = 6206,
    RET_LOBBY_STATE_NOT_MATCH = 6207,
    RET_LOBBY_ROOM_NOT_EXIST = 6208,
    RET_LOBBY_ROOM_PALYER_FULL = 6209,
    RET_LOBBY_ROOM_PALYER_NOT_READY = 6210,
    RET_LOBBY_ROOM_PALYER_FIGHTING = 6211,
    RET_FIGHT_ROOM_NOT_EXIST = 6250,
    RET_FIGHT_MATCH3_PLAYER_STATE_ERR = 6251,
    RET_FIGHT_MATCH3_ROOM_STATE_ERR = 6252,
    RET_CROSS_STATE_TIME_OUT = 6253,
    RET_LOBBY_START_FIGHT_DISABLE = 6254,
    RET_LOBBY_START_FIGHT_PLAYER_LACK = 6255,
    RET_MATCH_CLIENT_DATA_VERSION_LOW = 6256,
    RET_LOBBY_START_MATCH_DISABLE = 6257,
    RET_LOBBY_INTERACT_IN_CD = 6258,
    RET_LOBBY_OWNER_STATE_ERR = 6259,
    RET_LOBBY_OP_TOO_FAST = 6260,
    RET_FIGHT_MATCH3_SOLO_PLAYER_TURN_ERR = 6261,
    RET_SWORD_TRAINING_NO_ACTIVE_GAME = 6301,
    RET_SWORD_TRAINING_NO_PENDING_ACTION_MATCH = 6302,
    RET_SWORD_TRAINING_PARTNER_ABILITY_INVALID = 6303,
    RET_SWORD_TRAINING_SKILL_ALREADY_LEARNED = 6304,
    RET_SWORD_TRAINING_CONDITION_NOT_MEET = 6305,
    RET_SWORD_TRAINING_PARENT_SKILL_NOT_LEARNED = 6306,
    RET_SWORD_TRAINING_SKILL_TYPE_NOT_UNLOCK = 6307,
    RET_SWORD_TRAINING_GAME_ALREADY_EXIST = 6308,
    RET_SWORD_TRAINING_ENDING_HINT_NOT_MATCH = 6309,
    RET_SWORD_TRAINING_STORYLINE_CONFIG_NOT_FOUND = 6310,
    RET_SWORD_TRAINING_STORY_CONFIG_NOT_FOUND = 6311,
    RET_SWORD_TRAINING_UNLOCK_NOT_FINISH = 6312,
    RET_SWORD_TRAINING_OPTION_MISMATCH = 6313,
    RET_SWORD_TRAINING_RESTORE_WITHOUT_EXAM_FAILED = 6314,
    RET_SWORD_TRAINING_NO_RESTORE_GAME_AVAILABLE = 6315,
    RET_SWORD_TRAINING_ENDING_STORY_NOT_MATCH = 6316,
    RET_SWORD_TRAINING_ENDING_NOT_FINISH = 6317,
    RET_SWORD_TRAINING_ENDING_REWARD_TAKEN = 6318,
    RET_SWORD_TRAINING_COMBAT_RANK_NOT_CHANGE = 6319,
    RET_SWORD_TRAINING_DIRECT_BATTLE_DISABLE = 6320,
    RET_FIGHT_FEST_PHASE_NOT_MATCH = 6351,
    RET_FIGHT_FEST_SCORE_RACE_ALREADY_FINISH = 6352,
    RET_FIGHT_FEST_CHALLENGE_LOCKED = 6353,
    RET_FIGHT_FEST_COACH_SKILL_LOCKED = 6354,
    RET_FIGHT_FEST_COACH_SKILL_EQUIP_TYPE_EXISTED = 6355,
    RET_FIGHT_FEST_SCORE_RACE_MISSION_DOIND = 6356,
    RET_FIGHT_FEST_COACH_SKILL_NO_EQUIP = 6357,
    RET_PET_NOT_EXIST = 6401,
    RET_PET_ALREADY_SUMMONED = 6402,
    RET_PET_NOT_SUMMONED = 6403,
    RET_MUSIC_RHYTHM_LEVEL_TIME_TOO_SHORT = 6451,
    RET_MUSIC_RHYTHM_NOT_IN_LEVEL = 6452,
    RET_MUSIC_RHYTHM_PRE_DIFFICULTY_NOT_PASS = 6453,
    RET_MUSIC_RHYTHM_SONG_LIMITED = 6454,
    RET_MUSIC_RHYTHM_SONG_LOCKED = 6455,
    RET_MUSIC_RHYTHM_TRACK_LOCKED = 6456,
    RET_MUSIC_RHYTHM_LEVEL_NOT_UNLOCK = 6457,
    RET_MUSIC_RHYTHM_SONG_SFX_LOCKED = 6458,
    RET_TRAIN_PARTY_COIN_NOT_ENOUGH = 6501,
    RET_TRAIN_PARTY_DIY_TAG_NOT_MATCH = 6502,
    RET_TRAIN_PARTY_USE_CARD_MOBILITY_NOT_ENOUGH = 6503,
    RET_TRAIN_PARTY_AREA_UNLOCK_COIN_NOT_ENOUGH = 6504,
    RET_TAROT_BOOK_ENERGY_NOT_ENOUGH = 6601,
    RET_TAROT_BOOK_PACK_NOT_AVAILABLE = 6602,
    RET_TAROT_BOOK_STORY_ALREADY_UNLOCK = 6603,
    RET_TAROT_BOOK_CARD_NOT_ENOUGH = 6604,
    RET_TAROT_BOOK_CLUE_NOT_ENOUGH = 6605,
    RET_TAROT_BOOK_UNLOCK_STORY_CARD_NOT_SAME = 6606,
    RET_TAROT_BOOK_STORY_NOT_UNLOCK = 6607,
    RET_TAROT_BOOK_STORY_ALREADY_FINISH = 6608,
    RET_TAROT_BOOK_INTERACTION_ALREADY_FINISH = 6609,
    RET_CHIMERA_CHIMERA_NOT_UNLOCK = 6621,
    RET_CHIMERA_CHIMERA_DUPLICATED = 6622,
    RET_CHIMERA_CHIMERA_TYPE_ERROR = 6623,
    RET_CHIMERA_WORK_MISMATCH_ROUND = 6624,
    RET_CHIMERA_WORK_ROUND_OPTION_NOT_MEET = 6625,
    RET_CHIMERA_ENDLESS_NOT_UNLOCK = 6626,
    RET_CHIMERA_IN_ENDLESS = 6627,
    RET_CHIMERA_NOT_IN_ENDLESS = 6628,
    RET_CHIMERA_CHIMERA_FALL_IN_ENDLESS = 6629,
    RET_PLANET_FES_AVATAR_NOT_EXIST = 6641,
    RET_PLANET_FES_LAND_NOT_EXIST = 6642,
    RET_PLANET_FES_ITEM_NOT_ENOUGH = 6643,
    RET_PLANET_FES_LAND_ALREADY_UNLOCK = 6644,
    RET_PLANET_FES_WORK_AVATAR_REPEAT = 6645,
    RET_PLANET_FES_WORK_AVATAR_TYPE_NOT_MATCH = 6646,
    RET_PLANET_FES_ACTIVITY_NOT_OPEN = 6647,
    RET_PLANET_FES_SKILLTREE_PHASE_NOT_UNLOCK = 6648,
    RET_PLANET_FES_SKILL_NOT_UNLOCK = 6649,
    RET_PLANET_FES_CONFIG_ERROR = 6650,
    RET_PLANET_FES_NOT_IN_BUSINESS_DAY = 6651,
    RET_PLANET_FES_EVENT_LOCKED = 6652,
    RET_PLANET_FES_EVENT_FINISHED = 6653,
    RET_PLANET_FES_EVENT_IN_CD = 6654,
    RET_PLANET_FES_EVENT_ALREADY_IN_STATE = 6655,
    RET_PLANET_FES_EVENT_NO_WORK_AVATAR = 6656,
    RET_PLANET_FES_EVENT_PROCESSING_CANNOT_DISAPPEAR = 6657,
    RET_PLANET_FES_EVENT_OPTION_PHASE_WRONG = 6658,
    RET_PLANET_FES_FUNCTION_NOT_UNLOCK = 6659,
    RET_PLANET_FES_REWARD_ALREADY_TAKEN = 6660,
    RET_PLANET_FES_EVENT_GAME_NOT_ACTIVE = 6661,
    RET_PLANET_FES_REGION_PROGRESS_NOT_ENOUGH = 6662,
    RET_PLANET_FES_FRIEND_ITEM_NOT_ENOUGH = 6663,
    RET_PLANET_FES_PIECE_PERMISSION_BAN = 6664,
    RET_PLANET_FES_PIECE_OFFER_NOT_EXIST = 6665,
    RET_PLANET_FES_PIECE_APPLY_IN_STACK_TOO_MUCH = 6666,
    RET_PLANET_FES_PIECE_APPLY_NOT_EXIST = 6667,
    RET_PLANET_FES_GET_FRIEND_RANKING_LIST_IN_CD = 6668,
    RET_PLANET_FES_GIVE_PIECE_OWNED_BY_TARGET = 6669,
    RET_PLANET_FES_LEVEL_MAX = 6670,
    RET_PLANET_FES_EXCLUSIVE_EVENT = 6671,
    RET_MARBLE_SEAL_ALREADY_UNLOCKED = 6701,
    RET_MARBLE_SEAL_SHOP_ITEM_NOT_ENOUGH = 6702,
    RET_MARBLE_SEAL_LOCKED = 6703,
    RET_FATE_STATUS_NOT_MATCH = 6771,
    RET_FATE_BUFF_SLOT_NOT_ENOUGH = 6772,
    RET_FATE_COIN_NOT_ENOUGH = 6773,
    RET_FATE_REIJU_REROLL_COUNT_NOT_ENOUGH = 6774,
    RET_FATE_BUFF_LEVEL_MAX = 6775,
    RET_FATE_ACTION_QUEUE_NOT_EMPTY = 6776,
    RET_PARKOUR_ACTIVITY_NOT_OPEN = 6801,
    RET_PARKOUR_LEVEL_NOT_UNLOCK = 6802,
    RET_PARKOUR_RAIL_BALL_NOT_ALLOWED = 6803,
    RET_PARKOUR_NOT_IN_LEVEL = 6804,
    RET_PARKOUR_LEVEL_NOT_MATCH = 6805,
    RET_PARKOUR_NOT_PLAYED_ALL_NON_STORY_LEVEL = 6806,
    RET_FTC_LIMIT_NAME_CHANGE = 6830,
    RET_ELF_RESTAURANT_CONFIG_ERROR = 6841,
    RET_ELF_RESTAURANT_FIELD_ALREADY_BOUGHT = 6842,
    RET_ELF_RESTAURANT_FIELD_NOT_BOUGHT = 6843,
    RET_ELF_RESTAURANT_FIELD_CELL_INVALID = 6844,
    RET_ELF_RESTAURANT_FARM_TYPE_INVALID = 6845,
    RET_ELF_RESTAURANT_SHOP_ITEM_NOT_EXIST = 6846,
    RET_ELF_RESTAURANT_SHOP_ITEM_COUNT_LIMIT = 6847,
    RET_ELF_RESTAURANT_TRADE_ORDER_NOT_EXIST = 6848,
    RET_ELF_RESTAURANT_NO_REWARD = 6849,
    RET_ELF_RESTAURANT_NOT_INIT = 6850,
    RET_GRID_FIGHT_CONF_MISS = 6900,
    _,
};

pub const CmdActivityType = enum(i32) {
    CmdActivityTypeNone = 0,
    CmdAvatarDeliverRewardChooseAvatarScRsp = 2617,
    CmdAvatarDeliverRewardTakeRewardScRsp = 2699,
    CmdLeaveTrialActivityCsReq = 2623,
    CmdGetAvatarDeliverRewardActivityDataScRsp = 2649,
    CmdEnterTrialActivityStageCsReq = 2603,
    CmdTakeLoginActivityRewardCsReq = 2698,
    CmdGetTrialActivityDataCsReq = 2658,
    CmdGetLoginActivityCsReq = 2610,
    CmdTakeTrialActivityRewardCsReq = 2604,
    CmdGetAvatarDeliverRewardActivityDataCsReq = 2618,
    CmdTakeTrialActivityRewardScRsp = 2686,
    CmdAvatarDeliverRewardChooseAvatarCsReq = 2696,
    CmdTakeLoginActivityRewardScRsp = 2653,
    CmdAvatarDeliverRewardTakeRewardCsReq = 2622,
    CmdGetLoginActivityScRsp = 2605,
    CmdGetActivityScheduleConfigScRsp = 2602,
    CmdTrialActivityDataChangeScNotify = 2683,
    CmdSubmitMaterialSubmitActivityMaterialScRsp = 2678,
    CmdGetMaterialSubmitActivityDataScRsp = 2694,
    CmdLeaveTrialActivityScRsp = 2614,
    CmdTakeMaterialSubmitActivityRewardScRsp = 2690,
    CmdCurTrialActivityScNotify = 2695,
    CmdSubmitMaterialSubmitActivityMaterialCsReq = 2636,
    CmdEnterTrialActivityStageScRsp = 2657,
    CmdStartTrialActivityCsReq = 2612,
    CmdTakeMaterialSubmitActivityRewardCsReq = 2674,
    CmdStartTrialActivityScRsp = 2664,
    CmdGetActivityScheduleConfigCsReq = 2679,
    CmdGetTrialActivityDataScRsp = 2682,
    CmdGetMaterialSubmitActivityDataCsReq = 2672,
    _,
};

pub const TrialActivityStatus = enum(i32) {
    TRIAL_ACTIVITY_STATUS_NONE = 0,
    TRIAL_ACTIVITY_STATUS_FINISH = 1,
    _,
};

pub const CmdAdventureType = enum(i32) {
    CmdAdventureTypeNone = 0,
    CmdQuickStartCocoonStageCsReq = 1379,
    CmdEnterAdventureCsReq = 1310,
    CmdEnterAdventureScRsp = 1305,
    CmdFarmElementSweepCsReq = 1307,
    CmdQuickStartFarmElementCsReq = 1397,
    CmdGetFarmStageGachaInfoCsReq = 1398,
    CmdQuickStartCocoonStageScRsp = 1302,
    CmdFarmElementSweepScRsp = 1339,
    CmdQuickStartFarmElementScRsp = 1306,
    CmdGetFarmStageGachaInfoScRsp = 1353,
    CmdCocoonSweepCsReq = 1341,
    CmdCocoonSweepScRsp = 1355,
    _,
};

pub const CmdAetherDivideType = enum(i32) {
    CmdAetherDivideTypeNone = 0,
    CmdGetAetherDivideInfoCsReq = 4843,
    CmdEquipAetherDividePassiveSkillScRsp = 4805,
    CmdSwitchAetherDivideLineUpSlotScRsp = 4848,
    CmdSetAetherDivideLineUpScRsp = 4832,
    CmdAetherDivideFinishChallengeScNotify = 4815,
    CmdStartAetherDivideStageBattleCsReq = 4820,
    CmdClearAetherDividePassiveSkillScRsp = 4850,
    CmdStartAetherDivideChallengeBattleScRsp = 4827,
    CmdAetherDivideRefreshEndlessScNotify = 4836,
    CmdSetAetherDivideLineUpCsReq = 4813,
    CmdSwitchAetherDivideLineUpSlotCsReq = 4837,
    CmdGetAetherDivideInfoScRsp = 4818,
    CmdAetherDivideLineupScNotify = 4824,
    CmdGetAetherDivideChallengeInfoScRsp = 4803,
    CmdAetherDivideRefreshEndlessCsReq = 4826,
    CmdAetherDivideSpiritInfoScNotify = 4812,
    CmdAetherDivideRefreshEndlessScRsp = 4811,
    CmdLeaveAetherDivideSceneScRsp = 4830,
    CmdEnterAetherDivideSceneScRsp = 4821,
    CmdStartAetherDivideSceneBattleCsReq = 4802,
    CmdClearAetherDividePassiveSkillCsReq = 4806,
    CmdAetherDivideSkillItemScNotify = 4849,
    CmdGetAetherDivideChallengeInfoCsReq = 4808,
    CmdAetherDivideTakeChallengeRewardScRsp = 4838,
    CmdStartAetherDivideChallengeBattleCsReq = 4828,
    CmdAetherDivideTakeChallengeRewardCsReq = 4819,
    CmdStartAetherDivideStageBattleScRsp = 4809,
    CmdAetherDivideSpiritExpUpCsReq = 4840,
    CmdEnterAetherDivideSceneCsReq = 4823,
    CmdAetherDivideTainerInfoScNotify = 4814,
    CmdAetherDivideSpiritExpUpScRsp = 4807,
    CmdEquipAetherDividePassiveSkillCsReq = 4829,
    CmdStartAetherDivideSceneBattleScRsp = 4801,
    CmdLeaveAetherDivideSceneCsReq = 4846,
    _,
};

pub const CmdAlleyType = enum(i32) {
    CmdAlleyTypeNone = 0,
    CmdRefreshAlleyOrderCsReq = 4772,
    CmdAlleyFundsScNotify = 4754,
    CmdLogisticsGameCsReq = 4798,
    CmdStartAlleyEventScRsp = 4706,
    CmdLogisticsInfoScNotify = 4792,
    CmdLogisticsGameScRsp = 4753,
    CmdActivityRaidPlacingGameScRsp = 4728,
    CmdGetAlleyInfoCsReq = 4710,
    CmdAlleyGuaranteedFundsCsReq = 4751,
    CmdStartAlleyEventCsReq = 4797,
    CmdAlleyEventChangeNotify = 4741,
    CmdAlleyShipUnlockScNotify = 4709,
    CmdLogisticsDetonateStarSkiffScRsp = 4715,
    CmdAlleyTakeEventRewardScRsp = 4737,
    CmdSaveLogisticsScRsp = 4769,
    CmdGetAlleyInfoScRsp = 4705,
    CmdPrestigeLevelUpCsReq = 4774,
    CmdGetSaveLogisticsMapCsReq = 4773,
    CmdGetSaveLogisticsMapScRsp = 4742,
    CmdAlleyShopLevelScNotify = 4762,
    CmdLogisticsScoreRewardSyncInfoScNotify = 4760,
    CmdAlleyShipmentEventEffectsScNotify = 4724,
    CmdAlleyTakeEventRewardCsReq = 4735,
    CmdAlleyGuaranteedFundsScRsp = 4725,
    CmdAlleyPlacingGameCsReq = 4716,
    CmdRefreshAlleyOrderScRsp = 4794,
    CmdActivityRaidPlacingGameCsReq = 4766,
    CmdPrestigeLevelUpScRsp = 4790,
    CmdLogisticsDetonateStarSkiffCsReq = 4788,
    CmdAlleyEventEffectNotify = 4755,
    CmdTakePrestigeRewardScRsp = 4739,
    CmdAlleyPlacingGameScRsp = 4726,
    CmdSaveLogisticsCsReq = 4720,
    CmdAlleyShipUsedCountScNotify = 4701,
    CmdAlleyOrderChangedScNotify = 4736,
    CmdTakePrestigeRewardCsReq = 4707,
    _,
};

pub const GBPHKKMOLMF = enum(i32) {
    LEFT = 0,
    RIGHT = 1,
    UP = 2,
    DOWN = 3,
    LEFT_UP = 4,
    LEFT_DOWN = 5,
    RIGHT_UP = 6,
    RIGHT_DOWN = 7,
    _,
};

pub const AlleyEventType = enum(i32) {
    ALLEY_EVENT_TYPE_NONE = 0,
    ALLEY_MAIN_EVENT = 1,
    ALLEY_CRITICAL_EVENT = 2,
    ALLEY_DAILY_EVENT = 3,
    _,
};

pub const AlleyEventState = enum(i32) {
    ALLEY_STATE_NONE = 0,
    ALLEY_EVENT_DOING = 1,
    ALLEY_EVENT_FINISH = 2,
    ALLEY_EVENT_REWARDED = 3,
    _,
};

pub const CmdArchiveType = enum(i32) {
    CmdArchiveTypeNone = 0,
    CmdGetArchiveDataCsReq = 2310,
    CmdGetUpdatedArchiveDataScRsp = 2353,
    CmdGetUpdatedArchiveDataCsReq = 2398,
    CmdGetArchiveDataScRsp = 2305,
    _,
};

pub const CmdAvatarType = enum(i32) {
    CmdAvatarTypeNone = 0,
    CmdDressAvatarScRsp = 355,
    CmdDressRelicAvatarScRsp = 372,
    CmdGetAvatarDataScRsp = 305,
    CmdTakeOffRelicCsReq = 394,
    CmdGetPreAvatarActivityListCsReq = 360,
    CmdTakePromotionRewardScRsp = 374,
    CmdTakeOffRelicScRsp = 336,
    CmdGetPreAvatarGrowthInfoScRsp = 325,
    CmdSetGrowthTargetAvatarCsReq = 373,
    CmdMarkAvatarCsReq = 369,
    CmdAddAvatarScNotify = 316,
    CmdSetAvatarEnhancedIdScRsp = 315,
    CmdDressRelicAvatarCsReq = 367,
    CmdAddMultiPathAvatarScNotify = 324,
    CmdDressAvatarSkinCsReq = 390,
    CmdGetPreAvatarActivityListScRsp = 366,
    CmdUnlockSkilltreeCsReq = 379,
    CmdGetPreAvatarGrowthInfoCsReq = 351,
    CmdPromoteAvatarCsReq = 397,
    CmdAvatarExpUpCsReq = 398,
    CmdRankUpAvatarCsReq = 326,
    CmdAvatarExpUpScRsp = 353,
    CmdTakeOffAvatarSkinCsReq = 362,
    CmdGetAvatarDataCsReq = 310,
    CmdSetGrowthTargetAvatarScRsp = 342,
    CmdGrowthTargetAvatarChangedScNotify = 301,
    CmdTakePromotionRewardCsReq = 378,
    CmdTakeOffEquipmentCsReq = 307,
    CmdUnlockSkilltreeScRsp = 302,
    CmdDressAvatarSkinScRsp = 354,
    CmdTakeOffAvatarSkinScRsp = 309,
    CmdDressAvatarCsReq = 341,
    CmdMarkAvatarScRsp = 392,
    CmdSetAvatarEnhancedIdCsReq = 388,
    CmdRankUpAvatarScRsp = 363,
    CmdPromoteAvatarScRsp = 306,
    CmdUnlockAvatarSkinScNotify = 320,
    CmdTakeOffEquipmentScRsp = 339,
    _,
};

pub const GrowthTartgetFuncType = enum(i32) {
    GROWTH_TARGET_FUNCTION_TYPE_INCLUDE_ALL_SKILLTREE = 0,
    _,
};

pub const AddAvatarSrcState = enum(i32) {
    ADD_AVATAR_SRC_NONE = 0,
    ADD_AVATAR_SRC_GACHA = 1,
    ADD_AVATAR_SRC_ROGUE = 2,
    ADD_AVATAR_SRC_DELIVERY = 3,
    _,
};

pub const GrowthTargetState = enum(i32) {
    GROWTH_TARGET_AVATAR_NONE = 0,
    GROWTH_TARGET_AVATAR_PRE = 1,
    GROWTH_TARGET_AVATAR_UP = 2,
    GROWTH_TARGET_AVATAR_LOCK = 3,
    GROWTH_TARGET_AVATAR_UNLOCK = 4,
    GROWTH_TARGET_AVATAR_LOCK_AND_UP = 5,
    _,
};

pub const CmdBattleType = enum(i32) {
    CmdBattleTypeNone = 0,
    CmdRebattleByClientCsNotify = 126,
    CmdSyncClientResVersionCsReq = 197,
    CmdServerSimulateBattleFinishScNotify = 139,
    CmdQuitBattleScRsp = 153,
    CmdGetCurBattleInfoCsReq = 179,
    CmdPVEBattleResultCsReq = 110,
    CmdBattleLogReportScRsp = 107,
    CmdGetCurBattleInfoScRsp = 102,
    CmdQuitBattleCsReq = 198,
    CmdReBattleAfterBattleLoseCsNotify = 116,
    CmdSyncClientResVersionScRsp = 106,
    CmdPVEBattleResultScRsp = 105,
    CmdBattleLogReportCsReq = 155,
    CmdQuitBattleScNotify = 141,
    _,
};

pub const CmdBattleCollegeType = enum(i32) {
    CmdBattleCollegeTypeNone = 0,
    CmdGetBattleCollegeDataScRsp = 5705,
    CmdStartBattleCollegeCsReq = 5753,
    CmdBattleCollegeDataChangeScNotify = 5798,
    CmdGetBattleCollegeDataCsReq = 5710,
    CmdStartBattleCollegeScRsp = 5779,
    _,
};

pub const CmdBattlePassType = enum(i32) {
    CmdBattlePassTypeNone = 0,
    CmdTakeAllRewardScRsp = 3041,
    CmdBattlePassInfoNotify = 3010,
    CmdTakeBpRewardCsReq = 3053,
    CmdTakeAllRewardCsReq = 3006,
    CmdBuyBpLevelScRsp = 3097,
    CmdTakeBpRewardScRsp = 3079,
    CmdBuyBpLevelCsReq = 3002,
    _,
};

pub const BpTierType = enum(i32) {
    BP_TIER_TYPE_NONE = 0,
    BP_TIER_TYPE_FREE = 1,
    BP_TIER_TYPE_PREMIUM_1 = 2,
    BP_TIER_TYPE_PREMIUM_2 = 3,
    _,
};

pub const BpRewardType = enum(i32) {
    BP_REWARAD_TYPE_NONE = 0,
    BP_REWARAD_TYPE_FREE = 1,
    BP_REWARAD_TYPE_PREMIUM_1 = 2,
    BP_REWARAD_TYPE_PREMIUM_2 = 3,
    BP_REWARAD_TYPE_PREMIUM_OPTIONAL = 4,
    _,
};

pub const CmdBenefitActivityType = enum(i32) {
    CmdBenefitActivityTypeNone = 0,
    CmdGetBenefitActivityInfoCsReq = 4873,
    CmdJoinBenefitActivityCsReq = 4852,
    CmdTakeBenefitActivityRewardScRsp = 4880,
    CmdTakeBenefitActivityRewardCsReq = 4896,
    CmdJoinBenefitActivityScRsp = 4851,
    CmdGetBenefitActivityInfoScRsp = 4871,
    _,
};

pub const CmdBoxingClubType = enum(i32) {
    CmdBoxingClubTypeNone = 0,
    CmdSetBoxingClubResonanceLineupScRsp = 4226,
    CmdChooseBoxingClubStageOptionalBuffScRsp = 4267,
    CmdGetBoxingClubInfoScRsp = 4205,
    CmdChooseBoxingClubStageOptionalBuffCsReq = 4263,
    CmdStartBoxingClubBattleCsReq = 4279,
    CmdBoxingClubChallengeUpdateScNotify = 4255,
    CmdStartBoxingClubBattleScRsp = 4202,
    CmdGiveUpBoxingClubChallengeScRsp = 4206,
    CmdGiveUpBoxingClubChallengeCsReq = 4297,
    CmdBoxingClubRewardScNotify = 4241,
    CmdMatchBoxingClubOpponentScRsp = 4253,
    CmdMatchBoxingClubOpponentCsReq = 4298,
    CmdGetBoxingClubInfoCsReq = 4210,
    CmdChooseBoxingClubResonanceScRsp = 4239,
    CmdSetBoxingClubResonanceLineupCsReq = 4216,
    CmdChooseBoxingClubResonanceCsReq = 4207,
    _,
};

pub const CmdChallengeType = enum(i32) {
    CmdChallengeTypeNone = 0,
    CmdGetCurChallengeCsReq = 1755,
    CmdLeaveChallengeCsReq = 1779,
    CmdEnterChallengeNextPhaseCsReq = 1762,
    CmdGetChallengeCsReq = 1710,
    CmdStartChallengeCsReq = 1798,
    CmdTakeChallengeRewardScRsp = 1767,
    CmdStartChallengeScRsp = 1753,
    CmdRestartChallengePhaseScRsp = 1754,
    CmdGetChallengeGroupStatisticsCsReq = 1772,
    CmdChallengeBossPhaseSettleNotify = 1720,
    CmdChallengeLineupNotify = 1739,
    CmdGetChallengeScRsp = 1705,
    CmdStartPartialChallengeCsReq = 1736,
    CmdChallengeSettleNotify = 1797,
    CmdGetChallengeGroupStatisticsScRsp = 1794,
    CmdRestartChallengePhaseCsReq = 1790,
    CmdGetCurChallengeScRsp = 1707,
    CmdStartPartialChallengeScRsp = 1778,
    CmdTakeChallengeRewardCsReq = 1763,
    CmdEnterChallengeNextPhaseScRsp = 1709,
    CmdLeaveChallengeScRsp = 1702,
    _,
};

pub const ChallengeStatus = enum(i32) {
    CHALLENGE_UNKNOWN = 0,
    CHALLENGE_DOING = 1,
    CHALLENGE_FINISH = 2,
    CHALLENGE_FAILED = 3,
    _,
};

pub const CmdChatType = enum(i32) {
    CmdChatTypeNone = 0,
    CmdSendMsgScRsp = 3905,
    CmdMarkChatEmojiCsReq = 3907,
    CmdGetChatEmojiListCsReq = 3941,
    CmdGetChatFriendHistoryScRsp = 3906,
    CmdBatchMarkChatEmojiScRsp = 3926,
    CmdSendMsgCsReq = 3910,
    CmdGetChatFriendHistoryCsReq = 3997,
    CmdGetLoginChatInfoScRsp = 3967,
    CmdBatchMarkChatEmojiCsReq = 3916,
    CmdGetLoginChatInfoCsReq = 3963,
    CmdPrivateMsgOfflineUsersScNotify = 3953,
    CmdMarkChatEmojiScRsp = 3939,
    CmdGetChatEmojiListScRsp = 3955,
    CmdRevcMsgScNotify = 3998,
    CmdGetPrivateChatHistoryScRsp = 3902,
    CmdGetPrivateChatHistoryCsReq = 3979,
    _,
};

pub const CmdChessRogueType = enum(i32) {
    CmdChessRogueTypeNone = 0,
    CmdGetChessRogueBuffEnhanceInfoCsReq = 5528,
    CmdChessRoguePickAvatarScRsp = 5412,
    CmdChessRogueReRollDiceCsReq = 5550,
    CmdChessRogueEnterCellCsReq = 5471,
    CmdChessRogueRollDiceCsReq = 5445,
    CmdChessRogueGiveUpRollScRsp = 5527,
    CmdGetChessRogueStoryAeonTalkInfoScRsp = 5574,
    CmdFinishChessRogueSubStoryScRsp = 5573,
    CmdChessRogueUpdateBoardScNotify = 5588,
    CmdEnterChessRogueAeonRoomScRsp = 5461,
    CmdChessRogueGiveUpCsReq = 5437,
    CmdChessRogueNousEnableRogueTalentCsReq = 5587,
    CmdChessRogueEnterScRsp = 5598,
    CmdChessRogueLayerAccountInfoNotify = 5556,
    CmdChessRogueRollDiceScRsp = 5555,
    CmdChessRogueGiveUpScRsp = 5594,
    CmdSyncChessRogueNousValueScNotify = 5451,
    CmdChessRogueEnterNextLayerScRsp = 5566,
    CmdGetChessRogueStoryInfoScRsp = 5402,
    CmdChessRogueEnterNextLayerCsReq = 5457,
    CmdChessRoguePickAvatarCsReq = 5434,
    CmdChessRogueStartScRsp = 5521,
    CmdChessRogueUpdateDiceInfoScNotify = 5493,
    CmdChessRogueNousEnableRogueTalentScRsp = 5469,
    CmdChessRogueQuestFinishNotify = 5442,
    CmdChessRogueGiveUpRollCsReq = 5571,
    CmdEnterChessRogueAeonRoomCsReq = 5542,
    CmdChessRogueLeaveCsReq = 5567,
    CmdChessRogueNousEditDiceCsReq = 5488,
    CmdFinishChessRogueSubStoryCsReq = 5401,
    CmdGetChessRogueStoryAeonTalkInfoCsReq = 5467,
    CmdEnhanceChessRogueBuffScRsp = 5543,
    CmdChessRogueNousEditDiceScRsp = 5510,
    CmdGetChessRogueStoryInfoCsReq = 5472,
    CmdGetChessRogueNousStoryInfoCsReq = 5513,
    CmdChessRogueCellUpdateNotify = 5409,
    CmdChessRogueUpdateDicePassiveAccumulateValueScNotify = 5414,
    CmdEnhanceChessRogueBuffCsReq = 5595,
    CmdChessRogueStartCsReq = 5444,
    CmdChessRogueNousDiceSurfaceUnlockNotify = 5430,
    CmdSyncChessRogueMainStoryFinishScNotify = 5572,
    CmdChessRogueEnterCellScRsp = 5418,
    CmdChessRogueQueryAeonDimensionsScRsp = 5460,
    CmdChessRogueCheatRollScRsp = 5534,
    CmdChessRogueReviveAvatarCsReq = 5426,
    CmdGetChessRogueBuffEnhanceInfoScRsp = 5506,
    CmdSelectChessRogueSubStoryScRsp = 5490,
    CmdChessRogueConfirmRollCsReq = 5560,
    CmdChessRogueReRollDiceScRsp = 5435,
    CmdSelectChessRogueSubStoryCsReq = 5529,
    CmdChessRogueSkipTeachingLevelScRsp = 5508,
    CmdChessRogueQueryScRsp = 5564,
    CmdChessRogueQueryCsReq = 5484,
    CmdGetChessRogueNousStoryInfoScRsp = 5551,
    CmdChessRogueNousGetRogueTalentInfoCsReq = 5492,
    CmdChessRogueConfirmRollScRsp = 5575,
    CmdChessRogueLeaveScRsp = 5407,
    CmdChessRogueSelectCellCsReq = 5517,
    CmdChessRogueReviveAvatarScRsp = 5432,
    CmdSyncChessRogueNousSubStoryScNotify = 5511,
    CmdChessRogueChangeyAeonDimensionNotify = 5532,
    CmdChessRogueNousDiceUpdateNotify = 5584,
    CmdChessRogueEnterCsReq = 5403,
    CmdChessRogueUpdateAeonModifierValueScNotify = 5456,
    CmdChessRogueCheatRollCsReq = 5427,
    CmdChessRogueNousGetRogueTalentInfoScRsp = 5455,
    CmdChessRogueUpdateLevelBaseInfoScNotify = 5553,
    CmdChessRogueQuitScRsp = 5546,
    CmdChessRogueUpdateActionPointScNotify = 5422,
    CmdChessRogueSelectCellScRsp = 5569,
    CmdChessRogueUpdateUnlockLevelScNotify = 5489,
    CmdChessRogueSkipTeachingLevelCsReq = 5416,
    CmdChessRogueQueryAeonDimensionsCsReq = 5447,
    CmdChessRogueUpdateMoneyInfoScNotify = 5440,
    CmdSyncChessRogueNousMainStoryScNotify = 5448,
    CmdChessRogueUpdateReviveInfoScNotify = 5454,
    CmdChessRogueUpdateAllowedSelectCellScNotify = 5586,
    CmdChessRogueQuitCsReq = 5449,
    _,
};

pub const ChessRogueDiceStatus = enum(i32) {
    CHESS_ROGUE_DICE_IDLE = 0,
    CHESS_ROGUE_DICE_ROLLED = 1,
    CHESS_ROGUE_DICE_CONFIRMED = 2,
    CHESS_ROGUE_DICE_GIVEUP = 3,
    _,
};

pub const ChessRogueDiceType = enum(i32) {
    CHESS_ROGUE_DICE_FIXED = 0,
    CHESS_ROGUE_DICE_EDITABLE = 1,
    _,
};

pub const ChessRogueBoardCellStatus = enum(i32) {
    IDLE = 0,
    SELECTED = 1,
    PROCESSING = 2,
    FINISH = 3,
    _,
};

pub const ChessRogueCellSpecialType = enum(i32) {
    CHESS_ROGUE_CELL_SPECIAL_TYPE_NONE = 0,
    CHESS_ROGUE_CELL_SPECIAL_TYPE_LOCKED = 1,
    CHESS_ROGUE_CELL_SPECIAL_TYPE_REPLICATE = 2,
    CHESS_ROGUE_CELL_SPECIAL_TYPE_PROTECTED = 3,
    CHESS_ROGUE_CELL_SPECIAL_TYPE_SEED = 4,
    CHESS_ROGUE_CELL_SPECIAL_TYPE_STAMP = 5,
    _,
};

pub const ChessRogueLevelStatus = enum(i32) {
    CHESS_ROGUE_LEVEL_IDLE = 0,
    CHESS_ROGUE_LEVEL_PROCESSING = 1,
    CHESS_ROGUE_LEVEL_PENDING = 2,
    CHESS_ROGUE_LEVEL_FINISH = 3,
    CHESS_ROGUE_LEVEL_FAILED = 4,
    CHESS_ROGUE_LEVEL_FORCE_FINISH = 5,
    _,
};

pub const ChessRogueQuitReason = enum(i32) {
    CHESS_ROGUE_ACCOUNT_BY_NONE = 0,
    CHESS_ROGUE_ACCOUNT_BY_NORMAL_FINISH = 1,
    CHESS_ROGUE_ACCOUNT_BY_NORMAL_QUIT = 2,
    CHESS_ROGUE_ACCOUNT_BY_DIALOG = 3,
    CHESS_ROGUE_ACCOUNT_BY_FAILED = 4,
    CHESS_ROGUE_ACCOUNT_BY_CUSTOM_OP = 5,
    _,
};

pub const ChessRogueBuffSourceType = enum(i32) {
    CHESS_ROGUE_BUFF_SOURCE_TYPE_NONE = 0,
    CHESS_ROGUE_BUFF_SOURCE_TYPE_SELECT = 1,
    CHESS_ROGUE_BUFF_SOURCE_TYPE_ENHANCE = 2,
    CHESS_ROGUE_BUFF_SOURCE_TYPE_MIRACLE = 3,
    CHESS_ROGUE_BUFF_SOURCE_TYPE_DIALOGUE = 4,
    CHESS_ROGUE_BUFF_SOURCE_TYPE_BONUS = 5,
    CHESS_ROGUE_BUFF_SOURCE_TYPE_SHOP = 6,
    CHESS_ROGUE_BUFF_SOURCE_TYPE_DICE = 7,
    CHESS_ROGUE_BUFF_SOURCE_TYPE_AEON = 8,
    CHESS_ROGUE_BUFF_SOURCE_TYPE_MAZE_SKILL = 9,
    CHESS_ROGUE_BUFF_SOURCE_TYPE_LEVEL_MECHANISM = 10,
    _,
};

pub const ChessRogueMiracleSourceType = enum(i32) {
    CHESS_ROGUE_MIRACLE_SOURCE_TYPE_NONE = 0,
    CHESS_ROGUE_MIRACLE_SOURCE_TYPE_SELECT = 1,
    CHESS_ROGUE_MIRACLE_SOURCE_TYPE_DIALOGUE = 2,
    CHESS_ROGUE_MIRACLE_SOURCE_TYPE_BONUS = 3,
    CHESS_ROGUE_MIRACLE_SOURCE_TYPE_USE = 4,
    CHESS_ROGUE_MIRACLE_SOURCE_TYPE_RESET = 5,
    CHESS_ROGUE_MIRACLE_SOURCE_TYPE_REPLACE = 6,
    CHESS_ROGUE_MIRACLE_SOURCE_TYPE_TRADE = 7,
    CHESS_ROGUE_MIRACLE_SOURCE_TYPE_GET = 8,
    CHESS_ROGUE_MIRACLE_SOURCE_TYPE_SHOP = 9,
    CHESS_ROGUE_MIRACLE_SOURCE_TYPE_MAZE_SKILL = 10,
    CHESS_ROGUE_MIRACLE_SOURCE_TYPE_LEVEL_MECHANISM = 11,
    _,
};

pub const ChessRogueUpdateLevelStatus = enum(i32) {
    CHESS_ROGUE_UPDATE_LEVEL_STATUS_BY_NONE = 0,
    CHESS_ROGUE_UPDATE_LEVEL_STATUS_BY_DIALOG = 1,
    _,
};

pub const ChessRogueCellUpdateReason = enum(i32) {
    CHESS_ROGUE_CELL_UPDATE_REASON_NONE = 0,
    CHESS_ROGUE_CELL_UPDATE_REASON_MODIFIER = 1,
    _,
};

pub const ChessRogueAeonType = enum(i32) {
    CHESS_ROGUE_AEON_TYPE_NONE = 0,
    CHESS_ROGUE_AEON_TYPE_KNIGHT = 1,
    CHESS_ROGUE_AEON_TYPE_MEMORY = 2,
    CHESS_ROGUE_AEON_TYPE_WARLOCK = 3,
    CHESS_ROGUE_AEON_TYPE_PRIEST = 4,
    CHESS_ROGUE_AEON_TYPE_ROGUE = 5,
    CHESS_ROGUE_AEON_TYPE_WARRIOR = 6,
    CHESS_ROGUE_AEON_TYPE_HAPPY = 7,
    CHESS_ROGUE_AEON_TYPE_BREED = 8,
    _,
};

pub const ChessRogueDiceSourceType = enum(i32) {
    CHESS_ROGUE_DICE_SOURCE_TYPE_NONE = 0,
    CHESS_ROGUE_DICE_SOURCE_TYPE_NORMAL = 1,
    CHESS_ROGUE_DICE_SOURCE_TYPE_REPEAT = 2,
    CHESS_ROGUE_DICE_SOURCE_TYPE_CHEAT = 3,
    _,
};

pub const ChessRogueNousMainStoryStatus = enum(i32) {
    CHESS_ROGUE_NOUS_MAIN_STORY_STATUS_NONE = 0,
    CHESS_ROGUE_NOUS_MAIN_STORY_STATUS_UNLOCK = 1,
    CHESS_ROGUE_NOUS_MAIN_STORY_STATUS_FINISH = 2,
    CHESS_ROGUE_NOUS_MAIN_STORY_STATUS_CAN_TRIGGER = 3,
    _,
};

pub const ChessRogueNousDicePhase = enum(i32) {
    NONE = 0,
    PHASE_ONE = 1,
    PHASE_TWO = 2,
    _,
};

pub const CmdChimeraType = enum(i32) {
    CmdChimeraTypeNone = 0,
    CmdChimeraRoundWorkStartScRsp = 8169,
    CmdChimeraFinishEndlessRoundCsReq = 8170,
    CmdChimeraSetLineupScRsp = 8179,
    CmdChimeraFinishEndlessRoundScRsp = 8171,
    CmdChimeraStartEndlessScRsp = 8174,
    CmdChimeraFinishRoundCsReq = 8162,
    CmdChimeraRoundWorkStartCsReq = 8166,
    CmdChimeraSetLineupCsReq = 8177,
    CmdChimeraDoFinalRoundCsReq = 8164,
    CmdChimeraQuitEndlessScRsp = 8163,
    CmdChimeraGetDataScRsp = 8175,
    CmdChimeraStartEndlessCsReq = 8167,
    CmdChimeraDoFinalRoundScRsp = 8165,
    CmdChimeraGetDataCsReq = 8161,
    CmdChimeraQuitEndlessCsReq = 8180,
    CmdChimeraFinishRoundScRsp = 8172,
    _,
};

pub const OAPDMKKKEOL = enum(i32) {
    CHIMERA_LAST_PHASE_FINISH_NONE = 0,
    CHIMERA_LAST_PHASE_FINISH_NORMAL = 1,
    CHIMERA_LAST_PHASE_FINISH_SKIP = 2,
    CHIMERA_LAST_PHASE_FINISH_FORCE = 3,
    _,
};

pub const BIAKDFELJFM = enum(i32) {
    CHIMERA_ROUND_WORK_END_NONE = 0,
    CHIMERA_ROUND_WORK_END_SUCC = 1,
    CHIMERA_ROUND_WORK_END_FAIL = 2,
    CHIMERA_ROUND_WORK_END_LEAVE = 3,
    _,
};

pub const CmdClockParkType = enum(i32) {
    CmdClockParkTypeNone = 0,
    CmdClockParkFinishScriptScNotify = 7220,
    CmdClockParkUseBuffCsReq = 7237,
    CmdClockParkBattleEndScNotify = 7206,
    CmdClockParkHandleWaitOperationCsReq = 7243,
    CmdClockParkGetOngoingScriptInfoCsReq = 7242,
    CmdClockParkQuitScriptCsReq = 7213,
    CmdClockParkGetOngoingScriptInfoScRsp = 7204,
    CmdClockParkGetInfoScRsp = 7221,
    CmdClockParkQuitScriptScRsp = 7232,
    CmdClockParkUnlockTalentCsReq = 7202,
    CmdClockParkStartScriptCsReq = 7228,
    CmdClockParkUseBuffScRsp = 7248,
    CmdClockParkUnlockTalentScRsp = 7201,
    CmdClockParkHandleWaitOperationScRsp = 7218,
    CmdClockParkGetInfoCsReq = 7223,
    CmdClockParkStartScriptScRsp = 7227,
    _,
};

pub const ClockParkPlayStatus = enum(i32) {
    CLOCK_PARK_PLAY_NONE = 0,
    CLOCK_PARK_PLAY_NORMAL_DEATH = 1,
    CLOCK_PARK_PLAY_NORMAL_PASS = 2,
    CLOCK_PARK_PLAY_FINISH_SCRIPT = 5,
    _,
};

pub const MissionStatus = enum(i32) {
    MISSION_NONE = 0,
    MISSION_DOING = 1,
    MISSION_FINISH = 2,
    MISSION_PREPARED = 3,
    _,
};

pub const MessageSectionStatus = enum(i32) {
    MESSAGE_SECTION_NONE = 0,
    MESSAGE_SECTION_DOING = 1,
    MESSAGE_SECTION_FINISH = 2,
    MESSAGE_SECTION_FROZEN = 3,
    _,
};

pub const MessageGroupStatus = enum(i32) {
    MESSAGE_GROUP_NONE = 0,
    MESSAGE_GROUP_DOING = 1,
    MESSAGE_GROUP_FINISH = 2,
    MESSAGE_GROUP_FROZEN = 3,
    _,
};

pub const BattleRecordType = enum(i32) {
    BATTLE_RECORD_NONE = 0,
    BATTLE_RECORD_CHALLENGE = 1,
    BATTLE_RECORD_ROGUE = 2,
    _,
};

pub const RebattleType = enum(i32) {
    REBATTLE_TYPE_NONE = 0,
    REBATTLE_TYPE_REBATTLE_MIDWAY = 1,
    REBATTLE_TYPE_REBATTLE_LOSE = 2,
    REBATTLE_TYPE_REBATTLE_MIDWAY_LINEUP = 3,
    REBATTLE_TYPE_REBATTLE_LOSE_LINEUP = 4,
    REBATTLE_TYPE_QUIT_MIDWAY = 5,
    REBATTLE_TYPE_QUIT_LOSE = 6,
    _,
};

pub const ContentPackageStatus = enum(i32) {
    ContentPackageStatus_None = 0,
    ContentPackageStatus_Init = 1,
    ContentPackageStatus_Doing = 2,
    ContentPackageStatus_Finished = 3,
    ContentPackageStatus_Release = 4,
    _,
};

pub const CmdContentPackageType = enum(i32) {
    CmdContentPackageTypeNone = 0,
    CmdContentPackageSyncDataScNotify = 7546,
    CmdContentPackageUnlockCsReq = 7530,
    CmdContentPackageGetDataScRsp = 7521,
    CmdContentPackageUnlockScRsp = 7502,
    CmdContentPackageGetDataCsReq = 7523,
    CmdContentPackageTransferScNotify = 7501,
    _,
};

pub const CmdDailyActiveType = enum(i32) {
    CmdDailyActiveTypeNone = 0,
    CmdDailyActiveInfoNotify = 3379,
    CmdGetDailyActiveInfoCsReq = 3398,
    CmdGetDailyActiveInfoScRsp = 3353,
    CmdTakeApRewardScRsp = 3305,
    CmdTakeAllApRewardCsReq = 3302,
    CmdTakeAllApRewardScRsp = 3397,
    CmdTakeApRewardCsReq = 3310,
    _,
};

pub const CmdDebugType = enum(i32) {
    CmdDebugTypeNone = 0,
    CmdUpdateServerLogSettingsCsReq = 2496,
    CmdGetServerGraphDataCsReq = 2451,
    CmdGetServerLogSettingsCsReq = 2473,
    CmdGetServerGraphSimpleDataScRsp = 2492,
    CmdGetServerLogSettingsScRsp = 2471,
    CmdGetServerGraphDataScRsp = 2478,
    CmdUpdateServerLogSettingsScRsp = 2480,
    CmdServerLogScNotify = 2452,
    CmdGetServerGraphSimpleDataCsReq = 2477,
    _,
};

pub const ServerLogTag = enum(i32) {
    SERVER_LOG_TAG_DEFAULT = 0,
    SERVER_LOG_TAG_ROGUE = 1,
    SERVER_LOG_TAG_FATE = 2,
    SERVER_LOG_TAG_SCENE = 3,
    SERVER_LOG_TAG_BATTLE = 4,
    SERVER_LOG_TAG_CPP_GAMECORE = 5,
    SERVER_LOG_TAG_LEVEL_GRAPH = 6,
    SERVER_LOG_TAG_PLANET_FES = 7,
    SERVER_LOG_TAG_ELF_RESTAURANT = 8,
    SERVER_LOG_TAG_AVATAR = 9,
    _,
};

pub const ServerLogLevel = enum(i32) {
    SERVER_LOG_LEVEL_NONE = 0,
    SERVER_LOG_LEVEL_DEBUG = 1,
    SERVER_LOG_LEVEL_INFO = 2,
    SERVER_LOG_LEVEL_WARN = 3,
    SERVER_LOG_LEVEL_ERROR = 4,
    _,
};

pub const OJIDJNDHDGA = enum(i32) {
    READY = 0,
    SUSPEND = 1,
    SUCC = 2,
    FAIL = 3,
    _,
};

pub const JEFKIJNIEIA = enum(i32) {
    GRAPH_STATE_UNKNOWN = 0,
    GRAPH_STATE_INIT = 1,
    GRAPH_STATE_START = 2,
    GRAPH_STATE_FINISH = 3,
    GRAPH_STATE_STOP = 4,
    GRAPH_STATE_NOT_EXIST = 5,
    _,
};

pub const CmdDrinkMakerType = enum(i32) {
    CmdDrinkMakerTypeNone = 0,
    CmdDrinkMakerCheersGetDataCsReq = 6984,
    CmdDrinkMakerChallengeCsReq = 6991,
    CmdDrinkMakerCheersGetDataScRsp = 6985,
    CmdMakeDrinkScRsp = 6999,
    CmdGetDrinkMakerDataScRsp = 6995,
    CmdDrinkMakerChallengeScRsp = 7000,
    CmdDrinkMakerCheersEnterNextGroupCsReq = 6988,
    CmdDrinkMakerCheersMakeDrinkScRsp = 6989,
    CmdEndDrinkMakerSequenceScRsp = 6992,
    CmdMakeMissionDrinkCsReq = 6987,
    CmdDrinkMakerUpdateTipsNotify = 6983,
    CmdGetDrinkMakerDataCsReq = 6981,
    CmdDrinkMakerCheersEnterNextGroupScRsp = 6998,
    CmdDrinkMakerCheersMakeDrinkCsReq = 6986,
    CmdMakeMissionDrinkScRsp = 6994,
    CmdEndDrinkMakerSequenceCsReq = 6982,
    CmdMakeDrinkCsReq = 6997,
    CmdDrinkMakerDayEndScNotify = 6990,
    _,
};

pub const CmdElfRestaurantType = enum(i32) {
    CmdElfRestaurantTypeNone = 0,
    CmdElfRestaurantSetFarmManagerCsReq = 2579,
    CmdSettleElfRestaurantPlayCsReq = 2590,
    CmdElfRestaurantClientStatusScRsp = 2561,
    CmdElfRestaurantTakeVillagerRewardCsReq = 2564,
    CmdElfRestaurantUpgradeFacilityLevelScRsp = 2598,
    CmdElfRestaurantPlantSeedCsReq = 2592,
    CmdElfRestaurantUpgradeEmployeeLevelCsReq = 2556,
    CmdElfRestaurantBuyShopItemScRsp = 2558,
    CmdEnterElfRestaurantNextDayCsReq = 2596,
    CmdElfRestaurantUpgradeRecipeLevelCsReq = 2570,
    CmdElfRestaurantBuyFieldCsReq = 2578,
    CmdElfRestaurantUpgradeRecipeLevelScRsp = 2559,
    CmdElfRestaurantHarvestCropScRsp = 2568,
    CmdSettleElfRestaurantPlayScRsp = 2557,
    CmdElfRestaurantBuyFieldScRsp = 2577,
    CmdSetElfRestaurantPlayRecipeScRsp = 2574,
    CmdElfRestaurantClientStatusCsReq = 2576,
    CmdElfRestaurantBuyShopItemCsReq = 2562,
    CmdElfRestaurantHarvestCropCsReq = 2593,
    CmdElfRestaurantRecycleSeedScRsp = 2582,
    CmdElfRestaurantFinishTradeOrderScRsp = 2565,
    CmdElfRestaurantUpgradeFacilityLevelCsReq = 2587,
    CmdElfRestaurantFinishTradeOrderCsReq = 2553,
    CmdElfRestaurantRecycleSeedCsReq = 2563,
    CmdElfRestaurantUpgradeEmployeeLevelScRsp = 2600,
    CmdSetElfRestaurantPlayRecipeCsReq = 2597,
    CmdEnterElfRestaurantNextDayScRsp = 2580,
    CmdElfRestaurantTakeVillagerRewardScRsp = 2599,
    CmdGetElfRestaurantDataScRsp = 2571,
    CmdElfRestaurantDataChangeNotify = 2551,
    CmdElfRestaurantPlantSeedScRsp = 2554,
    CmdGetElfRestaurantDataCsReq = 2573,
    CmdElfRestaurantSetFarmManagerScRsp = 2555,
    _,
};

pub const CmdEraFlipperType = enum(i32) {
    CmdEraFlipperTypeNone = 0,
    CmdGetEraFlipperDataScRsp = 6551,
    CmdEraFlipperDataChangeScNotify = 6560,
    CmdEnterEraFlipperRegionScRsp = 6565,
    CmdEnterEraFlipperRegionCsReq = 6554,
    CmdChangeEraFlipperDataScRsp = 6557,
    CmdResetEraFlipperDataScRsp = 6574,
    CmdResetEraFlipperDataCsReq = 6562,
    CmdGetEraFlipperDataCsReq = 6556,
    CmdChangeEraFlipperDataCsReq = 6552,
    _,
};

pub const CmdEvolveBuild = enum(i32) {
    CmdEvolveBuildNone = 0,
    CmdEvolveBuildShopAbilityDownScRsp = 7137,
    CmdEvolveBuildLeaveCsReq = 7142,
    CmdEvolveBuildSkipTeachLevelScRsp = 7103,
    CmdEvolveBuildStartStageCsReq = 7102,
    CmdEvolveBuildStartLevelCsReq = 7146,
    CmdEvolveBuildShopAbilityResetCsReq = 7109,
    CmdEvolveBuildFinishScNotify = 7143,
    CmdEvolveBuildReRandomStageScRsp = 7113,
    CmdEvolveBuildGiveupScRsp = 7127,
    CmdEvolveBuildGiveupCsReq = 7128,
    CmdEvolveBuildQueryInfoScRsp = 7121,
    CmdEvolveBuildQueryInfoCsReq = 7123,
    CmdEvolveBuildSkipTeachLevelCsReq = 7108,
    CmdEvolveBuildStartStageScRsp = 7101,
    CmdEvolveBuildReRandomStageCsReq = 7118,
    CmdEvolveBuildShopAbilityUpCsReq = 7105,
    CmdEvolveBuildStartLevelScRsp = 7130,
    CmdEvolveBuildShopAbilityResetScRsp = 7140,
    CmdEvolveBuildLeaveScRsp = 7104,
    CmdEvolveBuildCoinNotify = 7107,
    CmdEvolveBuildShopAbilityDownCsReq = 7150,
    CmdEvolveBuildShopAbilityUpScRsp = 7106,
    _,
};

pub const OIJLBLOOHJG = enum(i32) {
    EVOLVE_PERIOD_NONE = 0,
    EVOLVE_PERIOD_FIRST = 1,
    EVOLVE_PERIOD_SECOND = 2,
    EVOLVE_PERIOD_THIRD = 3,
    EVOLVE_PERIOD_EXTRA = 4,
    _,
};

pub const DLHCMCNIHII = enum(i32) {
    EVOLVE_BATTLE_RESULT_NONE = 0,
    EVOLVE_BATTLE_RESULT_WIN = 1,
    EVOLVE_BATTLE_RESULT_ALL_AVATAR_DEAD = 2,
    EVOLVE_BATTLE_RESULT_NO_DEAD_LINE = 3,
    EVOLVE_BATTLE_RESULT_QUIT = 4,
    _,
};

pub const KLNIPNJCNMJ = enum(i32) {
    EVOLVE_BUILD_SEASON_NONE = 0,
    EVOLVE_BUILD_EARLY_ACCESS = 1,
    EVOLVE_BUILD_SECOND_CHAPTER = 2,
    _,
};

pub const CmdExpeditionType = enum(i32) {
    CmdExpeditionTypeNone = 0,
    CmdTakeMultipleActivityExpeditionRewardScRsp = 2520,
    CmdAcceptActivityExpeditionCsReq = 2504,
    CmdAcceptExpeditionScRsp = 2530,
    CmdAcceptMultipleExpeditionCsReq = 2505,
    CmdGetExpeditionDataCsReq = 2523,
    CmdAcceptMultipleExpeditionScRsp = 2506,
    CmdCancelActivityExpeditionScRsp = 2513,
    CmdCancelExpeditionCsReq = 2502,
    CmdCancelExpeditionScRsp = 2501,
    CmdAcceptActivityExpeditionScRsp = 2543,
    CmdTakeExpeditionRewardScRsp = 2527,
    CmdGetExpeditionDataScRsp = 2521,
    CmdTakeMultipleActivityExpeditionRewardCsReq = 2548,
    CmdTakeMultipleExpeditionRewardCsReq = 2550,
    CmdAcceptExpeditionCsReq = 2546,
    CmdTakeExpeditionRewardCsReq = 2528,
    CmdTakeMultipleExpeditionRewardScRsp = 2537,
    CmdCancelActivityExpeditionCsReq = 2518,
    CmdExpeditionDataChangeScNotify = 2542,
    CmdTakeActivityExpeditionRewardCsReq = 2532,
    CmdTakeActivityExpeditionRewardScRsp = 2529,
    _,
};

pub const CmdFantasticStoryActivityType = enum(i32) {
    CmdFantasticStoryActivityTypeNone = 0,
    CmdFinishChapterScNotify = 4998,
    CmdGetFantasticStoryActivityDataCsReq = 4910,
    CmdEnterFantasticStoryActivityStageCsReq = 4953,
    CmdGetFantasticStoryActivityDataScRsp = 4905,
    CmdFantasticStoryActivityBattleEndScNotify = 4902,
    CmdEnterFantasticStoryActivityStageScRsp = 4979,
    _,
};

pub const CmdFateType = enum(i32) {
    CmdFateTypeNone = 0,
    CmdFateShopLeaveCsReq = 5956,
    CmdFateBattleStartScRsp = 5951,
    CmdFateBattleStartCsReq = 5952,
    CmdFateChangeLineupScRsp = 5977,
    CmdFateShopRefreshGoodsCsReq = 5963,
    CmdFateQueryCsReq = 5973,
    CmdFateShopLockGoodsCsReq = 5979,
    CmdFateSettleScRsp = 5957,
    CmdFateStartCsReq = 5996,
    CmdFateShopSellBuffScRsp = 5968,
    CmdFateShopLockGoodsScRsp = 5955,
    CmdFateShopRefreshGoodsScRsp = 5982,
    CmdFateTakeExpRewardCsReq = 5958,
    CmdFateShopBuyGoodsScRsp = 5954,
    CmdFateShopLeaveScRsp = 6000,
    CmdFateChangeLineupCsReq = 5978,
    CmdFateDebugAutoPlayCsReq = 5965,
    CmdFateSettleCsReq = 5990,
    CmdFateHandlePendingActionCsReq = 5987,
    CmdFateStartScRsp = 5980,
    CmdFateHandlePendingActionScRsp = 5998,
    CmdFateSettleScNotify = 5962,
    CmdFateShopBuyGoodsCsReq = 5992,
    CmdFateQueryScRsp = 5971,
    CmdFateSyncPendingActionScNotify = 5959,
    CmdFateShopSellBuffCsReq = 5993,
    CmdFateTakeExpRewardScRsp = 5953,
    CmdFateSyncActionResultScNotify = 5970,
    CmdFateDebugAutoPlayFinishScNotify = 5999,
    CmdFateDebugAutoPlayScRsp = 5964,
    _,
};

pub const GHHDMEMLKPO = enum(i32) {
    FATE_LEVEL_STATUS_TYPE_NONE = 0,
    FATE_LEVEL_STATUS_TYPE_ROUND_PREPARE = 1,
    FATE_LEVEL_STATUS_TYPE_ROUND_HOUGU = 2,
    FATE_LEVEL_STATUS_TYPE_ROUND_REIJU = 3,
    FATE_LEVEL_STATUS_TYPE_ROUND_SHOP = 4,
    FATE_LEVEL_STATUS_TYPE_SERVER_INTERNAL_COIN_EFFECT_SETTLE = 5,
    FATE_LEVEL_STATUS_TYPE_SERVER_INTERNAL_NONCOIN_EFFECT_SETTLE = 6,
    _,
};

pub const MGPOCJFMKPM = enum(i32) {
    FATE_MASTER_STATUS_TYPE_NONE = 0,
    FATE_MASTER_STATUS_TYPE_ALIVE = 1,
    FATE_MASTER_STATUS_TYPE_DEAD = 2,
    FATE_MASTER_STATUS_TYPE_BANNED = 3,
    _,
};

pub const CmdFeverTimeActivityType = enum(i32) {
    CmdFeverTimeActivityTypeNone = 0,
    CmdFeverTimeActivityBattleEndScNotify = 7151,
    CmdEnterFeverTimeActivityStageCsReq = 7155,
    CmdEnterFeverTimeActivityStageScRsp = 7160,
    CmdGetFeverTimeActivityDataCsReq = 7152,
    CmdGetFeverTimeActivityDataScRsp = 7156,
    _,
};

pub const FeverTimeBattleRank = enum(i32) {
    FEVER_TIME_BATTLE_RANK_C = 0,
    FEVER_TIME_BATTLE_RANK_B = 1,
    FEVER_TIME_BATTLE_RANK_A = 2,
    FEVER_TIME_BATTLE_RANK_S = 3,
    FEVER_TIME_BATTLE_RANK_SS = 4,
    _,
};

pub const CmdFightType = enum(i32) {
    CmdFightTypeNone = 0,
    CmdFightEnterScRsp = 30005,
    CmdFightKickOutScNotify = 30053,
    CmdFightGeneralScRsp = 30041,
    CmdFightSessionStopScNotify = 30097,
    CmdFightEnterCsReq = 30010,
    CmdFightHeartBeatCsReq = 30079,
    CmdFightGeneralCsReq = 30006,
    CmdFightLeaveScNotify = 30098,
    CmdFightHeartBeatScRsp = 30002,
    CmdFightGeneralScNotify = 30055,
    _,
};

pub const CmdFightActivityType = enum(i32) {
    CmdFightActivityTypeNone = 0,
    CmdGetFightActivityDataCsReq = 3610,
    CmdEnterFightActivityStageScRsp = 3679,
    CmdTakeFightActivityRewardScRsp = 3697,
    CmdFightActivityDataChangeScNotify = 3698,
    CmdEnterFightActivityStageCsReq = 3653,
    CmdGetFightActivityDataScRsp = 3605,
    CmdTakeFightActivityRewardCsReq = 3602,
    _,
};

pub const CmdFightFestType = enum(i32) {
    CmdFightFestTypeNone = 0,
    CmdStartFightFestCsReq = 7296,
    CmdGetFightFestDataScRsp = 7271,
    CmdFightFestScoreUpdateNotify = 7252,
    CmdStartFightFestScRsp = 7280,
    CmdFightFestUnlockSkillNotify = 7251,
    CmdFightFestUpdateChallengeRecordNotify = 7278,
    CmdGetFightFestDataCsReq = 7273,
    CmdFightFestUpdateCoinNotify = 7277,
    _,
};

pub const HGDAPJPKFFB = enum(i32) {
    FIGHT_FEST_BATTLE_RANK_C = 0,
    FIGHT_FEST_BATTLE_RANK_B = 1,
    FIGHT_FEST_BATTLE_RANK_A = 2,
    FIGHT_FEST_BATTLE_RANK_S = 3,
    FIGHT_FEST_BATTLE_RANK_SS = 4,
    _,
};

pub const APLOAGDIBKI = enum(i32) {
    FIGHT_FEST_TYPE_NONE = 0,
    FIGHT_FEST_TYPE_MAIN = 1,
    FIGHT_FEST_TYPE_SCORE = 2,
    FIGHT_FEST_TYPE_CHALLENGE = 3,
    FIGHT_FEST_TYPE_TEACH = 4,
    _,
};

pub const CmdFightMarbleType = enum(i32) {
    CmdFightMarbleTypeNone = 0,
    _,
};

pub const MJBIKBCPKAI = enum(i32) {
    FightMarbleEventTypeNone = 0,
    FightMarbleEventTypePlayerEnd = 1,
    FightMarbleEventTypeGameEnd = 2,
    _,
};

pub const JOMKPEGEFMP = enum(i32) {
    MARBLE_TEAM_TYPE_NONE = 0,
    MARBLE_TEAM_TYPE_TEAM_A = 1,
    MARBLE_TEAM_TYPE_TEAM_B = 2,
    _,
};

pub const EEIBHJPNJCF = enum(i32) {
    MARBLE_PLAYER_STATE_Default = 0,
    MARBLE_PLAYER_STATE_Leave = 1,
    MARBLE_PLAYER_STATE_KickOut = 2,
    _,
};

pub const IMPKPKAMIAF = enum(i32) {
    MARBLE_SYNC_TYPE_NONE = 0,
    MARBLE_SYNC_TYPE_LOADING = 1,
    MARBLE_SYNC_TYPE_PERFORMANCE = 2,
    MARBLE_SYNC_TYPE_ROUND_START = 3,
    MARBLE_SYNC_TYPE_ROUND_END = 4,
    MARBLE_SYNC_TYPE_SWITCH_ROUND = 6,
    MARBLE_SYNC_TYPE_USE_TECH = 7,
    MARBLE_SYNC_TYPE_SIMULATE_START = 8,
    MARBLE_SYNC_TYPE_EMOJI = 9,
    MARBLE_SYNC_TYPE_ACHIEVEMENT = 10,
    _,
};

pub const PAJNHIAGODD = enum(i32) {
    MARBLE_FRAME_TYPE_NONE = 0,
    MARBLE_FRAME_TYPE_ACTION_START = 1,
    MARBLE_FRAME_TYPE_ACTION_END = 2,
    MARBLE_FRAME_TYPE_ROUND_START = 3,
    MARBLE_FRAME_TYPE_ROUND_END = 4,
    MARBLE_FRAME_TYPE_REVIVE = 5,
    MARBLE_FRAME_TYPE_HP_CHANGE = 6,
    MARBLE_FRAME_TYPE_LAUNCH = 7,
    MARBLE_FRAME_TYPE_STOP = 8,
    MARBLE_FRAME_TYPE_COLLIDE = 9,
    MARBLE_FRAME_TYPE_EFFECT = 10,
    MARBLE_FRAME_TYPE_BUFF_TEXT = 11,
    MARBLE_FRAME_TYPE_SKILL_UI = 12,
    MARBLE_FRAME_TYPE_ABSORB = 13,
    MARBLE_FRAME_TYPE_ON_OFF_FIELD = 14,
    MARBLE_FRAME_TYPE_DEAD = 15,
    MARBLE_FRAME_TYPE_USE_TECH = 16,
    MARBLE_FRAME_TYPE_TECH_ACTIVE = 17,
    MARBLE_FRAME_TYPE_GHOST_FIRE = 18,
    MARBLE_FRAME_TYPE_TRIGGER = 19,
    MARBLE_FRAME_TYPE_SWALLOW = 20,
    MARBLE_FRAME_TYPE_RADIUS = 21,
    MARBLE_FRAME_TYPE_HIDE_LINE = 22,
    MARBLE_FRAME_TYPE_TEAM_SCORE = 23,
    MARBLE_FRAME_TYPE_EMOJI_PACKAGE = 24,
    MARBLE_FRAME_TYPE_CHANGE_SPEED = 25,
    MARBLE_FRAME_TYPE_ADD_SHIELD = 26,
    _,
};

pub const LKKAJCACIJI = enum(i32) {
    MARBLE_FACTION_TYPE_NONE = 0,
    MARBLE_FACTION_TYPE_ALL = 1,
    MARBLE_FACTION_TYPE_ENEMY = 2,
    MARBLE_FACTION_TYPE_ALLY = 3,
    MARBLE_FACTION_TYPE_FIELD = 4,
    _,
};

pub const FIPPKLCOEGJ = enum(i32) {
    MARBLE_HP_CHANGE_TYPE_NONE = 0,
    MARBLE_HP_CHANGE_TYPE_CRITICAL = 1,
    MARBLE_HP_CHANGE_TYPE_SPINE = 2,
    _,
};

pub const PPIFFKJEJJA = enum(i32) {
    Marble_Game_Phase_None = 0,
    Marble_Game_Phase_Ready = 1,
    Marble_Game_Phase_Delay = 2,
    Marble_Game_Phase_Loading = 3,
    Marble_Game_Phase_LoadFinish = 4,
    Marble_Game_Phase_Performance = 5,
    Marble_Game_Phase_PerformanceFinish = 6,
    Marble_Game_Phase_RoundA = 7,
    Marble_Game_Phase_RoundB = 8,
    Marble_Game_Phase_Simulate = 9,
    Marble_Game_Phase_SimulateFinish = 10,
    Marble_Game_Phase_Tech = 11,
    Marble_Game_Phase_TechUI = 12,
    Marble_Game_Phase_TechFinish = 13,
    Marble_Game_Phase_Finish = 14,
    Marble_Game_Phase_PreRound = 15,
    _,
};

pub const CmdFightMathc3Type = enum(i32) {
    CmdFightMathc3TypeNone = 0,
    CmdFightMatch3SoloAnimEndScRsp = 30194,
    CmdFightMatch3SoloPreTurnEndCsReq = 30190,
    CmdFightMatch3SwapScRsp = 30197,
    CmdFightMatch3StartCountDownScNotify = 30198,
    CmdFightMatch3UseItemScRsp = 30126,
    CmdFightMatch3ChatScNotify = 30107,
    CmdFightMatch3DataScRsp = 30105,
    CmdFightMatch3SoloPreTurnEndScRsp = 30154,
    CmdFightMatch3SoloDataCsReq = 30163,
    CmdFightMatch3SoloDataScRsp = 30167,
    CmdFightMatch3ChatScRsp = 30155,
    CmdFightMatch3SoloUseItemNotify = 30174,
    CmdFightMatch3SwapCsReq = 30102,
    CmdFightMatch3ChatCsReq = 30141,
    CmdFightMatch3TurnEndScNotify = 30179,
    CmdFightMatch3OpponentDataScNotify = 30106,
    CmdFightMatch3SoloSwapNotify = 30178,
    CmdFightMatch3SoloDataUpdateNotify = 30136,
    CmdFightMatch3DataCsReq = 30110,
    CmdFightMatch3TurnStartScNotify = 30153,
    CmdFightMatch3UseItemCsReq = 30116,
    CmdFightMatch3ForceUpdateNotify = 30139,
    CmdFightMatch3SoloAnimEndCsReq = 30172,
    _,
};

pub const DGFCBOFAOIA = enum(i32) {
    MATCH3_STATE_IDLE = 0,
    MATCH3_STATE_START = 1,
    MATCH3_STATE_MATCH = 2,
    MATCH3_STATE_GAME = 3,
    MATCH3_STATE_HALFTIME = 4,
    MATCH3_STATE_OVER = 5,
    _,
};

pub const NPPNFPPENMC = enum(i32) {
    MATCH3_PLAYER_STATE_ALIVE = 0,
    MATCH3_PLAYER_STATE_DYING = 1,
    MATCH3_PLAYER_STATE_DEAD = 2,
    MATCH3_PLAYER_STATE_LEAVE = 3,
    _,
};

pub const BFILLIOBMFN = enum(i32) {
    EVENT_BEGIN = 0,
    EVENT_BREAK = 1,
    EVENT_FALL = 2,
    EVENT_REFRESH = 3,
    EVENT_BIRD_SKILL = 4,
    EVENT_SHUFFLE = 5,
    _,
};

pub const KJJLDIMBGMM = enum(i32) {
    MATCH3_SOLO_STATE_IDLE = 0,
    MATCH3_SOLO_STATE_START = 1,
    MATCH3_SOLO_STATE_GAME = 2,
    MATCH3_SOLO_STATE_ANIM = 3,
    MATCH3_SOLO_STATE_OVER = 4,
    MATCH3_SOLO_STATE_DEL = 5,
    _,
};

pub const NLAAMOGOOBE = enum(i32) {
    MATCH3_BATTLE_OP_TYPE_NONE = 0,
    MATCH3_BATTLE_OP_TYPE_SWAP = 1,
    MATCH3_BATTLE_OP_TYPE_USE_ITEM = 2,
    _,
};

pub const GANMCIJCOKI = enum(i32) {
    MATCH3_BATTLE_BUFF_TYPE_NONE = 0,
    MATCH3_BATTLE_BUFF_TYPE_DETONATE_BOMB_RECUR = 1,
    MATCH3_BATTLE_BUFF_TYPE_ACTIVIZATION = 2,
    MATCH3_BATTLE_BUFF_TYPE_SCORE_BONUS = 3,
    _,
};

pub const ABBDJBMIIBE = enum(i32) {
    MATCH3_SOLO_UPDATE_REASON_DEFAULT = 0,
    MATCH3_SOLO_UPDATE_REASON_TURN_START = 1,
    MATCH3_SOLO_UPDATE_REASON_TURN_END = 2,
    MATCH3_SOLO_UPDATE_REASON_GAME_START = 3,
    MATCH3_SOLO_UPDATE_REASON_GAME_END = 4,
    MATCH3_SOLO_UPDATE_REASON_GM = 5,
    _,
};

pub const CmdFriendType = enum(i32) {
    CmdFriendTypeNone = 0,
    CmdSetAssistScRsp = 2901,
    CmdDeleteFriendCsReq = 2916,
    CmdApplyFriendCsReq = 2997,
    CmdSetForbidOtherApplyFriendScRsp = 2985,
    CmdCurAssistChangedNotify = 2966,
    CmdGetFriendApplyListInfoScRsp = 2902,
    CmdGetFriendRecommendLineupCsReq = 2923,
    CmdGetCurAssistScRsp = 2925,
    CmdHandleFriendScRsp = 2907,
    CmdSyncAddBlacklistScNotify = 2994,
    CmdGetAssistListCsReq = 2924,
    CmdGetFriendDevelopmentInfoCsReq = 2912,
    CmdGetFriendChallengeLineupScRsp = 2983,
    CmdTakeAssistRewardScRsp = 2960,
    CmdGetFriendAssistListScRsp = 2958,
    CmdSearchPlayerScRsp = 2992,
    CmdDeleteFriendScRsp = 2926,
    CmdSyncHandleFriendScNotify = 2939,
    CmdGetFriendBattleRecordDetailCsReq = 2904,
    CmdDeleteBlacklistCsReq = 2909,
    CmdSyncDeleteFriendScNotify = 2963,
    CmdAddBlacklistCsReq = 2967,
    CmdGetFriendRecommendLineupDetailCsReq = 2995,
    CmdHandleFriendCsReq = 2955,
    CmdGetFriendBattleRecordDetailScRsp = 2986,
    CmdGetFriendDevelopmentInfoScRsp = 2964,
    CmdGetFriendLoginInfoScRsp = 2913,
    CmdGetFriendRecommendLineupScRsp = 2914,
    CmdGetPlatformPlayerInfoCsReq = 2928,
    CmdGetAssistListScRsp = 2973,
    CmdGetFriendRecommendLineupDetailScRsp = 2918,
    CmdSetFriendMarkCsReq = 2929,
    CmdSetAssistCsReq = 2942,
    CmdGetFriendChallengeDetailCsReq = 2903,
    CmdSearchPlayerCsReq = 2969,
    CmdGetAssistHistoryCsReq = 2935,
    CmdReportPlayerCsReq = 2954,
    CmdGetCurAssistCsReq = 2951,
    CmdGetPlayerDetailInfoScRsp = 2953,
    CmdSetForbidOtherApplyFriendCsReq = 2946,
    CmdTakeAssistRewardCsReq = 2915,
    CmdGetFriendApplyListInfoCsReq = 2979,
    CmdSetFriendRemarkNameCsReq = 2974,
    CmdApplyFriendScRsp = 2906,
    CmdGetFriendChallengeLineupCsReq = 2982,
    CmdGetFriendLoginInfoCsReq = 2908,
    CmdReportPlayerScRsp = 2962,
    CmdGetPlayerDetailInfoCsReq = 2998,
    CmdGetFriendAssistListCsReq = 2945,
    CmdGetFriendChallengeDetailScRsp = 2957,
    CmdGetFriendRecommendListInfoScRsp = 2978,
    CmdSyncApplyFriendScNotify = 2941,
    CmdSetFriendRemarkNameScRsp = 2990,
    CmdGetFriendListInfoScRsp = 2905,
    CmdGetFriendListInfoCsReq = 2910,
    CmdNewAssistHistoryNotify = 2988,
    CmdAddBlacklistScRsp = 2972,
    CmdGetPlatformPlayerInfoScRsp = 2989,
    CmdSetFriendMarkScRsp = 2971,
    CmdGetFriendRecommendListInfoCsReq = 2936,
    CmdDeleteBlacklistScRsp = 2920,
    CmdGetAssistHistoryScRsp = 2937,
    _,
};

pub const FriendOnlineStatus = enum(i32) {
    FRIEND_ONLINE_STATUS_OFFLINE = 0,
    FRIEND_ONLINE_STATUS_ONLINE = 1,
    _,
};

pub const FriendApplySource = enum(i32) {
    FRIEND_APPLY_SOURCE_NONE = 0,
    FRIEND_APPLY_SOURCE_SEARCH = 1,
    FRIEND_APPLY_SOURCE_RECOMMEND = 2,
    FRIEND_APPLY_SOURCE_ASSIST = 3,
    FRIEND_APPLY_SOURCE_RECOMMEND_ASSIST = 4,
    FRIEND_APPLY_SOURCE_PSN_FRIEND = 5,
    FRIEND_APPLY_SOURCE_ASSIST_REWARD = 6,
    _,
};

pub const CmdGachaType = enum(i32) {
    CmdGachaTypeNone = 0,
    CmdDoGachaCsReq = 1998,
    CmdGetGachaCeilingCsReq = 1979,
    CmdGetGachaCeilingScRsp = 1902,
    CmdExchangeGachaCeilingScRsp = 1906,
    CmdExchangeGachaCeilingCsReq = 1997,
    CmdSetGachaDecideItemCsReq = 1941,
    CmdGachaDecideItemChangeScNotify = 1907,
    CmdGetGachaInfoScRsp = 1905,
    CmdSetGachaDecideItemScRsp = 1955,
    CmdGetGachaInfoCsReq = 1910,
    CmdDoGachaScRsp = 1953,
    _,
};

pub const CmdHeartdialType = enum(i32) {
    CmdHeartdialTypeNone = 0,
    CmdSubmitEmotionItemScRsp = 6302,
    CmdGetHeartDialInfoCsReq = 6310,
    CmdFinishEmotionDialoguePerformanceScRsp = 6306,
    CmdChangeScriptEmotionCsReq = 6398,
    CmdFinishEmotionDialoguePerformanceCsReq = 6397,
    CmdSubmitEmotionItemCsReq = 6379,
    CmdChangeScriptEmotionScRsp = 6353,
    CmdHeartDialTraceScriptScRsp = 6307,
    CmdHeartDialScriptChangeScNotify = 6341,
    CmdGetHeartDialInfoScRsp = 6305,
    CmdHeartDialTraceScriptCsReq = 6355,
    _,
};

pub const HeartDialEmotionType = enum(i32) {
    HEART_DIAL_EMOTION_TYPE_PEACE = 0,
    HEART_DIAL_EMOTION_TYPE_ANGER = 1,
    HEART_DIAL_EMOTION_TYPE_HAPPY = 2,
    HEART_DIAL_EMOTION_TYPE_SAD = 3,
    _,
};

pub const HeartDialStepType = enum(i32) {
    HEART_DIAL_STEP_TYPE_MISSING = 0,
    HEART_DIAL_STEP_TYPE_FULL = 1,
    HEART_DIAL_STEP_TYPE_LOCK = 2,
    HEART_DIAL_STEP_TYPE_UNLOCK = 3,
    HEART_DIAL_STEP_TYPE_NORMAL = 4,
    HEART_DIAL_STEP_TYPE_CONTROL = 5,
    _,
};

pub const HeartDialUnlockStatus = enum(i32) {
    HEART_DIAL_UNLOCK_STATUS_LOCK = 0,
    HEART_DIAL_UNLOCK_STATUS_UNLOCK_SINGLE = 1,
    HEART_DIAL_UNLOCK_STATUS_UNLOCK_ALL = 2,
    _,
};

pub const CmdHeliobusType = enum(i32) {
    CmdHeliobusTypeNone = 0,
    CmdHeliobusSnsCommentCsReq = 5841,
    CmdHeliobusSnsReadScRsp = 5853,
    CmdHeliobusSelectSkillScRsp = 5872,
    CmdHeliobusStartRaidScRsp = 5854,
    CmdHeliobusSnsPostCsReq = 5879,
    CmdHeliobusInfoChangedScNotify = 5839,
    CmdHeliobusEnterBattleScRsp = 5874,
    CmdHeliobusEnterBattleCsReq = 5878,
    CmdHeliobusLineupUpdateScNotify = 5809,
    CmdHeliobusSelectSkillCsReq = 5867,
    CmdHeliobusStartRaidCsReq = 5890,
    CmdHeliobusSnsLikeScRsp = 5806,
    CmdHeliobusUpgradeLevelCsReq = 5816,
    CmdHeliobusSnsLikeCsReq = 5897,
    CmdHeliobusChallengeUpdateScNotify = 5862,
    CmdHeliobusUpgradeLevelScRsp = 5826,
    CmdHeliobusSnsUpdateScNotify = 5807,
    CmdHeliobusSnsCommentScRsp = 5855,
    CmdHeliobusActivityDataCsReq = 5810,
    CmdHeliobusSnsPostScRsp = 5802,
    CmdHeliobusSnsReadCsReq = 5898,
    CmdHeliobusActivityDataScRsp = 5805,
    CmdHeliobusUnlockSkillScNotify = 5863,
    _,
};

pub const CmdItemType = enum(i32) {
    CmdItemTypeNone = 0,
    CmdComposeLimitNumUpdateNotify = 573,
    CmdDestroyItemCsReq = 542,
    CmdRelicReforgeScRsp = 514,
    CmdSellItemScRsp = 578,
    CmdPromoteEquipmentCsReq = 598,
    CmdRankUpEquipmentScRsp = 555,
    CmdComposeSelectedRelicCsReq = 562,
    CmdSyncTurnFoodNotify = 515,
    CmdAddRelicFilterPlanCsReq = 558,
    CmdLockRelicCsReq = 572,
    CmdPromoteEquipmentScRsp = 553,
    CmdGetBagCsReq = 510,
    CmdDiscardRelicCsReq = 589,
    CmdLockRelicScRsp = 594,
    CmdRankUpEquipmentCsReq = 541,
    CmdMarkRelicFilterPlanCsReq = 586,
    CmdMarkItemCsReq = 535,
    CmdGetRelicFilterPlanCsReq = 571,
    CmdGeneralVirtualItemDataNotify = 528,
    CmdExpUpRelicScRsp = 567,
    CmdGetRecyleTimeCsReq = 569,
    CmdBatchRankUpEquipmentScRsp = 596,
    CmdComposeItemCsReq = 516,
    CmdSetTurnFoodSwitchCsReq = 560,
    CmdAddEquipmentScNotify = 520,
    CmdGetMarkItemListScRsp = 525,
    CmdExchangeHcoinScRsp = 554,
    CmdUseItemScRsp = 506,
    CmdDiscardRelicScRsp = 508,
    CmdModifyRelicFilterPlanCsReq = 583,
    CmdDeleteRelicFilterPlanScRsp = 504,
    CmdModifyRelicFilterPlanScRsp = 503,
    CmdExpUpEquipmentCsReq = 507,
    CmdBatchRankUpEquipmentCsReq = 549,
    CmdRelicReforgeConfirmCsReq = 595,
    CmdSetTurnFoodSwitchScRsp = 566,
    CmdExchangeHcoinCsReq = 590,
    CmdDeleteRelicFilterPlanCsReq = 557,
    CmdCancelMarkItemNotify = 588,
    CmdComposeItemScRsp = 526,
    CmdRelicReforgeCsReq = 523,
    CmdRelicReforgeConfirmScRsp = 518,
    CmdComposeLimitNumCompleteNotify = 524,
    CmdMarkItemScRsp = 537,
    CmdExpUpEquipmentScRsp = 539,
    CmdGetBagScRsp = 505,
    CmdAddRelicFilterPlanScRsp = 582,
    CmdRelicFilterPlanClearNameScNotify = 564,
    CmdRechargeSuccNotify = 574,
    CmdUseItemCsReq = 597,
    CmdComposeSelectedRelicScRsp = 509,
    CmdLockEquipmentCsReq = 579,
    CmdExpUpRelicCsReq = 563,
    CmdDestroyItemScRsp = 501,
    CmdGetMarkItemListCsReq = 551,
    CmdGetRelicFilterPlanScRsp = 545,
    CmdGetRecyleTimeScRsp = 592,
    CmdLockEquipmentScRsp = 502,
    CmdMarkRelicFilterPlanScRsp = 512,
    CmdSellItemCsReq = 536,
    _,
};

pub const ICPINEHOLML = enum(i32) {
    RELIC_DISCARD_TYPE_SINGLE = 0,
    RELIC_DISCARD_TYPE_BATCH = 1,
    RELIC_DISCARD_TYPE_SMART = 2,
    _,
};

pub const TurnFoodSwitch = enum(i32) {
    TURN_FOOD_SWITCH_NONE = 0,
    TURN_FOOD_SWITCH_ATTACK = 1,
    TURN_FOOD_SWITCH_DEFINE = 2,
    _,
};

pub const CmdJukeboxType = enum(i32) {
    CmdJukeboxTypeNone = 0,
    CmdTrialBackGroundMusicScRsp = 3106,
    CmdTrialBackGroundMusicCsReq = 3197,
    CmdUnlockBackGroundMusicCsReq = 3179,
    CmdPlayBackGroundMusicScRsp = 3153,
    CmdPlayBackGroundMusicCsReq = 3198,
    CmdUnlockBackGroundMusicScRsp = 3102,
    CmdGetJukeboxDataCsReq = 3110,
    CmdGetJukeboxDataScRsp = 3105,
    _,
};

pub const CmdLineupType = enum(i32) {
    CmdLineupTypeNone = 0,
    CmdGetAllLineupDataCsReq = 778,
    CmdGetStageLineupScRsp = 705,
    CmdChangeLineupLeaderCsReq = 726,
    CmdSwapLineupCsReq = 741,
    CmdSwitchLineupIndexCsReq = 767,
    CmdReplaceLineupCsReq = 754,
    CmdSetLineupNameScRsp = 736,
    CmdQuitLineupCsReq = 797,
    CmdGetLineupAvatarDataCsReq = 739,
    CmdSwapLineupScRsp = 755,
    CmdGetCurLineupDataScRsp = 753,
    CmdSetLineupNameCsReq = 794,
    CmdChangeLineupLeaderScRsp = 763,
    CmdSwitchLineupIndexScRsp = 772,
    CmdVirtualLineupTrialAvatarChangeScNotify = 720,
    CmdGetLineupAvatarDataScRsp = 716,
    CmdJoinLineupCsReq = 779,
    CmdQuitLineupScRsp = 706,
    CmdGetAllLineupDataScRsp = 774,
    CmdExtraLineupDestroyNotify = 709,
    CmdGetStageLineupCsReq = 710,
    CmdSyncLineupNotify = 707,
    CmdJoinLineupScRsp = 702,
    CmdGetCurLineupDataCsReq = 798,
    CmdVirtualLineupDestroyNotify = 790,
    CmdReplaceLineupScRsp = 762,
    _,
};

pub const PBPAHLPFNDA = enum(i32) {
    LINEUP_TYPE_NONE = 0,
    LINEUP_TYPE_PRESET = 1,
    LINEUP_TYPE_VIRTUAL = 2,
    LINEUP_TYPE_EXTRA = 3,
    LINEUP_TYPE_STORY_LINE = 4,
    _,
};

pub const ExtraLineupType = enum(i32) {
    LINEUP_NONE = 0,
    LINEUP_CHALLENGE = 1,
    LINEUP_ROGUE = 2,
    LINEUP_CHALLENGE_2 = 3,
    LINEUP_CHALLENGE_3 = 4,
    LINEUP_ROGUE_CHALLENGE = 5,
    LINEUP_STAGE_TRIAL = 6,
    LINEUP_ROGUE_TRIAL = 7,
    LINEUP_ACTIVITY = 8,
    LINEUP_BOXING_CLUB = 9,
    LINEUP_TREASURE_DUNGEON = 11,
    LINEUP_CHESS_ROGUE = 12,
    LINEUP_HELIOBUS = 13,
    LINEUP_TOURN_ROGUE = 14,
    LINEUP_RELIC_ROGUE = 15,
    LINEUP_ARCADE_ROGUE = 16,
    LINEUP_MAGIC_ROGUE = 17,
    LINEUP_FATE = 18,
    _,
};

pub const SyncLineupReason = enum(i32) {
    SYNC_REASON_NONE = 0,
    SYNC_REASON_MP_ADD = 1,
    SYNC_REASON_MP_ADD_PROP_HIT = 2,
    SYNC_REASON_HP_ADD = 3,
    SYNC_REASON_HP_ADD_PROP_HIT = 4,
    SYNC_REASON_MP_MAX_CHANGED_PERMANENT = 5,
    SYNC_REASON_MP_MAX_CHANGED_BY_MODIFIER = 6,
    _,
};

pub const CmdLobbyType = enum(i32) {
    CmdLobbyTypeNone = 0,
    CmdLobbyInviteScRsp = 7363,
    CmdLobbyStartFightCsReq = 7352,
    CmdLobbyInviteCsReq = 7368,
    CmdLobbyModifyPlayerInfoScRsp = 7377,
    CmdLobbySyncInfoScNotify = 7393,
    CmdLobbyInviteScNotify = 7355,
    CmdLobbyKickOutCsReq = 7392,
    CmdLobbyInteractScRsp = 7398,
    CmdLobbyJoinCsReq = 7396,
    CmdLobbyGetInfoCsReq = 7356,
    CmdLobbyQuitCsReq = 7382,
    CmdLobbyModifyPlayerInfoCsReq = 7378,
    CmdLobbyCreateCsReq = 7373,
    CmdLobbyJoinScRsp = 7380,
    CmdLobbyInteractCsReq = 7387,
    CmdLobbyQuitScRsp = 7379,
    CmdLobbyKickOutScRsp = 7354,
    CmdLobbyGetInfoScRsp = 7400,
    CmdLobbyCreateScRsp = 7371,
    CmdLobbyStartFightScRsp = 7351,
    CmdLobbyInteractScNotify = 7370,
    _,
};

pub const CmdMailType = enum(i32) {
    CmdMailTypeNone = 0,
    CmdGetMailCsReq = 810,
    CmdDelMailCsReq = 879,
    CmdMarkReadMailCsReq = 898,
    CmdTakeMailAttachmentScRsp = 806,
    CmdTakeMailAttachmentCsReq = 897,
    CmdNewMailScNotify = 841,
    CmdMarkReadMailScRsp = 853,
    CmdGetMailScRsp = 805,
    CmdDelMailScRsp = 802,
    _,
};

pub const MailType = enum(i32) {
    MAIL_TYPE_NORMAL = 0,
    MAIL_TYPE_STAR = 1,
    _,
};

pub const CmdMapRotationType = enum(i32) {
    CmdMapRotationTypeNone = 0,
    CmdLeaveMapRotationRegionScNotify = 6863,
    CmdInteractChargerCsReq = 6898,
    CmdResetMapRotationRegionScRsp = 6826,
    CmdEnterMapRotationRegionScRsp = 6805,
    CmdUpdateRotaterScNotify = 6878,
    CmdRemoveRotaterCsReq = 6894,
    CmdInteractChargerScRsp = 6853,
    CmdGetMapRotationDataCsReq = 6807,
    CmdLeaveMapRotationRegionCsReq = 6841,
    CmdEnterMapRotationRegionCsReq = 6810,
    CmdGetMapRotationDataScRsp = 6839,
    CmdUpdateMapRotationDataScNotify = 6872,
    CmdRotateMapCsReq = 6897,
    CmdUpdateEnergyScNotify = 6867,
    CmdDeployRotaterCsReq = 6879,
    CmdLeaveMapRotationRegionScRsp = 6855,
    CmdDeployRotaterScRsp = 6802,
    CmdResetMapRotationRegionCsReq = 6816,
    CmdRotateMapScRsp = 6806,
    CmdRemoveRotaterScRsp = 6836,
    _,
};

pub const CmdMarbleType = enum(i32) {
    CmdMarbleTypeNone = 0,
    CmdMarbleGetDataScRsp = 8285,
    CmdMarbleLevelFinishCsReq = 8287,
    CmdMarbleUpdateShownSealCsReq = 8280,
    CmdMarbleUpdateShownSealScRsp = 8281,
    CmdMarbleLevelFinishScRsp = 8289,
    CmdMarbleShopBuyCsReq = 8272,
    CmdMarbleUnlockSealScNotify = 8277,
    CmdMarbleShopBuyScRsp = 8282,
    CmdMarbleGetDataCsReq = 8271,
    CmdMarblePvpDataUpdateScNotify = 8284,
    _,
};

pub const CmdMarkChestType = enum(i32) {
    CmdMarkChestTypeNone = 0,
    CmdGetMarkChestCsReq = 8181,
    CmdMarkChestChangedScNotify = 8182,
    CmdGetMarkChestScRsp = 8195,
    CmdUpdateMarkChestCsReq = 8197,
    CmdUpdateMarkChestScRsp = 8199,
    _,
};

pub const CmdMatchType = enum(i32) {
    CmdMatchTypeNone = 0,
    CmdStartMatchScRsp = 7321,
    CmdCancelMatchCsReq = 7346,
    CmdGetCrossInfoScRsp = 7328,
    CmdStartMatchCsReq = 7323,
    CmdMatchResultScNotify = 7302,
    CmdCancelMatchScRsp = 7330,
    CmdGetCrossInfoCsReq = 7301,
    _,
};

pub const CmdMatchThreeModuleType = enum(i32) {
    CmdMatchThreeModuleTypeNone = 0,
    CmdMatchThreeV2GetDataCsReq = 7427,
    CmdMatchThreeLevelEndCsReq = 7446,
    CmdMatchThreeGetDataCsReq = 7423,
    CmdMatchThreeV2LevelEndCsReq = 7418,
    CmdMatchThreeSyncDataScNotify = 7402,
    CmdMatchThreeGetDataScRsp = 7421,
    CmdMatchThreeV2BattleItemLevelUpScRsp = 7443,
    CmdMatchThreeV2LevelEndScRsp = 7413,
    CmdMatchThreeV2GetDataScRsp = 7442,
    CmdMatchThreeLevelEndScRsp = 7430,
    CmdMatchThreeV2BattleItemLevelUpCsReq = 7404,
    CmdMatchThreeSetBirdPosScRsp = 7428,
    CmdMatchThreeV2ScNotify = 7405,
    CmdMatchThreeSetBirdPosCsReq = 7401,
    CmdMatchThreeV2PvpFinishScNotify = 7406,
    CmdMatchThreeV2SetBirdPosScRsp = 7429,
    CmdMatchThreeV2SetBirdPosCsReq = 7432,
    _,
};

pub const AJDDHBHMOOF = enum(i32) {
    MatchThreeStatistics_None = 0,
    MatchThreeStatistics_First = 1,
    MatchThreeStatistics_Second = 2,
    MatchThreeStatistics_Third = 3,
    MatchThreeStatistics_Fruit = 4,
    MatchThreeStatistics_Skill = 5,
    MatchThreeStatistics_Defeat = 6,
    MatchThreeStatistics_Bomb = 7,
    MatchThreeStatistics_Damage = 8,
    MatchThreeStatistics_Energy = 9,
    MatchThreeStatistics_SwapBomb = 10,
    MatchThreeStatistics_UseItem = 11,
    MatchThreeStatistics_SoloMaxStep = 12,
    MatchThreeStatistics_SoloScore = 13,
    _,
};

pub const CmdMessageType = enum(i32) {
    CmdMessageTypeNone = 0,
    CmdFinishSectionIdScRsp = 2706,
    CmdGetNpcStatusScRsp = 2753,
    CmdGetMissionMessageInfoCsReq = 2707,
    CmdGetMissionMessageInfoScRsp = 2739,
    CmdGetNpcMessageGroupScRsp = 2705,
    CmdFinishPerformSectionIdScRsp = 2755,
    CmdGetNpcMessageGroupCsReq = 2710,
    CmdGetNpcStatusCsReq = 2798,
    CmdFinishSectionIdCsReq = 2797,
    CmdFinishItemIdCsReq = 2779,
    CmdFinishItemIdScRsp = 2702,
    CmdFinishPerformSectionIdCsReq = 2741,
    _,
};

pub const CmdMiscModuleType = enum(i32) {
    CmdMiscModuleTypeNone = 0,
    CmdSubmitOrigamiItemScRsp = 4167,
    CmdTakePictureCsReq = 4179,
    CmdGetMovieRacingDataScRsp = 4190,
    CmdSubmitOrigamiItemCsReq = 4163,
    CmdUpdateMovieRacingDataScRsp = 4162,
    CmdShareCsReq = 4110,
    CmdUpdateGunPlayDataCsReq = 4169,
    CmdShareScRsp = 4105,
    CmdMazeKillDirectCsReq = 4151,
    CmdCancelCacheNotifyCsReq = 4141,
    CmdDifficultyAdjustmentUpdateDataScRsp = 4101,
    CmdDifficultyAdjustmentGetDataCsReq = 4124,
    CmdGetOrigamiPropInfoCsReq = 4172,
    CmdDirectDeliveryScNotify = 4135,
    CmdSecurityReportScRsp = 4139,
    CmdCancelDirectDeliveryNoticeScRsp = 4188,
    CmdCancelCacheNotifyScRsp = 4155,
    CmdTakePictureScRsp = 4102,
    CmdGetOrigamiPropInfoScRsp = 4194,
    CmdGetGunPlayDataCsReq = 4109,
    CmdGetMovieRacingDataCsReq = 4174,
    CmdDifficultyAdjustmentGetDataScRsp = 4173,
    CmdUpdateGunPlayDataScRsp = 4192,
    CmdMazeKillDirectScRsp = 4125,
    CmdTriggerVoiceScRsp = 4126,
    CmdCancelDirectDeliveryNoticeCsReq = 4137,
    CmdGetShareDataScRsp = 4153,
    CmdGetShareDataCsReq = 4198,
    CmdGetGunPlayDataScRsp = 4120,
    CmdUpdateMovieRacingDataCsReq = 4154,
    CmdSecurityReportCsReq = 4107,
    CmdDifficultyAdjustmentUpdateDataCsReq = 4142,
    CmdTriggerVoiceCsReq = 4116,
    _,
};

pub const CancelCacheType = enum(i32) {
    CACHE_NOTIFY_TYPE_NONE = 0,
    CACHE_NOTIFY_TYPE_RECYCLE = 1,
    CACHE_NOTIFY_TYPE_RECHARGE = 2,
    CACHE_NOTIFY_TYPE_ITEM_AUTO_TRANSFER = 3,
    _,
};

pub const MovieRacingType = enum(i32) {
    MOVIE_RACING_OVER_TAKE = 0,
    MOVIE_RACING_OVER_TAKE_ENDLESS = 1,
    MOVIE_RACING_SHOOTING = 2,
    MOVIE_RACING_SHOOTING_ENDLESS = 3,
    _,
};

pub const DifficultyAdjustmentType = enum(i32) {
    DIFFICULTY_AJUSTMENT_TYPE_DEFAULT = 0,
    DIFFICULTY_AJUSTMENT_TYPE_EASY = 1,
    _,
};

pub const GIILENMKCAH = enum(i32) {
    DIFFICULTY_AJUSTMENT_SOURCE_NONE = 0,
    DIFFICULTY_AJUSTMENT_SOURCE_RAID = 1,
    DIFFICULTY_AJUSTMENT_SOURCE_EVENT = 2,
    _,
};

pub const MNIJHMEPGNN = enum(i32) {
    MAZE_KILL_SOURCE_NONE = 0,
    MAZE_KILL_SOURCE_SWITCH_HAND = 1,
    MAZE_KILL_SOURCE_TIME_LINE = 2,
    _,
};

pub const CmdMissionType = enum(i32) {
    CmdMissionTypeNone = 0,
    CmdUpdateMainMissionCustomValueCsReq = 1266,
    CmdGetMissionDataCsReq = 1210,
    CmdMissionAcceptScNotify = 1235,
    CmdFinishTalkMissionCsReq = 1298,
    CmdFinishCosumeItemMissionCsReq = 1216,
    CmdAcceptMainMissionCsReq = 1242,
    CmdUpdateTrackMainMissionIdCsReq = 1288,
    CmdSyncTaskScRsp = 1297,
    CmdFinishedMissionScNotify = 1260,
    CmdUpdateTrackMainMissionIdScRsp = 1215,
    CmdMissionGroupWarnScNotify = 1239,
    CmdAcceptMainMissionScRsp = 1201,
    CmdSyncTaskCsReq = 1202,
    CmdStartFinishSubMissionScNotify = 1224,
    CmdGetMissionStatusScRsp = 1274,
    CmdGetMissionDataScRsp = 1205,
    CmdGetMainMissionCustomValueCsReq = 1251,
    CmdFinishTalkMissionScRsp = 1253,
    CmdMissionRewardScNotify = 1279,
    CmdSubMissionRewardScNotify = 1220,
    CmdUpdateMainMissionCustomValueScRsp = 1228,
    CmdStartFinishMainMissionScNotify = 1273,
    CmdFinishCosumeItemMissionScRsp = 1226,
    CmdTeleportToMissionResetPointScRsp = 1292,
    CmdGetMissionStatusCsReq = 1278,
    CmdTeleportToMissionResetPointCsReq = 1269,
    CmdGetMainMissionCustomValueScRsp = 1225,
    _,
};

pub const MissionSyncRecord = enum(i32) {
    MISSION_SYNC_RECORD_NONE = 0,
    MISSION_SYNC_RECORD_MAIN_MISSION_ACCEPT = 1,
    MISSION_SYNC_RECORD_MAIN_MISSION_START = 2,
    MISSION_SYNC_RECORD_MAIN_MISSION_FINISH = 3,
    MISSION_SYNC_RECORD_MAIN_MISSION_DELETE = 4,
    MISSION_SYNC_RECORD_MISSION_ACCEPT = 11,
    MISSION_SYNC_RECORD_MISSION_START = 12,
    MISSION_SYNC_RECORD_MISSION_FINISH = 13,
    MISSION_SYNC_RECORD_MISSION_DELETE = 14,
    MISSION_SYNC_RECORD_MISSION_PROGRESS = 15,
    _,
};

pub const GJPKMNEFCFO = enum(i32) {
    MAIN_MISSION_SYNC_NONE = 0,
    MAIN_MISSION_SYNC_MCV = 1,
    _,
};

pub const TrackMainMissionUpdateReasonId = enum(i32) {
    TRACK_MAIN_MISSION_UPDATE_NONE = 0,
    TRACK_MAIN_MISSION_UPDATE_AUTO = 1,
    TRACK_MAIN_MISSION_UPDATE_MANUAL = 2,
    TRACK_MAIN_MISSION_UPDATE_LOGIN_REPORT = 3,
    _,
};

pub const CmdMonopolyType = enum(i32) {
    CmdMonopolyTypeNone = 0,
    CmdMonopolyGuessChooseCsReq = 7066,
    CmdMonopolyEventLoadUpdateScNotify = 7076,
    CmdMonopolyConditionUpdateScNotify = 7065,
    CmdMonopolyMoveScRsp = 7041,
    CmdMonopolyConfirmRandomCsReq = 7036,
    CmdMonopolyGameRaiseRatioScRsp = 7042,
    CmdMonopolySelectOptionScRsp = 7007,
    CmdMonopolyCheatDiceScRsp = 7092,
    CmdDailyFirstEnterMonopolyActivityCsReq = 7016,
    CmdMonopolyGetRafflePoolInfoScRsp = 7011,
    CmdMonopolyGuessDrawScNotify = 7013,
    CmdMonopolySttUpdateScNotify = 7075,
    CmdMonopolyAcceptQuizScRsp = 7015,
    CmdMonopolyLikeCsReq = 7003,
    CmdMonopolyGiveUpCurContentCsReq = 7009,
    CmdGetMbtiReportCsReq = 7086,
    CmdGetMbtiReportScRsp = 7012,
    CmdGetMonopolyFriendRankingListScRsp = 7083,
    CmdMonopolyRollRandomScRsp = 7067,
    CmdMonopolyBuyGoodsCsReq = 7074,
    CmdMonopolyGetRafflePoolInfoCsReq = 7030,
    CmdMonopolyGetRegionProgressScRsp = 7080,
    CmdGetMonopolyInfoCsReq = 7010,
    CmdMonopolyAcceptQuizCsReq = 7088,
    CmdDeleteSocialEventServerCacheCsReq = 7049,
    CmdMonopolySocialEventEffectScNotify = 7014,
    CmdMonopolyUpgradeAssetCsReq = 7054,
    CmdMonopolyActionResultScNotify = 7098,
    CmdMonopolyConfirmRandomScRsp = 7078,
    CmdMonopolyRollRandomCsReq = 7063,
    CmdMonopolyGetDailyInitItemCsReq = 7100,
    CmdMonopolyDailySettleScNotify = 7058,
    CmdMonopolyTakePhaseRewardCsReq = 7059,
    CmdMonopolyGameBingoFlipCardScRsp = 7037,
    CmdMonopolySelectOptionCsReq = 7055,
    CmdMonopolyTakeRaffleTicketRewardScRsp = 7048,
    CmdMonopolyRollDiceCsReq = 7002,
    CmdMonopolyRollDiceScRsp = 7097,
    CmdMonopolyGetRaffleTicketScRsp = 7099,
    CmdMonopolyGameSettleScNotify = 7001,
    CmdMonopolyClickCellScRsp = 7087,
    CmdMonopolyCellUpdateNotify = 7053,
    CmdMonopolyEventSelectFriendScRsp = 7023,
    CmdMonopolyGetRaffleTicketCsReq = 7022,
    CmdMonopolyContentUpdateScNotify = 7024,
    CmdMonopolyReRollRandomScRsp = 7094,
    CmdGetMonopolyDailyReportScRsp = 7084,
    CmdMonopolyScrachRaffleTicketScRsp = 7040,
    CmdGetMonopolyMbtiReportRewardCsReq = 7047,
    CmdMonopolyScrachRaffleTicketCsReq = 7093,
    CmdMonopolyClickMbtiReportScRsp = 7032,
    CmdMonopolyGetDailyInitItemScRsp = 7068,
    CmdMonopolyGameCreateScNotify = 7060,
    CmdGetMonopolyInfoScRsp = 7005,
    CmdMonopolyGameBingoFlipCardCsReq = 7035,
    CmdMonopolyClickMbtiReportCsReq = 7019,
    CmdMonopolyUpgradeAssetScRsp = 7062,
    CmdMonopolyGuessBuyInformationScRsp = 7008,
    CmdMonopolyTakeRaffleTicketRewardCsReq = 7044,
    CmdMonopolyQuizDurationChangeScNotify = 7046,
    CmdMonopolyEventSelectFriendCsReq = 7064,
    CmdGetMonopolyMbtiReportRewardScRsp = 7052,
    CmdMonopolyGameGachaScRsp = 7025,
    CmdMonopolyClickCellCsReq = 7038,
    CmdMonopolyGameGachaCsReq = 7051,
    CmdMonopolyBuyGoodsScRsp = 7090,
    CmdGetMonopolyFriendRankingListCsReq = 7082,
    CmdGetSocialEventServerCacheScRsp = 7018,
    CmdMonopolyGetRegionProgressCsReq = 7027,
    CmdMonopolyLikeScNotify = 7004,
    CmdDeleteSocialEventServerCacheScRsp = 7096,
    CmdMonopolyGiveUpCurContentScRsp = 7020,
    CmdMonopolyMoveCsReq = 7006,
    CmdDailyFirstEnterMonopolyActivityScRsp = 7026,
    CmdMonopolyReRollRandomCsReq = 7072,
    CmdMonopolyTakePhaseRewardScRsp = 7056,
    CmdMonopolyGuessChooseScRsp = 7028,
    CmdGetSocialEventServerCacheCsReq = 7095,
    CmdMonopolyCheatDiceCsReq = 7069,
    CmdMonopolyLikeScRsp = 7057,
    CmdMonopolyGuessBuyInformationCsReq = 7089,
    CmdMonopolyGameRaiseRatioCsReq = 7073,
    CmdGetMonopolyDailyReportCsReq = 7021,
    _,
};

pub const GOJOINDBKIK = enum(i32) {
    MONOPOLY_SOCIAL_EVENT_STATUS_NONE = 0,
    MONOPOLY_SOCIAL_EVENT_STATUS_WAITING_SELECT_FRIEND = 1,
    _,
};

pub const IHGJLLNGDKL = enum(i32) {
    MONOPOLY_CELL_STATE_IDLE = 0,
    MONOPOLY_CELL_STATE_BARRIER = 1,
    MONOPOLY_CELL_STATE_GROUND = 2,
    MONOPOLY_CELL_STATE_FINISH = 3,
    _,
};

pub const GKEJFKAKENM = enum(i32) {
    MONOPOLY_ACTION_RESULT_SOURCE_TYPE_NONE = 0,
    MONOPOLY_ACTION_RESULT_SOURCE_TYPE_EFFECT = 1,
    MONOPOLY_ACTION_RESULT_SOURCE_TYPE_ASSET_BONUS = 2,
    MONOPOLY_ACTION_RESULT_SOURCE_TYPE_ASSET_TAX = 3,
    MONOPOLY_ACTION_RESULT_SOURCE_TYPE_ASSET_UPGRADE = 4,
    MONOPOLY_ACTION_RESULT_SOURCE_TYPE_GAME_SETTLE = 5,
    MONOPOLY_ACTION_RESULT_SOURCE_TYPE_BUY_GOODS = 6,
    MONOPOLY_ACTION_RESULT_SOURCE_TYPE_CLICK = 7,
    MONOPOLY_ACTION_RESULT_SOURCE_TYPE_SOCIAL_EVENT = 8,
    MONOPOLY_ACTION_RESULT_SOURCE_TYPE_LIKE = 9,
    MONOPOLY_ACTION_RESULT_SOURCE_TYPE_QUIZ_GAME_SETTLE = 10,
    _,
};

pub const CmdMultiplayerType = enum(i32) {
    CmdMultiplayerTypeNone = 0,
    CmdMultiplayerMatch3FinishScNotify = 1041,
    CmdMultiplayerFightGameStartScNotify = 1097,
    CmdMultiplayerFightGameStateScRsp = 1005,
    CmdMultiplayerFightGameFinishScNotify = 1006,
    CmdMultiplayerGetFightGateCsReq = 1098,
    CmdMultiplayerFightGameStateCsReq = 1010,
    CmdMultiplayerFightGiveUpCsReq = 1079,
    CmdMultiplayerGetFightGateScRsp = 1053,
    CmdMultiplayerFightGiveUpScRsp = 1002,
    _,
};

pub const CmdMultipleDropType = enum(i32) {
    CmdMultipleDropTypeNone = 0,
    CmdGetMultipleDropInfoScRsp = 4605,
    CmdGetPlayerReturnMultiDropInfoScRsp = 4679,
    CmdMultipleDropInfoScNotify = 4698,
    CmdGetPlayerReturnMultiDropInfoCsReq = 4653,
    CmdMultipleDropInfoNotify = 4602,
    CmdGetMultipleDropInfoCsReq = 4610,
    _,
};

pub const CmdMuseumType = enum(i32) {
    CmdMuseumTypeNone = 0,
    CmdGetMuseumInfoScRsp = 4305,
    CmdUpgradeAreaStatScRsp = 4367,
    CmdSetStuffToAreaScRsp = 4302,
    CmdMuseumTargetRewardNotify = 4369,
    CmdMuseumTakeCollectRewardCsReq = 4392,
    CmdUpgradeAreaScRsp = 4326,
    CmdMuseumRandomEventSelectCsReq = 4390,
    CmdGetMuseumInfoCsReq = 4310,
    CmdUpgradeAreaCsReq = 4316,
    CmdUpgradeAreaStatCsReq = 4363,
    CmdBuyNpcStuffScRsp = 4353,
    CmdFinishCurTurnCsReq = 4307,
    CmdGetStuffScNotify = 4341,
    CmdMuseumRandomEventStartScNotify = 4336,
    CmdMuseumFundsChangedScNotify = 4394,
    CmdSetStuffToAreaCsReq = 4379,
    CmdGetExhibitScNotify = 4355,
    CmdMuseumRandomEventSelectScRsp = 4354,
    CmdBuyNpcStuffCsReq = 4398,
    CmdMuseumTargetStartNotify = 4309,
    CmdMuseumInfoChangedScNotify = 4372,
    CmdMuseumTakeCollectRewardScRsp = 4324,
    CmdMuseumRandomEventQueryScRsp = 4374,
    CmdFinishCurTurnScRsp = 4339,
    CmdMuseumDispatchFinishedScNotify = 4362,
    CmdRemoveStuffFromAreaCsReq = 4397,
    CmdRemoveStuffFromAreaScRsp = 4306,
    CmdMuseumTargetMissionFinishNotify = 4320,
    CmdMuseumRandomEventQueryCsReq = 4378,
    _,
};

pub const AIHADKBHPBM = enum(i32) {
    MUSEUM_RANDOM_EVENT_STATE_NONE = 0,
    MUSEUM_RANDOM_EVENT_STATE_START = 1,
    MUSEUM_RANDOM_EVENT_STATE_PROCESSING = 2,
    MUSEUM_RANDOM_EVENT_STATE_FINISH = 3,
    _,
};

pub const KAMLGLMNJGJ = enum(i32) {
    WORK_POS_NONE = 0,
    WORK_POS_1 = 1,
    WORK_POS_2 = 2,
    WORK_POS_3 = 3,
    _,
};

pub const IBBGDGGHEJL = enum(i32) {
    STAT_TYPE_NONE = 0,
    STAT_TYPE_ART = 1,
    STAT_TYPE_CULTURE = 2,
    STAT_TYPE_POPULAR = 3,
    _,
};

pub const KGJJJKPDCFG = enum(i32) {
    UNKNOW = 0,
    MISSION_REWARD = 1,
    EVENT_BUY_STUFF = 2,
    MARKET_BUY_STUFF = 3,
    QUEST_REWARD = 4,
    INITIAL = 5,
    PHASE_FINISH_REWARD = 6,
    _,
};

pub const CmdMusicRhythmType = enum(i32) {
    CmdMusicRhythmTypeNone = 0,
    CmdMusicRhythmDataCsReq = 7600,
    CmdMusicRhythmSaveSongConfigDataScRsp = 7582,
    CmdMusicRhythmMaxDifficultyLevelsUnlockNotify = 7576,
    CmdMusicRhythmUnlockSongNotify = 7599,
    CmdMusicRhythmStartLevelCsReq = 7574,
    CmdMusicRhythmStartLevelScRsp = 7592,
    CmdMusicRhythmSaveSongConfigDataCsReq = 7596,
    CmdMusicRhythmUnlockSongSfxScNotify = 7577,
    CmdMusicRhythmFinishLevelScRsp = 7572,
    CmdMusicRhythmUnlockTrackScNotify = 7571,
    CmdMusicRhythmFinishLevelCsReq = 7598,
    CmdMusicRhythmDataScRsp = 7585,
    _,
};

pub const EPGDHHHDJDC = enum(i32) {
    STATUS_CLOSE = 0,
    STATUS_OPEN = 1,
    _,
};

pub const CmdOfferingType = enum(i32) {
    CmdOfferingTypeNone = 0,
    CmdTakeOfferingRewardScRsp = 6932,
    CmdSubmitOfferingItemScRsp = 6939,
    CmdGetOfferingInfoCsReq = 6921,
    CmdOfferingInfoScNotify = 6927,
    CmdGetOfferingInfoScRsp = 6935,
    CmdTakeOfferingRewardCsReq = 6922,
    CmdSubmitOfferingItemCsReq = 6937,
    _,
};

pub const OfferingState = enum(i32) {
    OFFERING_STATE_NONE = 0,
    OFFERING_STATE_LOCK = 1,
    OFFERING_STATE_OPEN = 2,
    _,
};

pub const CmdPamMissionType = enum(i32) {
    CmdPamMissionTypeNone = 0,
    CmdAcceptedPamMissionExpireScRsp = 4005,
    CmdAcceptedPamMissionExpireCsReq = 4010,
    CmdSyncAcceptedPamMissionNotify = 4098,
    _,
};

pub const CmdPamSkinType = enum(i32) {
    CmdPamSkinTypeNone = 0,
    CmdSelectPamSkinCsReq = 8137,
    CmdGetPamSkinDataCsReq = 8121,
    CmdSelectPamSkinScRsp = 8139,
    CmdUnlockPamSkinScNotify = 8122,
    CmdGetPamSkinDataScRsp = 8135,
    _,
};

pub const CmdParkourType = enum(i32) {
    CmdParkourTypeNone = 0,
    CmdParkourEndLevelScRsp = 8394,
    CmdParkourGetRankingInfoScRsp = 8399,
    CmdParkourGetDataScRsp = 8395,
    CmdParkourGetDataCsReq = 8381,
    CmdParkourStartLevelScRsp = 8392,
    CmdParkourGetRankingInfoCsReq = 8397,
    CmdParkourStartLevelCsReq = 8382,
    CmdParkourEndLevelCsReq = 8387,
    _,
};

pub const POAHABDKPKJ = enum(i32) {
    PARKOUR_END_LEVEL_REASON_NONE = 0,
    PARKOUR_END_LEVEL_REASON_FINISH = 1,
    PARKOUR_END_LEVEL_REASON_QUIT = 2,
    _,
};

pub const HCFFFEIMCMF = enum(i32) {
    PARKOUR_LEVEL_STT_NONE = 0,
    PARKOUR_LEVEL_STT_BOMBED_BY_SPARKLE_FIGURE = 1,
    PARKOUR_LEVEL_STT_DESTROY_SPARKLE_FIGURE = 2,
    _,
};

pub const CmdPetType = enum(i32) {
    CmdPetTypeNone = 0,
    CmdSummonPetCsReq = 7602,
    CmdRecallPetCsReq = 7612,
    CmdGetPetDataScRsp = 7601,
    CmdRecallPetScRsp = 7624,
    CmdCurPetChangedScNotify = 7604,
    CmdGetPetDataCsReq = 7606,
    CmdSummonPetScRsp = 7607,
    _,
};

pub const CDEFBKPCPPA = enum(i32) {
    PET_OPERATION_TYPE_NONE = 0,
    PET_OPERATION_TYPE_SUMMON = 1,
    PET_OPERATION_TYPE_RECALL = 2,
    _,
};

pub const CmdPhoneType = enum(i32) {
    CmdPhoneTypeNone = 0,
    CmdSelectChatBubbleCsReq = 5198,
    CmdSelectPhoneThemeScRsp = 5197,
    CmdSelectChatBubbleScRsp = 5153,
    CmdSelectPhoneCaseCsReq = 5141,
    CmdUnlockPhoneThemeScNotify = 5106,
    CmdUnlockChatBubbleScNotify = 5179,
    CmdGetPhoneDataScRsp = 5105,
    CmdUnlockPhoneCaseScNotify = 5107,
    CmdSelectPhoneThemeCsReq = 5102,
    CmdSelectPhoneCaseScRsp = 5155,
    CmdGetPhoneDataCsReq = 5110,
    _,
};

pub const CmdPlanetFesType = enum(i32) {
    CmdPlanetFesTypeNone = 0,
    CmdPlanetFesUseItemCsReq = 8219,
    CmdPlanetFesTakeQuestRewardScRsp = 8237,
    CmdPlanetFesUpgradeFesLevelCsReq = 8235,
    CmdPlanetFesGameBingoFlipScRsp = 8233,
    CmdPlanetFesGetAvatarStatCsReq = 8231,
    CmdPlanetFesDoGachaCsReq = 8232,
    CmdPlanetFesBusinessDayRefreshEventScRsp = 8240,
    CmdPlanetFesCollectAllIncomeCsReq = 8218,
    CmdPlanetFesClientStatusCsReq = 8204,
    CmdPlanetFesSetCustomKeyValueCsReq = 8216,
    CmdPlanetFesDeliverPamCargoScRsp = 8212,
    CmdPlanetFesFriendRankingInfoChangeScNotify = 8217,
    CmdPlanetFesDealAvatarEventOptionItemScRsp = 8214,
    CmdPlanetFesGetBusinessDayInfoScRsp = 8220,
    CmdPlanetFesChooseAvatarEventOptionCsReq = 8208,
    CmdPlanetFesBonusEventInteractCsReq = 8210,
    CmdPlanetFesBonusEventInteractScRsp = 8245,
    CmdPlanetFesStartMiniGameScRsp = 8236,
    CmdPlanetFesUpgradeSkillLevelScRsp = 8247,
    CmdPlanetFesChooseAvatarEventOptionScRsp = 8203,
    CmdPlanetFesUpgradeSkillLevelCsReq = 8249,
    CmdPlanetFesDoGachaScRsp = 8229,
    CmdPlanetFesSetAvatarWorkCsReq = 8201,
    CmdPlanetFesAvatarLevelUpScRsp = 8206,
    CmdPlanetFesGetAvatarStatScRsp = 8241,
    CmdPlanetFesSetCustomKeyValueScRsp = 8239,
    CmdPlanetFesCollectAllIncomeScRsp = 8213,
    CmdPlanetFesCollectIncomeScRsp = 8202,
    CmdPlanetFesSyncChangeScNotify = 8246,
    CmdPlanetFesClientStatusScRsp = 8243,
    CmdGetPlanetFesDataCsReq = 8223,
    CmdPlanetFesTakeRegionPhaseRewardScRsp = 8226,
    CmdPlanetFesBusinessDayRefreshEventCsReq = 8209,
    CmdPlanetFesGameBingoFlipCsReq = 8234,
    CmdPlanetFesSetAvatarWorkScRsp = 8228,
    CmdPlanetFesCollectIncomeCsReq = 8230,
    CmdPlanetFesBuyLandScRsp = 8242,
    CmdPlanetFesGetFriendRankingInfoListScRsp = 8222,
    CmdPlanetFesTakeQuestRewardCsReq = 8250,
    CmdPlanetFesAvatarLevelUpCsReq = 8205,
    CmdPlanetFesDeliverPamCargoCsReq = 8207,
    CmdPlanetFesUpgradeFesLevelScRsp = 8225,
    CmdPlanetFesBuyLandCsReq = 8227,
    CmdGetPlanetFesDataScRsp = 8221,
    CmdPlanetFesUseItemScRsp = 8238,
    CmdPlanetFesGetBusinessDayInfoCsReq = 8248,
    CmdPlanetFesDealAvatarEventOptionItemCsReq = 8215,
    CmdPlanetFesTakeRegionPhaseRewardCsReq = 8224,
    CmdPlanetFesStartMiniGameCsReq = 8211,
    CmdPlanetFesGetFriendRankingInfoListCsReq = 8244,
    _,
};

pub const GMFEJEFIBBI = enum(i32) {
    PLANET_FES_QUEST_NONE = 0,
    PLANET_FES_QUEST_DOING = 1,
    PLANET_FES_QUEST_FINISH = 2,
    PLANET_FES_QUEST_CLOSE = 3,
    _,
};

pub const DFHEJCIJBEJ = enum(i32) {
    PLANET_FES_BUSINESS_EVENT_CHANGE_REASON_NONE = 0,
    PLANET_FES_BUSINESS_EVENT_AVATAR_CHANGE = 1,
    PLANET_FES_BUSINESS_EVENT_FINISH_GAME = 2,
    _,
};

pub const IOCPJFKGKDG = enum(i32) {
    PLANET_FES_CUSTOM_KEY_NONE = 0,
    PLANET_FES_CUSTOM_KEY_UNLOCK_INFINITE_BUSINESS_DAY_PERFORMANCE = 1,
    PLANET_FES_CUSTOM_KEY_BUSINESS_DAY_START_PERFORMANCE_LAST_SEEN_DAY = 2,
    PLANET_FES_CUSTOM_KEY_BUSINESS_DAY_UNLOCK_PERFORMANCE_LAST_SEEN_DAY = 3,
    PLANET_FES_CUSTOM_KEY_SUMMARY_SHOW = 4,
    _,
};

pub const CmdPlanetFesExtType = enum(i32) {
    CmdPlanetFesExtTypeNone = 0,
    CmdPlanetFesLargeBonusInteractScRsp = 8295,
    CmdPlanetFesHandleCardPieceApplyCsReq = 8332,
    CmdPlanetFesGetFriendCardPieceCsReq = 8336,
    CmdPlanetFesGiveCardPieceCsReq = 8303,
    CmdPlanetFesGiveCardPieceScRsp = 8322,
    CmdPlanetFesChangeCardPieceApplyPermissionCsReq = 8292,
    CmdPlanetFesChangeCardPieceApplyPermissionScRsp = 8291,
    CmdPlanetFesEnterNextBusinessDayCsReq = 8296,
    CmdPlanetFesApplyCardPieceScRsp = 8317,
    CmdPlanetFesLargeBonusInteractCsReq = 8319,
    CmdPlanetFesApplyCardPieceCsReq = 8318,
    CmdPlanetFesEnterNextBusinessDayScRsp = 8340,
    CmdPlanetFesGetExtraCardPieceInfoScRsp = 8311,
    CmdPlanetFesGetOfferedCardPieceScRsp = 8308,
    CmdPlanetFesHandleCardPieceApplyScRsp = 8294,
    CmdPlanetFesGetFriendCardPieceScRsp = 8320,
    CmdPlanetFesGetOfferedCardPieceCsReq = 8333,
    CmdPlanetFesGetExtraCardPieceInfoCsReq = 8313,
    _,
};

pub const AOPKIFDMADI = enum(i32) {
    PLANET_FES_LARGE_BONUS_INTERACT_START = 0,
    PLANET_FES_LARGE_BONUS_INTERACT_REPORT = 1,
    PLANET_FES_LARGE_BONUS_INTERACT_FINISH = 2,
    _,
};

pub const CmdPlayerType = enum(i32) {
    CmdPlayerTypeNone = 0,
    CmdGetBasicInfoScRsp = 71,
    CmdGetAuthkeyCsReq = 67,
    CmdAntiAddictScNotify = 36,
    CmdSetAvatarPathCsReq = 84,
    CmdPlayerHeartBeatScRsp = 12,
    CmdClientDownloadDataScNotify = 46,
    CmdUpdatePlayerSettingCsReq = 30,
    CmdUpdateFeatureSwitchScNotify = 85,
    CmdStaminaInfoScNotify = 80,
    CmdSetGameplayBirthdayScRsp = 82,
    CmdPlayerLogoutCsReq = 98,
    CmdAceAntiCheaterCsReq = 83,
    CmdGetVideoVersionKeyCsReq = 22,
    CmdClientObjUploadScRsp = 76,
    CmdGetLevelRewardScRsp = 9,
    CmdGateServerScNotify = 64,
    CmdSetMultipleAvatarPathsCsReq = 32,
    CmdGmTalkScRsp = 7,
    CmdPlayerKickOutScNotify = 41,
    CmdGetGameStateServiceConfigScRsp = 33,
    CmdQueryProductInfoScRsp = 13,
    CmdSetNicknameCsReq = 78,
    CmdSetGenderScRsp = 60,
    CmdGetAuthkeyScRsp = 72,
    CmdUpdatePlayerSettingScRsp = 11,
    CmdPlayerLoginScRsp = 5,
    CmdGetSecretKeyInfoScRsp = 49,
    CmdServerAnnounceNotify = 73,
    CmdClientObjDownloadDataScNotify = 59,
    CmdGetBasicInfoCsReq = 29,
    CmdSetNicknameScRsp = 74,
    CmdSetRedPointStatusScNotify = 44,
    CmdRetcodeNotify = 4,
    CmdSetMultipleAvatarPathsScRsp = 34,
    CmdSetLanguageScRsp = 24,
    CmdExchangeStaminaScRsp = 63,
    CmdSetGenderCsReq = 15,
    CmdPlayerGetTokenCsReq = 79,
    CmdGetLevelRewardTakenListCsReq = 90,
    CmdPlayerHeartBeatCsReq = 86,
    CmdMonthCardRewardNotify = 57,
    CmdAceAntiCheaterScRsp = 3,
    CmdGetSecretKeyInfoCsReq = 18,
    CmdDailyRefreshNotify = 45,
    CmdPlayerLoginFinishScRsp = 17,
    CmdGmTalkCsReq = 55,
    CmdSetPlayerInfoScRsp = 28,
    CmdUpdatePsnSettingsInfoScRsp = 47,
    CmdQueryProductInfoCsReq = 8,
    CmdUnlockAvatarPathCsReq = 65,
    CmdPlayerLogoutScRsp = 53,
    CmdUnlockAvatarPathScRsp = 19,
    CmdReserveStaminaExchangeCsReq = 40,
    CmdGetLevelRewardTakenListScRsp = 54,
    CmdPlayerGetTokenScRsp = 2,
    CmdPlayerLoginCsReq = 10,
    CmdGetLevelRewardCsReq = 62,
    CmdGetGameStateServiceConfigCsReq = 43,
    CmdSetGameplayBirthdayCsReq = 58,
    CmdAvatarPathChangedNotify = 68,
    CmdGmTalkScNotify = 6,
    CmdReserveStaminaExchangeScRsp = 27,
    CmdRegionStopScNotify = 94,
    CmdExchangeStaminaCsReq = 26,
    CmdClientObjUploadCsReq = 56,
    CmdSetAvatarPathScRsp = 38,
    CmdPlayerLoginFinishCsReq = 96,
    CmdFeatureSwitchClosedScNotify = 23,
    CmdSetLanguageCsReq = 92,
    CmdUpdatePsnSettingsInfoCsReq = 75,
    CmdGetVideoVersionKeyScRsp = 99,
    CmdSetPlayerInfoCsReq = 66,
    _,
};

pub const ILPMNLDGEAK = enum(i32) {
    AUTHKEY_SIGN_TYPE_NONE = 0,
    AUTHKEY_SIGN_TYPE_DEFAULT = 1,
    AUTHKEY_SIGN_TYPE_RSA = 2,
    _,
};

pub const JIDIECGHKGK = enum(i32) {
    OBJ_CONTENT_JSON = 0,
    OBJ_CONTENT_PB = 1,
    _,
};

pub const CmdPlayerBoardType = enum(i32) {
    CmdPlayerBoardTypeNone = 0,
    CmdSetSignatureScRsp = 2807,
    CmdSetAssistAvatarScRsp = 2816,
    CmdSetAssistAvatarCsReq = 2839,
    CmdSetSignatureCsReq = 2855,
    CmdSetIsDisplayAvatarInfoScRsp = 2806,
    CmdSetHeadIconCsReq = 2898,
    CmdSetPersonalCardCsReq = 2826,
    CmdSetDisplayAvatarCsReq = 2879,
    CmdSetPersonalCardScRsp = 2863,
    CmdSetHeadIconScRsp = 2853,
    CmdSetIsDisplayAvatarInfoCsReq = 2897,
    CmdGetPlayerBoardDataCsReq = 2810,
    CmdSetDisplayAvatarScRsp = 2802,
    CmdGetPlayerBoardDataScRsp = 2805,
    CmdUnlockHeadIconScNotify = 2841,
    _,
};

pub const CmdPlayerReturnType = enum(i32) {
    CmdPlayerReturnTypeNone = 0,
    CmdPlayerReturnTakeRewardScRsp = 4506,
    CmdPlayerReturnPointChangeScNotify = 4553,
    CmdPlayerReturnSignScRsp = 4598,
    CmdPlayerReturnTakeRelicCsReq = 4539,
    CmdPlayerReturnSignCsReq = 4505,
    CmdPlayerReturnTakeRewardCsReq = 4597,
    CmdPlayerReturnStartScNotify = 4510,
    CmdPlayerReturnInfoQueryScRsp = 4555,
    CmdPlayerReturnTakePointRewardCsReq = 4579,
    CmdPlayerReturnTakeRelicScRsp = 4516,
    CmdPlayerReturnInfoQueryCsReq = 4541,
    CmdPlayerReturnTakePointRewardScRsp = 4502,
    CmdPlayerReturnForceFinishScNotify = 4507,
    _,
};

pub const NOBPMMNFENJ = enum(i32) {
    PLAYER_RETURN_NONE = 0,
    PLAYER_RETURN_PROCESSING = 1,
    PLAYER_RETURN_FINISH = 2,
    _,
};

pub const CmdPlotType = enum(i32) {
    CmdPlotTypeNone = 0,
    CmdFinishPlotCsReq = 1110,
    CmdFinishPlotScRsp = 1105,
    _,
};

pub const CmdPunkLordType = enum(i32) {
    CmdPunkLordTypeNone = 0,
    CmdSharePunkLordMonsterCsReq = 3279,
    CmdPunkLordDataChangeNotify = 3242,
    CmdPunkLordMonsterInfoScNotify = 3263,
    CmdGetPunkLordMonsterDataCsReq = 3210,
    CmdSharePunkLordMonsterScRsp = 3202,
    CmdPunkLordMonsterKilledNotify = 3292,
    CmdTakePunkLordPointRewardScRsp = 3226,
    CmdSummonPunkLordMonsterScRsp = 3206,
    CmdSummonPunkLordMonsterCsReq = 3297,
    CmdGetPunkLordDataScRsp = 3272,
    CmdTakePunkLordPointRewardCsReq = 3216,
    CmdPunkLordBattleResultScNotify = 3254,
    CmdGetPunkLordBattleRecordScRsp = 3251,
    CmdStartPunkLordRaidScRsp = 3253,
    CmdTakeKilledPunkLordMonsterScoreScRsp = 3273,
    CmdPunkLordRaidTimeOutScNotify = 3236,
    CmdTakeKilledPunkLordMonsterScoreCsReq = 3224,
    CmdGetKilledPunkLordMonsterDataScRsp = 3209,
    CmdGetPunkLordMonsterDataScRsp = 3205,
    CmdGetPunkLordBattleRecordCsReq = 3201,
    CmdStartPunkLordRaidCsReq = 3298,
    CmdGetPunkLordDataCsReq = 3267,
    CmdGetKilledPunkLordMonsterDataCsReq = 3262,
    _,
};

pub const NLEFPBICECN = enum(i32) {
    PUNK_LORD_OPERATION_NONE = 0,
    PUNK_LORD_OPERATION_REFRESH = 1,
    PUNK_LORD_OPERATION_SHARE = 2,
    PUNK_LORD_OPERATION_START_RAID = 3,
    PUNK_LORD_OPERATION_GET_BATTLE_RECORD = 4,
    _,
};

pub const CmdQuestType = enum(i32) {
    CmdQuestTypeNone = 0,
    CmdFinishQuestScRsp = 907,
    CmdBatchGetQuestDataScRsp = 967,
    CmdGetQuestRecordScRsp = 906,
    CmdTakeQuestRewardScRsp = 953,
    CmdQuestRecordScNotify = 941,
    CmdBatchGetQuestDataCsReq = 963,
    CmdGetQuestDataScRsp = 905,
    CmdFinishQuestCsReq = 955,
    CmdTakeQuestOptionalRewardScRsp = 916,
    CmdTakeQuestRewardCsReq = 998,
    CmdGetQuestRecordCsReq = 997,
    CmdGetQuestDataCsReq = 910,
    CmdTakeQuestOptionalRewardCsReq = 939,
    _,
};

pub const QuestStatus = enum(i32) {
    QUEST_NONE = 0,
    QUEST_DOING = 1,
    QUEST_FINISH = 2,
    QUEST_CLOSE = 3,
    QUEST_DELETE = 4,
    _,
};

pub const CmdRaidType = enum(i32) {
    CmdRaidTypeNone = 0,
    CmdStartRaidCsReq = 2210,
    CmdRaidInfoNotify = 2279,
    CmdChallengeRaidNotify = 2255,
    CmdGetRaidInfoCsReq = 2207,
    CmdTakeChallengeRaidRewardCsReq = 2206,
    CmdLeaveRaidCsReq = 2298,
    CmdGetRaidInfoScRsp = 2239,
    CmdGetAllSaveRaidCsReq = 2272,
    CmdDelSaveRaidScNotify = 2236,
    CmdGetChallengeRaidInfoScRsp = 2297,
    CmdGetSaveRaidScRsp = 2267,
    CmdSetClientRaidTargetCountScRsp = 2226,
    CmdGetSaveRaidCsReq = 2263,
    CmdStartRaidScRsp = 2205,
    CmdGetAllSaveRaidScRsp = 2294,
    CmdTakeChallengeRaidRewardScRsp = 2241,
    CmdSetClientRaidTargetCountCsReq = 2216,
    CmdGetChallengeRaidInfoCsReq = 2202,
    CmdRaidKickByServerScNotify = 2278,
    CmdLeaveRaidScRsp = 2253,
    _,
};

pub const RaidStatus = enum(i32) {
    RAID_STATUS_NONE = 0,
    RAID_STATUS_DOING = 1,
    RAID_STATUS_FINISH = 2,
    RAID_STATUS_FAILED = 3,
    _,
};

pub const FOCHDFJANPC = enum(i32) {
    RAID_TARGET_STATUS_NONE = 0,
    RAID_TARGET_STATUS_DOING = 1,
    RAID_TARGET_STATUS_FINISH = 2,
    _,
};

pub const EGKFNDOOPNN = enum(i32) {
    RAID_KICK_REASON_NONE = 0,
    RAID_KICK_REASON_ACTIVITY_SCHEDULE_FINISH = 1,
    _,
};

pub const CmdRaidCollectionType = enum(i32) {
    CmdRaidCollectionTypeNone = 0,
    CmdRaidCollectionDataCsReq = 6941,
    CmdRaidCollectionEnterNextRaidCsReq = 6959,
    CmdRaidCollectionDataScNotify = 6957,
    CmdRaidCollectionEnterNextRaidScRsp = 6942,
    CmdRaidCollectionDataScRsp = 6955,
    _,
};

pub const CmdRechargeGiftType = enum(i32) {
    CmdRechargeGiftTypeNone = 0,
    CmdTakeRechargeBenefitRewardScRsp = 8370,
    CmdGetRechargeBenefitInfoCsReq = 8362,
    CmdGetRechargeGiftInfoCsReq = 8361,
    CmdTakeRechargeBenefitRewardCsReq = 8374,
    CmdGetRechargeBenefitInfoScRsp = 8372,
    CmdSyncRechargeBenefitInfoScNotify = 8367,
    CmdTakeRechargeGiftRewardScRsp = 8379,
    CmdTakeRechargeGiftRewardCsReq = 8377,
    CmdGetRechargeGiftInfoScRsp = 8375,
    _,
};

pub const GJNKIPJFKJN = enum(i32) {
    CMD_RECOMMEND_TYPE_NONE = 0,
    CmdGetBigDataRecommendCsReq = 2428,
    CmdGetChallengeRecommendLineupListScRsp = 2401,
    CmdGetBigDataRecommendScRsp = 2427,
    CmdGetBigDataAllRecommendScRsp = 2404,
    CmdGetBigDataAllRecommendCsReq = 2442,
    CmdGetChallengeRecommendLineupListCsReq = 2402,
    _,
};

pub const BigDataRecommendType = enum(i32) {
    BIG_DATA_RECOMMEND_TYPE_NONE = 0,
    BIG_DATA_RECOMMEND_TYPE_EQUIPMENT = 1,
    BIG_DATA_RECOMMEND_TYPE_RELIC_SUIT = 2,
    BIG_DATA_RECOMMEND_TYPE_RELIC_AVATAR = 3,
    BIG_DATA_RECOMMEND_TYPE_AVATAR_RELIC = 4,
    BIG_DATA_RECOMMEND_TYPE_LOCAL_LEGEND = 5,
    _,
};

pub const CmdRedDotType = enum(i32) {
    CmdRedDotTypeNone = 0,
    CmdGetSingleRedDotParamGroupCsReq = 5902,
    CmdUpdateRedDotDataScRsp = 5930,
    CmdGetAllRedDotDataScRsp = 5921,
    CmdUpdateRedDotDataCsReq = 5946,
    CmdGetAllRedDotDataCsReq = 5923,
    CmdGetSingleRedDotParamGroupScRsp = 5901,
    _,
};

pub const OJLJHFNFDKP = enum(i32) {
    UPDATE_REDDOT_NONE = 0,
    UPDATE_REDDOT_ADD = 1,
    UPDATE_REDDOT_REPLACE = 2,
    _,
};

pub const CmdRelicSmartWearType = enum(i32) {
    CmdRelicSmartWearTypeNone = 0,
    CmdRelicSmartWearDeletePinRelicScRsp = 8263,
    CmdRelicSmartWearAddPlanCsReq = 8267,
    CmdRelicSmartWearGetPinRelicCsReq = 8270,
    CmdRelicSmartWearUpdatePlanCsReq = 8252,
    CmdRelicSmartWearAddPlanScRsp = 8269,
    CmdRelicSmartWearUpdatePlanScRsp = 8262,
    CmdRelicSmartWearUpdatePinRelicScNotify = 8254,
    CmdRelicSmartWearGetPlanCsReq = 8251,
    CmdRelicSmartWearDeletePlanScRsp = 8264,
    CmdRelicSmartWearDeletePlanCsReq = 8257,
    CmdRelicSmartWearGetPlanScRsp = 8265,
    CmdRelicSmartWearGetPinRelicScRsp = 8253,
    CmdRelicSmartWearDeletePinRelicCsReq = 8268,
    CmdRelicSmartWearUpdatePinRelicCsReq = 8259,
    CmdRelicSmartWearUpdatePinRelicScRsp = 8258,
    _,
};

pub const ANCCGLMMDJJ = enum(i32) {
    RELIC_SMART_WEAR_PLAN_TYPE_NONE = 0,
    RELIC_SMART_WEAR_PLAN_TYPE_BIG_DATA = 1,
    RELIC_SMART_WEAR_PLAN_TYPE_SYSTEM = 2,
    RELIC_SMART_WEAR_PLAN_TYPE_CUSTOM = 3,
    _,
};

pub const CmdReplayType = enum(i32) {
    CmdReplayTypeNone = 0,
    CmdGetPlayerReplayInfoCsReq = 3598,
    CmdGetPlayerReplayInfoScRsp = 3553,
    CmdGetReplayTokenScRsp = 3505,
    CmdGetReplayTokenCsReq = 3510,
    _,
};

pub const CmdRndOptionType = enum(i32) {
    CmdRndOptionTypeNone = 0,
    CmdGetRndOptionCsReq = 3410,
    CmdDailyFirstMeetPamCsReq = 3498,
    CmdDailyFirstMeetPamScRsp = 3453,
    CmdGetRndOptionScRsp = 3405,
    _,
};

pub const CmdRogueType = enum(i32) {
    CmdRogueTypeNone = 0,
    CmdGetRogueBuffEnhanceInfoCsReq = 1854,
    CmdFinishAeonDialogueGroupCsReq = 1900,
    CmdLeaveRogueCsReq = 1897,
    CmdSyncRogueReviveInfoScNotify = 1842,
    CmdEnterRogueCsReq = 1879,
    CmdFinishAeonDialogueGroupScRsp = 1868,
    CmdTakeRogueAeonLevelRewardScRsp = 1840,
    CmdLeaveRogueScRsp = 1806,
    CmdPickRogueAvatarCsReq = 1867,
    CmdTakeRogueScoreRewardCsReq = 1874,
    CmdTakeRogueAeonLevelRewardCsReq = 1893,
    CmdEnhanceRogueBuffScRsp = 1820,
    CmdGetRogueInitialScoreScRsp = 1889,
    CmdReviveRogueAvatarScRsp = 1878,
    CmdStartRogueScRsp = 1853,
    CmdSyncRogueAeonLevelUpRewardScNotify = 1811,
    CmdQuitRogueScRsp = 1851,
    CmdReviveRogueAvatarCsReq = 1836,
    CmdSyncRogueExploreWinScNotify = 1835,
    CmdGetRogueAeonInfoCsReq = 1838,
    CmdEnableRogueTalentCsReq = 1832,
    CmdEnterRogueMapRoomScRsp = 1866,
    CmdStartRogueCsReq = 1898,
    CmdQuitRogueCsReq = 1801,
    CmdOpenRogueChestScRsp = 1804,
    CmdExchangeRogueRewardKeyCsReq = 1886,
    CmdGetRogueTalentInfoCsReq = 1865,
    CmdSyncRogueRewardInfoScNotify = 1850,
    CmdOpenRogueChestCsReq = 1857,
    CmdEnterRogueScRsp = 1802,
    CmdSyncRogueVirtualItemInfoScNotify = 1877,
    CmdSyncRogueAeonScNotify = 1899,
    CmdGetRogueScoreRewardInfoScRsp = 1856,
    CmdEnterRogueMapRoomCsReq = 1860,
    CmdGetRogueBuffEnhanceInfoScRsp = 1862,
    CmdGetRogueScoreRewardInfoCsReq = 1859,
    CmdSyncRogueFinishScNotify = 1863,
    CmdExchangeRogueRewardKeyScRsp = 1812,
    CmdGetRogueTalentInfoScRsp = 1819,
    CmdSyncRogueAreaUnlockScNotify = 1844,
    CmdEnableRogueTalentScRsp = 1834,
    CmdEnhanceRogueBuffCsReq = 1809,
    CmdGetRogueAeonInfoScRsp = 1887,
    CmdSyncRogueStatusScNotify = 1870,
    CmdTakeRogueScoreRewardScRsp = 1890,
    CmdSyncRoguePickAvatarInfoScNotify = 1861,
    CmdSyncRogueMapRoomScNotify = 1808,
    CmdGetRogueInitialScoreCsReq = 1828,
    CmdSyncRogueSeasonFinishScNotify = 1837,
    CmdPickRogueAvatarScRsp = 1872,
    CmdGetRogueInfoCsReq = 1810,
    CmdGetRogueInfoScRsp = 1805,
    CmdSyncRogueGetItemScNotify = 1848,
    _,
};

pub const RogueStatus = enum(i32) {
    ROGUE_STATUS_NONE = 0,
    ROGUE_STATUS_DOING = 1,
    ROGUE_STATUS_PENDING = 2,
    ROGUE_STATUS_ENDLESS = 3,
    ROGUE_STATUS_FINISH = 4,
    _,
};

pub const RogueRoomStatus = enum(i32) {
    ROGUE_ROOM_STATUS_NONE = 0,
    ROGUE_ROOM_STATUS_LOCK = 1,
    ROGUE_ROOM_STATUS_UNLOCK = 2,
    ROGUE_ROOM_STATUS_PLAY = 3,
    ROGUE_ROOM_STATUS_FINISH = 4,
    _,
};

pub const RogueAreaStatus = enum(i32) {
    ROGUE_AREA_STATUS_LOCK = 0,
    ROGUE_AREA_STATUS_UNLOCK = 1,
    ROGUE_AREA_STATUS_FIRST_PASS = 2,
    ROGUE_AREA_STATUS_CLOSE = 3,
    _,
};

pub const RogueBuffSourceType = enum(i32) {
    ROGUE_BUFF_SOURCE_TYPE_NONE = 0,
    ROGUE_BUFF_SOURCE_TYPE_SELECT = 1,
    ROGUE_BUFF_SOURCE_TYPE_ENHANCE = 2,
    ROGUE_BUFF_SOURCE_TYPE_MIRACLE = 3,
    ROGUE_BUFF_SOURCE_TYPE_DIALOGUE = 4,
    ROGUE_BUFF_SOURCE_TYPE_BONUS = 5,
    ROGUE_BUFF_SOURCE_TYPE_MAZE_SKILL = 6,
    ROGUE_BUFF_SOURCE_TYPE_SHOP = 7,
    ROGUE_BUFF_SOURCE_TYPE_LEVEL_MECHANISM = 8,
    ROGUE_BUFF_SOURCE_TYPE_ENDLESS_LEVEL_START = 9,
    _,
};

pub const RogueMiracleSourceType = enum(i32) {
    ROGUE_MIRACLE_SOURCE_TYPE_NONE = 0,
    ROGUE_MIRACLE_SOURCE_TYPE_SELECT = 1,
    ROGUE_MIRACLE_SOURCE_TYPE_DIALOGUE = 2,
    ROGUE_MIRACLE_SOURCE_TYPE_BONUS = 3,
    ROGUE_MIRACLE_SOURCE_TYPE_USE = 4,
    ROGUE_MIRACLE_SOURCE_TYPE_RESET = 5,
    ROGUE_MIRACLE_SOURCE_TYPE_REPLACE = 6,
    ROGUE_MIRACLE_SOURCE_TYPE_TRADE = 7,
    ROGUE_MIRACLE_SOURCE_TYPE_GET = 8,
    ROGUE_MIRACLE_SOURCE_TYPE_SHOP = 9,
    ROGUE_MIRACLE_SOURCE_TYPE_MAZE_SKILL = 10,
    ROGUE_MIRACLE_SOURCE_TYPE_LEVEL_MECHANISM = 11,
    ROGUE_MIRACLE_SOURCE_TYPE_ENDLESS_LEVEL_START = 12,
    _,
};

pub const RogueDialogueResult = enum(i32) {
    ROGUE_DIALOGUE_RESULT_SUCC = 0,
    ROGUE_DIALOGUE_RESULT_FAIL = 1,
    _,
};

pub const CmdRogueArcadeType = enum(i32) {
    CmdRogueArcadeTypeNone = 0,
    CmdRogueArcadeRestartScRsp = 7651,
    CmdRogueArcadeGetInfoCsReq = 7678,
    CmdRogueArcadeStartScRsp = 7671,
    CmdRogueArcadeLeaveScRsp = 7680,
    CmdRogueArcadeLeaveCsReq = 7696,
    CmdRogueArcadeStartCsReq = 7673,
    CmdRogueArcadeGetInfoScRsp = 7677,
    CmdRogueArcadeRestartCsReq = 7652,
    _,
};

pub const CmdRogueCommonType = enum(i32) {
    CmdRogueCommonTypeNone = 0,
    CmdUpdateRogueAdventureRoomScoreScRsp = 5629,
    CmdGetRogueAdventureRoomInfoScRsp = 5663,
    CmdGetRogueExhibitionCsReq = 5630,
    CmdGetRogueCollectionCsReq = 5693,
    CmdGetRogueExhibitionScRsp = 5611,
    CmdBuyRogueShopMiracleCsReq = 5606,
    CmdGetRogueShopMiracleInfoScRsp = 5679,
    CmdRogueShopBeginBattleCsReq = 5631,
    CmdSetRogueCollectionCsReq = 5627,
    CmdGetRogueShopBuffInfoScRsp = 5697,
    CmdSyncRogueCommonVirtualItemInfoScNotify = 5671,
    CmdGetRogueCommonDialogueDataCsReq = 5612,
    CmdSyncRogueAdventureRoomInfoScNotify = 5610,
    CmdSelectRogueCommonDialogueOptionCsReq = 5623,
    CmdGetRogueCollectionScRsp = 5640,
    CmdBuyRogueShopMiracleScRsp = 5641,
    CmdTakeRogueEventHandbookRewardCsReq = 5689,
    CmdTakeRogueEventHandbookRewardScRsp = 5608,
    CmdGetRogueShopFormulaInfoCsReq = 5632,
    CmdGetRogueHandbookDataCsReq = 5688,
    CmdTakeRogueMiracleHandbookRewardCsReq = 5666,
    CmdRogueWorkbenchHandleFuncCsReq = 5644,
    CmdSyncRogueCommonActionResultScNotify = 5613,
    CmdGetRogueShopBuffInfoCsReq = 5602,
    CmdSyncRogueCommonDialogueDataScNotify = 5649,
    CmdSyncRogueCommonPendingActionScNotify = 5646,
    CmdGetRogueShopFormulaInfoScRsp = 5634,
    CmdBuyRogueShopFormulaScRsp = 5633,
    CmdRogueDebugReplaySaveScNotify = 5619,
    CmdRogueWorkbenchGetInfoScRsp = 5699,
    CmdGetRogueAdventureRoomInfoCsReq = 5626,
    CmdEnhanceCommonRogueBuffCsReq = 5654,
    CmdRogueNpcDisappearScRsp = 5616,
    CmdSetRogueCollectionScRsp = 5680,
    CmdGetEnhanceCommonRogueBuffInfoCsReq = 5674,
    CmdBuyRogueShopBuffCsReq = 5655,
    CmdPrepareRogueAdventureRoomCsReq = 5605,
    CmdUpdateRogueAdventureRoomScoreCsReq = 5685,
    CmdHandleRogueCommonPendingActionCsReq = 5683,
    CmdBuyRogueShopBuffScRsp = 5607,
    CmdSyncRogueCommonDialogueOptionFinishScNotify = 5696,
    CmdEnhanceCommonRogueBuffScRsp = 5662,
    CmdRogueWorkbenchHandleFuncScRsp = 5648,
    CmdGetRogueShopMiracleInfoCsReq = 5653,
    CmdHandleRogueCommonPendingActionScRsp = 5603,
    CmdFinishRogueCommonDialogueCsReq = 5695,
    CmdRogueNpcDisappearCsReq = 5639,
    CmdRogueGetGambleInfoScRsp = 5684,
    CmdStopRogueAdventureRoomScRsp = 5620,
    CmdRogueGetGambleInfoCsReq = 5621,
    CmdRogueWorkbenchGetInfoCsReq = 5622,
    CmdTakeRogueMiracleHandbookRewardScRsp = 5628,
    CmdRogueDoGambleCsReq = 5638,
    CmdPrepareRogueAdventureRoomScRsp = 5698,
    CmdFinishRogueCommonDialogueScRsp = 5618,
    CmdRogueDoGambleScRsp = 5687,
    CmdGetEnhanceCommonRogueBuffInfoScRsp = 5690,
    CmdStopRogueAdventureRoomCsReq = 5609,
    CmdBuyRogueShopFormulaCsReq = 5643,
    CmdGetRogueCommonDialogueDataScRsp = 5664,
    CmdCommonRogueUpdateScNotify = 5686,
    CmdSelectRogueCommonDialogueOptionScRsp = 5614,
    CmdSetRogueExhibitionScRsp = 5656,
    CmdSetRogueExhibitionCsReq = 5659,
    CmdSyncRogueHandbookDataUpdateScNotify = 5660,
    CmdCommonRogueQueryScRsp = 5604,
    CmdCommonRogueQueryCsReq = 5657,
    CmdRogueShopBeginBattleScRsp = 5691,
    CmdGetRogueHandbookDataScRsp = 5615,
    _,
};

pub const RogueAdventureRoomStatus = enum(i32) {
    ROGUE_ADVENTURE_ROOM_STATUS_NONE = 0,
    ROGUE_ADVENTURE_ROOM_STATUS_PREPARE = 1,
    ROGUE_ADVENTURE_ROOM_STATUS_STARTED = 2,
    ROGUE_ADVENTURE_ROOM_STATUS_STOPPED = 3,
    _,
};

pub const RogueCommonBuffSelectSourceType = enum(i32) {
    ROGUE_COMMON_BUFF_SELECT_SOURCE_TYPE_NONE = 0,
    ROGUE_COMMON_BUFF_SELECT_SOURCE_TYPE_DICE_ROLL = 1,
    ROGUE_COMMON_BUFF_SELECT_SOURCE_TYPE_AEON = 2,
    ROGUE_COMMON_BUFF_SELECT_SOURCE_TYPE_BOARD_EVENT = 3,
    ROGUE_COMMON_BUFF_SELECT_SOURCE_TYPE_LEVEL_MECHANISM = 4,
    _,
};

pub const RogueUnlockFunctionType = enum(i32) {
    ROGUE_UNLOCK_FUNCTION_TYPE_MIRACLE = 0,
    ROGUE_UNLOCK_FUNCTION_TYPE_SHOW_HINT = 1,
    ROGUE_UNLOCK_FUNCTION_TYPE_COSMOS_BAN_AEON = 2,
    ROGUE_UNLOCK_FUNTION_TYPE_EXHIBITION = 3,
    ROGUE_UNLOCK_FUNTION_TYPE_COLLECTION = 4,
    ROGUE_UNLOCK_FUNTION_TYPE_TOURN_GOD_MODE = 5,
    _,
};

pub const RogueCommonMiracleSelectSourceType = enum(i32) {
    ROGUE_COMMON_MIRACLE_SELECT_SOURCE_TYPE_NONE = 0,
    ROGUE_COMMON_MIRACLE_SELECT_SOURCE_TYPE_DICE_ROLL = 1,
    ROGUE_COMMON_MIRACLE_SELECT_SOURCE_TYPE_AEON = 2,
    ROGUE_COMMON_MIRACLE_SELECT_SOURCE_TYPE_BOARD_EVENT = 3,
    ROGUE_COMMON_MIRACLE_SELECT_SOURCE_TYPE_LEVEL_MECHANISM = 4,
    _,
};

pub const RogueCommonBuffDisplayType = enum(i32) {
    ROGUE_COMMON_BUFF_DISPLAY_TYPE_NONE = 0,
    ROGUE_COMMON_BUFF_DISPLAY_TYPE_ADD = 1,
    ROGUE_COMMON_BUFF_DISPLAY_TYPE_REMOVE = 2,
    _,
};

pub const RogueCommonMiracleDisplayType = enum(i32) {
    ROGUE_COMMON_MIRACLE_DISPLAY_TYPE_NONE = 0,
    ROGUE_COMMON_MIRACLE_DISPLAY_TYPE_ADD = 1,
    ROGUE_COMMON_MIRACLE_DISPLAY_TYPE_REMOVE = 2,
    ROGUE_COMMON_MIRACLE_DISPLAY_TYPE_REPAIR = 3,
    _,
};

pub const RogueCommonItemDisplayType = enum(i32) {
    ROGUE_COMMON_ITEM_DISPLAY_TYPE_NONE = 0,
    ROGUE_COMMON_ITEM_DISPLAY_TYPE_ADD = 1,
    ROGUE_COMMON_ITEM_DISPLAY_TYPE_REMOVE = 2,
    _,
};

pub const RogueCommonActionResultDisplayType = enum(i32) {
    ROGUE_COMMON_ACTION_RESULT_DISPLAY_TYPE_NONE = 0,
    ROGUE_COMMON_ACTION_RESULT_DISPLAY_TYPE_SINGLE = 1,
    ROGUE_COMMON_ACTION_RESULT_DISPLAY_TYPE_MULTI = 2,
    _,
};

pub const RogueCommonActionResultSourceType = enum(i32) {
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_NONE = 0,
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_SELECT = 1,
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_ENHANCE = 2,
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MIRACLE = 3,
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_DIALOGUE = 4,
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_BONUS = 5,
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_SHOP = 6,
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_DICE = 7,
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_AEON = 8,
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_BOARD_EVENT = 9,
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MAZE_SKILL = 10,
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_LEVEL_MECHANISM = 11,
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_BUFF = 12,
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_REFORGE = 13,
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MAGIC_UNIT_COMPOSE = 14,
    ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MAGIC_UNIT_REFORGE = 15,
    _,
};

pub const NDKLJJIIMGM = enum(i32) {
    kTitanBlessSelectNone = 0,
    kSelectTitanBlessType = 1,
    kSelectTitanBlessEnhance = 2,
    _,
};

pub const RogueTalentStatus = enum(i32) {
    ROGUE_TALENT_STATUS_LOCK = 0,
    ROGUE_TALENT_STATUS_UNLOCK = 1,
    ROGUE_TALENT_STATUS_ENABLE = 2,
    _,
};

pub const RogueCollectionExhibitionOperateType = enum(i32) {
    ROGUE_COLLECTION_OPERATE_NONE = 0,
    ROGUE_COLLECTION_OPERATE_SET = 1,
    ROGUE_COLLECTION_OPERATE_UNSET = 2,
    _,
};

pub const RogueBoothStatus = enum(i32) {
    ROGUE_BOOTH_NONE = 0,
    ROGUE_BOOTH_EMPTY = 1,
    ROGUE_BOOTH_DISPLAY = 2,
    _,
};

pub const RogueCollectionStatus = enum(i32) {
    ROGUE_COLLECTION_NONE = 0,
    ROGUE_COLLECTION_UNLOCKED = 1,
    ROGUE_COLLECTION_DISPLAY = 2,
    _,
};

pub const RogueExhibitionStatus = enum(i32) {
    ROGUE_EXHIBITION_NONE = 0,
    ROGUE_EXHIBITION_UNLOCKED = 1,
    ROGUE_EXHIBITION_DISPLAY = 2,
    _,
};

pub const CmdRogueEndless = enum(i32) {
    CmdRogueEndlessNone = 0,
    CmdTakeRogueEndlessActivityAllBonusRewardCsReq = 6004,
    CmdGetRogueEndlessActivityDataScRsp = 6010,
    CmdGetRogueEndlessActivityDataCsReq = 6005,
    CmdEnterRogueEndlessActivityStageScRsp = 6002,
    CmdTakeRogueEndlessActivityPointRewardCsReq = 6009,
    CmdRogueEndlessActivityBattleEndScNotify = 6006,
    CmdTakeRogueEndlessActivityAllBonusRewardScRsp = 6007,
    CmdEnterRogueEndlessActivityStageCsReq = 6001,
    CmdTakeRogueEndlessActivityPointRewardScRsp = 6003,
    _,
};

pub const CmdRogueMagic = enum(i32) {
    CmdRogueMagicNone = 0,
    CmdRogueMagicReviveAvatarCsReq = 7778,
    CmdRogueMagicGetTalentInfoCsReq = 7751,
    CmdRogueMagicEnableTalentCsReq = 7735,
    CmdRogueMagicEnterRoomCsReq = 7741,
    CmdRogueMagicAutoDressInUnitCsReq = 7728,
    CmdRogueMagicLevelInfoUpdateScNotify = 7716,
    CmdRogueMagicUnitReforgeScRsp = 7701,
    CmdRogueMagicUnitComposeScRsp = 7773,
    CmdRogueMagicGetMiscRealTimeDataScRsp = 7766,
    CmdRogueMagicSettleScRsp = 7706,
    CmdRogueMagicGetMiscRealTimeDataCsReq = 7760,
    CmdRogueMagicStoryInfoUpdateScNotify = 7708,
    CmdRogueMagicScepterDressInUnitCsReq = 7709,
    CmdRogueMagicStartScRsp = 7705,
    CmdRogueMagicEnterRoomScRsp = 7755,
    CmdRogueMagicScepterTakeOffUnitCsReq = 7769,
    CmdRogueMagicBattleFailSettleInfoScNotify = 7794,
    CmdRogueMagicEnterLayerScRsp = 7739,
    CmdRogueMagicGetTalentInfoScRsp = 7725,
    CmdRogueMagicLeaveCsReq = 7779,
    CmdRogueMagicEnableTalentScRsp = 7737,
    CmdRogueMagicSetAutoDressInMagicUnitScRsp = 7715,
    CmdRogueMagicSetAutoDressInMagicUnitCsReq = 7788,
    CmdRogueMagicUnitComposeCsReq = 7724,
    CmdRogueMagicReviveCostUpdateScNotify = 7736,
    CmdRogueMagicReviveAvatarScRsp = 7774,
    CmdRogueMagicSettleCsReq = 7797,
    CmdRogueMagicAutoDressInUnitScRsp = 7789,
    CmdRogueMagicStartCsReq = 7710,
    CmdRogueMagicLeaveScRsp = 7702,
    CmdRogueMagicQueryCsReq = 7790,
    CmdRogueMagicEnterScRsp = 7753,
    CmdRogueMagicQueryScRsp = 7754,
    CmdRogueMagicEnterCsReq = 7798,
    CmdRogueMagicUnitReforgeCsReq = 7742,
    CmdRogueMagicEnterLayerCsReq = 7707,
    CmdRogueMagicAutoDressInMagicUnitChangeScNotify = 7713,
    CmdRogueMagicScepterTakeOffUnitScRsp = 7792,
    CmdRogueMagicAreaUpdateScNotify = 7726,
    CmdRogueMagicScepterDressInUnitScRsp = 7720,
    _,
};

pub const RogueMagicLevelStatus = enum(i32) {
    ROGUE_MAGIC_LEVEL_STATUS_NONE = 0,
    ROGUE_MAGIC_LEVEL_STATUS_PROCESSING = 1,
    ROGUE_MAGIC_LEVEL_STATUS_FINISHED = 2,
    ROGUE_MAGIC_LEVEL_STATUS_SETTLED = 3,
    _,
};

pub const RogueMagicLayerStatus = enum(i32) {
    ROGUE_MAGIC_LAYER_STATUS_NONE = 0,
    ROGUE_MAGIC_LAYER_STATUS_PROCESSING = 1,
    ROGUE_MAGIC_LAYER_STATUS_FINISH = 2,
    _,
};

pub const RogueMagicRoomStatus = enum(i32) {
    ROGUE_MAGIC_ROOM_STATUS_NONE = 0,
    ROGUE_MAGIC_ROOM_STATUS_INITED = 1,
    ROGUE_MAGIC_ROOM_STATUS_PROCESSING = 2,
    ROGUE_MAGIC_ROOM_STATUS_FINISH = 3,
    _,
};

pub const RogueMagicSettleReason = enum(i32) {
    ROGUE_MAGIC_SETTLE_REASON_NONE = 0,
    ROGUE_MAGIC_SETTLE_REASON_WIN = 1,
    ROGUE_MAGIC_SETTLE_REASON_FAIL = 2,
    ROGUE_MAGIC_SETTLE_REASON_INTERRUPT = 3,
    _,
};

pub const CmdRogueModifierType = enum(i32) {
    CmdRogueModifierTypeNone = 0,
    CmdRogueModifierAddNotify = 5398,
    CmdRogueModifierUpdateNotify = 5306,
    CmdRogueModifierSelectCellScRsp = 5379,
    CmdRogueModifierDelNotify = 5341,
    CmdRogueModifierSelectCellCsReq = 5353,
    CmdRogueModifierStageStartNotify = 5355,
    _,
};

pub const RogueModifierSourceType = enum(i32) {
    ROGUE_MODIFIER_SOURCE_NONE = 0,
    ROGUE_MODIFIER_SOURCE_DICE_ROLL = 1,
    ROGUE_MODIFIER_SOURCE_AEON = 2,
    ROGUE_MODIFIER_SOURCE_BOARD_EVENT = 3,
    ROGUE_MODIFIER_SOURCE_DIALOG_EVENT = 4,
    ROGUE_MODIFIER_SOURCE_MIRACLE = 5,
    ROGUE_MODIFIER_SOURCE_CELL_MARK = 6,
    ROGUE_MODIFIER_SOURCE_AEON_TALENT = 7,
    ROGUE_MODIFIER_SOURCE_BOSS_DECAY = 8,
    ROGUE_MODIFIER_SOURCE_DICE_BRANCH = 9,
    _,
};

pub const RogueModifierContentType = enum(i32) {
    ROGUE_MODIFIER_CONTENT_DEFINITE = 0,
    ROGUE_MODIFIER_CONTENT_RANDOM = 1,
    _,
};

pub const CmdRogueTournType = enum(i32) {
    CmdRogueTournTypeNone = 0,
    CmdRogueTournLeaveScRsp = 6096,
    CmdRogueTournEnablePermanentTalentCsReq = 6073,
    CmdRogueTournGetMiscRealTimeDataCsReq = 6022,
    CmdRogueTournHandBookNotify = 6023,
    CmdRogueTournLeaveRogueCocoonSceneScRsp = 6099,
    CmdRogueTournEnterRogueCocoonSceneCsReq = 6027,
    CmdRogueTournRenameBuildRefScRsp = 6040,
    CmdRogueTournDeleteBuildRefCsReq = 6050,
    CmdRogueTournGetSeasonTalentInfoCsReq = 6064,
    CmdRogueTournConfirmSettleScRsp = 6081,
    CmdRogueTournGetArchiveRepositoryCsReq = 6024,
    CmdRogueTournDifficultyCompNotify = 6018,
    CmdRogueTournGetCurRogueCocoonInfoCsReq = 6089,
    CmdRogueTournReEnterRogueCocoonStageCsReq = 6065,
    CmdRogueTournExpNotify = 6039,
    CmdRogueTournEnterCsReq = 6036,
    CmdRogueTournReviveCostUpdateScNotify = 6097,
    CmdRogueTournEnableSeasonTalentCsReq = 6079,
    CmdRogueTournQueryCsReq = 6045,
    CmdRogueTournSettleCsReq = 6076,
    CmdRogueTournStartCsReq = 6056,
    CmdRogueTournEnterRoomCsReq = 6015,
    CmdRogueTournGetPermanentTalentInfoScRsp = 6067,
    CmdRogueTournLeaveCsReq = 6012,
    CmdRogueTournAreaUpdateScNotify = 6077,
    CmdRogueTournRenameBuildRefCsReq = 6082,
    CmdRogueTournSaveBuildRefScRsp = 6094,
    CmdRogueTournEnterRoomScRsp = 6026,
    CmdRogueTournGetCurRogueCocoonInfoScRsp = 6055,
    CmdRogueTournTakeExpRewardScRsp = 6054,
    CmdRogueTournGetAllBuildRefCsReq = 6032,
    CmdRogueTournDeleteArchiveCsReq = 6063,
    CmdRogueTournBattleFailSettleInfoScNotify = 6038,
    CmdRogueTournReviveAvatarScRsp = 6052,
    CmdRogueTournGetSeasonTalentInfoScRsp = 6019,
    CmdRogueTournGetAllArchiveCsReq = 6093,
    CmdRogueTournGetAllArchiveScRsp = 6070,
    CmdRogueTournTakeExpRewardCsReq = 6016,
    CmdRogueTournLevelInfoUpdateScNotify = 6046,
    CmdRogueTournTitanUpdateTitanBlessProgressScNotify = 6095,
    CmdRogueTournStartScRsp = 6020,
    CmdRogueTournSaveBuildRefCsReq = 6049,
    CmdRogueTournReviveAvatarCsReq = 6068,
    CmdRogueTournDeleteArchiveScRsp = 6035,
    CmdRogueTournConfirmSettleCsReq = 6013,
    CmdRogueTournReEnterRogueCocoonStageScRsp = 6090,
    CmdRogueTournGetSettleInfoCsReq = 6084,
    CmdRogueTournEnterScRsp = 6058,
    CmdRogueTournClearArchiveNameScNotify = 6028,
    CmdRogueTournEnterLayerScRsp = 6083,
    CmdRogueTournEnablePermanentTalentScRsp = 6072,
    CmdRogueTournRenameArchiveScRsp = 6074,
    CmdRogueTournQueryScRsp = 6047,
    CmdRogueTournEnterLayerCsReq = 6098,
    CmdRogueTournRenameArchiveCsReq = 6030,
    CmdRogueTournSettleScRsp = 6017,
    CmdRogueTournGetMiscRealTimeDataScRsp = 6033,
    CmdRogueTournEnterRogueCocoonSceneScRsp = 6025,
    CmdRogueTournGetAllBuildRefScRsp = 6034,
    CmdRogueTournResetPermanentTalentScRsp = 6100,
    CmdRogueTournWeekChallengeUpdateScNotify = 6014,
    CmdRogueTournDeleteBuildRefScRsp = 6037,
    CmdRogueTournGetSettleInfoScRsp = 6085,
    CmdRogueTournResetPermanentTalentCsReq = 6011,
    CmdRogueTournLeaveRogueCocoonSceneCsReq = 6061,
    CmdRogueTournEnableSeasonTalentScRsp = 6059,
    CmdRogueTournGetPermanentTalentInfoCsReq = 6051,
    CmdRogueTournGetArchiveRepositoryScRsp = 6092,
    _,
};

pub const RogueTournLevelStatus = enum(i32) {
    ROGUE_TOURN_LEVEL_STATUS_NONE = 0,
    ROGUE_TOURN_LEVEL_STATUS_PROCESSING = 1,
    ROGUE_TOURN_LEVEL_STATUS_FINISHED = 2,
    ROGUE_TOURN_LEVEL_STATUS_SETTLED = 3,
    _,
};

pub const RogueTournLayerStatus = enum(i32) {
    ROGUE_TOURN_LAYER_STATUS_NONE = 0,
    ROGUE_TOURN_LAYER_STATUS_PROCESSING = 1,
    ROGUE_TOURN_LAYER_STATUS_FINISH = 2,
    _,
};

pub const RogueTournRoomStatus = enum(i32) {
    ROGUE_TOURN_ROOM_STATUS_NONE = 0,
    ROGUE_TOURN_ROOM_STATUS_INITED = 1,
    ROGUE_TOURN_ROOM_STATUS_PROCESSING = 2,
    ROGUE_TOURN_ROOM_STATUS_FINISH = 3,
    _,
};

pub const RogueTournSettleReason = enum(i32) {
    ROGUE_TOURN_SETTLE_REASON_NONE = 0,
    ROGUE_TOURN_SETTLE_REASON_WIN = 1,
    ROGUE_TOURN_SETTLE_REASON_FAIL = 2,
    ROGUE_TOURN_SETTLE_REASON_INTERRUPT = 3,
    _,
};

pub const RogueTournHandbookType = enum(i32) {
    ROGUE_TOURN_HANDBOOK_NONE = 0,
    ROGUE_TOURN_HANDBOOK_SIMPLE_MIRACLE = 1,
    ROGUE_TOURN_HANDBOOK_HEX_MIRACLE = 2,
    ROGUE_TOURN_HANDBOOK_BUFF = 3,
    ROGUE_TOURN_HANDBOOK_EVENT = 4,
    ROGUE_TOURN_HANDBOOK_FORMULA = 5,
    ROGUE_TOURN_HANDBOOK_TITAN_BLESS = 6,
    _,
};

pub const CmdRollShopType = enum(i32) {
    CmdRollShopTypeNone = 0,
    CmdGetRollShopInfoScRsp = 6915,
    CmdDoGachaInRollShopScRsp = 6919,
    CmdGetRollShopInfoCsReq = 6901,
    CmdDoGachaInRollShopCsReq = 6917,
    CmdTakeRollShopRewardCsReq = 6902,
    CmdTakeRollShopRewardScRsp = 6912,
    _,
};

pub const CmdSceneType = enum(i32) {
    CmdSceneTypeNone = 0,
    CmdDeleteSummonUnitCsReq = 1434,
    CmdSceneGroupRefreshScNotify = 1475,
    CmdSpringRefreshScRsp = 1436,
    CmdGetCurSceneInfoCsReq = 1497,
    CmdSetClientPausedCsReq = 1466,
    CmdSceneEntityMoveScRsp = 1405,
    CmdGameplayCounterRecoverScRsp = 1452,
    CmdSyncServerSceneChangeNotify = 1440,
    CmdEntityBindPropScRsp = 1460,
    CmdUpdateMechanismBarScNotify = 1486,
    CmdGameplayCounterUpdateScNotify = 1476,
    CmdStartCocoonStageCsReq = 1437,
    CmdSceneCastSkillScRsp = 1402,
    CmdEnterSceneCsReq = 1417,
    CmdLastSpringRefreshTimeNotify = 1478,
    CmdReEnterLastElementStageScRsp = 1418,
    CmdStartCocoonStageScRsp = 1488,
    CmdTrainWorldIdChangeScNotify = 1431,
    CmdEnterSectionScRsp = 1492,
    CmdGroupStateChangeScNotify = 1438,
    CmdInteractPropScRsp = 1453,
    CmdGameplayCounterCountDownScRsp = 1456,
    CmdDeactivateFarmElementScRsp = 1413,
    CmdSetClientPausedScRsp = 1428,
    CmdGameplayCounterRecoverCsReq = 1447,
    CmdRefreshTriggerByClientScNotify = 1432,
    CmdChangePropTimelineInfoCsReq = 1441,
    CmdUpdateGroupPropertyCsReq = 1461,
    CmdSceneReviveAfterRebattleScRsp = 1420,
    CmdGetUnlockTeleportCsReq = 1427,
    CmdRefreshTriggerByClientScRsp = 1419,
    CmdGameplayCounterCountDownCsReq = 1459,
    CmdSceneEnterStageScRsp = 1462,
    CmdUpdateFloorSavedValueNotify = 1411,
    CmdReEnterLastElementStageCsReq = 1495,
    CmdActivateFarmElementScRsp = 1485,
    CmdDeactivateFarmElementCsReq = 1408,
    CmdInteractPropCsReq = 1498,
    CmdSceneCastSkillCostMpScRsp = 1463,
    CmdSceneCastSkillCsReq = 1479,
    CmdGetEnteredSceneScRsp = 1500,
    CmdGetEnteredSceneCsReq = 1487,
    CmdSetGroupCustomSaveDataCsReq = 1412,
    CmdEnterSceneByServerScNotify = 1499,
    CmdActivateFarmElementCsReq = 1446,
    CmdSpringRefreshCsReq = 1494,
    CmdEntityBindPropCsReq = 1415,
    CmdSceneEntityMoveCsReq = 1410,
    CmdSceneReviveAfterRebattleCsReq = 1409,
    CmdSetCurInteractEntityScRsp = 1401,
    CmdUnlockTeleportNotify = 1450,
    CmdSyncEntityBuffChangeListScNotify = 1416,
    CmdGetUnlockTeleportScRsp = 1480,
    CmdEnterSceneScRsp = 1422,
    CmdScenePlaneEventScNotify = 1444,
    CmdGroupStateChangeScRsp = 1484,
    CmdChangePropTimelineInfoScRsp = 1455,
    CmdGetCurSceneInfoScRsp = 1406,
    CmdEnteredSceneChangeScNotify = 1468,
    CmdSetCurInteractEntityCsReq = 1442,
    CmdSceneCastSkillMpUpdateScNotify = 1467,
    CmdReturnLastTownScRsp = 1490,
    CmdSceneUpdatePositionVersionNotify = 1439,
    CmdSavePointsInfoNotify = 1435,
    CmdSceneEntityMoveScNotify = 1407,
    CmdRefreshTriggerByClientCsReq = 1465,
    CmdOpenChestScNotify = 1430,
    CmdDeleteSummonUnitScRsp = 1443,
    CmdSceneEnterStageCsReq = 1454,
    CmdUnlockedAreaMapScNotify = 1433,
    CmdEnterSectionCsReq = 1469,
    CmdRecoverAllLineupScRsp = 1425,
    CmdUpdateGroupPropertyScRsp = 1481,
    CmdSceneEntityTeleportCsReq = 1449,
    CmdSetGroupCustomSaveDataScRsp = 1464,
    CmdSceneCastSkillCostMpCsReq = 1426,
    CmdReturnLastTownCsReq = 1474,
    CmdGetSceneMapInfoCsReq = 1448,
    CmdSceneEntityTeleportScRsp = 1496,
    CmdGroupStateChangeCsReq = 1421,
    CmdRecoverAllLineupCsReq = 1451,
    CmdGetSceneMapInfoScRsp = 1493,
    _,
};

pub const SkillExtraTag = enum(i32) {
    SCENE_CAST_SKILL_NONE = 0,
    SCENE_CAST_SKILL_PROJECTILE_HIT = 1,
    SCENE_CAST_SKILL_PROJECTILE_LIFETIME_FINISH = 2,
    _,
};

pub const MonsterBattleType = enum(i32) {
    MONSTER_BATTLE_TYPE_NONE = 0,
    MONSTER_BATTLE_TYPE_TRIGGER_BATTLE = 1,
    MONSTER_BATTLE_TYPE_DIRECT_DIE_SIMULATE_BATTLE = 2,
    MONSTER_BATTLE_TYPE_DIRECT_DIE_SKIP_BATTLE = 3,
    MONSTER_BATTLE_TYPE_NO_BATTLE = 4,
    _,
};

pub const SceneEntityBuffChangeType = enum(i32) {
    SCENE_ENTITY_BUFF_CHANGE_TYPE_DEFAULT = 0,
    SCENE_ENTITY_BUFF_CHANGE_TYPE_ADD_MAZEBUFF = 1,
    SCENE_ENTITY_BUFF_CHANGE_TYPE_ADD_ADV_MODIFIER = 2,
    _,
};

pub const EnterSceneReason = enum(i32) {
    ENTER_SCENE_REASON_NONE = 0,
    ENTER_SCENE_REASON_CHALLENGE_TIMEOUT = 1,
    ENTER_SCENE_REASON_ROGUE_TIMEOUT = 2,
    ENTER_SCENE_REASON_CHANGE_STORYLINE = 3,
    ENTER_SCENE_REASON_DIMENSION_MERGE = 4,
    _,
};

pub const ChestType = enum(i32) {
    MAP_INFO_CHEST_TYPE_NONE = 0,
    MAP_INFO_CHEST_TYPE_NORMAL = 101,
    MAP_INFO_CHEST_TYPE_CHALLENGE = 102,
    MAP_INFO_CHEST_TYPE_PUZZLE = 104,
    _,
};

pub const GameplayCounterUpdateReason = enum(i32) {
    GAMEPLAY_COUNTER_UPDATE_REASON_NONE = 0,
    GAMEPLAY_COUNTER_UPDATE_REASON_ACTIVATE = 1,
    GAMEPLAY_COUNTER_UPDATE_REASON_DEACTIVATE = 2,
    GAMEPLAY_COUNTER_UPDATE_REASON_CHANGE = 3,
    _,
};

pub const SceneGroupRefreshType = enum(i32) {
    SCENE_GROUP_REFRESH_TYPE_NONE = 0,
    SCENE_GROUP_REFRESH_TYPE_LOADED = 1,
    SCENE_GROUP_REFRESH_TYPE_UNLOAD = 2,
    _,
};

pub const CmdServerPrefsType = enum(i32) {
    CmdServerPrefsTypeNone = 0,
    CmdGetServerPrefsDataCsReq = 6198,
    CmdUpdateServerPrefsDataCsReq = 6179,
    CmdGetAllServerPrefsDataCsReq = 6110,
    CmdGetServerPrefsDataScRsp = 6153,
    CmdGetAllServerPrefsDataScRsp = 6105,
    CmdUpdateServerPrefsDataScRsp = 6102,
    _,
};

pub const CmdShopType = enum(i32) {
    CmdShopTypeNone = 0,
    CmdCityShopInfoScNotify = 1597,
    CmdBuyGoodsCsReq = 1598,
    CmdBuyGoodsScRsp = 1553,
    CmdGetShopListScRsp = 1505,
    CmdGetShopListCsReq = 1510,
    CmdTakeCityShopRewardScRsp = 1502,
    CmdTakeCityShopRewardCsReq = 1579,
    _,
};

pub const CmdSpaceZooType = enum(i32) {
    CmdSpaceZooTypeNone = 0,
    CmdSpaceZooCatUpdateNotify = 6707,
    CmdSpaceZooMutateCsReq = 6779,
    CmdSpaceZooDeleteCatScRsp = 6755,
    CmdSpaceZooExchangeItemScRsp = 6716,
    CmdSpaceZooTakeScRsp = 6763,
    CmdSpaceZooDataScRsp = 6705,
    CmdSpaceZooBornCsReq = 6798,
    CmdSpaceZooBornScRsp = 6753,
    CmdSpaceZooOpCatteryScRsp = 6706,
    CmdSpaceZooExchangeItemCsReq = 6739,
    CmdSpaceZooMutateScRsp = 6702,
    CmdSpaceZooTakeCsReq = 6726,
    CmdSpaceZooOpCatteryCsReq = 6797,
    CmdSpaceZooDeleteCatCsReq = 6741,
    CmdSpaceZooDataCsReq = 6710,
    _,
};

pub const CmdStarFightType = enum(i32) {
    CmdStarFightTypeNone = 0,
    CmdStartStarFightLevelCsReq = 7161,
    CmdStartStarFightLevelScRsp = 7162,
    CmdGetStarFightDataScRsp = 7170,
    CmdGetStarFightDataCsReq = 7165,
    CmdStarFightDataChangeNotify = 7166,
    _,
};

pub const CmdStoryLineType = enum(i32) {
    CmdStoryLineTypeNone = 0,
    CmdGetStoryLineInfoCsReq = 6210,
    CmdChangeStoryLineFinishScNotify = 6202,
    CmdStoryLineTrialAvatarChangeScNotify = 6297,
    CmdGetStoryLineInfoScRsp = 6205,
    CmdStoryLineInfoScNotify = 6298,
    _,
};

pub const ChangeStoryLineAction = enum(i32) {
    ChangeStoryLineAction_None = 0,
    ChangeStoryLineAction_FinishAction = 1,
    ChangeStoryLineAction_Client = 2,
    ChangeStoryLineAction_CustomOP = 3,
    ChangeStoryLineAction_Raid = 4,
    _,
};

pub const CmdStrongChallengeActivityType = enum(i32) {
    CmdStrongChallengeActivityTypeNone = 0,
    CmdEnterStrongChallengeActivityStageCsReq = 6698,
    CmdStrongChallengeActivityBattleEndScNotify = 6679,
    CmdEnterStrongChallengeActivityStageScRsp = 6653,
    CmdGetStrongChallengeActivityDataCsReq = 6610,
    CmdGetStrongChallengeActivityDataScRsp = 6605,
    _,
};

pub const CmdSummonActivityType = enum(i32) {
    CmdSummonActivityTypeNone = 0,
    CmdGetSummonActivityDataCsReq = 7565,
    CmdGetSummonActivityDataScRsp = 7570,
    CmdSummonActivityBattleEndScNotify = 7566,
    CmdEnterSummonActivityStageScRsp = 7562,
    CmdEnterSummonActivityStageCsReq = 7561,
    _,
};

pub const CmdSwitchHandType = enum(i32) {
    CmdSwitchHandTypeNone = 0,
    CmdSwitchHandResetHandPosCsReq = 8120,
    CmdSwitchHandResetGameCsReq = 8104,
    CmdSwitchHandResetGameScRsp = 8105,
    CmdSwitchHandStartScRsp = 8119,
    CmdSwitchHandUpdateCsReq = 8107,
    CmdSwitchHandDataCsReq = 8101,
    CmdSwitchHandFinishCsReq = 8102,
    CmdSwitchHandCoinUpdateScRsp = 8111,
    CmdSwitchHandResetHandPosScRsp = 8103,
    CmdSwitchHandCoinUpdateCsReq = 8110,
    CmdSwitchHandFinishScRsp = 8112,
    CmdSwitchHandStartCsReq = 8117,
    CmdSwitchHandDataScRsp = 8115,
    CmdSwitchHandUpdateScRsp = 8114,
    _,
};

pub const HandPropType = enum(i32) {
    SWITCH_HAND_OP_PROP_TYPE_NONE = 0,
    SWITCH_HAND_OP_PROP_TYPE_CATCH = 1,
    SWITCH_HAND_OP_PROP_TYPE_LIFT = 2,
    _,
};

pub const CmdSwordTrainingType = enum(i32) {
    CmdSwordTrainingTypeNone = 0,
    CmdSwordTrainingLearnSkillScRsp = 7456,
    CmdSwordTrainingGiveUpGameCsReq = 7459,
    CmdSwordTrainingExamResultConfirmCsReq = 7469,
    CmdSwordTrainingActionTurnSettleScNotify = 7486,
    CmdSwordTrainingDailyPhaseConfirmCsReq = 7451,
    CmdSwordTrainingResumeGameScRsp = 7472,
    CmdGetSwordTrainingDataScRsp = 7496,
    CmdSwordTrainingGameSyncChangeScNotify = 7473,
    CmdSwordTrainingSetSkillTraceScRsp = 7485,
    CmdSwordTrainingSelectEndingCsReq = 7464,
    CmdSwordTrainingStoryBattleCsReq = 7460,
    CmdSwordTrainingStoryBattleScRsp = 7495,
    CmdSwordTrainingTurnActionScRsp = 7452,
    CmdSwordTrainingMarkEndingViewedScRsp = 7481,
    CmdSwordTrainingDialogueSelectOptionScRsp = 7492,
    CmdSwordTrainingExamResultConfirmScRsp = 7488,
    CmdGetSwordTrainingDataCsReq = 7471,
    CmdSwordTrainingRestoreGameCsReq = 7476,
    CmdEnterSwordTrainingExamScRsp = 7479,
    CmdSwordTrainingLearnSkillCsReq = 7455,
    CmdSwordTrainingStartGameCsReq = 7500,
    CmdSwordTrainingStartGameScRsp = 7487,
    CmdSwordTrainingStoryConfirmScRsp = 7470,
    CmdSwordTrainingRestoreGameScRsp = 7461,
    CmdSwordTrainingGiveUpGameScRsp = 7490,
    CmdSwordTrainingDialogueSelectOptionCsReq = 7477,
    CmdSwordTrainingDailyPhaseConfirmScRsp = 7478,
    CmdSwordTrainingSetSkillTraceCsReq = 7489,
    CmdSwordTrainingSelectEndingScRsp = 7499,
    CmdEnterSwordTrainingExamCsReq = 7482,
    CmdSwordTrainingTurnActionCsReq = 7480,
    CmdSwordTrainingResumeGameCsReq = 7494,
    CmdSwordTrainingMarkEndingViewedCsReq = 7475,
    CmdSwordTrainingGameSettleScNotify = 7462,
    CmdSwordTrainingUnlockSyncScNotify = 7458,
    CmdSwordTrainingStoryConfirmCsReq = 7498,
    _,
};

pub const PKHJBPMIBBA = enum(i32) {
    SWORD_TRAIN_GAME_SOURCE_TYPE_NONE = 0,
    SWORD_TRAIN_GAME_SOURCE_TYPE_TURN_SETTLE = 1,
    SWORD_TRAIN_GAME_SOURCE_TYPE_STATUS_UPGRADE = 2,
    SWORD_TRAIN_GAME_SOURCE_TYPE_ACTION = 3,
    SWORD_TRAIN_GAME_SOURCE_TYPE_ACTION_HINT = 4,
    SWORD_TRAIN_GAME_SOURCE_TYPE_STORY = 5,
    SWORD_TRAIN_GAME_SOURCE_TYPE_EXAM_BONUS = 6,
    SWORD_TRAIN_GAME_SOURCE_TYPE_DIALOGUE = 7,
    _,
};

pub const BJNCDEFEEJI = enum(i32) {
    SWORD_TRAINING_DAILY_PHASE_TYPE_NONE = 0,
    SWORD_TRAINING_DAILY_PHASE_TYPE_MORNING = 1,
    SWORD_TRAINING_DAILY_PHASE_TYPE_NOON = 2,
    SWORD_TRAINING_DAILY_PHASE_TYPE_AFTERNOON = 3,
    SWORD_TRAINING_DAILY_PHASE_TYPE_EVENING = 4,
    _,
};

pub const HDIJJMDPILE = enum(i32) {
    SWORD_TRAINING_STATUS_TYPE_NONE = 0,
    SWORD_TRAINING_STATUS_TYPE_POWER = 1,
    SWORD_TRAINING_STATUS_TYPE_AGILITY = 2,
    SWORD_TRAINING_STATUS_TYPE_TOUGHNESS = 3,
    SWORD_TRAINING_STATUS_TYPE_PERCEPTION = 4,
    _SWORD_TRAINING_STATUS_TYPE_MAX = 5,
    _,
};

pub const HDMKPHALALG = enum(i32) {
    SWORD_TRAINING_GAME_SETTLE_NONE = 0,
    SWORD_TRAINING_GAME_SETTLE_FINISH = 1,
    SWORD_TRAINING_GAME_SETTLE_GIVE_UP = 2,
    SWORD_TRAINING_GAME_SETTLE_BATTLE_FAILED = 3,
    SWORD_TRAINING_GAME_SETTLE_FORCE = 4,
    SWORD_TRAINING_GAME_SETTLE_BY_RESTORE = 5,
    _,
};

pub const CmdPlayerSync = enum(i32) {
    CmdPlayerSyncNone = 0,
    CmdPlayerSyncScNotify = 610,
    _,
};

pub const CmdTalkRewardType = enum(i32) {
    CmdTalkRewardTypeNone = 0,
    CmdGetFirstTalkNpcScRsp = 2102,
    CmdGetFirstTalkNpcCsReq = 2179,
    CmdSelectInclinationTextCsReq = 2141,
    CmdFinishFirstTalkNpcScRsp = 2106,
    CmdGetNpcTakenRewardScRsp = 2105,
    CmdTakeTalkRewardScRsp = 2153,
    CmdFinishFirstTalkByPerformanceNpcScRsp = 2126,
    CmdTakeTalkRewardCsReq = 2198,
    CmdSelectInclinationTextScRsp = 2155,
    CmdFinishFirstTalkNpcCsReq = 2197,
    CmdGetFirstTalkByPerformanceNpcScRsp = 2139,
    CmdFinishFirstTalkByPerformanceNpcCsReq = 2116,
    CmdGetFirstTalkByPerformanceNpcCsReq = 2107,
    CmdGetNpcTakenRewardCsReq = 2110,
    _,
};

pub const CmdTarotBookType = enum(i32) {
    CmdTarotBookTypeNone = 0,
    CmdTarotBookFinishInteractionScRsp = 8160,
    CmdTarotBookMultiOpenPackAndUnlockStoryScRsp = 8149,
    CmdTarotBookUnlockInteractionScRsp = 8144,
    CmdTarotBookUnlockStoryCsReq = 8142,
    CmdTarotBookGetDataCsReq = 8141,
    CmdTarotBookGetDataScRsp = 8155,
    CmdTarotBookFinishInteractionCsReq = 8151,
    CmdTarotBookOpenPackScRsp = 8159,
    CmdTarotBookFinishStoryCsReq = 8147,
    CmdTarotBookUnlockInteractionCsReq = 8143,
    CmdTarotBookFinishStoryScRsp = 8154,
    CmdTarotBookMultiOpenPackAndUnlockStoryCsReq = 8146,
    CmdTarotBookSyncDataScNotify = 8145,
    CmdTarotBookUnlockStoryScRsp = 8152,
    CmdTarotBookOpenPackCsReq = 8157,
    CmdTarotBookModifyEnergyScNotify = 8150,
    _,
};

pub const CmdTelevisionActivityType = enum(i32) {
    CmdTelevisionActivityTypeNone = 0,
    CmdGetTelevisionActivityDataCsReq = 6961,
    CmdEnterTelevisionActivityStageScRsp = 6962,
    CmdEnterTelevisionActivityStageCsReq = 6979,
    CmdTelevisionActivityDataChangeScNotify = 6977,
    CmdGetTelevisionActivityDataScRsp = 6975,
    CmdTelevisionActivityBattleEndScNotify = 6972,
    _,
};

pub const CmdTextJoinType = enum(i32) {
    CmdTextJoinTypeNone = 0,
    CmdTextJoinSaveCsReq = 3810,
    CmdTextJoinQueryScRsp = 3853,
    CmdTextJoinSaveScRsp = 3805,
    CmdTextJoinBatchSaveCsReq = 3879,
    CmdTextJoinBatchSaveScRsp = 3802,
    CmdTextJoinQueryCsReq = 3898,
    _,
};

pub const CmdTrackPhotoActivityType = enum(i32) {
    CmdTrackPhotoActivityTypeNone = 0,
    CmdSettleTrackPhotoStageScRsp = 7552,
    CmdStartTrackPhotoStageScRsp = 7559,
    CmdQuitTrackPhotoStageScRsp = 7554,
    CmdGetTrackPhotoActivityDataScRsp = 7560,
    CmdStartTrackPhotoStageCsReq = 7556,
    CmdQuitTrackPhotoStageCsReq = 7553,
    CmdSettleTrackPhotoStageCsReq = 7551,
    CmdGetTrackPhotoActivityDataCsReq = 7555,
    _,
};

pub const CmdTrainPartyType = enum(i32) {
    CmdTrainPartyTypeNone = 0,
    CmdTrainPartyGamePlayStartScRsp = 8092,
    CmdTrainPartyLeaveCsReq = 8074,
    CmdTrainPartySettleNotify = 8097,
    CmdTrainPartyUpdatePosEnvScRsp = 8001,
    CmdTrainPartyBuildStartStepScRsp = 8026,
    CmdTrainPartyEnterCsReq = 8036,
    CmdTrainPartyBuildStartStepCsReq = 8016,
    CmdTrainPartyBuildDiyCsReq = 8063,
    CmdTrainPartyUpdatePosEnvCsReq = 8042,
    CmdTrainPartyUseCardCsReq = 8098,
    CmdTrainPartySyncUpdateScNotify = 8041,
    CmdTrainPartyGetDataCsReq = 8010,
    CmdTrainPartyHandlePendingActionCsReq = 8007,
    CmdTrainPartyEnterScRsp = 8078,
    CmdTrainPartyGetDataScRsp = 8005,
    CmdTrainPartyLeaveScRsp = 8090,
    CmdTrainPartyUseCardScRsp = 8053,
    CmdTrainPartyBuildingUpdateNotify = 8072,
    CmdTrainPartyTakeBuildLevelAwardCsReq = 8051,
    CmdTrainPartyHandlePendingActionScRsp = 8039,
    CmdTrainPartyBuildDiyScRsp = 8067,
    CmdTrainPartyGamePlayStartCsReq = 8069,
    CmdTrainPartyAddBuildDynamicBuffCsReq = 8035,
    CmdTrainPartyTakeBuildLevelAwardScRsp = 8025,
    CmdTrainPartyMoveScNotify = 8079,
    CmdTrainPartyAddBuildDynamicBuffScRsp = 8037,
    CmdTrainPartyGamePlaySettleNotify = 8024,
    _,
};

pub const KNOOCOCANAM = enum(i32) {
    BuildGoalStepNone = 0,
    BuildGoalStepIdle = 1,
    BuildGoalStepStart = 2,
    BuildGoalStepFinish = 3,
    _,
};

pub const CBEJAJENOHJ = enum(i32) {
    kTrainPartySrcNone = 0,
    kTrainPartySrcCard = 1,
    kTrainPartySrcGrid = 2,
    kTrainPartySrcPam = 3,
    kTrainPartySrcPassenger = 4,
    kTrainPartySrcBuilding = 5,
    _,
};

pub const IJDNOJEMIAN = enum(i32) {
    kDialogueEventNone = 0,
    kGamePlayStartDialogueEvent = 1,
    kGridDialogueEvent = 2,
    kAfterMeetingDialogueEvent = 3,
    _,
};

pub const LCDEMGACEKD = enum(i32) {
    kMtSkillNone = 0,
    kMtSkillModifyBase = 1,
    kMtSkillModifyRatio = 2,
    kMtSkillMultiplyRatio = 3,
    kMtSkillSelfDestroy = 4,
    _,
};

pub const DMLCPAKDBLJ = enum(i32) {
    TRAIN_PARTY_MT_CATEGORY_NONE = 0,
    TRAIN_PARTY_MT_CATEGORY_S = 1,
    TRAIN_PARTY_MT_CATEGORY_A = 2,
    TRAIN_PARTY_MT_CATEGORY_B = 3,
    TRAIN_PARTY_MT_CATEGORY_C = 4,
    TRAIN_PARTY_MT_CATEGORY_D = 5,
    TRAIN_PARTY_MT_CATEGORY_E = 6,
    TRAIN_PARTY_MT_CATEGORY_F = 7,
    TRAIN_PARTY_MT_CATEGORY_G = 8,
    _,
};

pub const CmdTrainVisitorType = enum(i32) {
    CmdTrainVisitorTypeNone = 0,
    CmdTrainVisitorBehaviorFinishCsReq = 3710,
    CmdTrainVisitorBehaviorFinishScRsp = 3705,
    CmdTrainRefreshTimeNotify = 3779,
    CmdShowNewSupplementVisitorScRsp = 3739,
    CmdGetTrainVisitorRegisterCsReq = 3797,
    CmdShowNewSupplementVisitorCsReq = 3707,
    CmdGetTrainVisitorBehaviorScRsp = 3753,
    CmdGetTrainVisitorRegisterScRsp = 3706,
    CmdTrainVisitorRewardSendNotify = 3702,
    CmdGetTrainVisitorBehaviorCsReq = 3798,
    CmdTakeTrainVisitorUntakenBehaviorRewardCsReq = 3741,
    CmdTakeTrainVisitorUntakenBehaviorRewardScRsp = 3755,
    _,
};

pub const TrainVisitorRewardSendType = enum(i32) {
    TRAIN_VISITOR_REWARD_SEND_NONE = 0,
    TRAIN_VISITOR_REWARD_SEND_REGISTER = 1,
    TRAIN_VISITOR_REWARD_SEND_MISSION = 2,
    _,
};

pub const TrainVisitorStatus = enum(i32) {
    TRAIN_VISITOR_STATUS_NONE = 0,
    TRAIN_VISITOR_STATUS_INIT = 1,
    TRAIN_VISITOR_STATUS_GET_ON = 2,
    TRAIN_VISITOR_STATUS_GET_OFF = 3,
    TRAIN_VISITOR_STATUS_BE_TRAIN_MEMBER = 4,
    _,
};

pub const TrainVisitorRegisterGetType = enum(i32) {
    TRAIN_VISITOR_REGISTER_GET_TYPE_NONE = 0,
    TRAIN_VISITOR_REGISTER_GET_TYPE_AUTO = 1,
    TRAIN_VISITOR_REGISTER_GET_TYPE_MANUAL = 2,
    _,
};

pub const CmdTravelBrochure = enum(i32) {
    CmdTravelBrochureNone = 0,
    CmdTravelBrochureApplyPasterListScRsp = 6490,
    CmdTravelBrochureUpdatePasterPosCsReq = 6407,
    CmdTravelBrochureGetDataCsReq = 6410,
    CmdTravelBrochureSetCustomValueCsReq = 6463,
    CmdTravelBrochureSelectMessageCsReq = 6479,
    CmdTravelBrochureSetCustomValueScRsp = 6467,
    CmdTravelBrochureUpdatePasterPosScRsp = 6439,
    CmdTravelBrochureRemovePasterCsReq = 6441,
    CmdTravelBrochureSelectMessageScRsp = 6402,
    CmdTravelBrochureApplyPasterCsReq = 6497,
    CmdTravelBrochureRemovePasterScRsp = 6455,
    CmdTravelBrochurePageUnlockScNotify = 6498,
    CmdTravelBrochureSetPageDescStatusCsReq = 6472,
    CmdTravelBrochureApplyPasterScRsp = 6406,
    CmdTravelBrochurePageResetCsReq = 6436,
    CmdTravelBrochurePageResetScRsp = 6478,
    CmdTravelBrochureSetPageDescStatusScRsp = 6494,
    CmdTravelBrochureGetPasterScNotify = 6416,
    CmdTravelBrochureApplyPasterListCsReq = 6474,
    CmdTravelBrochureGetDataScRsp = 6405,
    _,
};

pub const HGKKPPLJBOI = enum(i32) {
    PAGE_NONE = 0,
    PAGE_UNLOCKED = 1,
    PAGE_INTERACTED = 2,
    _,
};

pub const DCJAOPDINOI = enum(i32) {
    PAGE_DESC_NONE = 0,
    PAGE_DESC_SHOW_DETAIL = 1,
    PAGE_DESC_COLLAPSE = 2,
    _,
};

pub const CmdTreasureDungeonType = enum(i32) {
    CmdTreasureDungeonTypeNone = 0,
    CmdOpenTreasureDungeonGridCsReq = 4463,
    CmdFightTreasureDungeonMonsterScRsp = 4494,
    CmdOpenTreasureDungeonGridScRsp = 4467,
    CmdInteractTreasureDungeonGridScRsp = 4478,
    CmdTreasureDungeonFinishScNotify = 4405,
    CmdFightTreasureDungeonMonsterCsReq = 4472,
    CmdUseTreasureDungeonItemScRsp = 4490,
    CmdQuitTreasureDungeonScRsp = 4462,
    CmdGetTreasureDungeonActivityDataCsReq = 4407,
    CmdInteractTreasureDungeonGridCsReq = 4436,
    CmdEnterTreasureDungeonCsReq = 4416,
    CmdTreasureDungeonDataScNotify = 4410,
    CmdGetTreasureDungeonActivityDataScRsp = 4439,
    CmdQuitTreasureDungeonCsReq = 4454,
    CmdEnterTreasureDungeonScRsp = 4426,
    CmdUseTreasureDungeonItemCsReq = 4474,
    _,
};

pub const IMKNBJCOIOP = enum(i32) {
    TREASURE_DUNGEON_RECORD_NONE = 0,
    TREASURE_DUNGEON_RECORD_ADD_HP = 1,
    TREASURE_DUNGEON_RECORD_SUB_HP = 2,
    TREASURE_DUNGEON_RECORD_SUB_HP_NO_EXPLORE = 3,
    TREASURE_DUNGEON_RECORD_ADD_ATTACK = 5,
    TREASURE_DUNGEON_RECORD_ADD_DEFENCE = 6,
    TREASURE_DUNGEON_RECORD_ADD_EXPLORE = 9,
    TREASURE_DUNGEON_RECORD_SUB_EXPLORE = 10,
    TREASURE_DUNGEON_RECORD_ADD_EXPLORE_OVERFLOW = 11,
    TREASURE_DUNGEON_RECORD_SUMMON = 15,
    TREASURE_DUNGEON_RECORD_KILL = 16,
    TREASURE_DUNGEON_RECORD_ADD_TRIAL_AVATAR = 20,
    TREASURE_DUNGEON_RECORD_ADD_BUFF = 24,
    TREASURE_DUNGEON_RECORD_UNLOCK_DOOR = 25,
    TREASURE_DUNGEON_RECORD_ENEMY_ENHANCE = 27,
    TREASURE_DUNGEON_RECORD_ENEMY_WEAKEN = 28,
    TREASURE_DUNGEON_RECORD_ENEMY_AURA_REMOVE = 29,
    TREASURE_DUNGEON_RECORD_SPECIAL_MONSTER_RUN = 30,
    TREASURE_DUNGEON_RECORD_SPECIAL_MONSTER_KILL = 31,
    TREASURE_DUNGEON_RECORD_BATTLE_BUFF_TRIGGER_SUCCESS = 33,
    TREASURE_DUNGEON_RECORD_BATTLE_BUFF_TRIGGER_FAIL = 34,
    TREASURE_DUNGEON_RECORD_BATTLE_BUFF_ADD_EXPLORE = 35,
    TREASURE_DUNGEON_RECORD_BATTLE_BUFF_OPEN_GRID = 36,
    TREASURE_DUNGEON_RECORD_BATTLE_BUFF_ADD_ITEM = 37,
    TREASURE_DUNGEON_RECORD_AVATAR_DEAD = 40,
    TREASURE_DUNGEON_RECORD_TRIAL_AVATAR_DEAD = 41,
    TREASURE_DUNGEON_RECORD_ALL_AVATAR_DEAD = 42,
    TREASURE_DUNGEON_RECORD_OPEN_ITEM_CHEST = 43,
    _,
};

pub const CmdTutorialType = enum(i32) {
    CmdTutorialTypeNone = 0,
    CmdUnlockTutorialCsReq = 1679,
    CmdFinishTutorialGuideCsReq = 1607,
    CmdGetTutorialGuideCsReq = 1698,
    CmdGetTutorialScRsp = 1605,
    CmdUnlockTutorialGuideScRsp = 1606,
    CmdFinishTutorialScRsp = 1655,
    CmdGetTutorialCsReq = 1610,
    CmdGetTutorialGuideScRsp = 1653,
    CmdFinishTutorialCsReq = 1641,
    CmdUnlockTutorialGuideCsReq = 1697,
    CmdFinishTutorialGuideScRsp = 1639,
    CmdUnlockTutorialScRsp = 1602,
    _,
};

pub const TutorialStatus = enum(i32) {
    TUTORIAL_NONE = 0,
    TUTORIAL_UNLOCK = 1,
    TUTORIAL_FINISH = 2,
    _,
};

pub const MPJPPGHFHEH = enum(i32) {
    TUTORIAL_FINISH_TYPE_NONE = 0,
    TUTORIAL_FINISH_TYPE_MANUAL = 1,
    TUTORIAL_FINISH_TYPE_AUTOMATIC = 2,
    _,
};

pub const CmdWaypointType = enum(i32) {
    CmdWaypointTypeNone = 0,
    CmdGetWaypointScRsp = 405,
    CmdWaypointShowNewCsNotify = 497,
    CmdGetChapterCsReq = 479,
    CmdGetChapterScRsp = 402,
    CmdGetWaypointCsReq = 410,
    CmdTakeChapterRewardScRsp = 441,
    CmdSetCurWaypointScRsp = 453,
    CmdTakeChapterRewardCsReq = 406,
    CmdSetCurWaypointCsReq = 498,
    _,
};

pub const MHHLJFEJGNM = enum(i32) {
    WAYPOINT_TYPE_NONE = 0,
    WAYPOINT_TYPE_STAGE = 1,
    WAYPOINT_TYPE_PLOT = 2,
    _,
};

pub const OBFAICFOGMP = enum(i32) {
    WAYPOINT_UNLOCK_NONE = 0,
    WAYPOINT_UNLOCK_PRE = 1,
    WAYPOINT_UNLOCK_LEVEL = 2,
    _,
};

pub const CmdWolfBroType = enum(i32) {
    CmdWolfBroTypeNone = 0,
    CmdQuitWolfBroGameCsReq = 6528,
    CmdWolfBroGameExplodeMonsterCsReq = 6550,
    CmdWolfBroGameUseBulletCsReq = 6518,
    CmdWolfBroGameUseBulletScRsp = 6513,
    CmdWolfBroGameActivateBulletScRsp = 6506,
    CmdQuitWolfBroGameScRsp = 6527,
    CmdRestoreWolfBroGameArchiveCsReq = 6502,
    CmdRestoreWolfBroGameArchiveScRsp = 6501,
    CmdArchiveWolfBroGameScRsp = 6530,
    CmdArchiveWolfBroGameCsReq = 6546,
    CmdStartWolfBroGameScRsp = 6521,
    CmdWolfBroGameDataChangeScNotify = 6543,
    CmdGetWolfBroGameDataCsReq = 6542,
    CmdWolfBroGameExplodeMonsterScRsp = 6537,
    CmdGetWolfBroGameDataScRsp = 6504,
    CmdWolfBroGamePickupBulletCsReq = 6532,
    CmdWolfBroGameActivateBulletCsReq = 6505,
    CmdWolfBroGamePickupBulletScRsp = 6529,
    CmdStartWolfBroGameCsReq = 6523,
    _,
};

pub const CmdWorldUnlockType = enum(i32) {
    CmdWorldUnlockTypeNone = 0,
    CmdWorldUnlockScRsp = 7627,
    CmdWorldUnlockCsReq = 7626,
    _,
};

pub const DJEBIMHNPBM = enum(i32) {
    DISPATCH_TYPE_NONE = 0,
    DISPATCH_TYPE_BY_ADDR = 1,
    DISPATCH_TYPE_BY_MOD = 2,
    DISPATCH_TYPE_BY_RAND = 3,
    DISPATCH_TYPE_BY_CHASH = 4,
    DISPATCH_TYPE_BY_STICKY_SESSION = 5,
    DISPATCH_TYPE_BY_OBJECT = 6,
    _,
};

pub const MMMNFDNLJMD = struct {
    queue_position: u32 = 0,
    GPJGGKNOAFD: u32 = 0,
    OEEHIFHNFDH: ?OEEHIFHNFDH_union,

    pub const _OEEHIFHNFDH_case = enum {
        marble_game_begin,
        marble_game_end,
        marble_game_round,
        marble_game_turn,
    };
    pub const OEEHIFHNFDH_union = union(_OEEHIFHNFDH_case) {
        marble_game_begin: LJNPGKDOJHO,
        marble_game_end: BPNMJCHEDNL,
        marble_game_round: FOOPINGAFEG,
        marble_game_turn: OFILKJCLEGI,
        pub const _union_desc = .{
            .marble_game_begin = fd(101, .{ .SubMessage = {} }),
            .marble_game_end = fd(102, .{ .SubMessage = {} }),
            .marble_game_round = fd(103, .{ .SubMessage = {} }),
            .marble_game_turn = fd(104, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .queue_position = fd(1, .{ .Varint = .Simple }),
        .GPJGGKNOAFD = fd(2, .{ .Varint = .Simple }),
        .OEEHIFHNFDH = fd(null, .{ .OneOf = OEEHIFHNFDH_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HCJJOOFKCJH = struct {
    LPDBPKKADGG: u32 = 0,
    HOMGCFJPBLK: i32 = 0,
    CJJBLMKJAPA: i32 = 0,

    pub const _desc_table = .{
        .LPDBPKKADGG = fd(1, .{ .Varint = .Simple }),
        .HOMGCFJPBLK = fd(2, .{ .Varint = .Simple }),
        .CJJBLMKJAPA = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LNGMDMIPCKL = struct {
    LPDBPKKADGG: u32 = 0,
    JOJAHIAFNLK: u32 = 0,

    pub const _desc_table = .{
        .LPDBPKKADGG = fd(1, .{ .Varint = .Simple }),
        .JOJAHIAFNLK = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CCCNHOECCMD = struct {
    item_id: u32 = 0,
    BANELELNLKB: u32 = 0,
    skill_id: u32 = 0,
    display_value: i32 = 0,

    pub const _desc_table = .{
        .item_id = fd(1, .{ .Varint = .Simple }),
        .BANELELNLKB = fd(2, .{ .Varint = .Simple }),
        .skill_id = fd(3, .{ .Varint = .Simple }),
        .display_value = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NOOBBIHJKMA = struct {
    MFLEKHHPIEO: i32 = 0,
    MAJLGJCFGJA: i32 = 0,
    IOLCFLOFAGF: i32 = 0,
    AMEIIMFKBFA: i32 = 0,

    pub const _desc_table = .{
        .MFLEKHHPIEO = fd(1, .{ .Varint = .Simple }),
        .MAJLGJCFGJA = fd(2, .{ .Varint = .Simple }),
        .IOLCFLOFAGF = fd(3, .{ .Varint = .Simple }),
        .AMEIIMFKBFA = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LJNPGKDOJHO = struct {
    monster_battle_type: u32 = 0,
    DBADLNFOPAO: u64 = 0,
    level_id: u32 = 0,
    NLIBKABFGCC: u32 = 0,
    BIECGFIMCFB: ArrayList(HCJJOOFKCJH),
    rank: u32 = 0,
    EKLDPALNLDC: u64 = 0,
    FFFGFCPHBPN: ArrayList(HCJJOOFKCJH),
    JBLMGNPMADM: u32 = 0,

    pub const _desc_table = .{
        .monster_battle_type = fd(1, .{ .Varint = .Simple }),
        .DBADLNFOPAO = fd(2, .{ .Varint = .Simple }),
        .level_id = fd(3, .{ .Varint = .Simple }),
        .NLIBKABFGCC = fd(4, .{ .Varint = .Simple }),
        .BIECGFIMCFB = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .rank = fd(6, .{ .Varint = .Simple }),
        .EKLDPALNLDC = fd(7, .{ .Varint = .Simple }),
        .FFFGFCPHBPN = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .JBLMGNPMADM = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BPNMJCHEDNL = struct {
    monster_battle_type: u32 = 0,
    DBADLNFOPAO: u64 = 0,
    level_id: u32 = 0,
    NLIBKABFGCC: u32 = 0,
    BIECGFIMCFB: ArrayList(HCJJOOFKCJH),
    rank: u32 = 0,
    EKLDPALNLDC: u64 = 0,
    FFFGFCPHBPN: ArrayList(HCJJOOFKCJH),
    JBLMGNPMADM: u32 = 0,
    IMBCLFCBODJ: u32 = 0,
    score_id: i32 = 0,
    NPJEECEDPOK: i32 = 0,
    PCEAECMKDEH: ArrayList(LNGMDMIPCKL),
    IFNMBNGIFPH: u32 = 0,
    IEHJGOMBPBI: u32 = 0,
    IPHAFKFGNAO: u32 = 0,
    LBPFECLGEFC: u32 = 0,

    pub const _desc_table = .{
        .monster_battle_type = fd(1, .{ .Varint = .Simple }),
        .DBADLNFOPAO = fd(2, .{ .Varint = .Simple }),
        .level_id = fd(3, .{ .Varint = .Simple }),
        .NLIBKABFGCC = fd(4, .{ .Varint = .Simple }),
        .BIECGFIMCFB = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .rank = fd(6, .{ .Varint = .Simple }),
        .EKLDPALNLDC = fd(7, .{ .Varint = .Simple }),
        .FFFGFCPHBPN = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .JBLMGNPMADM = fd(9, .{ .Varint = .Simple }),
        .IMBCLFCBODJ = fd(10, .{ .Varint = .Simple }),
        .score_id = fd(11, .{ .Varint = .Simple }),
        .NPJEECEDPOK = fd(12, .{ .Varint = .Simple }),
        .PCEAECMKDEH = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .IFNMBNGIFPH = fd(14, .{ .Varint = .Simple }),
        .IEHJGOMBPBI = fd(15, .{ .Varint = .Simple }),
        .IPHAFKFGNAO = fd(16, .{ .Varint = .Simple }),
        .LBPFECLGEFC = fd(17, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FOOPINGAFEG = struct {
    monster_battle_type: u32 = 0,
    DBADLNFOPAO: u64 = 0,
    level_id: u32 = 0,
    NLIBKABFGCC: u32 = 0,
    IGHLABGGIJE: u32 = 0,
    LPDBPKKADGG: u32 = 0,
    HGBBKGNEPFB: bool = false,
    FEOPFHOLKBM: ArrayList(HCJJOOFKCJH),
    rank: u32 = 0,
    CNDCKAKKMCG: ArrayList(HCJJOOFKCJH),
    JBLMGNPMADM: u32 = 0,
    skill_info: ArrayList(CCCNHOECCMD),
    KBGAJGEOMGL: ArrayList(NOOBBIHJKMA),
    LELHCFOEOCO: ArrayList(HCJJOOFKCJH),
    IMJEKFDHING: ArrayList(HCJJOOFKCJH),
    DJNMHMPKKKB: u32 = 0,

    pub const _desc_table = .{
        .monster_battle_type = fd(1, .{ .Varint = .Simple }),
        .DBADLNFOPAO = fd(2, .{ .Varint = .Simple }),
        .level_id = fd(3, .{ .Varint = .Simple }),
        .NLIBKABFGCC = fd(4, .{ .Varint = .Simple }),
        .IGHLABGGIJE = fd(5, .{ .Varint = .Simple }),
        .LPDBPKKADGG = fd(6, .{ .Varint = .Simple }),
        .HGBBKGNEPFB = fd(7, .{ .Varint = .Simple }),
        .FEOPFHOLKBM = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .rank = fd(9, .{ .Varint = .Simple }),
        .CNDCKAKKMCG = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .JBLMGNPMADM = fd(11, .{ .Varint = .Simple }),
        .skill_info = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .KBGAJGEOMGL = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .LELHCFOEOCO = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .IMJEKFDHING = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .DJNMHMPKKKB = fd(16, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OFILKJCLEGI = struct {
    monster_battle_type: u32 = 0,
    DBADLNFOPAO: u64 = 0,
    level_id: u32 = 0,
    NLIBKABFGCC: u32 = 0,
    NLEAIJHAPAP: bool = false,
    IGHLABGGIJE: u32 = 0,
    rank: u32 = 0,
    EKLDPALNLDC: u64 = 0,
    JBLMGNPMADM: u32 = 0,
    CBOIIACBAKF: u32 = 0,
    buff_list: ArrayList(u32),
    DJNMHMPKKKB: u32 = 0,

    pub const _desc_table = .{
        .monster_battle_type = fd(1, .{ .Varint = .Simple }),
        .DBADLNFOPAO = fd(2, .{ .Varint = .Simple }),
        .level_id = fd(3, .{ .Varint = .Simple }),
        .NLIBKABFGCC = fd(4, .{ .Varint = .Simple }),
        .NLEAIJHAPAP = fd(5, .{ .Varint = .Simple }),
        .IGHLABGGIJE = fd(6, .{ .Varint = .Simple }),
        .rank = fd(7, .{ .Varint = .Simple }),
        .EKLDPALNLDC = fd(8, .{ .Varint = .Simple }),
        .JBLMGNPMADM = fd(9, .{ .Varint = .Simple }),
        .CBOIIACBAKF = fd(10, .{ .Varint = .Simple }),
        .buff_list = fd(11, .{ .PackedList = .{ .Varint = .Simple } }),
        .DJNMHMPKKKB = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerBasicInfo = struct {
    nickname: ManagedString = .Empty,
    level: u32 = 0,
    exp: u32 = 0,
    stamina: u32 = 0,
    mcoin: u32 = 0,
    hcoin: u32 = 0,
    scoin: u32 = 0,
    world_level: u32 = 0,

    pub const _desc_table = .{
        .nickname = fd(1, .String),
        .level = fd(2, .{ .Varint = .Simple }),
        .exp = fd(3, .{ .Varint = .Simple }),
        .stamina = fd(4, .{ .Varint = .Simple }),
        .mcoin = fd(5, .{ .Varint = .Simple }),
        .hcoin = fd(6, .{ .Varint = .Simple }),
        .scoin = fd(7, .{ .Varint = .Simple }),
        .world_level = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SpBarInfo = struct {
    cur_sp: u32 = 0,
    max_sp: u32 = 0,

    pub const _desc_table = .{
        .cur_sp = fd(1, .{ .Varint = .Simple }),
        .max_sp = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BlackInfo = struct {
    begin_time: i64 = 0,
    end_time: i64 = 0,
    limit_level: u32 = 0,
    ban_type: u32 = 0,

    pub const _desc_table = .{
        .begin_time = fd(1, .{ .Varint = .Simple }),
        .end_time = fd(2, .{ .Varint = .Simple }),
        .limit_level = fd(3, .{ .Varint = .Simple }),
        .ban_type = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FeverTimeAvatar = struct {
    avatar_type: AvatarType = @enumFromInt(0),
    id: u32 = 0,

    pub const _desc_table = .{
        .avatar_type = fd(1, .{ .Varint = .Simple }),
        .id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OILPIACENNH = struct {
    avatar_type: AvatarType = @enumFromInt(0),
    id: u32 = 0,
    level: u32 = 0,
    index: u32 = 0,
    GGDIIBCDOBB: u32 = 0,

    pub const _desc_table = .{
        .avatar_type = fd(1, .{ .Varint = .Simple }),
        .id = fd(2, .{ .Varint = .Simple }),
        .level = fd(3, .{ .Varint = .Simple }),
        .index = fd(4, .{ .Varint = .Simple }),
        .GGDIIBCDOBB = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const VersionCount = struct {
    version: u32 = 0,
    count: u32 = 0,

    pub const _desc_table = .{
        .version = fd(1, .{ .Varint = .Simple }),
        .count = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ClientDownloadData = struct {
    version: u32 = 0,
    time: i64 = 0,
    data: ManagedString = .Empty,
    HAEHHCPOAPP: u32 = 0,

    pub const _desc_table = .{
        .version = fd(1, .{ .Varint = .Simple }),
        .time = fd(2, .{ .Varint = .Simple }),
        .data = fd(3, .String),
        .HAEHHCPOAPP = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ClientObjDownloadData = struct {
    BIDJPEIMLLF: ManagedString = .Empty,
    client_obj_download_data: ?ClientDownloadData = null,
    JEDHNEJHGNP: ArrayList(ClientDownloadData),

    pub const _desc_table = .{
        .BIDJPEIMLLF = fd(1, .String),
        .client_obj_download_data = fd(2, .{ .SubMessage = {} }),
        .JEDHNEJHGNP = fd(3, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ClientUploadData = struct {
    tag: ManagedString = .Empty,
    value: ManagedString = .Empty,

    pub const _desc_table = .{
        .tag = fd(1, .String),
        .value = fd(2, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FeatureSwitchParam = struct {
    switch_list: ArrayList(u32),

    pub const _desc_table = .{
        .switch_list = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HPIOFDCGMEJ = struct {
    type: FeatureSwitchType = @enumFromInt(0),
    NJCJDNHPCJN: ArrayList(FeatureSwitchParam),
    OAFMLJMDJFO: bool = false,

    pub const _desc_table = .{
        .type = fd(1, .{ .Varint = .Simple }),
        .NJCJDNHPCJN = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .OAFMLJMDJFO = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JGFKICDCFLJ = struct {
    FDKGFDICMFD: ManagedString = .Empty,
    MDJCAOAGCKO: ManagedString = .Empty,
    GIOOHOOMJHO: ManagedString = .Empty,
    FBMLLNKCFEN: ManagedString = .Empty,
    DGOOHIBAOEE: ManagedString = .Empty,
    FKBAMBOODKJ: ManagedString = .Empty,
    MAC: ManagedString = .Empty,

    pub const _desc_table = .{
        .FDKGFDICMFD = fd(1, .String),
        .MDJCAOAGCKO = fd(2, .String),
        .GIOOHOOMJHO = fd(3, .String),
        .FBMLLNKCFEN = fd(4, .String),
        .DGOOHIBAOEE = fd(5, .String),
        .FKBAMBOODKJ = fd(6, .String),
        .MAC = fd(7, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OCCHNEFHGNE = struct {
    AGDAELENHMI: ManagedString = .Empty,
    EJIEAGFLGED: i32 = 0,
    LDBFAIKMIFI: i32 = 0,
    PKFLGKPHOED: i32 = 0,
    AKDCLAEPFEJ: i32 = 0,

    pub const _desc_table = .{
        .AGDAELENHMI = fd(1, .String),
        .EJIEAGFLGED = fd(2, .{ .Varint = .Simple }),
        .LDBFAIKMIFI = fd(3, .{ .Varint = .Simple }),
        .PKFLGKPHOED = fd(4, .{ .Varint = .Simple }),
        .AKDCLAEPFEJ = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ReplayInfo = struct {
    DKNPKJMAHCM: u64 = 0,
    replay_type: ReplayType = @enumFromInt(0),
    stage_id: u32 = 0,
    uid: u32 = 0,
    nickname: ManagedString = .Empty,
    head_icon: u32 = 0,
    replay_name: ManagedString = .Empty,
    create_time: u64 = 0,
    AFEHLMFIBMD: u32 = 0,
    CMPBKBBKAOA: u32 = 0,

    pub const _desc_table = .{
        .DKNPKJMAHCM = fd(1, .{ .Varint = .Simple }),
        .replay_type = fd(2, .{ .Varint = .Simple }),
        .stage_id = fd(3, .{ .Varint = .Simple }),
        .uid = fd(4, .{ .Varint = .Simple }),
        .nickname = fd(5, .String),
        .head_icon = fd(6, .{ .Varint = .Simple }),
        .replay_name = fd(7, .String),
        .create_time = fd(8, .{ .Varint = .Simple }),
        .AFEHLMFIBMD = fd(9, .{ .Varint = .Simple }),
        .CMPBKBBKAOA = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PIGODJNHJML = struct {
    avatar_id: u32 = 0,
    avatar_level: u32 = 0,

    pub const _desc_table = .{
        .avatar_id = fd(1, .{ .Varint = .Simple }),
        .avatar_level = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AHKANKEPADJ = struct {
    uid: u32 = 0,
    JHHLPLJAAME: u32 = 0,
    OBHIDGFGAMD: bool = false,
    POFHPDGAMKL: u32 = 0,
    BDNLNMCOHGB: ManagedString = .Empty,
    avatar_list: ArrayList(PIGODJNHJML),
    NCACOCCJNLD: u32 = 0,
    AHJFPNGDBDO: u32 = 0,
    PGOFPNLAPOE: u32 = 0,

    pub const _desc_table = .{
        .uid = fd(1, .{ .Varint = .Simple }),
        .JHHLPLJAAME = fd(2, .{ .Varint = .Simple }),
        .OBHIDGFGAMD = fd(3, .{ .Varint = .Simple }),
        .POFHPDGAMKL = fd(4, .{ .Varint = .Simple }),
        .BDNLNMCOHGB = fd(5, .String),
        .avatar_list = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .NCACOCCJNLD = fd(7, .{ .Varint = .Simple }),
        .AHJFPNGDBDO = fd(8, .{ .Varint = .Simple }),
        .PGOFPNLAPOE = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PunkLordBattleRecordList = struct {
    battle_record_list: ArrayList(AHKANKEPADJ),

    pub const _desc_table = .{
        .battle_record_list = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PunkLordMonsterKey = struct {
    uid: u32 = 0,
    monster_id: u32 = 0,

    pub const _desc_table = .{
        .uid = fd(1, .{ .Varint = .Simple }),
        .monster_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PunkLordMonsterBasicInfo = struct {
    uid: u32 = 0,
    monster_id: u32 = 0,
    config_id: u32 = 0,
    world_level: u32 = 0,
    create_time: i64 = 0,
    left_hp: u32 = 0,
    attacker_num: u32 = 0,
    share_type: PunkLordShareType = @enumFromInt(0),
    PPBOCECKCAH: bool = false,

    pub const _desc_table = .{
        .uid = fd(1, .{ .Varint = .Simple }),
        .monster_id = fd(2, .{ .Varint = .Simple }),
        .config_id = fd(3, .{ .Varint = .Simple }),
        .world_level = fd(4, .{ .Varint = .Simple }),
        .create_time = fd(5, .{ .Varint = .Simple }),
        .left_hp = fd(6, .{ .Varint = .Simple }),
        .attacker_num = fd(7, .{ .Varint = .Simple }),
        .share_type = fd(8, .{ .Varint = .Simple }),
        .PPBOCECKCAH = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CEMEDOEHBGE = struct {
    BDNLNMCOHGB: ManagedString = .Empty,
    FGNFBKBOGDJ: ?ReplayInfo = null,

    pub const _desc_table = .{
        .BDNLNMCOHGB = fd(1, .String),
        .FGNFBKBOGDJ = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ILDHFMHBKNC = struct {
    INFHIKBLJLA: u64 = 0,
    NBDLPGBIDLC: u32 = 0,
    AHBEMDLGGEO: u32 = 0,

    pub const _desc_table = .{
        .INFHIKBLJLA = fd(1, .{ .Varint = .Simple }),
        .NBDLPGBIDLC = fd(2, .{ .Varint = .Simple }),
        .AHBEMDLGGEO = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LKAPFHAHNEM = struct {
    panel_id: u32 = 0,
    modifier_content_type: u32 = 0,
    CFDANMOMHPI: u64 = 0,

    pub const _desc_table = .{
        .panel_id = fd(1, .{ .Varint = .Simple }),
        .modifier_content_type = fd(2, .{ .Varint = .Simple }),
        .CFDANMOMHPI = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PEDLPHDBNAF = struct {
    GJMELAKIJIF: ?GJMELAKIJIF_union,

    pub const _GJMELAKIJIF_case = enum {
        LFCPHAJCEKF,
        CELMKOLBJNN,
    };
    pub const GJMELAKIJIF_union = union(_GJMELAKIJIF_case) {
        LFCPHAJCEKF: ILDHFMHBKNC,
        CELMKOLBJNN: LKAPFHAHNEM,
        pub const _union_desc = .{
            .LFCPHAJCEKF = fd(101, .{ .SubMessage = {} }),
            .CELMKOLBJNN = fd(102, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .GJMELAKIJIF = fd(null, .{ .OneOf = GJMELAKIJIF_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RegionInfo = struct {
    name: ManagedString = .Empty,
    title: ManagedString = .Empty,
    dispatch_url: ManagedString = .Empty,
    env_type: ManagedString = .Empty,
    display_name: ManagedString = .Empty,
    msg: ManagedString = .Empty,

    pub const _desc_table = .{
        .name = fd(1, .String),
        .title = fd(2, .String),
        .dispatch_url = fd(3, .String),
        .env_type = fd(4, .String),
        .display_name = fd(5, .String),
        .msg = fd(6, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Dispatch = struct {
    retcode: u32 = 0,
    msg: ManagedString = .Empty,
    top_sever_region_name: ManagedString = .Empty,
    region_list: ArrayList(RegionInfo),
    stop_desc: ManagedString = .Empty,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
        .msg = fd(2, .String),
        .top_sever_region_name = fd(3, .String),
        .region_list = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .stop_desc = fd(5, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IIPKANNMLFN = struct {
    HPOLOCPDDAC: u32 = 0,
    KJEBIDEDLLD: ArrayList(u32),
    KKCMFGMHIMO: ArrayList(u32),
    LGEJJAJPEDK: ArrayList(u32),
    FBBAJBINGLB: ArrayList(u32),
    MPMFAHLKEOB: ArrayList(u32),
    KNLJGCADLJK: bool = false,
    IAMCOFEIJKI: u32 = 0,
    CGPDCGDHGJF: ArrayList(u32),
    IKNCCGNELKN: ArrayList(u32),
    AJHLFMLJOIB: ArrayList(u32),

    pub const _desc_table = .{
        .HPOLOCPDDAC = fd(1, .{ .Varint = .Simple }),
        .KJEBIDEDLLD = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .KKCMFGMHIMO = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
        .LGEJJAJPEDK = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .FBBAJBINGLB = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        .MPMFAHLKEOB = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
        .KNLJGCADLJK = fd(7, .{ .Varint = .Simple }),
        .IAMCOFEIJKI = fd(8, .{ .Varint = .Simple }),
        .CGPDCGDHGJF = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
        .IKNCCGNELKN = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .AJHLFMLJOIB = fd(11, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BattleOp = struct {
    turn_counter: u32 = 0,
    state: u32 = 0,
    action_entity_id: u32 = 0,
    target_entity_id: u32 = 0,
    op_type: u32 = 0,
    skill_index: u32 = 0,
    operation_counter: u32 = 0,
    NPLIEIPHCBF: ManagedString = .Empty,

    pub const _desc_table = .{
        .turn_counter = fd(1, .{ .Varint = .Simple }),
        .state = fd(2, .{ .Varint = .Simple }),
        .action_entity_id = fd(3, .{ .Varint = .Simple }),
        .target_entity_id = fd(4, .{ .Varint = .Simple }),
        .op_type = fd(5, .{ .Varint = .Simple }),
        .skill_index = fd(6, .{ .Varint = .Simple }),
        .operation_counter = fd(7, .{ .Varint = .Simple }),
        .NPLIEIPHCBF = fd(8, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BattleEquipment = struct {
    id: u32 = 0,
    level: u32 = 0,
    promotion: u32 = 0,
    rank: u32 = 0,

    pub const _desc_table = .{
        .id = fd(1, .{ .Varint = .Simple }),
        .level = fd(2, .{ .Varint = .Simple }),
        .promotion = fd(3, .{ .Varint = .Simple }),
        .rank = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BattleRelic = struct {
    id: u32 = 0,
    level: u32 = 0,
    main_affix_id: u32 = 0,
    sub_affix_list: ArrayList(RelicAffix),
    unique_id: u32 = 0,
    set_id: u32 = 0,
    type: u32 = 0,
    rarity: u32 = 0,

    pub const _desc_table = .{
        .id = fd(1, .{ .Varint = .Simple }),
        .level = fd(2, .{ .Varint = .Simple }),
        .main_affix_id = fd(3, .{ .Varint = .Simple }),
        .sub_affix_list = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .unique_id = fd(5, .{ .Varint = .Simple }),
        .set_id = fd(6, .{ .Varint = .Simple }),
        .type = fd(7, .{ .Varint = .Simple }),
        .rarity = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AvatarSkillTree = struct {
    point_id: u32 = 0,
    level: u32 = 0,

    pub const _desc_table = .{
        .point_id = fd(1, .{ .Varint = .Simple }),
        .level = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RelicAffix = struct {
    affix_id: u32 = 0,
    cnt: u32 = 0,
    step: u32 = 0,

    pub const _desc_table = .{
        .affix_id = fd(1, .{ .Varint = .Simple }),
        .cnt = fd(2, .{ .Varint = .Simple }),
        .step = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BJHEBCCBANA = struct {
    LJPADNCGLOC: bool = false,
    DDDHNAKLMHF: ArrayList(u32),
    JGJCDMJIMNN: u32 = 0,
    POFMKDABEHD: u32 = 0,

    pub const _desc_table = .{
        .LJPADNCGLOC = fd(1, .{ .Varint = .Simple }),
        .DDDHNAKLMHF = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .JGJCDMJIMNN = fd(3, .{ .Varint = .Simple }),
        .POFMKDABEHD = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BattleAvatar = struct {
    avatar_type: AvatarType = @enumFromInt(0),
    id: u32 = 0,
    level: u32 = 0,
    rank: u32 = 0,
    index: u32 = 0,
    skilltree_list: ArrayList(AvatarSkillTree),
    equipment_list: ArrayList(BattleEquipment),
    hp: u32 = 0,
    promotion: u32 = 0,
    relic_list: ArrayList(BattleRelic),
    world_level: u32 = 0,
    assist_uid: u32 = 0,
    ECIFJLAKHCL: ?BJHEBCCBANA = null,
    sp_bar: ?SpBarInfo = null,
    GMOBAOCEFCE: u32 = 0,
    IMJJKBJOOHJ: ArrayList(AvatarSkillTree),
    enhanced_id: u32 = 0,

    pub const _desc_table = .{
        .avatar_type = fd(1, .{ .Varint = .Simple }),
        .id = fd(2, .{ .Varint = .Simple }),
        .level = fd(3, .{ .Varint = .Simple }),
        .rank = fd(4, .{ .Varint = .Simple }),
        .index = fd(5, .{ .Varint = .Simple }),
        .skilltree_list = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .equipment_list = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .hp = fd(8, .{ .Varint = .Simple }),
        .promotion = fd(10, .{ .Varint = .Simple }),
        .relic_list = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .world_level = fd(12, .{ .Varint = .Simple }),
        .assist_uid = fd(13, .{ .Varint = .Simple }),
        .ECIFJLAKHCL = fd(15, .{ .SubMessage = {} }),
        .sp_bar = fd(16, .{ .SubMessage = {} }),
        .GMOBAOCEFCE = fd(17, .{ .Varint = .Simple }),
        .IMJJKBJOOHJ = fd(18, .{ .List = .{ .SubMessage = {} } }),
        .enhanced_id = fd(19, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BattleMonsterParam = struct {
    hard_level_group: u32 = 0,
    level: u32 = 0,
    elite_group: u32 = 0,
    DNEAMPLLFME: u32 = 0,

    pub const _desc_table = .{
        .hard_level_group = fd(1, .{ .Varint = .Simple }),
        .level = fd(2, .{ .Varint = .Simple }),
        .elite_group = fd(3, .{ .Varint = .Simple }),
        .DNEAMPLLFME = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BattleMonster = struct {
    monster_id: u32 = 0,
    cur_hp: u32 = 0,
    max_hp: u32 = 0,

    pub const _desc_table = .{
        .monster_id = fd(1, .{ .Varint = .Simple }),
        .cur_hp = fd(2, .{ .Varint = .Simple }),
        .max_hp = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BattleMonsterWave = struct {
    monster_list: ArrayList(BattleMonster),
    monster_param: ?BattleMonsterParam = null,
    battle_stage_id: u32 = 0,
    battle_wave_id: u32 = 0,

    pub const _desc_table = .{
        .monster_list = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .monster_param = fd(2, .{ .SubMessage = {} }),
        .battle_stage_id = fd(3, .{ .Varint = .Simple }),
        .battle_wave_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BattleBuff = struct {
    id: u32 = 0,
    level: u32 = 0,
    owner_index: u32 = 0,
    wave_flag: u32 = 0,
    target_index_list: ArrayList(u32),
    dynamic_values: ArrayList(DynamicValuesEntry),

    pub const _desc_table = .{
        .id = fd(1, .{ .Varint = .Simple }),
        .level = fd(2, .{ .Varint = .Simple }),
        .owner_index = fd(3, .{ .Varint = .Simple }),
        .wave_flag = fd(4, .{ .Varint = .Simple }),
        .target_index_list = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        .dynamic_values = fd(6, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const DynamicValuesEntry = struct {
        key: ManagedString = .Empty,
        value: f32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .String),
            .value = fd(2, .{ .FixedInt = .I32 }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ILLCDMOCLDO = struct {
    id: u32 = 0,
    HFALJIHKECN: u32 = 0,
    LAEJDGHMKDB: u32 = 0,

    pub const _desc_table = .{
        .id = fd(1, .{ .Varint = .Simple }),
        .HFALJIHKECN = fd(2, .{ .Varint = .Simple }),
        .LAEJDGHMKDB = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LJGIAGLFHHC = struct {
    FENMMMKOOCF: u32 = 0,

    pub const _desc_table = .{
        .FENMMMKOOCF = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ENFLFBDAOIJ = struct {
    id: u32 = 0,
    HFALJIHKECN: u32 = 0,

    pub const _desc_table = .{
        .id = fd(1, .{ .Varint = .Simple }),
        .HFALJIHKECN = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GMGJCIHDFMA = struct {
    id: u32 = 0,
    progress: u32 = 0,

    pub const _desc_table = .{
        .id = fd(1, .{ .Varint = .Simple }),
        .progress = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BattleTarget = struct {
    id: u32 = 0,
    progress: u32 = 0,
    total_progress: u32 = 0,

    pub const _desc_table = .{
        .id = fd(1, .{ .Varint = .Simple }),
        .progress = fd(2, .{ .Varint = .Simple }),
        .total_progress = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BattleTargetList = struct {
    battle_target_list: ArrayList(BattleTarget),

    pub const _desc_table = .{
        .battle_target_list = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BattleLineup = struct {
    avatar_list: ArrayList(BattleAvatar),
    monster_wave_list: ArrayList(BattleMonsterWave),
    buff_list: ArrayList(BattleBuff),
    world_level: u32 = 0,
    battle_target_info: ArrayList(BattleTargetInfoEntry),
    AJGPJGLPMIO: ?LJGIAGLFHHC = null,
    EJCLJLDENDM: ArrayList(BattleAvatar),
    JPGIFCHJDLK: ?EvolveBuildBattleInfo = null,
    MFKJOKAJJMJ: ?GIEIBEACBAO = null,
    battle_rogue_magic_info: ?BattleRogueMagicInfo = null,
    GEGDPNKKAKG: ?EACDEAPKILK = null,

    pub const _desc_table = .{
        .avatar_list = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .monster_wave_list = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .buff_list = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .world_level = fd(7, .{ .Varint = .Simple }),
        .battle_target_info = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .AJGPJGLPMIO = fd(10, .{ .SubMessage = {} }),
        .EJCLJLDENDM = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .JPGIFCHJDLK = fd(12, .{ .SubMessage = {} }),
        .MFKJOKAJJMJ = fd(13, .{ .SubMessage = {} }),
        .battle_rogue_magic_info = fd(14, .{ .SubMessage = {} }),
        .GEGDPNKKAKG = fd(15, .{ .SubMessage = {} }),
    };

    pub const BattleTargetInfoEntry = struct {
        key: u32 = 0,
        value: ?BattleTargetList = null,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GIEIBEACBAO = struct {
    GCCJDHKHMNK: ArrayList(GCCJDHKHMNKEntry),
    FPBNIPMHANH: u32 = 0,
    AAGIANCIEEG: u32 = 0,
    ELPFOMLCOBM: u32 = 0,

    pub const _desc_table = .{
        .GCCJDHKHMNK = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .FPBNIPMHANH = fd(2, .{ .Varint = .Simple }),
        .AAGIANCIEEG = fd(3, .{ .Varint = .Simple }),
        .ELPFOMLCOBM = fd(4, .{ .Varint = .Simple }),
    };

    pub const GCCJDHKHMNKEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AetherAvatarInfo = struct {
    id: u32 = 0,
    index: u32 = 0,
    promotion: u32 = 0,
    passive_skill: ArrayList(u32),
    spirit_lineup_type: AetherdivideSpiritLineupType = @enumFromInt(0),
    sp_bar: ?SpBarInfo = null,

    pub const _desc_table = .{
        .id = fd(1, .{ .Varint = .Simple }),
        .index = fd(2, .{ .Varint = .Simple }),
        .promotion = fd(3, .{ .Varint = .Simple }),
        .passive_skill = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .spirit_lineup_type = fd(5, .{ .Varint = .Simple }),
        .sp_bar = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PNDFMBJFGIM = struct {
    avatar_list: ArrayList(AetherAvatarInfo),
    monster_wave_list: ArrayList(BattleMonsterWave),
    buff_list: ArrayList(BattleBuff),

    pub const _desc_table = .{
        .avatar_list = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .monster_wave_list = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .buff_list = fd(3, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ClientTurnSnapshot = struct {
    turn_counter: u32 = 0,
    random_counter: u32 = 0,
    anim_event_counter: u32 = 0,
    snapshot_list: ArrayList(CharacterSnapshot),
    anim_event_list: ArrayList(AnimEventSnapshot),
    JEINBMLFCBP: u32 = 0,

    pub const _desc_table = .{
        .turn_counter = fd(1, .{ .Varint = .Simple }),
        .random_counter = fd(2, .{ .Varint = .Simple }),
        .anim_event_counter = fd(3, .{ .Varint = .Simple }),
        .snapshot_list = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .anim_event_list = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .JEINBMLFCBP = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GamecoreConfig = struct {
    is_skip_verify: bool = false,
    max_turn_cnt: u32 = 0,
    is_auto_fight: bool = false,
    csv_path: ManagedString = .Empty,
    LKFDPDLDMIB: bool = false,
    MNALPNFNMIO: bool = false,
    GGFCOJFLKBP: u32 = 0,

    pub const _desc_table = .{
        .is_skip_verify = fd(1, .{ .Varint = .Simple }),
        .max_turn_cnt = fd(2, .{ .Varint = .Simple }),
        .is_auto_fight = fd(3, .{ .Varint = .Simple }),
        .csv_path = fd(4, .String),
        .LKFDPDLDMIB = fd(5, .{ .Varint = .Simple }),
        .MNALPNFNMIO = fd(6, .{ .Varint = .Simple }),
        .GGFCOJFLKBP = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BattleBuffMsg = struct {
    buff_id_list: ArrayList(u32),
    buff_index_list: ArrayList(u32),
    buff_level_list: ArrayList(u32),
    buff_flag_list: ArrayList(u32),

    pub const _desc_table = .{
        .buff_id_list = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .buff_index_list = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .buff_level_list = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
        .buff_flag_list = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DKFLALJDIFL = struct {
    MBBCHGENGGL: u32 = 0,
    HFCDPHCHFGK: u32 = 0,

    pub const _desc_table = .{
        .MBBCHGENGGL = fd(1, .{ .Varint = .Simple }),
        .HFCDPHCHFGK = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MBMCFOLIOLO = struct {
    CDNOJCACELJ: bool = false,
    HANEGINLANI: ArrayList(HANEGINLANIEntry),
    CJKMGENOJBE: ManagedString = .Empty,

    pub const _desc_table = .{
        .CDNOJCACELJ = fd(1, .{ .Varint = .Simple }),
        .HANEGINLANI = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .CJKMGENOJBE = fd(3, .String),
    };

    pub const HANEGINLANIEntry = struct {
        key: ManagedString = .Empty,
        value: ?DKFLALJDIFL = null,

        pub const _desc_table = .{
            .key = fd(1, .String),
            .value = fd(2, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MIAIDAILDKM = struct {
    EEFLGHCOBML: ArrayList(ClientTurnSnapshot),
    KGBHEHHFMPI: ManagedString = .Empty,
    debug_extra_info: ManagedString = .Empty,
    HLAGIMENBJG: ArrayList(BattleReplayStringHash),
    plane_id: u32 = 0,
    floor_id: u32 = 0,
    EBHLFAEGLCD: u32 = 0,
    BNJMMLKOFCP: u32 = 0,
    EDHBGDEICNC: ?MBMCFOLIOLO = null,
    BBNAEFBAPLG: u32 = 0,

    pub const _desc_table = .{
        .EEFLGHCOBML = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .KGBHEHHFMPI = fd(2, .String),
        .debug_extra_info = fd(3, .String),
        .HLAGIMENBJG = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .plane_id = fd(5, .{ .Varint = .Simple }),
        .floor_id = fd(6, .{ .Varint = .Simple }),
        .EBHLFAEGLCD = fd(7, .{ .Varint = .Simple }),
        .BNJMMLKOFCP = fd(8, .{ .Varint = .Simple }),
        .EDHBGDEICNC = fd(9, .{ .SubMessage = {} }),
        .BBNAEFBAPLG = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BattleReplay = struct {
    version: u32 = 0,
    logic_random_seed: u32 = 0,
    stage_id: u32 = 0,
    lineup: ?BattleLineup = null,
    op_list: ArrayList(BattleOp),
    turn_snapshot_hash: ManagedString = .Empty,
    maze_plane_id: u32 = 0,
    extra_ability_list: ArrayList(u32),
    is_ai_consider_ultra_skill: bool = false,
    check_strategy: BattleCheckStrategyType = @enumFromInt(0),
    battle_module_type: BattleModuleType = @enumFromInt(0),
    battle_event: ArrayList(BattleEventBattleInfo),
    rounds_limit: u32 = 0,
    config: ?GamecoreConfig = null,
    game_core_log_encode: ManagedString = .Empty,
    client_version: u32 = 0,
    monster_wave_length: u32 = 0,
    GMPCFGEDHKI: ?PNDFMBJFGIM = null,
    BNMIIAHADJH: ?MIAIDAILDKM = null,

    pub const _desc_table = .{
        .version = fd(1, .{ .Varint = .Simple }),
        .logic_random_seed = fd(2, .{ .Varint = .Simple }),
        .stage_id = fd(3, .{ .Varint = .Simple }),
        .lineup = fd(4, .{ .SubMessage = {} }),
        .op_list = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .turn_snapshot_hash = fd(6, .String),
        .maze_plane_id = fd(7, .{ .Varint = .Simple }),
        .extra_ability_list = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
        .is_ai_consider_ultra_skill = fd(9, .{ .Varint = .Simple }),
        .check_strategy = fd(10, .{ .Varint = .Simple }),
        .battle_module_type = fd(11, .{ .Varint = .Simple }),
        .battle_event = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .rounds_limit = fd(14, .{ .Varint = .Simple }),
        .config = fd(15, .{ .SubMessage = {} }),
        .game_core_log_encode = fd(16, .String),
        .client_version = fd(17, .{ .Varint = .Simple }),
        .monster_wave_length = fd(18, .{ .Varint = .Simple }),
        .GMPCFGEDHKI = fd(19, .{ .SubMessage = {} }),
        .BNMIIAHADJH = fd(100, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BattleReplayStringHash = struct {
    hash: i32 = 0,
    value: ManagedString = .Empty,

    pub const _desc_table = .{
        .hash = fd(1, .{ .Varint = .Simple }),
        .value = fd(2, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AvatarProperty = struct {
    max_hp: f64 = 0,
    attack: f64 = 0,
    defence: f64 = 0,
    speed: f64 = 0,
    left_hp: f64 = 0,
    left_sp: f64 = 0,
    max_sp: f64 = 0,

    pub const _desc_table = .{
        .max_hp = fd(1, .{ .FixedInt = .I64 }),
        .attack = fd(2, .{ .FixedInt = .I64 }),
        .defence = fd(3, .{ .FixedInt = .I64 }),
        .speed = fd(4, .{ .FixedInt = .I64 }),
        .left_hp = fd(5, .{ .FixedInt = .I64 }),
        .left_sp = fd(6, .{ .FixedInt = .I64 }),
        .max_sp = fd(7, .{ .FixedInt = .I64 }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EquipmentProperty = struct {
    id: u32 = 0,
    rank: u32 = 0,
    promotion: u32 = 0,
    level: u32 = 0,

    pub const _desc_table = .{
        .id = fd(1, .{ .Varint = .Simple }),
        .rank = fd(2, .{ .Varint = .Simple }),
        .promotion = fd(3, .{ .Varint = .Simple }),
        .level = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AttackDamageProperty = struct {
    attack_type: ManagedString = .Empty,
    damage: f64 = 0,

    pub const _desc_table = .{
        .attack_type = fd(1, .String),
        .damage = fd(2, .{ .FixedInt = .I64 }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SkillUseProperty = struct {
    skill_id: u32 = 0,
    skill_type: ManagedString = .Empty,
    skill_level: u32 = 0,
    skill_use_count: u32 = 0,
    IFEJKALHOPI: u32 = 0,
    JHDHLCNCDNC: u32 = 0,
    HOAFNNIJOOM: u32 = 0,
    MDEADCLNJCJ: u32 = 0,
    OHNPPJEMKDE: u32 = 0,

    pub const _desc_table = .{
        .skill_id = fd(1, .{ .Varint = .Simple }),
        .skill_type = fd(2, .String),
        .skill_level = fd(3, .{ .Varint = .Simple }),
        .skill_use_count = fd(4, .{ .Varint = .Simple }),
        .IFEJKALHOPI = fd(5, .{ .Varint = .Simple }),
        .JHDHLCNCDNC = fd(6, .{ .Varint = .Simple }),
        .HOAFNNIJOOM = fd(7, .{ .Varint = .Simple }),
        .MDEADCLNJCJ = fd(8, .{ .Varint = .Simple }),
        .OHNPPJEMKDE = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GAAGEHABINM = struct {
    skill_id: u32 = 0,
    HGFLPENKIII: f64 = 0,
    battle_target_list: ArrayList(u32),
    damage: f64 = 0,

    pub const _desc_table = .{
        .skill_id = fd(1, .{ .Varint = .Simple }),
        .HGFLPENKIII = fd(2, .{ .FixedInt = .I64 }),
        .battle_target_list = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
        .damage = fd(4, .{ .FixedInt = .I64 }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SpAddSource = struct {
    source: ManagedString = .Empty,
    sp_add: u32 = 0,

    pub const _desc_table = .{
        .source = fd(1, .String),
        .sp_add = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AbilityUseStt = struct {
    FKHHOBBFMEH: ManagedString = .Empty,
    count: u32 = 0,
    total_damage: f64 = 0,

    pub const _desc_table = .{
        .FKHHOBBFMEH = fd(1, .String),
        .count = fd(2, .{ .Varint = .Simple }),
        .total_damage = fd(3, .{ .FixedInt = .I64 }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AvatarBattleInfo = struct {
    avatar_type: AvatarType = @enumFromInt(0),
    id: u32 = 0,
    avatar_level: u32 = 0,
    avatar_rank: u32 = 0,
    avatar_promotion: u32 = 0,
    avatar_status: ?AvatarProperty = null,
    avatar_skill: ArrayList(AvatarSkillTree),
    avatar_equipment: ArrayList(EquipmentProperty),
    total_turns: u32 = 0,
    total_damage: f64 = 0,
    total_heal: f64 = 0,
    total_damage_taken: f64 = 0,
    total_hp_recover: f64 = 0,
    total_sp_cost: f64 = 0,
    stage_id: u32 = 0,
    stage_type: u32 = 0,
    total_break_damage: f64 = 0,
    attack_type_damage: ArrayList(AttackDamageProperty),
    attack_type_break_damage: ArrayList(AttackDamageProperty),
    attack_type_max_damage: ArrayList(AttackDamageProperty),
    skill_times: ArrayList(SkillUseProperty),
    delay_cumulate: f64 = 0,
    total_sp_add: u32 = 0,
    sp_add_source: ArrayList(SpAddSource),
    total_bp_cost: u32 = 0,
    die_times: u32 = 0,
    revive_times: u32 = 0,
    break_times: u32 = 0,
    extra_turns: u32 = 0,
    total_shield: f64 = 0,
    total_shield_taken: f64 = 0,
    total_shield_damage: f64 = 0,
    initial_status: ?AvatarProperty = null,
    relics: ArrayList(BattleRelic),
    assist_uid: u32 = 0,
    AADGFLPBPDF: ArrayList(AttackDamageProperty),
    FPFBMIMBBHJ: f64 = 0,
    GGPJOHNOCPC: f64 = 0,
    LACKCJHHIMK: f64 = 0,
    FMODLGOBNPE: f64 = 0,
    LHKABNICKJN: ArrayList(AbilityUseStt),
    NCJHDJJDJNL: u32 = 0,
    LKMGDIADOPB: u32 = 0,
    IBLGMCIPCKM: f64 = 0,
    HACJDJIGMGP: f64 = 0,
    IMDJAHAJGCF: f64 = 0,
    JDOLKDBICLJ: f64 = 0,
    CACCODDCJHI: f64 = 0,
    LLDMLOHBFLO: u32 = 0,
    CHNIKKCIBEG: u32 = 0,
    LBNJHHHLPMO: u32 = 0,
    PDLILFICHIL: f64 = 0,
    PMKLPHJIOHC: u32 = 0,
    MPFAENEKFDC: u32 = 0,
    enhanced_id: u32 = 0,

    pub const _desc_table = .{
        .avatar_type = fd(1, .{ .Varint = .Simple }),
        .id = fd(2, .{ .Varint = .Simple }),
        .avatar_level = fd(3, .{ .Varint = .Simple }),
        .avatar_rank = fd(4, .{ .Varint = .Simple }),
        .avatar_promotion = fd(5, .{ .Varint = .Simple }),
        .avatar_status = fd(6, .{ .SubMessage = {} }),
        .avatar_skill = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .avatar_equipment = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .total_turns = fd(9, .{ .Varint = .Simple }),
        .total_damage = fd(10, .{ .FixedInt = .I64 }),
        .total_heal = fd(11, .{ .FixedInt = .I64 }),
        .total_damage_taken = fd(12, .{ .FixedInt = .I64 }),
        .total_hp_recover = fd(13, .{ .FixedInt = .I64 }),
        .total_sp_cost = fd(14, .{ .FixedInt = .I64 }),
        .stage_id = fd(15, .{ .Varint = .Simple }),
        .stage_type = fd(16, .{ .Varint = .Simple }),
        .total_break_damage = fd(17, .{ .FixedInt = .I64 }),
        .attack_type_damage = fd(18, .{ .List = .{ .SubMessage = {} } }),
        .attack_type_break_damage = fd(19, .{ .List = .{ .SubMessage = {} } }),
        .attack_type_max_damage = fd(20, .{ .List = .{ .SubMessage = {} } }),
        .skill_times = fd(21, .{ .List = .{ .SubMessage = {} } }),
        .delay_cumulate = fd(22, .{ .FixedInt = .I64 }),
        .total_sp_add = fd(23, .{ .Varint = .Simple }),
        .sp_add_source = fd(24, .{ .List = .{ .SubMessage = {} } }),
        .total_bp_cost = fd(25, .{ .Varint = .Simple }),
        .die_times = fd(26, .{ .Varint = .Simple }),
        .revive_times = fd(27, .{ .Varint = .Simple }),
        .break_times = fd(28, .{ .Varint = .Simple }),
        .extra_turns = fd(29, .{ .Varint = .Simple }),
        .total_shield = fd(30, .{ .FixedInt = .I64 }),
        .total_shield_taken = fd(31, .{ .FixedInt = .I64 }),
        .total_shield_damage = fd(32, .{ .FixedInt = .I64 }),
        .initial_status = fd(33, .{ .SubMessage = {} }),
        .relics = fd(34, .{ .List = .{ .SubMessage = {} } }),
        .assist_uid = fd(35, .{ .Varint = .Simple }),
        .AADGFLPBPDF = fd(36, .{ .List = .{ .SubMessage = {} } }),
        .FPFBMIMBBHJ = fd(37, .{ .FixedInt = .I64 }),
        .GGPJOHNOCPC = fd(38, .{ .FixedInt = .I64 }),
        .LACKCJHHIMK = fd(39, .{ .FixedInt = .I64 }),
        .FMODLGOBNPE = fd(40, .{ .FixedInt = .I64 }),
        .LHKABNICKJN = fd(41, .{ .List = .{ .SubMessage = {} } }),
        .NCJHDJJDJNL = fd(42, .{ .Varint = .Simple }),
        .LKMGDIADOPB = fd(43, .{ .Varint = .Simple }),
        .IBLGMCIPCKM = fd(44, .{ .FixedInt = .I64 }),
        .HACJDJIGMGP = fd(45, .{ .FixedInt = .I64 }),
        .IMDJAHAJGCF = fd(46, .{ .FixedInt = .I64 }),
        .JDOLKDBICLJ = fd(47, .{ .FixedInt = .I64 }),
        .CACCODDCJHI = fd(48, .{ .FixedInt = .I64 }),
        .LLDMLOHBFLO = fd(49, .{ .Varint = .Simple }),
        .CHNIKKCIBEG = fd(50, .{ .Varint = .Simple }),
        .LBNJHHHLPMO = fd(51, .{ .Varint = .Simple }),
        .PDLILFICHIL = fd(52, .{ .FixedInt = .I64 }),
        .PMKLPHJIOHC = fd(53, .{ .Varint = .Simple }),
        .MPFAENEKFDC = fd(54, .{ .Varint = .Simple }),
        .enhanced_id = fd(55, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonsterProperty = struct {
    max_hp: f64 = 0,
    attack: f64 = 0,
    defence: f64 = 0,
    shield: f64 = 0,
    speed: f64 = 0,
    left_hp: f64 = 0,
    enter_battle_hp: f64 = 0,

    pub const _desc_table = .{
        .max_hp = fd(1, .{ .FixedInt = .I64 }),
        .attack = fd(2, .{ .FixedInt = .I64 }),
        .defence = fd(3, .{ .FixedInt = .I64 }),
        .shield = fd(4, .{ .FixedInt = .I64 }),
        .speed = fd(5, .{ .FixedInt = .I64 }),
        .left_hp = fd(6, .{ .FixedInt = .I64 }),
        .enter_battle_hp = fd(7, .{ .FixedInt = .I64 }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonsterPhaseStt = struct {
    NDBOJANDNJN: u32 = 0,
    MMCPHLPECDJ: f64 = 0,
    DOIADGDBOHF: u32 = 0,
    break_times: u32 = 0,

    pub const _desc_table = .{
        .NDBOJANDNJN = fd(1, .{ .Varint = .Simple }),
        .MMCPHLPECDJ = fd(2, .{ .FixedInt = .I64 }),
        .DOIADGDBOHF = fd(3, .{ .Varint = .Simple }),
        .break_times = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonsterBattleInfo = struct {
    entity_id: u32 = 0,
    monster_id: u32 = 0,
    OAKILFGDACJ: u32 = 0,
    BFPAOANBJON: u32 = 0,
    NKCMCMHAFAF: ?MonsterProperty = null,
    total_turns: u32 = 0,
    total_damage: f64 = 0,
    total_heal: f64 = 0,
    total_damage_taken: f64 = 0,
    AKGFCPFAOLP: f64 = 0,
    total_hp_recover: f64 = 0,
    stage_id: u32 = 0,
    battle_id: u32 = 0,
    JBCDLFJJJDG: u32 = 0,
    attack_type_damage: ArrayList(AttackDamageProperty),
    skill_times: ArrayList(SkillUseProperty),
    stage_type: u32 = 0,
    ACOFIPPJKBI: f64 = 0,
    delay_cumulate: f64 = 0,
    FIEDKNKIEBH: DeathSource = @enumFromInt(0),
    wave: u32 = 0,
    JHAOGJJDBHL: i32 = 0,
    phase: u32 = 0,
    DCMOHECBOLK: u32 = 0,
    JEDAHLGBIEM: BattleTag = @enumFromInt(0),
    skill_info: ArrayList(GAAGEHABINM),
    LANFCLOLBOF: u32 = 0,
    KFGJBILJGDP: ArrayList(MonsterPhaseStt),
    FPKONIKLICA: u32 = 0,
    JEEMGAEIFAE: u32 = 0,
    HBOFDAJJJME: HEMBNDJAFDA = @enumFromInt(0),

    pub const _desc_table = .{
        .entity_id = fd(1, .{ .Varint = .Simple }),
        .monster_id = fd(2, .{ .Varint = .Simple }),
        .OAKILFGDACJ = fd(3, .{ .Varint = .Simple }),
        .BFPAOANBJON = fd(4, .{ .Varint = .Simple }),
        .NKCMCMHAFAF = fd(5, .{ .SubMessage = {} }),
        .total_turns = fd(6, .{ .Varint = .Simple }),
        .total_damage = fd(7, .{ .FixedInt = .I64 }),
        .total_heal = fd(8, .{ .FixedInt = .I64 }),
        .total_damage_taken = fd(9, .{ .FixedInt = .I64 }),
        .AKGFCPFAOLP = fd(10, .{ .FixedInt = .I64 }),
        .total_hp_recover = fd(11, .{ .FixedInt = .I64 }),
        .stage_id = fd(12, .{ .Varint = .Simple }),
        .battle_id = fd(13, .{ .Varint = .Simple }),
        .JBCDLFJJJDG = fd(14, .{ .Varint = .Simple }),
        .attack_type_damage = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .skill_times = fd(16, .{ .List = .{ .SubMessage = {} } }),
        .stage_type = fd(17, .{ .Varint = .Simple }),
        .ACOFIPPJKBI = fd(18, .{ .FixedInt = .I64 }),
        .delay_cumulate = fd(19, .{ .FixedInt = .I64 }),
        .FIEDKNKIEBH = fd(20, .{ .Varint = .Simple }),
        .wave = fd(21, .{ .Varint = .Simple }),
        .JHAOGJJDBHL = fd(22, .{ .Varint = .Simple }),
        .phase = fd(23, .{ .Varint = .Simple }),
        .DCMOHECBOLK = fd(24, .{ .Varint = .Simple }),
        .JEDAHLGBIEM = fd(25, .{ .Varint = .Simple }),
        .skill_info = fd(26, .{ .List = .{ .SubMessage = {} } }),
        .LANFCLOLBOF = fd(27, .{ .Varint = .Simple }),
        .KFGJBILJGDP = fd(28, .{ .List = .{ .SubMessage = {} } }),
        .FPKONIKLICA = fd(29, .{ .Varint = .Simple }),
        .JEEMGAEIFAE = fd(30, .{ .Varint = .Simple }),
        .HBOFDAJJJME = fd(31, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BattleEventProperty = struct {
    sp_bar: ?SpBarInfo = null,

    pub const _desc_table = .{
        .sp_bar = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BattleEventBattleInfo = struct {
    battle_event_id: u32 = 0,
    status: ?BattleEventProperty = null,
    skill_info: ArrayList(GAAGEHABINM),

    pub const _desc_table = .{
        .battle_event_id = fd(1, .{ .Varint = .Simple }),
        .status = fd(2, .{ .SubMessage = {} }),
        .skill_info = fd(3, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ScoreInfo = struct {
    FJJDFPKGOPC: u32 = 0,
    score_id: u32 = 0,

    pub const _desc_table = .{
        .FJJDFPKGOPC = fd(1, .{ .Varint = .Simple }),
        .score_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IBFFAJOHKMO = struct {
    avatar_id: u32 = 0,
    LEICKPDIFOG: ArrayList(u32),
    source: u32 = 0,
    damage: f64 = 0,
    DIKKHPFKAPF: ArrayList(u32),
    EOOFIMEGMFB: i32 = 0,
    BKJEAMPNANK: f64 = 0,
    BLFHKGPMNDK: u32 = 0,
    wave: u32 = 0,
    enhanced_id: u32 = 0,

    pub const _desc_table = .{
        .avatar_id = fd(1, .{ .Varint = .Simple }),
        .LEICKPDIFOG = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .source = fd(3, .{ .Varint = .Simple }),
        .damage = fd(4, .{ .FixedInt = .I64 }),
        .DIKKHPFKAPF = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        .EOOFIMEGMFB = fd(6, .{ .Varint = .Simple }),
        .BKJEAMPNANK = fd(7, .{ .FixedInt = .I64 }),
        .BLFHKGPMNDK = fd(8, .{ .Varint = .Simple }),
        .wave = fd(9, .{ .Varint = .Simple }),
        .enhanced_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KKMPKJPGGCL = struct {
    avatar_id: u32 = 0,
    ABAPDFGJNME: i32 = 0,
    enhanced_id: u32 = 0,

    pub const _desc_table = .{
        .avatar_id = fd(1, .{ .Varint = .Simple }),
        .ABAPDFGJNME = fd(2, .{ .Varint = .Simple }),
        .enhanced_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CNPNNIJGLFI = struct {
    DPDNNMBCPOI: u32 = 0,
    DBELJGBKBPA: u32 = 0,
    entity_id: u32 = 0,

    pub const _desc_table = .{
        .DPDNNMBCPOI = fd(1, .{ .Varint = .Simple }),
        .DBELJGBKBPA = fd(2, .{ .Varint = .Simple }),
        .entity_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IIIPHJIMNID = struct {
    NDBOJANDNJN: u32 = 0,
    monster_id: u32 = 0,
    NGLPBHMLEHN: ArrayList(KKMPKJPGGCL),
    HGFLPENKIII: u32 = 0,
    AKKGGPADAOO: ArrayList(CNPNNIJGLFI),

    pub const _desc_table = .{
        .NDBOJANDNJN = fd(1, .{ .Varint = .Simple }),
        .monster_id = fd(2, .{ .Varint = .Simple }),
        .NGLPBHMLEHN = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .HGFLPENKIII = fd(4, .{ .Varint = .Simple }),
        .AKKGGPADAOO = fd(5, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MMNDJAMEBML = struct {
    type: BattleStaticticEventType = @enumFromInt(0),
    OCPPPKDDIML: u32 = 0,
    display_value: u32 = 0,

    pub const _desc_table = .{
        .type = fd(1, .{ .Varint = .Simple }),
        .OCPPPKDDIML = fd(2, .{ .Varint = .Simple }),
        .display_value = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KPKKKJPJCPC = struct {
    LIDGJNDGBKM: u32 = 0,
    OAABADFKCOA: u32 = 0,

    pub const _desc_table = .{
        .LIDGJNDGBKM = fd(1, .{ .Varint = .Simple }),
        .OAABADFKCOA = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MEOIFIOAECF = struct {
    JJCCJJINLFL: u32 = 0,
    HEMJHDOEEBL: bool = false,
    KACALGIOEDB: ?KPKKKJPJCPC = null,

    pub const _desc_table = .{
        .JJCCJJINLFL = fd(1, .{ .Varint = .Simple }),
        .HEMJHDOEEBL = fd(2, .{ .Varint = .Simple }),
        .KACALGIOEDB = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EvolveBuildCardInfo = struct {
    card_id: u32 = 0,
    param: f64 = 0,
    is_enable: bool = false,
    param_list: ArrayList(f64),

    pub const _desc_table = .{
        .card_id = fd(1, .{ .Varint = .Simple }),
        .param = fd(2, .{ .FixedInt = .I64 }),
        .is_enable = fd(3, .{ .Varint = .Simple }),
        .param_list = fd(4, .{ .PackedList = .{ .FixedInt = .I64 } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EvolveBuildGearDamageInfo = struct {
    gear_id: u32 = 0,
    damage: f64 = 0,
    hp_damage: f64 = 0,

    pub const _desc_table = .{
        .gear_id = fd(1, .{ .Varint = .Simple }),
        .damage = fd(2, .{ .FixedInt = .I64 }),
        .hp_damage = fd(3, .{ .FixedInt = .I64 }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LGIFEDNKHON = struct {
    DAKIJNBFKOB: ArrayList(u32),
    FJJOBAEMEHP: ArrayList(u32),

    pub const _desc_table = .{
        .DAKIJNBFKOB = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .FJJOBAEMEHP = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MJKIBJLOBKD = struct {
    wave: u32 = 0,
    score_id: u32 = 0,
    DCHIOLBFKJN: u32 = 0,
    BHJKMHMOEAK: ArrayList(KPKKKJPJCPC),
    HGFLPENKIII: f32 = 0,

    pub const _desc_table = .{
        .wave = fd(1, .{ .Varint = .Simple }),
        .score_id = fd(2, .{ .Varint = .Simple }),
        .DCHIOLBFKJN = fd(3, .{ .Varint = .Simple }),
        .BHJKMHMOEAK = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .HGFLPENKIII = fd(5, .{ .FixedInt = .I32 }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DKOOKEJCHGO = struct {
    CHBJKKMIOFD: u32 = 0,
    HGFLPENKIII: f64 = 0,

    pub const _desc_table = .{
        .CHBJKKMIOFD = fd(1, .{ .Varint = .Simple }),
        .HGFLPENKIII = fd(2, .{ .FixedInt = .I64 }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PMNHMAMHGAI = struct {
    ICPHOOMNDKA: u32 = 0,
    ENBJCPKGCOL: ArrayList(MJKIBJLOBKD),
    OOOGLIEOOKI: ArrayList(DKOOKEJCHGO),

    pub const _desc_table = .{
        .ICPHOOMNDKA = fd(1, .{ .Varint = .Simple }),
        .ENBJCPKGCOL = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .OOOGLIEOOKI = fd(3, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EGDAJHJPLGI = struct {
    type: BOJGAKMDPDL = @enumFromInt(0),
    count: u32 = 0,

    pub const _desc_table = .{
        .type = fd(1, .{ .Varint = .Simple }),
        .count = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EvolveBuildBattleInfo = struct {
    cur_level_id: u32 = 0,
    cur_period: u32 = 0,
    cur_coin: u32 = 0,
    weapon_slot_list: ArrayList(MEOIFIOAECF),
    accessory_slot_list: ArrayList(MEOIFIOAECF),
    ban_gear_list: ArrayList(u32),
    collection: ?LGIFEDNKHON = null,
    allowed_gear_list: ArrayList(u32),
    cur_exp: u32 = 0,
    cur_reroll: u32 = 0,
    cur_treasure_miss_cnt: u32 = 0,
    period_id_list: ArrayList(u32),
    cur_gear_lost_cnt: u32 = 0,
    cur_wave: u32 = 0,
    is_unlock_gear_reroll: bool = false,
    is_unlock_gear_ban: bool = false,
    card_list: ArrayList(EvolveBuildCardInfo),
    gear_damage_list: ArrayList(EvolveBuildGearDamageInfo),
    stat_params: ArrayList(u32),
    is_giveup: bool = false,
    cur_unused_round_cnt: u32 = 0,
    stat_log_info: ?PMNHMAMHGAI = null,
    period_first_random_seed: u32 = 0,
    cur_card_reroll: u32 = 0,
    allowed_card_list: ArrayList(u32),
    func_list: ArrayList(EGDAJHJPLGI),
    finished_story_id: u32 = 0,

    pub const _desc_table = .{
        .cur_level_id = fd(1, .{ .Varint = .Simple }),
        .cur_period = fd(2, .{ .Varint = .Simple }),
        .cur_coin = fd(3, .{ .Varint = .Simple }),
        .weapon_slot_list = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .accessory_slot_list = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .ban_gear_list = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
        .collection = fd(7, .{ .SubMessage = {} }),
        .allowed_gear_list = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
        .cur_exp = fd(9, .{ .Varint = .Simple }),
        .cur_reroll = fd(10, .{ .Varint = .Simple }),
        .cur_treasure_miss_cnt = fd(11, .{ .Varint = .Simple }),
        .period_id_list = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
        .cur_gear_lost_cnt = fd(13, .{ .Varint = .Simple }),
        .cur_wave = fd(14, .{ .Varint = .Simple }),
        .is_unlock_gear_reroll = fd(15, .{ .Varint = .Simple }),
        .is_unlock_gear_ban = fd(16, .{ .Varint = .Simple }),
        .card_list = fd(17, .{ .List = .{ .SubMessage = {} } }),
        .gear_damage_list = fd(18, .{ .List = .{ .SubMessage = {} } }),
        .stat_params = fd(19, .{ .PackedList = .{ .Varint = .Simple } }),
        .is_giveup = fd(20, .{ .Varint = .Simple }),
        .cur_unused_round_cnt = fd(21, .{ .Varint = .Simple }),
        .stat_log_info = fd(22, .{ .SubMessage = {} }),
        .period_first_random_seed = fd(23, .{ .Varint = .Simple }),
        .cur_card_reroll = fd(24, .{ .Varint = .Simple }),
        .allowed_card_list = fd(25, .{ .PackedList = .{ .Varint = .Simple } }),
        .func_list = fd(26, .{ .List = .{ .SubMessage = {} } }),
        .finished_story_id = fd(27, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PLPNLIBMNIO = struct {
    phase: ManagedString = .Empty,
    DBDCNAFOGLF: f32 = 0,
    HDALBIANCMF: f32 = 0,
    ADJBBABEHAH: u32 = 0,
    PJBIAEJECAE: u32 = 0,
    KPNACGHJALJ: u32 = 0,
    FPJADBGOHKM: u32 = 0,
    CJEJOFAMDCD: u32 = 0,
    BGJCEDEAHGM: ArrayList(u32),
    AAGJCJIOFPA: ArrayList(u32),

    pub const _desc_table = .{
        .phase = fd(1, .String),
        .DBDCNAFOGLF = fd(2, .{ .FixedInt = .I32 }),
        .HDALBIANCMF = fd(3, .{ .FixedInt = .I32 }),
        .ADJBBABEHAH = fd(4, .{ .Varint = .Simple }),
        .PJBIAEJECAE = fd(5, .{ .Varint = .Simple }),
        .KPNACGHJALJ = fd(6, .{ .Varint = .Simple }),
        .FPJADBGOHKM = fd(7, .{ .Varint = .Simple }),
        .CJEJOFAMDCD = fd(8, .{ .Varint = .Simple }),
        .BGJCEDEAHGM = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
        .AAGJCJIOFPA = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CHDONIGOKNM = struct {
    HEOCPAKCELM: u32 = 0,
    BGHKBMFHMOJ: u32 = 0,
    LOOLLAGMNLH: u32 = 0,
    HECJOOOBAHC: u32 = 0,
    FKEAAIPKPAA: u32 = 0,
    ICLEENHIPOH: u32 = 0,
    boss_info: ArrayList(u32),
    ODBONKCMDMP: ArrayList(PLPNLIBMNIO),

    pub const _desc_table = .{
        .HEOCPAKCELM = fd(1, .{ .Varint = .Simple }),
        .BGHKBMFHMOJ = fd(2, .{ .Varint = .Simple }),
        .LOOLLAGMNLH = fd(3, .{ .Varint = .Simple }),
        .HECJOOOBAHC = fd(4, .{ .Varint = .Simple }),
        .FKEAAIPKPAA = fd(5, .{ .Varint = .Simple }),
        .ICLEENHIPOH = fd(6, .{ .Varint = .Simple }),
        .boss_info = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
        .ODBONKCMDMP = fd(8, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JFFNDOBBNFB = struct {
    wave: u32 = 0,
    HFIHDDDILJB: f64 = 0,
    KHGCLCLLECL: f64 = 0,
    FFPMJFHNCHO: u32 = 0,
    GMMBGAMHBKB: u32 = 0,

    pub const _desc_table = .{
        .wave = fd(1, .{ .Varint = .Simple }),
        .HFIHDDDILJB = fd(2, .{ .FixedInt = .I64 }),
        .KHGCLCLLECL = fd(3, .{ .FixedInt = .I64 }),
        .FFPMJFHNCHO = fd(4, .{ .Varint = .Simple }),
        .GMMBGAMHBKB = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EKBAGMOMECL = struct {
    key: ManagedString = .Empty,
    value: f64 = 0,

    pub const _desc_table = .{
        .key = fd(1, .String),
        .value = fd(2, .{ .FixedInt = .I64 }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BattleRogueMagicModifierInfo = struct {
    rogue_magic_battle_const: u32 = 0,

    pub const _desc_table = .{
        .rogue_magic_battle_const = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BattleRogueMagicRoundCount = struct {
    battle_standard_round_limit: u32 = 0,
    battle_extra_round_limit: u32 = 0,

    pub const _desc_table = .{
        .battle_standard_round_limit = fd(1, .{ .Varint = .Simple }),
        .battle_extra_round_limit = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BattleRogueMagicUnit = struct {
    magic_unit_id: u32 = 0,
    level: u32 = 0,
    HEMJHDOEEBL: bool = false,
    dice_slot_id: u32 = 0,
    IKDDALCBAFJ: ArrayList(IKDDALCBAFJEntry),

    pub const _desc_table = .{
        .magic_unit_id = fd(1, .{ .Varint = .Simple }),
        .level = fd(2, .{ .Varint = .Simple }),
        .HEMJHDOEEBL = fd(3, .{ .Varint = .Simple }),
        .dice_slot_id = fd(4, .{ .Varint = .Simple }),
        .IKDDALCBAFJ = fd(5, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const IKDDALCBAFJEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BattleRogueMagicScepter = struct {
    scepter_id: u32 = 0,
    rogue_magic_unit_info_list: ArrayList(BattleRogueMagicUnit),
    level: u32 = 0,
    EEPOJGNFLPA: ArrayList(EEPOJGNFLPAEntry),

    pub const _desc_table = .{
        .scepter_id = fd(1, .{ .Varint = .Simple }),
        .rogue_magic_unit_info_list = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .level = fd(3, .{ .Varint = .Simple }),
        .EEPOJGNFLPA = fd(4, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const EEPOJGNFLPAEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BattleRogueMagicItemInfo = struct {
    battle_round_count: ?BattleRogueMagicRoundCount = null,
    battle_scepter_list: ArrayList(BattleRogueMagicScepter),

    pub const _desc_table = .{
        .battle_round_count = fd(1, .{ .SubMessage = {} }),
        .battle_scepter_list = fd(2, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FKOCBOOCDNL = struct {
    POIIAIAKILF: u32 = 0,

    pub const _desc_table = .{
        .POIIAIAKILF = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BattleRogueMagicDetailInfo = struct {
    ECOEKHPGMEA: ?ECOEKHPGMEA_union,

    pub const _ECOEKHPGMEA_case = enum {
        battle_magic_item_info,
        ENNPJGLCBEM,
    };
    pub const ECOEKHPGMEA_union = union(_ECOEKHPGMEA_case) {
        battle_magic_item_info: BattleRogueMagicItemInfo,
        ENNPJGLCBEM: FKOCBOOCDNL,
        pub const _union_desc = .{
            .battle_magic_item_info = fd(1, .{ .SubMessage = {} }),
            .ENNPJGLCBEM = fd(2, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .ECOEKHPGMEA = fd(null, .{ .OneOf = ECOEKHPGMEA_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BattleRogueMagicInfo = struct {
    modifier_content: ?BattleRogueMagicModifierInfo = null,
    detail_info: ?BattleRogueMagicDetailInfo = null,

    pub const _desc_table = .{
        .modifier_content = fd(1, .{ .SubMessage = {} }),
        .detail_info = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CCCCGJABBPM = struct {
    scepter_id: u32 = 0,
    level: u32 = 0,
    total_damage: f64 = 0,

    pub const _desc_table = .{
        .scepter_id = fd(1, .{ .Varint = .Simple }),
        .level = fd(2, .{ .Varint = .Simple }),
        .total_damage = fd(3, .{ .FixedInt = .I64 }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AENPIJCDBMH = struct {
    KLMCPPBBOOH: u32 = 0,
    KMOEADPMFLG: u32 = 0,
    CICANOKPNBM: ArrayList(CCCCGJABBPM),

    pub const _desc_table = .{
        .KLMCPPBBOOH = fd(1, .{ .Varint = .Simple }),
        .KMOEADPMFLG = fd(2, .{ .Varint = .Simple }),
        .CICANOKPNBM = fd(3, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GBNCGKDNMIL = struct {
    AENKMAOABMP: u32 = 0,
    MCDPIABDIGI: u32 = 0,
    JNIMLOIOHNH: f64 = 0,
    IEJJJKFEDAH: f64 = 0,

    pub const _desc_table = .{
        .AENKMAOABMP = fd(1, .{ .Varint = .Simple }),
        .MCDPIABDIGI = fd(2, .{ .Varint = .Simple }),
        .JNIMLOIOHNH = fd(3, .{ .FixedInt = .I64 }),
        .IEJJJKFEDAH = fd(4, .{ .FixedInt = .I64 }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MBJHFPCJALN = struct {
    EHNNECGHJAL: ?GBNCGKDNMIL = null,

    pub const _desc_table = .{
        .EHNNECGHJAL = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AIGKNHFANGA = struct {
    EILAABLDPHM: ?AENPIJCDBMH = null,
    INPKGDFMPEA: ?MBJHFPCJALN = null,

    pub const _desc_table = .{
        .EILAABLDPHM = fd(1, .{ .SubMessage = {} }),
        .INPKGDFMPEA = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LDOBBIABDDL = struct {
    GEDDIBIKMMP: u32 = 0,
    KGGDJHJLENL: f64 = 0,

    pub const _desc_table = .{
        .GEDDIBIKMMP = fd(1, .{ .Varint = .Simple }),
        .KGGDJHJLENL = fd(2, .{ .FixedInt = .I64 }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HPKEFFECHFG = struct {
    type: DLBFAHOAGPH = @enumFromInt(0),
    config_id: u32 = 0,
    unique_id: u32 = 0,
    level: u32 = 0,
    switch_list: ArrayList(LDOBBIABDDL),

    pub const _desc_table = .{
        .type = fd(1, .{ .Varint = .Simple }),
        .config_id = fd(2, .{ .Varint = .Simple }),
        .unique_id = fd(3, .{ .Varint = .Simple }),
        .level = fd(4, .{ .Varint = .Simple }),
        .switch_list = fd(5, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PFKAMAFIKKO = struct {
    LABAIGDGJHL: u32 = 0,
    JNBEGHEIOCI: ArrayList(u32),

    pub const _desc_table = .{
        .LABAIGDGJHL = fd(1, .{ .Varint = .Simple }),
        .JNBEGHEIOCI = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EACDEAPKILK = struct {
    CFKJEPMNLJI: ArrayList(HPKEFFECHFG),
    LKGDFHFBLDE: ArrayList(LKGDFHFBLDEEntry),
    FEBMNCJIFMN: ArrayList(PFKAMAFIKKO),
    area_id: u32 = 0,
    difficulty_level: u32 = 0,

    pub const _desc_table = .{
        .CFKJEPMNLJI = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .LKGDFHFBLDE = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .FEBMNCJIFMN = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .area_id = fd(4, .{ .Varint = .Simple }),
        .difficulty_level = fd(5, .{ .Varint = .Simple }),
    };

    pub const LKGDFHFBLDEEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LHLBIANFOHK = struct {
    monster_id: u32 = 0,
    GMLFMPJPEGG: u32 = 0,
    FFPMJFHNCHO: u32 = 0,
    GMMBGAMHBKB: u32 = 0,

    pub const _desc_table = .{
        .monster_id = fd(1, .{ .Varint = .Simple }),
        .GMLFMPJPEGG = fd(2, .{ .Varint = .Simple }),
        .FFPMJFHNCHO = fd(3, .{ .Varint = .Simple }),
        .GMMBGAMHBKB = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LLBMAPHBOGD = struct {
    ACPBMMMCJIP: u32 = 0,
    KKANCJALJPO: f64 = 0,
    MFJKFLGPGKO: f64 = 0,
    wave: u32 = 0,
    GMLFMPJPEGG: u32 = 0,
    ABMNLNNOKLO: f64 = 0,
    IHBBEKCOEAE: f64 = 0,

    pub const _desc_table = .{
        .ACPBMMMCJIP = fd(1, .{ .Varint = .Simple }),
        .KKANCJALJPO = fd(2, .{ .FixedInt = .I64 }),
        .MFJKFLGPGKO = fd(3, .{ .FixedInt = .I64 }),
        .wave = fd(4, .{ .Varint = .Simple }),
        .GMLFMPJPEGG = fd(5, .{ .Varint = .Simple }),
        .ABMNLNNOKLO = fd(6, .{ .FixedInt = .I64 }),
        .IHBBEKCOEAE = fd(7, .{ .FixedInt = .I64 }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DPNDLHGEMEI = struct {
    IMCPKLDFDOG: u32 = 0,
    AJGEOFIIDDH: u32 = 0,
    OMOENBAKMHJ: f64 = 0,
    wave: u32 = 0,
    GMLFMPJPEGG: u32 = 0,

    pub const _desc_table = .{
        .IMCPKLDFDOG = fd(1, .{ .Varint = .Simple }),
        .AJGEOFIIDDH = fd(2, .{ .Varint = .Simple }),
        .OMOENBAKMHJ = fd(3, .{ .FixedInt = .I64 }),
        .wave = fd(4, .{ .Varint = .Simple }),
        .GMLFMPJPEGG = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CPFCBLADMBH = struct {
    HAAFHKIAGKM: ArrayList(LHLBIANFOHK),
    OEAGAMJDLMA: ArrayList(LLBMAPHBOGD),
    PLENNPAGJLL: ArrayList(DPNDLHGEMEI),

    pub const _desc_table = .{
        .HAAFHKIAGKM = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .OEAGAMJDLMA = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .PLENNPAGJLL = fd(3, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BAAGNOHEHMA = struct {
    OIMBGAEHDBI: ?CPFCBLADMBH = null,

    pub const _desc_table = .{
        .OIMBGAEHDBI = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MKEECCHGIGH = struct {
    NMIMBIOPEKI: u32 = 0,
    KKANCJALJPO: f64 = 0,
    MFJKFLGPGKO: f64 = 0,
    FGMLCKANIAN: u32 = 0,
    GOAEBJJPAJO: u32 = 0,
    NILAKIDFHEJ: u32 = 0,
    PIGNDAJGDGJ: u32 = 0,
    ABMNLNNOKLO: f64 = 0,
    JBJMOPHGMFA: u32 = 0,
    POBIBILOANI: u32 = 0,
    IHBBEKCOEAE: f64 = 0,
    LOOLLAGMNLH: u32 = 0,
    FKEAAIPKPAA: u32 = 0,

    pub const _desc_table = .{
        .NMIMBIOPEKI = fd(1, .{ .Varint = .Simple }),
        .KKANCJALJPO = fd(2, .{ .FixedInt = .I64 }),
        .MFJKFLGPGKO = fd(3, .{ .FixedInt = .I64 }),
        .FGMLCKANIAN = fd(4, .{ .Varint = .Simple }),
        .GOAEBJJPAJO = fd(5, .{ .Varint = .Simple }),
        .NILAKIDFHEJ = fd(6, .{ .Varint = .Simple }),
        .PIGNDAJGDGJ = fd(7, .{ .Varint = .Simple }),
        .ABMNLNNOKLO = fd(8, .{ .FixedInt = .I64 }),
        .JBJMOPHGMFA = fd(9, .{ .Varint = .Simple }),
        .POBIBILOANI = fd(10, .{ .Varint = .Simple }),
        .IHBBEKCOEAE = fd(11, .{ .FixedInt = .I64 }),
        .LOOLLAGMNLH = fd(12, .{ .Varint = .Simple }),
        .FKEAAIPKPAA = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BDMGOEJBFGL = struct {
    LOOLLAGMNLH: u32 = 0,
    FKEAAIPKPAA: u32 = 0,
    AKPMNJCGGAI: u32 = 0,
    OEAGAMJDLMA: ArrayList(MKEECCHGIGH),

    pub const _desc_table = .{
        .LOOLLAGMNLH = fd(1, .{ .Varint = .Simple }),
        .FKEAAIPKPAA = fd(2, .{ .Varint = .Simple }),
        .AKPMNJCGGAI = fd(3, .{ .Varint = .Simple }),
        .OEAGAMJDLMA = fd(4, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HANHNLNEICM = struct {
    avatar_id: u32 = 0,
    DPDNNMBCPOI: u32 = 0,
    total_turns: u32 = 0,
    FBCMJGMBJFC: f64 = 0,
    skill_times: ArrayList(SkillUseProperty),
    total_damage: f64 = 0,
    total_break_damage: f64 = 0,
    attack_type_damage: ArrayList(AttackDamageProperty),
    attack_type_break_damage: ArrayList(AttackDamageProperty),
    attack_type_max_damage: ArrayList(AttackDamageProperty),
    total_damage_taken: f64 = 0,
    total_heal: f64 = 0,
    total_hp_recover: f64 = 0,
    total_shield: f64 = 0,
    total_shield_taken: f64 = 0,
    total_shield_damage: f64 = 0,
    break_times: u32 = 0,
    JEPLCJKFOMB: u32 = 0,
    NCJHDJJDJNL: u32 = 0,
    LKMGDIADOPB: u32 = 0,
    IBLGMCIPCKM: f64 = 0,
    entity_id: u32 = 0,

    pub const _desc_table = .{
        .avatar_id = fd(1, .{ .Varint = .Simple }),
        .DPDNNMBCPOI = fd(2, .{ .Varint = .Simple }),
        .total_turns = fd(3, .{ .Varint = .Simple }),
        .FBCMJGMBJFC = fd(4, .{ .FixedInt = .I64 }),
        .skill_times = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .total_damage = fd(6, .{ .FixedInt = .I64 }),
        .total_break_damage = fd(7, .{ .FixedInt = .I64 }),
        .attack_type_damage = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .attack_type_break_damage = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .attack_type_max_damage = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .total_damage_taken = fd(11, .{ .FixedInt = .I64 }),
        .total_heal = fd(12, .{ .FixedInt = .I64 }),
        .total_hp_recover = fd(13, .{ .FixedInt = .I64 }),
        .total_shield = fd(14, .{ .FixedInt = .I64 }),
        .total_shield_taken = fd(15, .{ .FixedInt = .I64 }),
        .total_shield_damage = fd(16, .{ .FixedInt = .I64 }),
        .break_times = fd(17, .{ .Varint = .Simple }),
        .JEPLCJKFOMB = fd(18, .{ .Varint = .Simple }),
        .NCJHDJJDJNL = fd(19, .{ .Varint = .Simple }),
        .LKMGDIADOPB = fd(20, .{ .Varint = .Simple }),
        .IBLGMCIPCKM = fd(21, .{ .FixedInt = .I64 }),
        .entity_id = fd(22, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PEDJNPJKOCK = struct {
    avatar_id: u32 = 0,
    maze_buff_id: u32 = 0,
    IAGENFADHLP: u32 = 0,

    pub const _desc_table = .{
        .avatar_id = fd(1, .{ .Varint = .Simple }),
        .maze_buff_id = fd(2, .{ .Varint = .Simple }),
        .IAGENFADHLP = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NMCMOHAHOPL = struct {
    PCCDMDFNJPD: ArrayList(HANHNLNEICM),
    HKPBEFFLFEO: u32 = 0,
    DFNKMIJEBLD: u32 = 0,

    pub const _desc_table = .{
        .PCCDMDFNJPD = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .HKPBEFFLFEO = fd(2, .{ .Varint = .Simple }),
        .DFNKMIJEBLD = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GJDKILHKIED = struct {
    IMHHILCMMGI: u32 = 0,
    HAHJHBFAEFC: u32 = 0,
    BILEJKHIHJL: u32 = 0,

    pub const _desc_table = .{
        .IMHHILCMMGI = fd(1, .{ .Varint = .Simple }),
        .HAHJHBFAEFC = fd(2, .{ .Varint = .Simple }),
        .BILEJKHIHJL = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DEMLPCNDJJP = struct {
    GJDOKFCHBGA: ?GJDKILHKIED = null,
    CFKJEPMNLJI: ArrayList(HPKEFFECHFG),

    pub const _desc_table = .{
        .GJDOKFCHBGA = fd(1, .{ .SubMessage = {} }),
        .CFKJEPMNLJI = fd(2, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BattleStatistics = struct {
    total_battle_turns: u32 = 0,
    total_auto_turns: u32 = 0,
    avatar_id_list: ArrayList(u32),
    ultra_cnt: u32 = 0,
    total_delay_cumulate: f64 = 0,
    cost_time: f64 = 0,
    battle_avatar_list: ArrayList(AvatarBattleInfo),
    monster_list: ArrayList(MonsterBattleInfo),
    round_cnt: u32 = 0,
    cocoon_dead_wave: u32 = 0,
    avatar_battle_turns: u32 = 0,
    monster_battle_turns: u32 = 0,
    custom_values: ArrayList(CustomValuesEntry),
    challenge_score: u32 = 0,
    IJOLOFBJINB: ArrayList(BattleEventBattleInfo),
    end_reason: BattleEndReason = @enumFromInt(0),
    GLOJPNLNHJH: ArrayList(IBFFAJOHKMO),
    IICCEFCGPAK: ArrayList(i32),
    LDGAANONMBK: ArrayList(IIIPHJIMNID),
    ADBHGKPNIKP: ArrayList(MMNDJAMEBML),
    ECEFBCNOFKB: ArrayList(GMKEPCOMHPN),
    battle_target_info: ArrayList(BattleTargetInfoEntry),
    NAJLKHFLLPG: ArrayList(EAGOCAHFGAF),
    JPGIFCHJDLK: ?EvolveBuildBattleInfo = null,
    MNPHNJKGPKL: ?CHDONIGOKNM = null,
    LEDDODAMMNO: bool = false,
    ENBJCPKGCOL: ArrayList(JFFNDOBBNFB),
    NGOKNFDMHMF: ArrayList(EKBAGMOMECL),
    DKOEADNAMCJ: u32 = 0,
    IDCGPAKJFMD: ?AIGKNHFANGA = null,
    BILLJJBFIOL: ?BAAGNOHEHMA = null,
    HMPGMILJAPB: ?BDMGOEJBFGL = null,
    NOCIGFLLIFG: ?NMCMOHAHOPL = null,
    JNJIIMJBOJP: ?DEMLPCNDJJP = null,
    KKPKALJMAMF: u32 = 0,
    OKGCIPAHMEI: ArrayList(PEDJNPJKOCK),

    pub const _desc_table = .{
        .total_battle_turns = fd(1, .{ .Varint = .Simple }),
        .total_auto_turns = fd(2, .{ .Varint = .Simple }),
        .avatar_id_list = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
        .ultra_cnt = fd(4, .{ .Varint = .Simple }),
        .total_delay_cumulate = fd(5, .{ .FixedInt = .I64 }),
        .cost_time = fd(6, .{ .FixedInt = .I64 }),
        .battle_avatar_list = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .monster_list = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .round_cnt = fd(9, .{ .Varint = .Simple }),
        .cocoon_dead_wave = fd(10, .{ .Varint = .Simple }),
        .avatar_battle_turns = fd(11, .{ .Varint = .Simple }),
        .monster_battle_turns = fd(12, .{ .Varint = .Simple }),
        .custom_values = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .challenge_score = fd(14, .{ .Varint = .Simple }),
        .IJOLOFBJINB = fd(16, .{ .List = .{ .SubMessage = {} } }),
        .end_reason = fd(19, .{ .Varint = .Simple }),
        .GLOJPNLNHJH = fd(21, .{ .List = .{ .SubMessage = {} } }),
        .IICCEFCGPAK = fd(22, .{ .PackedList = .{ .Varint = .Simple } }),
        .LDGAANONMBK = fd(23, .{ .List = .{ .SubMessage = {} } }),
        .ADBHGKPNIKP = fd(26, .{ .List = .{ .SubMessage = {} } }),
        .ECEFBCNOFKB = fd(27, .{ .List = .{ .SubMessage = {} } }),
        .battle_target_info = fd(28, .{ .List = .{ .SubMessage = {} } }),
        .NAJLKHFLLPG = fd(29, .{ .List = .{ .SubMessage = {} } }),
        .JPGIFCHJDLK = fd(30, .{ .SubMessage = {} }),
        .MNPHNJKGPKL = fd(31, .{ .SubMessage = {} }),
        .LEDDODAMMNO = fd(32, .{ .Varint = .Simple }),
        .ENBJCPKGCOL = fd(33, .{ .List = .{ .SubMessage = {} } }),
        .NGOKNFDMHMF = fd(34, .{ .List = .{ .SubMessage = {} } }),
        .DKOEADNAMCJ = fd(35, .{ .Varint = .Simple }),
        .IDCGPAKJFMD = fd(36, .{ .SubMessage = {} }),
        .BILLJJBFIOL = fd(37, .{ .SubMessage = {} }),
        .HMPGMILJAPB = fd(38, .{ .SubMessage = {} }),
        .NOCIGFLLIFG = fd(39, .{ .SubMessage = {} }),
        .JNJIIMJBOJP = fd(40, .{ .SubMessage = {} }),
        .KKPKALJMAMF = fd(41, .{ .Varint = .Simple }),
        .OKGCIPAHMEI = fd(42, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const CustomValuesEntry = struct {
        key: ManagedString = .Empty,
        value: f32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .String),
            .value = fd(2, .{ .FixedInt = .I32 }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const BattleTargetInfoEntry = struct {
        key: u32 = 0,
        value: ?BattleTargetList = null,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EAGOCAHFGAF = struct {
    OEFEEFGLIEB: u32 = 0,
    PBHPHHMPAIH: u32 = 0,

    pub const _desc_table = .{
        .OEFEEFGLIEB = fd(1, .{ .Varint = .Simple }),
        .PBHPHHMPAIH = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GMKEPCOMHPN = struct {
    type: AetherdivideSpiritLineupType = @enumFromInt(0),
    id: u32 = 0,
    sp_bar: ?SpBarInfo = null,

    pub const _desc_table = .{
        .type = fd(1, .{ .Varint = .Simple }),
        .id = fd(2, .{ .Varint = .Simple }),
        .sp_bar = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MultiPath = struct {
    multi_path_type: u32 = 0,
    level: u32 = 0,
    exp: u32 = 0,

    pub const _desc_table = .{
        .multi_path_type = fd(1, .{ .Varint = .Simple }),
        .level = fd(2, .{ .Varint = .Simple }),
        .exp = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EPHILIMKADK = struct {
    retcode: BattleCheckResultType = @enumFromInt(0),
    end_status: BattleEndStatus = @enumFromInt(0),
    stt: ?BattleStatistics = null,
    game_core_log_encode: ManagedString = .Empty,
    DGNMMINGACJ: ArrayList(DGNMMINGACJEntry),
    mismatch_turn_count: u32 = 0,
    MDLPCFCPHDK: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
        .end_status = fd(2, .{ .Varint = .Simple }),
        .stt = fd(3, .{ .SubMessage = {} }),
        .game_core_log_encode = fd(4, .String),
        .DGNMMINGACJ = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .mismatch_turn_count = fd(6, .{ .Varint = .Simple }),
        .MDLPCFCPHDK = fd(7, .{ .Varint = .Simple }),
    };

    pub const DGNMMINGACJEntry = struct {
        key: ManagedString = .Empty,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .String),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CharacterSnapshot = struct {
    runtime_id: u32 = 0,
    properties: ArrayList(u64),

    pub const _desc_table = .{
        .runtime_id = fd(1, .{ .Varint = .Simple }),
        .properties = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AnimEventSnapshot = struct {
    event_name: ManagedString = .Empty,
    count: u32 = 0,

    pub const _desc_table = .{
        .event_name = fd(1, .String),
        .count = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OODOCMDLOMF = struct {
    uid: u32 = 0,
    level: u32 = 0,
    nickname: ManagedString = .Empty,
    GFIDNAANAFH: u32 = 0,
    platform: PlatformType = @enumFromInt(0),
    AKCEJFCFBAN: ManagedString = .Empty,
    BJELLAPOGJN: ManagedString = .Empty,
    version: u64 = 0,
    COCONGACIFJ: bool = false,

    pub const _desc_table = .{
        .uid = fd(1, .{ .Varint = .Simple }),
        .level = fd(2, .{ .Varint = .Simple }),
        .nickname = fd(3, .String),
        .GFIDNAANAFH = fd(4, .{ .Varint = .Simple }),
        .platform = fd(5, .{ .Varint = .Simple }),
        .AKCEJFCFBAN = fd(6, .String),
        .BJELLAPOGJN = fd(7, .String),
        .version = fd(8, .{ .Varint = .Simple }),
        .COCONGACIFJ = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IDDLKHHLECG = struct {
    NOIIAOIDGEO: LobbyCharacterType = @enumFromInt(0),
    status: LobbyCharacterStatus = @enumFromInt(0),

    pub const _desc_table = .{
        .NOIIAOIDGEO = fd(1, .{ .Varint = .Simple }),
        .status = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NJFGJPCANDI = struct {
    BKMPFEOCFIB: u32 = 0,
    COCONGACIFJ: bool = false,
    JEJKIGABEEK: u32 = 0,
    MIAFPFPMACA: u32 = 0,
    MMOHLKEIKGK: ?NFOBAPHMIBF = null,

    pub const _desc_table = .{
        .BKMPFEOCFIB = fd(1, .{ .Varint = .Simple }),
        .COCONGACIFJ = fd(2, .{ .Varint = .Simple }),
        .JEJKIGABEEK = fd(3, .{ .Varint = .Simple }),
        .MIAFPFPMACA = fd(4, .{ .Varint = .Simple }),
        .MMOHLKEIKGK = fd(5, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LCMIFOBKNEN = struct {
    MKFDPCCKFNF: u32 = 0,
    rank: u32 = 0,
    GNIGOHIAFFI: ArrayList(u32),
    score_id: u32 = 0,

    pub const _desc_table = .{
        .MKFDPCCKFNF = fd(1, .{ .Varint = .Simple }),
        .rank = fd(2, .{ .Varint = .Simple }),
        .GNIGOHIAFFI = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
        .score_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GLMCGEPNAIA = struct {
    DMKFFFPDLDI: u32 = 0,
    FOJCMHIMAFN: u32 = 0,

    pub const _desc_table = .{
        .DMKFFFPDLDI = fd(1, .{ .Varint = .Simple }),
        .FOJCMHIMAFN = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NFOBAPHMIBF = struct {
    MKFDPCCKFNF: u32 = 0,
    PCIDNDOBJGB: u32 = 0,
    DPBMLFFPOKH: u32 = 0,
    OGNEPBFPILH: u32 = 0,
    IBCDNJMCFEA: ArrayList(GLMCGEPNAIA),
    JEFFMOFIPMH: u32 = 0,
    KMFLKMMAMNG: u32 = 0,

    pub const _desc_table = .{
        .MKFDPCCKFNF = fd(1, .{ .Varint = .Simple }),
        .PCIDNDOBJGB = fd(2, .{ .Varint = .Simple }),
        .DPBMLFFPOKH = fd(3, .{ .Varint = .Simple }),
        .OGNEPBFPILH = fd(4, .{ .Varint = .Simple }),
        .IBCDNJMCFEA = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .JEFFMOFIPMH = fd(6, .{ .Varint = .Simple }),
        .KMFLKMMAMNG = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FDHJBIMPKEK = struct {
    MMOHLKEIKGK: ?NFOBAPHMIBF = null,

    pub const _desc_table = .{
        .MMOHLKEIKGK = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EPEGHCGCMHP = struct {
    BHGGHFJMMBM: ArrayList(ManagedString),
    FMOPBFKNLNI: bool = false,
    GEGMAJGEJFL: ?GEGMAJGEJFL_union,

    pub const _GEGMAJGEJFL_case = enum {
        DCHDJALLNEC,
        EMBBHNCJDPK,
        MINKKEJIONE,
    };
    pub const GEGMAJGEJFL_union = union(_GEGMAJGEJFL_case) {
        DCHDJALLNEC: NJFGJPCANDI,
        EMBBHNCJDPK: LCMIFOBKNEN,
        MINKKEJIONE: FDHJBIMPKEK,
        pub const _union_desc = .{
            .DCHDJALLNEC = fd(1001, .{ .SubMessage = {} }),
            .EMBBHNCJDPK = fd(1002, .{ .SubMessage = {} }),
            .MINKKEJIONE = fd(1003, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .BHGGHFJMMBM = fd(1, .{ .List = .String }),
        .FMOPBFKNLNI = fd(2, .{ .Varint = .Simple }),
        .GEGMAJGEJFL = fd(null, .{ .OneOf = GEGMAJGEJFL_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CBBDIOMIFHD = struct {
    basic_info: ?OODOCMDLOMF = null,
    NCKCCOKDKOL: ?IDDLKHHLECG = null,
    stage_info: ?EPEGHCGCMHP = null,

    pub const _desc_table = .{
        .basic_info = fd(1, .{ .SubMessage = {} }),
        .NCKCCOKDKOL = fd(2, .{ .SubMessage = {} }),
        .stage_info = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CDIMEMFJJFP = struct {
    LMMGODPHJNE: u32 = 0,
    PGJCCGNBBPI: u32 = 0,
    NNBHKCJCPIO: u32 = 0,
    KHBNJGPPHOA: u32 = 0,
    AGDCEBLFGKH: u32 = 0,
    DNCPBBLIOPL: u32 = 0,
    LILIFGBAFKN: u32 = 0,
    MMIIJHOHOGE: u32 = 0,
    IOKFIKHHANG: u32 = 0,
    CILKFJBLEJG: u32 = 0,
    MKFEBPJEMAD: u32 = 0,
    EFGOMFDMNOP: u32 = 0,
    JFLKPCDBBJD: u32 = 0,
    APKCBMGELJI: u32 = 0,

    pub const _desc_table = .{
        .LMMGODPHJNE = fd(1, .{ .Varint = .Simple }),
        .PGJCCGNBBPI = fd(2, .{ .Varint = .Simple }),
        .NNBHKCJCPIO = fd(3, .{ .Varint = .Simple }),
        .KHBNJGPPHOA = fd(4, .{ .Varint = .Simple }),
        .AGDCEBLFGKH = fd(5, .{ .Varint = .Simple }),
        .DNCPBBLIOPL = fd(6, .{ .Varint = .Simple }),
        .LILIFGBAFKN = fd(7, .{ .Varint = .Simple }),
        .MMIIJHOHOGE = fd(8, .{ .Varint = .Simple }),
        .IOKFIKHHANG = fd(9, .{ .Varint = .Simple }),
        .CILKFJBLEJG = fd(10, .{ .Varint = .Simple }),
        .MKFEBPJEMAD = fd(11, .{ .Varint = .Simple }),
        .EFGOMFDMNOP = fd(12, .{ .Varint = .Simple }),
        .JFLKPCDBBJD = fd(13, .{ .Varint = .Simple }),
        .APKCBMGELJI = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PPGGKMDAOEA = struct {
    LOFAMEGPMBC: u64 = 0,
    GBAHCDLHACN: FightGameMode = @enumFromInt(0),

    pub const _desc_table = .{
        .LOFAMEGPMBC = fd(1, .{ .Varint = .Simple }),
        .GBAHCDLHACN = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BIPLKGDFAFJ = struct {
    id: u64 = 0,
    PDMOLPLCFLG: FightGameMode = @enumFromInt(0),
    IIHPMLIBBEB: ArrayList(CBBDIOMIFHD),
    type: MatchUnitType = @enumFromInt(0),
    INFHIKBLJLA: u64 = 0,
    MLELAJDLJNL: u64 = 0,
    JBNENLHCCBH: u32 = 0,

    pub const _desc_table = .{
        .id = fd(1, .{ .Varint = .Simple }),
        .PDMOLPLCFLG = fd(2, .{ .Varint = .Simple }),
        .IIHPMLIBBEB = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .type = fd(4, .{ .Varint = .Simple }),
        .INFHIKBLJLA = fd(5, .{ .Varint = .Simple }),
        .MLELAJDLJNL = fd(6, .{ .Varint = .Simple }),
        .JBNENLHCCBH = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LoginActivityData = struct {
    id: u32 = 0,
    panel_id: u32 = 0,
    login_days: u32 = 0,
    JLHOGGDHMHG: ArrayList(u32),

    pub const _desc_table = .{
        .id = fd(9, .{ .Varint = .Simple }),
        .panel_id = fd(7, .{ .Varint = .Simple }),
        .login_days = fd(4, .{ .Varint = .Simple }),
        .JLHOGGDHMHG = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetLoginActivityCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetLoginActivityScRsp = struct {
    login_activity_list: ArrayList(LoginActivityData),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .login_activity_list = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeLoginActivityRewardCsReq = struct {
    take_days: u32 = 0,
    id: u32 = 0,

    pub const _desc_table = .{
        .take_days = fd(14, .{ .Varint = .Simple }),
        .id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeLoginActivityRewardScRsp = struct {
    panel_id: u32 = 0,
    take_days: u32 = 0,
    id: u32 = 0,
    reward: ?ItemList = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .panel_id = fd(11, .{ .Varint = .Simple }),
        .take_days = fd(12, .{ .Varint = .Simple }),
        .id = fd(1, .{ .Varint = .Simple }),
        .reward = fd(5, .{ .SubMessage = {} }),
        .retcode = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ActivityScheduleData = struct {
    activity_id: u32 = 0,
    end_time: i64 = 0,
    panel_id: u32 = 0,
    begin_time: i64 = 0,

    pub const _desc_table = .{
        .activity_id = fd(1, .{ .Varint = .Simple }),
        .end_time = fd(6, .{ .Varint = .Simple }),
        .panel_id = fd(8, .{ .Varint = .Simple }),
        .begin_time = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetActivityScheduleConfigCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetActivityScheduleConfigScRsp = struct {
    schedule_data: ArrayList(ActivityScheduleData),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .schedule_data = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrialActivityInfo = struct {
    stage_id: u32 = 0,
    taken_reward: bool = false,

    pub const _desc_table = .{
        .stage_id = fd(6, .{ .Varint = .Simple }),
        .taken_reward = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetTrialActivityDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetTrialActivityDataScRsp = struct {
    trial_activity_info_list: ArrayList(TrialActivityInfo),
    activity_stage_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .trial_activity_info_list = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .activity_stage_id = fd(6, .{ .Varint = .Simple }),
        .retcode = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrialActivityDataChangeScNotify = struct {
    trial_activity_info: ?TrialActivityInfo = null,

    pub const _desc_table = .{
        .trial_activity_info = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterTrialActivityStageCsReq = struct {
    stage_id: u32 = 0,

    pub const _desc_table = .{
        .stage_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterTrialActivityStageScRsp = struct {
    retcode: u32 = 0,
    battle_info: ?SceneBattleInfo = null,

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
        .battle_info = fd(15, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeTrialActivityRewardCsReq = struct {
    stage_id: u32 = 0,

    pub const _desc_table = .{
        .stage_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeTrialActivityRewardScRsp = struct {
    retcode: u32 = 0,
    stage_id: u32 = 0,
    reward: ?ItemList = null,

    pub const _desc_table = .{
        .retcode = fd(4, .{ .Varint = .Simple }),
        .stage_id = fd(7, .{ .Varint = .Simple }),
        .reward = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartTrialActivityCsReq = struct {
    stage_id: u32 = 0,

    pub const _desc_table = .{
        .stage_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartTrialActivityScRsp = struct {
    retcode: u32 = 0,
    stage_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(8, .{ .Varint = .Simple }),
        .stage_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LeaveTrialActivityCsReq = struct {
    stage_id: u32 = 0,

    pub const _desc_table = .{
        .stage_id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LeaveTrialActivityScRsp = struct {
    retcode: u32 = 0,
    stage_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(4, .{ .Varint = .Simple }),
        .stage_id = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CurTrialActivityScNotify = struct {
    activity_stage_id: u32 = 0,
    status: TrialActivityStatus = @enumFromInt(0),

    pub const _desc_table = .{
        .activity_stage_id = fd(4, .{ .Varint = .Simple }),
        .status = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BCEKBNMNHOO = struct {
    PEHOFBBDNIC: u32 = 0,
    is_taken_reward: bool = false,
    CBNFFEMDBKF: bool = false,
    panel_id: u32 = 0,

    pub const _desc_table = .{
        .PEHOFBBDNIC = fd(6, .{ .Varint = .Simple }),
        .is_taken_reward = fd(9, .{ .Varint = .Simple }),
        .CBNFFEMDBKF = fd(4, .{ .Varint = .Simple }),
        .panel_id = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMaterialSubmitActivityDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMaterialSubmitActivityDataScRsp = struct {
    retcode: u32 = 0,
    NBLHGEHLODN: ArrayList(BCEKBNMNHOO),

    pub const _desc_table = .{
        .retcode = fd(3, .{ .Varint = .Simple }),
        .NBLHGEHLODN = fd(8, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SubmitMaterialSubmitActivityMaterialCsReq = struct {
    PEHOFBBDNIC: u32 = 0,

    pub const _desc_table = .{
        .PEHOFBBDNIC = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SubmitMaterialSubmitActivityMaterialScRsp = struct {
    retcode: u32 = 0,
    BLAAOIAEIAH: ?BCEKBNMNHOO = null,

    pub const _desc_table = .{
        .retcode = fd(3, .{ .Varint = .Simple }),
        .BLAAOIAEIAH = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeMaterialSubmitActivityRewardCsReq = struct {
    PEHOFBBDNIC: u32 = 0,

    pub const _desc_table = .{
        .PEHOFBBDNIC = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeMaterialSubmitActivityRewardScRsp = struct {
    PEHOFBBDNIC: u32 = 0,
    retcode: u32 = 0,
    reward: ?ItemList = null,

    pub const _desc_table = .{
        .PEHOFBBDNIC = fd(1, .{ .Varint = .Simple }),
        .retcode = fd(8, .{ .Varint = .Simple }),
        .reward = fd(11, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetAvatarDeliverRewardActivityDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetAvatarDeliverRewardActivityDataScRsp = struct {
    retcode: u32 = 0,
    is_taken_reward: bool = false,
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(15, .{ .Varint = .Simple }),
        .is_taken_reward = fd(9, .{ .Varint = .Simple }),
        .avatar_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AvatarDeliverRewardChooseAvatarCsReq = struct {
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .avatar_id = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AvatarDeliverRewardChooseAvatarScRsp = struct {
    avatar_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .avatar_id = fd(11, .{ .Varint = .Simple }),
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AvatarDeliverRewardTakeRewardCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AvatarDeliverRewardTakeRewardScRsp = struct {
    reward: ?ItemList = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .reward = fd(9, .{ .SubMessage = {} }),
        .retcode = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterAdventureCsReq = struct {
    map_id: u32 = 0,

    pub const _desc_table = .{
        .map_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterAdventureScRsp = struct {
    retcode: u32 = 0,
    scene: ?SceneInfo = null,

    pub const _desc_table = .{
        .retcode = fd(6, .{ .Varint = .Simple }),
        .scene = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FarmStageGachaInfo = struct {
    end_time: i64 = 0,
    gacha_id: u32 = 0,
    begin_time: i64 = 0,

    pub const _desc_table = .{
        .end_time = fd(5, .{ .Varint = .Simple }),
        .gacha_id = fd(8, .{ .Varint = .Simple }),
        .begin_time = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFarmStageGachaInfoCsReq = struct {
    farm_stage_gacha_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .farm_stage_gacha_id_list = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFarmStageGachaInfoScRsp = struct {
    retcode: u32 = 0,
    farm_stage_gacha_info_list: ArrayList(FarmStageGachaInfo),

    pub const _desc_table = .{
        .retcode = fd(10, .{ .Varint = .Simple }),
        .farm_stage_gacha_info_list = fd(8, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const QuickStartCocoonStageCsReq = struct {
    wave: u32 = 0,
    world_level: u32 = 0,
    cocoon_id: u32 = 0,

    pub const _desc_table = .{
        .wave = fd(8, .{ .Varint = .Simple }),
        .world_level = fd(10, .{ .Varint = .Simple }),
        .cocoon_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const QuickStartCocoonStageScRsp = struct {
    retcode: u32 = 0,
    wave: u32 = 0,
    battle_info: ?SceneBattleInfo = null,
    cocoon_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(5, .{ .Varint = .Simple }),
        .wave = fd(11, .{ .Varint = .Simple }),
        .battle_info = fd(13, .{ .SubMessage = {} }),
        .cocoon_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const QuickStartFarmElementCsReq = struct {
    world_level: u32 = 0,
    JDANOKNHNHL: u32 = 0,

    pub const _desc_table = .{
        .world_level = fd(2, .{ .Varint = .Simple }),
        .JDANOKNHNHL = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const QuickStartFarmElementScRsp = struct {
    world_level: u32 = 0,
    JDANOKNHNHL: u32 = 0,
    retcode: u32 = 0,
    battle_info: ?SceneBattleInfo = null,

    pub const _desc_table = .{
        .world_level = fd(4, .{ .Varint = .Simple }),
        .JDANOKNHNHL = fd(15, .{ .Varint = .Simple }),
        .retcode = fd(13, .{ .Varint = .Simple }),
        .battle_info = fd(10, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CocoonSweepCsReq = struct {
    world_level: u32 = 0,
    cocoon_id: u32 = 0,

    pub const _desc_table = .{
        .world_level = fd(1, .{ .Varint = .Simple }),
        .cocoon_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CocoonSweepScRsp = struct {
    cocoon_id: u32 = 0,
    retcode: u32 = 0,
    multiple_drop_data: ?ItemList = null,
    drop_data: ?ItemList = null,

    pub const _desc_table = .{
        .cocoon_id = fd(11, .{ .Varint = .Simple }),
        .retcode = fd(6, .{ .Varint = .Simple }),
        .multiple_drop_data = fd(9, .{ .SubMessage = {} }),
        .drop_data = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FarmElementSweepCsReq = struct {
    world_level: u32 = 0,
    JDANOKNHNHL: u32 = 0,

    pub const _desc_table = .{
        .world_level = fd(13, .{ .Varint = .Simple }),
        .JDANOKNHNHL = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FarmElementSweepScRsp = struct {
    JDANOKNHNHL: u32 = 0,
    retcode: u32 = 0,
    multiple_drop_data: ?ItemList = null,

    pub const _desc_table = .{
        .JDANOKNHNHL = fd(2, .{ .Varint = .Simple }),
        .retcode = fd(7, .{ .Varint = .Simple }),
        .multiple_drop_data = fd(4, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterAetherDivideSceneCsReq = struct {
    BDKNGDOCPGP: u32 = 0,

    pub const _desc_table = .{
        .BDKNGDOCPGP = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterAetherDivideSceneScRsp = struct {
    retcode: u32 = 0,
    BDKNGDOCPGP: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
        .BDKNGDOCPGP = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LeaveAetherDivideSceneCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LeaveAetherDivideSceneScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartAetherDivideSceneBattleCsReq = struct {
    assist_monster_entity_id_list: ArrayList(u32),
    cast_entity_id: u32 = 0,
    assist_monster_entity_info: ArrayList(AssistMonsterEntityInfo),
    skill_index: u32 = 0,
    attacked_by_entity_id: u32 = 0,

    pub const _desc_table = .{
        .assist_monster_entity_id_list = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
        .cast_entity_id = fd(12, .{ .Varint = .Simple }),
        .assist_monster_entity_info = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .skill_index = fd(8, .{ .Varint = .Simple }),
        .attacked_by_entity_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartAetherDivideSceneBattleScRsp = struct {
    retcode: u32 = 0,
    cast_entity_id: u32 = 0,
    battle_info: ?AetherDivideBattleInfo = null,

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
        .cast_entity_id = fd(4, .{ .Varint = .Simple }),
        .battle_info = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartAetherDivideChallengeBattleCsReq = struct {
    challenge_id: u32 = 0,
    lineup_index: u32 = 0,

    pub const _desc_table = .{
        .challenge_id = fd(11, .{ .Varint = .Simple }),
        .lineup_index = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartAetherDivideChallengeBattleScRsp = struct {
    battle_info: ?AetherDivideBattleInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .battle_info = fd(10, .{ .SubMessage = {} }),
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PassiveSkillItem = struct {
    item_id: u32 = 0,
    slot: u32 = 0,

    pub const _desc_table = .{
        .item_id = fd(14, .{ .Varint = .Simple }),
        .slot = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AetherDivideSpiritInfo = struct {
    aether_avatar_id: u32 = 0,
    JDHCHABCLCC: u32 = 0,
    sp_bar: ?SpBarInfo = null,
    passive_skill: ArrayList(PassiveSkillItem),
    exp: u32 = 0,
    promotion: u32 = 0,

    pub const _desc_table = .{
        .aether_avatar_id = fd(3, .{ .Varint = .Simple }),
        .JDHCHABCLCC = fd(10, .{ .Varint = .Simple }),
        .sp_bar = fd(4, .{ .SubMessage = {} }),
        .passive_skill = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .exp = fd(1, .{ .Varint = .Simple }),
        .promotion = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AetherDivideLineupInfo = struct {
    slot: u32 = 0,
    aether_avatar_list: ArrayList(u32),

    pub const _desc_table = .{
        .slot = fd(2, .{ .Varint = .Simple }),
        .aether_avatar_list = fd(11, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AetherSkillInfo = struct {
    num: u32 = 0,
    skill_dress_avatar_id: u32 = 0,
    item_id: u32 = 0,

    pub const _desc_table = .{
        .num = fd(3, .{ .Varint = .Simple }),
        .skill_dress_avatar_id = fd(15, .{ .Varint = .Simple }),
        .item_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetAetherDivideInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetAetherDivideInfoScRsp = struct {
    EGEMNDNEDIP: u32 = 0,
    PFLJGGDAOFM: u32 = 0,
    PHLKDNGHOOA: u32 = 0,
    lineup_list: ArrayList(AetherDivideLineupInfo),
    IBCIPIIDCOL: u32 = 0,
    retcode: u32 = 0,
    skill_list: ArrayList(AetherSkillInfo),
    NLFIHKICDDO: ArrayList(AetherDivideSpiritInfo),
    JDHLMHJBOJM: u32 = 0,

    pub const _desc_table = .{
        .EGEMNDNEDIP = fd(3, .{ .Varint = .Simple }),
        .PFLJGGDAOFM = fd(15, .{ .Varint = .Simple }),
        .PHLKDNGHOOA = fd(6, .{ .Varint = .Simple }),
        .lineup_list = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .IBCIPIIDCOL = fd(5, .{ .Varint = .Simple }),
        .retcode = fd(4, .{ .Varint = .Simple }),
        .skill_list = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .NLFIHKICDDO = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .JDHLMHJBOJM = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetAetherDivideLineUpCsReq = struct {
    lineup: ?AetherDivideLineupInfo = null,

    pub const _desc_table = .{
        .lineup = fd(15, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetAetherDivideLineUpScRsp = struct {
    lineup: ?AetherDivideLineupInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .lineup = fd(13, .{ .SubMessage = {} }),
        .retcode = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EquipAetherDividePassiveSkillCsReq = struct {
    aether_avatar_id: u32 = 0,
    slot: u32 = 0,
    item_id: u32 = 0,

    pub const _desc_table = .{
        .aether_avatar_id = fd(13, .{ .Varint = .Simple }),
        .slot = fd(6, .{ .Varint = .Simple }),
        .item_id = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EquipAetherDividePassiveSkillScRsp = struct {
    retcode: u32 = 0,
    aether_info: ?AetherDivideSpiritInfo = null,
    aether_skill_info: ?AetherSkillInfo = null,

    pub const _desc_table = .{
        .retcode = fd(5, .{ .Varint = .Simple }),
        .aether_info = fd(12, .{ .SubMessage = {} }),
        .aether_skill_info = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ClearAetherDividePassiveSkillCsReq = struct {
    slot: u32 = 0,
    aether_avatar_id: u32 = 0,

    pub const _desc_table = .{
        .slot = fd(7, .{ .Varint = .Simple }),
        .aether_avatar_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ClearAetherDividePassiveSkillScRsp = struct {
    aether_info: ?AetherDivideSpiritInfo = null,
    aether_skill_info: ?AetherSkillInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .aether_info = fd(5, .{ .SubMessage = {} }),
        .aether_skill_info = fd(15, .{ .SubMessage = {} }),
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AetherDivideSpiritExpUpCsReq = struct {
    JDHLMHJBOJM: u32 = 0,
    KBMLAJOAANE: u32 = 0,
    aether_avatar_id: u32 = 0,

    pub const _desc_table = .{
        .JDHLMHJBOJM = fd(5, .{ .Varint = .Simple }),
        .KBMLAJOAANE = fd(11, .{ .Varint = .Simple }),
        .aether_avatar_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AetherDivideSpiritExpUpScRsp = struct {
    aether_info: ?AetherDivideSpiritInfo = null,
    JDHLMHJBOJM: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .aether_info = fd(13, .{ .SubMessage = {} }),
        .JDHLMHJBOJM = fd(12, .{ .Varint = .Simple }),
        .retcode = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwitchAetherDivideLineUpSlotCsReq = struct {
    lineup_index: u32 = 0,

    pub const _desc_table = .{
        .lineup_index = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwitchAetherDivideLineUpSlotScRsp = struct {
    retcode: u32 = 0,
    lineup_index: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(5, .{ .Varint = .Simple }),
        .lineup_index = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartAetherDivideStageBattleCsReq = struct {
    event_id: u32 = 0,

    pub const _desc_table = .{
        .event_id = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartAetherDivideStageBattleScRsp = struct {
    battle_info: ?AetherDivideBattleInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .battle_info = fd(12, .{ .SubMessage = {} }),
        .retcode = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AetherDivideLineupScNotify = struct {
    lineup: ?AetherDivideLineupInfo = null,

    pub const _desc_table = .{
        .lineup = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AetherDivideSpiritInfoScNotify = struct {
    aether_info: ?AetherDivideSpiritInfo = null,
    MGEGIMBBAJB: ArrayList(AetherDivideSpiritInfo),
    JDHLMHJBOJM: u32 = 0,

    pub const _desc_table = .{
        .aether_info = fd(8, .{ .SubMessage = {} }),
        .MGEGIMBBAJB = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .JDHLMHJBOJM = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetAetherDivideChallengeInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetAetherDivideChallengeInfoScRsp = struct {
    GKHJKFCCCGP: ArrayList(u32),
    PCNNMJBJIOC: u32 = 0,
    retcode: u32 = 0,
    BFDIPGBLMMO: ArrayList(u32),

    pub const _desc_table = .{
        .GKHJKFCCCGP = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .PCNNMJBJIOC = fd(14, .{ .Varint = .Simple }),
        .retcode = fd(5, .{ .Varint = .Simple }),
        .BFDIPGBLMMO = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AetherDivideFinishChallengeScNotify = struct {
    challenge_id: u32 = 0,

    pub const _desc_table = .{
        .challenge_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AetherDivideTainerInfoScNotify = struct {
    EGEMNDNEDIP: u32 = 0,

    pub const _desc_table = .{
        .EGEMNDNEDIP = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AetherDivideSkillItemScNotify = struct {
    num: u32 = 0,
    item_id: u32 = 0,

    pub const _desc_table = .{
        .num = fd(13, .{ .Varint = .Simple }),
        .item_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AetherDivideRefreshEndlessCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AetherDivideRefreshEndlessScRsp = struct {
    IBCIPIIDCOL: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .IBCIPIIDCOL = fd(2, .{ .Varint = .Simple }),
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AetherDivideRefreshEndlessScNotify = struct {
    IBCIPIIDCOL: u32 = 0,

    pub const _desc_table = .{
        .IBCIPIIDCOL = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AetherDivideTakeChallengeRewardCsReq = struct {
    challenge_id: u32 = 0,

    pub const _desc_table = .{
        .challenge_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AetherDivideTakeChallengeRewardScRsp = struct {
    reward: ?ItemList = null,
    retcode: u32 = 0,
    challenge_id: u32 = 0,

    pub const _desc_table = .{
        .reward = fd(3, .{ .SubMessage = {} }),
        .retcode = fd(12, .{ .Varint = .Simple }),
        .challenge_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JONGAGACHHO = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ADOLEOFEGOK = struct {
    POIIAIAKILF: u32 = 0,
    map_id: u32 = 0,

    pub const _desc_table = .{
        .POIIAIAKILF = fd(14, .{ .Varint = .Simple }),
        .map_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetAlleyInfoCsReq = struct {
    shop_id: u32 = 0,
    level: u32 = 0,

    pub const _desc_table = .{
        .shop_id = fd(11, .{ .Varint = .Simple }),
        .level = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AGADEMAJIMD = struct {
    HNFOJBCJAMG: ArrayList(NJAOIGGMEAL),
    IMMLPHDNMOL: ArrayList(ADOLEOFEGOK),
    FMJPLHOHBAB: ArrayList(LogisticsScore),
    OMNGCIJALFM: ArrayList(u32),

    pub const _desc_table = .{
        .HNFOJBCJAMG = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .IMMLPHDNMOL = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .FMJPLHOHBAB = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .OMNGCIJALFM = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetAlleyInfoScRsp = struct {
    NJGAMCCGADC: ?AGADEMAJIMD = null,
    KLPNGFNMIPI: ?LAIEMCFACDK = null,
    retcode: u32 = 0,
    BJCMPHLPKNF: ArrayList(HEHAOMIAMGL),
    NOPODEIMFFB: u32 = 0,
    GLBOEMJJAHD: ArrayList(u32),
    NPLAKEOKEKB: ArrayList(NPLAKEOKEKBEntry),
    GEFNDEEIKEF: ArrayList(u32),
    cur_fund: u32 = 0,
    OEDPOPCOHGB: ArrayList(u32),
    level: u32 = 0,
    BOKOLCPKEJM: ?ECJMJJKJGOP = null,

    pub const _desc_table = .{
        .NJGAMCCGADC = fd(4, .{ .SubMessage = {} }),
        .KLPNGFNMIPI = fd(14, .{ .SubMessage = {} }),
        .retcode = fd(2, .{ .Varint = .Simple }),
        .BJCMPHLPKNF = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .NOPODEIMFFB = fd(10, .{ .Varint = .Simple }),
        .GLBOEMJJAHD = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
        .NPLAKEOKEKB = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .GEFNDEEIKEF = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
        .cur_fund = fd(12, .{ .Varint = .Simple }),
        .OEDPOPCOHGB = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
        .level = fd(1, .{ .Varint = .Simple }),
        .BOKOLCPKEJM = fd(7, .{ .SubMessage = {} }),
    };

    pub const NPLAKEOKEKBEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KFAIFHOPNHH = struct {
    IFFPPGLAFNB: u32 = 0,
    BDDLDNEJFKN: u32 = 0,

    pub const _desc_table = .{
        .IFFPPGLAFNB = fd(3, .{ .Varint = .Simple }),
        .BDDLDNEJFKN = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KGCANLJIKCP = struct {
    KALFMCAGHDO: ArrayList(KFAIFHOPNHH),
    goods_id: u32 = 0,

    pub const _desc_table = .{
        .KALFMCAGHDO = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .goods_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AlleyPlacingShip = struct {
    goods_list: ArrayList(KGCANLJIKCP),
    ship_id: u32 = 0,

    pub const _desc_table = .{
        .goods_list = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .ship_id = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AlleyPlacingGameCsReq = struct {
    cost_time: u32 = 0,
    EJJODHJHHAM: ?AlleyPlacingShip = null,
    DHHJLCHCLAF: u32 = 0,
    FJDABPPANDC: u32 = 0,
    INDEPLOFDEC: u32 = 0,
    ENGDBIIMAFF: u32 = 0,
    BMNHHIDHODD: u32 = 0,
    HLOJKEKIPKF: u32 = 0,
    KEOKDNIKBDA: u32 = 0,

    pub const _desc_table = .{
        .cost_time = fd(3, .{ .Varint = .Simple }),
        .EJJODHJHHAM = fd(11, .{ .SubMessage = {} }),
        .DHHJLCHCLAF = fd(13, .{ .Varint = .Simple }),
        .FJDABPPANDC = fd(6, .{ .Varint = .Simple }),
        .INDEPLOFDEC = fd(12, .{ .Varint = .Simple }),
        .ENGDBIIMAFF = fd(15, .{ .Varint = .Simple }),
        .BMNHHIDHODD = fd(4, .{ .Varint = .Simple }),
        .HLOJKEKIPKF = fd(8, .{ .Varint = .Simple }),
        .KEOKDNIKBDA = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AlleyPlacingGameScRsp = struct {
    KOFICKLLJNI: u32 = 0,
    event_id: u32 = 0,
    PGLGBLKKIDA: u32 = 0,
    KFBOKLHDJDA: u32 = 0,
    ELBBANDDJCI: u32 = 0,
    ILEGFKGCMOM: u32 = 0,
    KHIBBGPHDMB: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .KOFICKLLJNI = fd(2, .{ .Varint = .Simple }),
        .event_id = fd(3, .{ .Varint = .Simple }),
        .PGLGBLKKIDA = fd(11, .{ .Varint = .Simple }),
        .KFBOKLHDJDA = fd(13, .{ .Varint = .Simple }),
        .ELBBANDDJCI = fd(6, .{ .Varint = .Simple }),
        .ILEGFKGCMOM = fd(9, .{ .Varint = .Simple }),
        .KHIBBGPHDMB = fd(12, .{ .Varint = .Simple }),
        .retcode = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ActivityRaidPlacingGameCsReq = struct {
    EJJODHJHHAM: ?AlleyPlacingShip = null,
    GCOIIOPKJPF: ?GCOIIOPKJPF_union,

    pub const _GCOIIOPKJPF_case = enum {
        CJEMMDPICLJ,
        FJDABPPANDC,
    };
    pub const GCOIIOPKJPF_union = union(_GCOIIOPKJPF_case) {
        CJEMMDPICLJ: u32,
        FJDABPPANDC: u32,
        pub const _union_desc = .{
            .CJEMMDPICLJ = fd(1, .{ .Varint = .Simple }),
            .FJDABPPANDC = fd(6, .{ .Varint = .Simple }),
        };
    };

    pub const _desc_table = .{
        .EJJODHJHHAM = fd(12, .{ .SubMessage = {} }),
        .GCOIIOPKJPF = fd(null, .{ .OneOf = GCOIIOPKJPF_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ActivityRaidPlacingGameScRsp = struct {
    retcode: u32 = 0,
    GCOIIOPKJPF: ?GCOIIOPKJPF_union,

    pub const _GCOIIOPKJPF_case = enum {
        CJEMMDPICLJ,
        FJDABPPANDC,
    };
    pub const GCOIIOPKJPF_union = union(_GCOIIOPKJPF_case) {
        CJEMMDPICLJ: u32,
        FJDABPPANDC: u32,
        pub const _union_desc = .{
            .CJEMMDPICLJ = fd(15, .{ .Varint = .Simple }),
            .FJDABPPANDC = fd(14, .{ .Varint = .Simple }),
        };
    };

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
        .GCOIIOPKJPF = fd(null, .{ .OneOf = GCOIIOPKJPF_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ECJMJJKJGOP = struct {
    FBEILDAJEDE: ArrayList(u32),
    CPGAJPCKCDG: u32 = 0,
    JDJCNBGOGLP: ArrayList(u32),
    HDKDKJBDGCC: u32 = 0,
    JALHNEIDHGJ: u32 = 0,
    IICHHOKOPGG: bool = false,

    pub const _desc_table = .{
        .FBEILDAJEDE = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
        .CPGAJPCKCDG = fd(14, .{ .Varint = .Simple }),
        .JDJCNBGOGLP = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .HDKDKJBDGCC = fd(1, .{ .Varint = .Simple }),
        .JALHNEIDHGJ = fd(4, .{ .Varint = .Simple }),
        .IICHHOKOPGG = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AlleyOrderChangedScNotify = struct {
    PPHIADNKGAF: ?ECJMJJKJGOP = null,

    pub const _desc_table = .{
        .PPHIADNKGAF = fd(10, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AlleyShipUnlockScNotify = struct {
    EJDFKNMNALE: u32 = 0,

    pub const _desc_table = .{
        .EJDFKNMNALE = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LLLOMACPCGB = struct {
    DGNKGDLILLB: ArrayList(u32),
    PPIBBKHLMJC: ArrayList(u32),
    CAKCCBJOHOI: u32 = 0,
    CADHPHLNOCH: ArrayList(u32),
    LEPACDHLBIB: u32 = 0,
    BEHPABEEODH: u32 = 0,
    shop_id: u32 = 0,

    pub const _desc_table = .{
        .DGNKGDLILLB = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
        .PPIBBKHLMJC = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
        .CAKCCBJOHOI = fd(14, .{ .Varint = .Simple }),
        .CADHPHLNOCH = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .LEPACDHLBIB = fd(12, .{ .Varint = .Simple }),
        .BEHPABEEODH = fd(2, .{ .Varint = .Simple }),
        .shop_id = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NJAOIGGMEAL = struct {
    cost_time: u32 = 0,
    HOFDBFLCGKB: ArrayList(LLLOMACPCGB),
    map_id: u32 = 0,

    pub const _desc_table = .{
        .cost_time = fd(15, .{ .Varint = .Simple }),
        .HOFDBFLCGKB = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .map_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LogisticsScore = struct {
    reward: ?ItemList = null,
    last_level: u32 = 0,
    cur_score: u32 = 0,
    unlock_level: u32 = 0,
    map_id: u32 = 0,
    max_score: u32 = 0,
    last_max_score: u32 = 0,

    pub const _desc_table = .{
        .reward = fd(3, .{ .SubMessage = {} }),
        .last_level = fd(6, .{ .Varint = .Simple }),
        .cur_score = fd(9, .{ .Varint = .Simple }),
        .unlock_level = fd(15, .{ .Varint = .Simple }),
        .map_id = fd(4, .{ .Varint = .Simple }),
        .max_score = fd(14, .{ .Varint = .Simple }),
        .last_max_score = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LogisticsGameCsReq = struct {
    APMCPHFMAEG: ArrayList(NJAOIGGMEAL),
    BOBLNBJMKCA: bool = false,

    pub const _desc_table = .{
        .APMCPHFMAEG = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .BOBLNBJMKCA = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LogisticsScoreRewardSyncInfoScNotify = struct {
    FMJPLHOHBAB: ArrayList(LogisticsScore),

    pub const _desc_table = .{
        .FMJPLHOHBAB = fd(9, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LogisticsGameScRsp = struct {
    retcode: u32 = 0,
    BOBLNBJMKCA: bool = false,
    FMJPLHOHBAB: ArrayList(LogisticsScore),
    event_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(8, .{ .Varint = .Simple }),
        .BOBLNBJMKCA = fd(5, .{ .Varint = .Simple }),
        .FMJPLHOHBAB = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .event_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HEHAOMIAMGL = struct {
    state: AlleyEventState = @enumFromInt(0),
    event_id: u32 = 0,
    NINGBNBMKOP: u32 = 0,

    pub const _desc_table = .{
        .state = fd(9, .{ .Varint = .Simple }),
        .event_id = fd(11, .{ .Varint = .Simple }),
        .NINGBNBMKOP = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartAlleyEventCsReq = struct {
    event_id: u32 = 0,

    pub const _desc_table = .{
        .event_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartAlleyEventScRsp = struct {
    retcode: u32 = 0,
    event_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(8, .{ .Varint = .Simple }),
        .event_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AlleyEventChangeNotify = struct {
    NFLDODIABCL: ?HEHAOMIAMGL = null,
    HCNLDIBEACA: u32 = 0,

    pub const _desc_table = .{
        .NFLDODIABCL = fd(11, .{ .SubMessage = {} }),
        .HCNLDIBEACA = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AlleyEventEffectNotify = struct {
    LFILNMFDNIG: u32 = 0,

    pub const _desc_table = .{
        .LFILNMFDNIG = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakePrestigeRewardCsReq = struct {
    level: u32 = 0,

    pub const _desc_table = .{
        .level = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakePrestigeRewardScRsp = struct {
    reward: ?ItemList = null,
    retcode: u32 = 0,
    level: u32 = 0,

    pub const _desc_table = .{
        .reward = fd(11, .{ .SubMessage = {} }),
        .retcode = fd(6, .{ .Varint = .Simple }),
        .level = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PrestigeLevelUpCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PrestigeLevelUpScRsp = struct {
    level: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .level = fd(11, .{ .Varint = .Simple }),
        .retcode = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AlleyFundsScNotify = struct {
    cur_fund: u32 = 0,

    pub const _desc_table = .{
        .cur_fund = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SaveLogisticsCsReq = struct {
    APMCPHFMAEG: ArrayList(NJAOIGGMEAL),

    pub const _desc_table = .{
        .APMCPHFMAEG = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SaveLogisticsScRsp = struct {
    retcode: u32 = 0,
    APMCPHFMAEG: ArrayList(NJAOIGGMEAL),

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
        .APMCPHFMAEG = fd(6, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LogisticsInfoScNotify = struct {
    NJGAMCCGADC: ?AGADEMAJIMD = null,

    pub const _desc_table = .{
        .NJGAMCCGADC = fd(15, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LAIEMCFACDK = struct {
    ALGHCNAJBMM: u32 = 0,
    AAHAPCBILHC: ArrayList(AAHAPCBILHCEntry),
    PGHCKCPKGLL: u32 = 0,

    pub const _desc_table = .{
        .ALGHCNAJBMM = fd(5, .{ .Varint = .Simple }),
        .AAHAPCBILHC = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .PGHCKCPKGLL = fd(8, .{ .Varint = .Simple }),
    };

    pub const AAHAPCBILHCEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AlleyShipmentEventEffectsScNotify = struct {
    LGJKPJOJBLF: ?LAIEMCFACDK = null,

    pub const _desc_table = .{
        .LGJKPJOJBLF = fd(4, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetSaveLogisticsMapCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetSaveLogisticsMapScRsp = struct {
    retcode: u32 = 0,
    HNFOJBCJAMG: ArrayList(NJAOIGGMEAL),

    pub const _desc_table = .{
        .retcode = fd(5, .{ .Varint = .Simple }),
        .HNFOJBCJAMG = fd(11, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AlleyShipUsedCountScNotify = struct {
    NPLAKEOKEKB: ArrayList(NPLAKEOKEKBEntry),

    pub const _desc_table = .{
        .NPLAKEOKEKB = fd(10, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const NPLAKEOKEKBEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AlleyGuaranteedFundsCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AlleyGuaranteedFundsScRsp = struct {
    retcode: u32 = 0,
    CLIBOBEHNDM: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(6, .{ .Varint = .Simple }),
        .CLIBOBEHNDM = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AlleyTakeEventRewardCsReq = struct {
    event_id: u32 = 0,

    pub const _desc_table = .{
        .event_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AlleyTakeEventRewardScRsp = struct {
    retcode: u32 = 0,
    reward: ?ItemList = null,

    pub const _desc_table = .{
        .retcode = fd(2, .{ .Varint = .Simple }),
        .reward = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LogisticsDetonateStarSkiffCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LogisticsDetonateStarSkiffScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RelicList = struct {
    type: u32 = 0,
    set_id: u32 = 0,

    pub const _desc_table = .{
        .type = fd(15, .{ .Varint = .Simple }),
        .set_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonsterList = struct {
    monster_id: u32 = 0,
    num: u32 = 0,

    pub const _desc_table = .{
        .monster_id = fd(6, .{ .Varint = .Simple }),
        .num = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ArchiveData = struct {
    archive_equipment_id_list: ArrayList(u32),
    relic_list: ArrayList(RelicList),
    archive_avatar_id_list: ArrayList(u32),
    archive_missing_equipment_id_list: ArrayList(u32),
    kill_monster_list: ArrayList(MonsterList),

    pub const _desc_table = .{
        .archive_equipment_id_list = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
        .relic_list = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .archive_avatar_id_list = fd(11, .{ .PackedList = .{ .Varint = .Simple } }),
        .archive_missing_equipment_id_list = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
        .kill_monster_list = fd(4, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetArchiveDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetArchiveDataScRsp = struct {
    archive_data: ?ArchiveData = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .archive_data = fd(4, .{ .SubMessage = {} }),
        .retcode = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetUpdatedArchiveDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetUpdatedArchiveDataScRsp = struct {
    archive_data: ?ArchiveData = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .archive_data = fd(6, .{ .SubMessage = {} }),
        .retcode = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetAvatarDataCsReq = struct {
    base_avatar_id_list: ArrayList(u32),
    is_get_all: bool = false,

    pub const _desc_table = .{
        .base_avatar_id_list = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
        .is_get_all = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EquipRelic = struct {
    type: u32 = 0,
    relic_unique_id: u32 = 0,

    pub const _desc_table = .{
        .type = fd(12, .{ .Varint = .Simple }),
        .relic_unique_id = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Avatar = struct {
    is_marked: bool = false,
    base_avatar_id: u32 = 0,
    rank: u32 = 0,
    dressed_skin_id: u32 = 0,
    first_met_time_stamp: u64 = 0,
    equip_relic_list: ArrayList(EquipRelic),
    unk_enhanced_id: u32 = 0,
    skilltree_list: ArrayList(AvatarSkillTree),
    exp: u32 = 0,
    has_taken_promotion_reward_list: ArrayList(u32),
    level: u32 = 0,
    promotion: u32 = 0,
    equipment_unique_id: u32 = 0,

    pub const _desc_table = .{
        .is_marked = fd(7, .{ .Varint = .Simple }),
        .base_avatar_id = fd(2, .{ .Varint = .Simple }),
        .rank = fd(12, .{ .Varint = .Simple }),
        .dressed_skin_id = fd(10, .{ .Varint = .Simple }),
        .first_met_time_stamp = fd(15, .{ .Varint = .Simple }),
        .equip_relic_list = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .unk_enhanced_id = fd(11, .{ .Varint = .Simple }),
        .skilltree_list = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .exp = fd(8, .{ .Varint = .Simple }),
        .has_taken_promotion_reward_list = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .level = fd(1, .{ .Varint = .Simple }),
        .promotion = fd(5, .{ .Varint = .Simple }),
        .equipment_unique_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MultiPathAvatarInfo = struct {
    equip_relic_list: ArrayList(EquipRelic),
    multi_path_skill_tree: ArrayList(AvatarSkillTree),
    KDMCLKJLJPP: u64 = 0,
    avatar_id: MultiPathAvatarType = @enumFromInt(0),
    unk_enhanced_id: u32 = 0,
    dressed_skin_id: u32 = 0,
    path_equipment_id: u32 = 0,
    rank: u32 = 0,

    pub const _desc_table = .{
        .equip_relic_list = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .multi_path_skill_tree = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .KDMCLKJLJPP = fd(2, .{ .Varint = .Simple }),
        .avatar_id = fd(12, .{ .Varint = .Simple }),
        .unk_enhanced_id = fd(10, .{ .Varint = .Simple }),
        .dressed_skin_id = fd(11, .{ .Varint = .Simple }),
        .path_equipment_id = fd(7, .{ .Varint = .Simple }),
        .rank = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetAvatarDataScRsp = struct {
    JPNLPOPMKEJ: u32 = 0,
    retcode: u32 = 0,
    FEFPIJJLNFG: ArrayList(KHOCCHABNMN),
    basic_type_id_list: ArrayList(u32),
    cur_avatar_path: ArrayList(CurAvatarPathEntry),
    avatar_list: ArrayList(Avatar),
    PNKCFEALAMI: ArrayList(GrowthTartgetFuncType),
    is_get_all: bool = false,
    multi_path_avatar_info_list: ArrayList(MultiPathAvatarInfo),
    skin_list: ArrayList(u32),

    pub const _desc_table = .{
        .JPNLPOPMKEJ = fd(8, .{ .Varint = .Simple }),
        .retcode = fd(2, .{ .Varint = .Simple }),
        .FEFPIJJLNFG = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .basic_type_id_list = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
        .cur_avatar_path = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .avatar_list = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .PNKCFEALAMI = fd(9, .{ .List = .{ .Varint = .Simple } }),
        .is_get_all = fd(15, .{ .Varint = .Simple }),
        .multi_path_avatar_info_list = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .skin_list = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub const CurAvatarPathEntry = struct {
        key: u32 = 0,
        value: MultiPathAvatarType = @enumFromInt(0),

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AvatarExpUpCsReq = struct {
    base_avatar_id: u32 = 0,
    item_cost: ?ItemCostData = null,

    pub const _desc_table = .{
        .base_avatar_id = fd(1, .{ .Varint = .Simple }),
        .item_cost = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AvatarExpUpScRsp = struct {
    retcode: u32 = 0,
    return_item_list: ArrayList(PileItem),

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
        .return_item_list = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UnlockSkilltreeCsReq = struct {
    item_list: ArrayList(ItemCost),
    point_id: u32 = 0,
    level: u32 = 0,

    pub const _desc_table = .{
        .item_list = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .point_id = fd(10, .{ .Varint = .Simple }),
        .level = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UnlockSkilltreeScRsp = struct {
    point_id: u32 = 0,
    retcode: u32 = 0,
    level: u32 = 0,

    pub const _desc_table = .{
        .point_id = fd(4, .{ .Varint = .Simple }),
        .retcode = fd(7, .{ .Varint = .Simple }),
        .level = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PromoteAvatarCsReq = struct {
    item_list: ArrayList(ItemCost),
    base_avatar_id: u32 = 0,

    pub const _desc_table = .{
        .item_list = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .base_avatar_id = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PromoteAvatarScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DressAvatarCsReq = struct {
    avatar_id: u32 = 0,
    equipment_unique_id: u32 = 0,

    pub const _desc_table = .{
        .avatar_id = fd(14, .{ .Varint = .Simple }),
        .equipment_unique_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DressAvatarScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeOffEquipmentCsReq = struct {
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .avatar_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeOffEquipmentScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AddAvatarScNotify = struct {
    base_avatar_id: u32 = 0,
    src: AddAvatarSrcState = @enumFromInt(0),
    reward: ?ItemList = null,
    is_new: bool = false,

    pub const _desc_table = .{
        .base_avatar_id = fd(3, .{ .Varint = .Simple }),
        .src = fd(2, .{ .Varint = .Simple }),
        .reward = fd(5, .{ .SubMessage = {} }),
        .is_new = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AddMultiPathAvatarScNotify = struct {
    is_new: bool = false,
    reward: ?ItemList = null,
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .is_new = fd(11, .{ .Varint = .Simple }),
        .reward = fd(7, .{ .SubMessage = {} }),
        .avatar_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RankUpAvatarCsReq = struct {
    avatar_id: u32 = 0,
    rank: u32 = 0,
    cost_data: ?ItemCostData = null,

    pub const _desc_table = .{
        .avatar_id = fd(11, .{ .Varint = .Simple }),
        .rank = fd(2, .{ .Varint = .Simple }),
        .cost_data = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RankUpAvatarScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DressRelicParam = struct {
    relic_type: u32 = 0,
    relic_unique_id: u32 = 0,

    pub const _desc_table = .{
        .relic_type = fd(10, .{ .Varint = .Simple }),
        .relic_unique_id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DressRelicAvatarCsReq = struct {
    avatar_id: u32 = 0,
    switch_list: ArrayList(DressRelicParam),

    pub const _desc_table = .{
        .avatar_id = fd(6, .{ .Varint = .Simple }),
        .switch_list = fd(13, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DressRelicAvatarScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeOffRelicCsReq = struct {
    relic_type_list: ArrayList(u32),
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .relic_type_list = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
        .avatar_id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeOffRelicScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakePromotionRewardCsReq = struct {
    base_avatar_id: u32 = 0,
    promotion: u32 = 0,

    pub const _desc_table = .{
        .base_avatar_id = fd(8, .{ .Varint = .Simple }),
        .promotion = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakePromotionRewardScRsp = struct {
    retcode: u32 = 0,
    reward_list: ?ItemList = null,

    pub const _desc_table = .{
        .retcode = fd(14, .{ .Varint = .Simple }),
        .reward_list = fd(13, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DressAvatarSkinCsReq = struct {
    avatar_id: u32 = 0,
    skin_id: u32 = 0,

    pub const _desc_table = .{
        .avatar_id = fd(4, .{ .Varint = .Simple }),
        .skin_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DressAvatarSkinScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeOffAvatarSkinCsReq = struct {
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .avatar_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeOffAvatarSkinScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UnlockAvatarSkinScNotify = struct {
    skin_id: u32 = 0,

    pub const _desc_table = .{
        .skin_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MarkAvatarCsReq = struct {
    avatar_id: u32 = 0,
    is_marked: bool = false,

    pub const _desc_table = .{
        .avatar_id = fd(9, .{ .Varint = .Simple }),
        .is_marked = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MarkAvatarScRsp = struct {
    retcode: u32 = 0,
    is_marked: bool = false,
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(5, .{ .Varint = .Simple }),
        .is_marked = fd(11, .{ .Varint = .Simple }),
        .avatar_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetGrowthTargetAvatarCsReq = struct {
    IDNMEKNHLPO: u32 = 0,
    avatar_id: u32 = 0,
    source: GrowthTargetState = @enumFromInt(0),
    growth_target_type_list: ArrayList(GrowthTartgetFuncType),

    pub const _desc_table = .{
        .IDNMEKNHLPO = fd(13, .{ .Varint = .Simple }),
        .avatar_id = fd(1, .{ .Varint = .Simple }),
        .source = fd(11, .{ .Varint = .Simple }),
        .growth_target_type_list = fd(3, .{ .List = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetGrowthTargetAvatarScRsp = struct {
    growth_target_type_list: ArrayList(GrowthTartgetFuncType),
    retcode: u32 = 0,
    JPNLPOPMKEJ: u32 = 0,
    growth_avatar_id: u32 = 0,

    pub const _desc_table = .{
        .growth_target_type_list = fd(7, .{ .List = .{ .Varint = .Simple } }),
        .retcode = fd(12, .{ .Varint = .Simple }),
        .JPNLPOPMKEJ = fd(15, .{ .Varint = .Simple }),
        .growth_avatar_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GrowthTargetAvatarChangedScNotify = struct {
    JPNLPOPMKEJ: u32 = 0,
    growth_target_type_list: ArrayList(GrowthTartgetFuncType),

    pub const _desc_table = .{
        .JPNLPOPMKEJ = fd(10, .{ .Varint = .Simple }),
        .growth_target_type_list = fd(5, .{ .List = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPreAvatarActivityListCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPreAvatarActivityListScRsp = struct {
    retcode: u32 = 0,
    PHHNCJJPKIC: ArrayList(u32),

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
        .PHHNCJJPKIC = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NMIFOLJFCJH = struct {
    AEKFJKENPHN: u32 = 0,
    OANPNFJJFHG: ManagedString = .Empty,
    KJAEOJBJOJD: u32 = 0,
    HDNIKCBLKIL: u32 = 0,
    EBPPBPMHDHI: ManagedString = .Empty,
    type: u32 = 0,
    IHOKHLFHOCC: u32 = 0,
    panel_id: u32 = 0,
    KPJHBEILAIP: ManagedString = .Empty,
    KIEJACMOGAN: u32 = 0,
    LKKAMLLAFAE: u32 = 0,
    FLAAGNAPDHP: u32 = 0,
    EGDDNPEONKC: u32 = 0,
    DLAPKBDDBBC: u32 = 0,
    DGGNNBCJOCC: u32 = 0,
    LIJCNGOHKHF: u32 = 0,
    DBIJFKOBKKH: u32 = 0,
    PMMCFGMPLBA: u32 = 0,
    PHIBNKMIOGP: u32 = 0,
    JJMKEADCIAG: u32 = 0,
    FOJCCKACDHH: u32 = 0,
    MKHLDLFONKN: ManagedString = .Empty,

    pub const _desc_table = .{
        .AEKFJKENPHN = fd(13, .{ .Varint = .Simple }),
        .OANPNFJJFHG = fd(267, .String),
        .KJAEOJBJOJD = fd(7, .{ .Varint = .Simple }),
        .HDNIKCBLKIL = fd(4, .{ .Varint = .Simple }),
        .EBPPBPMHDHI = fd(1274, .String),
        .type = fd(152, .{ .Varint = .Simple }),
        .IHOKHLFHOCC = fd(6, .{ .Varint = .Simple }),
        .panel_id = fd(1755, .{ .Varint = .Simple }),
        .KPJHBEILAIP = fd(1290, .String),
        .KIEJACMOGAN = fd(3, .{ .Varint = .Simple }),
        .LKKAMLLAFAE = fd(10, .{ .Varint = .Simple }),
        .FLAAGNAPDHP = fd(9, .{ .Varint = .Simple }),
        .EGDDNPEONKC = fd(5, .{ .Varint = .Simple }),
        .DLAPKBDDBBC = fd(2, .{ .Varint = .Simple }),
        .DGGNNBCJOCC = fd(314, .{ .Varint = .Simple }),
        .LIJCNGOHKHF = fd(11, .{ .Varint = .Simple }),
        .DBIJFKOBKKH = fd(15, .{ .Varint = .Simple }),
        .PMMCFGMPLBA = fd(12, .{ .Varint = .Simple }),
        .PHIBNKMIOGP = fd(8, .{ .Varint = .Simple }),
        .JJMKEADCIAG = fd(1, .{ .Varint = .Simple }),
        .FOJCCKACDHH = fd(14, .{ .Varint = .Simple }),
        .MKHLDLFONKN = fd(697, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPreAvatarGrowthInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPreAvatarGrowthInfoScRsp = struct {
    retcode: u32 = 0,
    IJONOMEJOHM: ArrayList(NMIFOLJFCJH),

    pub const _desc_table = .{
        .retcode = fd(2, .{ .Varint = .Simple }),
        .IJONOMEJOHM = fd(3, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetAvatarEnhancedIdCsReq = struct {
    enhanced_id: u32 = 0,
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .enhanced_id = fd(11, .{ .Varint = .Simple }),
        .avatar_id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetAvatarEnhancedIdScRsp = struct {
    unk_enhanced_id: u32 = 0,
    growth_avatar_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .unk_enhanced_id = fd(6, .{ .Varint = .Simple }),
        .growth_avatar_id = fd(3, .{ .Varint = .Simple }),
        .retcode = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PVEBattleResultCsReq = struct {
    battle_id: u32 = 0,
    cost_time: u32 = 0,
    GJGKAGFPAGM: bool = false,
    HPEKEKIPJLF: ArrayList(HPEKEKIPJLFEntry),
    end_status: BattleEndStatus = @enumFromInt(0),
    client_res_version: u32 = 0,
    JCJFGOJFEGE: u32 = 0,
    is_ai_consider_ultra_skill: bool = false,
    is_auto_fight: bool = false,
    turn_snapshot_hash: ManagedString = .Empty,
    client_version: u32 = 0,
    debug_extra_info: ManagedString = .Empty,
    op_list: ArrayList(BattleOp),
    stt: ?BattleStatistics = null,
    stage_id: u32 = 0,

    pub const _desc_table = .{
        .battle_id = fd(7, .{ .Varint = .Simple }),
        .cost_time = fd(12, .{ .Varint = .Simple }),
        .GJGKAGFPAGM = fd(14, .{ .Varint = .Simple }),
        .HPEKEKIPJLF = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .end_status = fd(11, .{ .Varint = .Simple }),
        .client_res_version = fd(9, .{ .Varint = .Simple }),
        .JCJFGOJFEGE = fd(4, .{ .Varint = .Simple }),
        .is_ai_consider_ultra_skill = fd(2, .{ .Varint = .Simple }),
        .is_auto_fight = fd(6, .{ .Varint = .Simple }),
        .turn_snapshot_hash = fd(10, .String),
        .client_version = fd(15, .{ .Varint = .Simple }),
        .debug_extra_info = fd(8, .String),
        .op_list = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .stt = fd(1, .{ .SubMessage = {} }),
        .stage_id = fd(5, .{ .Varint = .Simple }),
    };

    pub const HPEKEKIPJLFEntry = struct {
        key: ManagedString = .Empty,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .String),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PVEBattleResultScRsp = struct {
    bin_version: ManagedString = .Empty,
    event_id: u32 = 0,
    multiple_drop_data: ?ItemList = null,
    drop_data: ?ItemList = null,
    battle_avatar_list: ArrayList(BattleAvatar),
    retcode: u32 = 0,
    item_list_unk1: ?ItemList = null,
    GGMPFNKOFKD: u32 = 0,
    stage_id: u32 = 0,
    res_version: ManagedString = .Empty,
    item_list_unk2: ?ItemList = null,
    KLODELECMCI: u32 = 0,
    battle_id: u32 = 0,
    mismatch_turn_count: u32 = 0,
    end_status: BattleEndStatus = @enumFromInt(0),
    check_identical: bool = false,
    KJCHGEHDLNO: ?MBKOCMMICPG = null,

    pub const _desc_table = .{
        .bin_version = fd(9, .String),
        .event_id = fd(3, .{ .Varint = .Simple }),
        .multiple_drop_data = fd(10, .{ .SubMessage = {} }),
        .drop_data = fd(6, .{ .SubMessage = {} }),
        .battle_avatar_list = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(8, .{ .Varint = .Simple }),
        .item_list_unk1 = fd(5, .{ .SubMessage = {} }),
        .GGMPFNKOFKD = fd(7, .{ .Varint = .Simple }),
        .stage_id = fd(15, .{ .Varint = .Simple }),
        .res_version = fd(1, .String),
        .item_list_unk2 = fd(1229, .{ .SubMessage = {} }),
        .KLODELECMCI = fd(11, .{ .Varint = .Simple }),
        .battle_id = fd(13, .{ .Varint = .Simple }),
        .mismatch_turn_count = fd(12, .{ .Varint = .Simple }),
        .end_status = fd(2, .{ .Varint = .Simple }),
        .check_identical = fd(4, .{ .Varint = .Simple }),
        .KJCHGEHDLNO = fd(759, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const QuitBattleCsReq = struct {
    rebattle_type: RebattleType = @enumFromInt(0),
    stt: ?BattleStatistics = null,

    pub const _desc_table = .{
        .rebattle_type = fd(1, .{ .Varint = .Simple }),
        .stt = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const QuitBattleScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetCurBattleInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetCurBattleInfoScRsp = struct {
    PBPHJBAFGBB: ?AetherDivideBattleInfo = null,
    battle_info: ?SceneBattleInfo = null,
    retcode: u32 = 0,
    IBPJKFFFLNG: u32 = 0,
    last_end_status: BattleEndStatus = @enumFromInt(0),

    pub const _desc_table = .{
        .PBPHJBAFGBB = fd(8, .{ .SubMessage = {} }),
        .battle_info = fd(5, .{ .SubMessage = {} }),
        .retcode = fd(9, .{ .Varint = .Simple }),
        .IBPJKFFFLNG = fd(2, .{ .Varint = .Simple }),
        .last_end_status = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncClientResVersionCsReq = struct {
    client_res_version: u32 = 0,

    pub const _desc_table = .{
        .client_res_version = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncClientResVersionScRsp = struct {
    client_res_version: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .client_res_version = fd(1, .{ .Varint = .Simple }),
        .retcode = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const QuitBattleScNotify = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BattleLogReportCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BattleLogReportScRsp = struct {
    is_battle_log_report: bool = false,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .is_battle_log_report = fd(13, .{ .Varint = .Simple }),
        .retcode = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ServerSimulateBattleFinishScNotify = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ReBattleAfterBattleLoseCsNotify = struct {
    PMJAHILBLFL: bool = false,

    pub const _desc_table = .{
        .PMJAHILBLFL = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RebattleByClientCsNotify = struct {
    rebattle_type: RebattleType = @enumFromInt(0),
    stt: ?BattleStatistics = null,

    pub const _desc_table = .{
        .rebattle_type = fd(7, .{ .Varint = .Simple }),
        .stt = fd(5, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetBattleCollegeDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetBattleCollegeDataScRsp = struct {
    retcode: u32 = 0,
    finished_college_id_list: ArrayList(u32),
    MAMHOJMFJOF: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
        .finished_college_id_list = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
        .MAMHOJMFJOF = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BattleCollegeDataChangeScNotify = struct {
    MAMHOJMFJOF: u32 = 0,
    finished_college_id_list: ArrayList(u32),
    reward: ?ItemList = null,

    pub const _desc_table = .{
        .MAMHOJMFJOF = fd(12, .{ .Varint = .Simple }),
        .finished_college_id_list = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .reward = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartBattleCollegeCsReq = struct {
    id: u32 = 0,

    pub const _desc_table = .{
        .id = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartBattleCollegeScRsp = struct {
    battle_info: ?SceneBattleInfo = null,
    id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .battle_info = fd(8, .{ .SubMessage = {} }),
        .id = fd(14, .{ .Varint = .Simple }),
        .retcode = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BattlePassInfoNotify = struct {
    CBJKLLEOHDC: u64 = 0,
    FDKKIKGANCK: u64 = 0,
    INBOCKJGLBO: u64 = 0,
    HKEOAACCBPL: u64 = 0,
    LJOEKEFKPKO: u64 = 0,
    EKGOPLDJOII: u64 = 0,
    NKAOKNMHOLH: u64 = 0,
    JLLHALOHJII: BpTierType = @enumFromInt(0),
    exp: u32 = 0,
    CPHIIOCKHPI: u64 = 0,
    LJFLFLIMKAD: u32 = 0,
    EDBMNMDJBKO: u32 = 0,
    level: u32 = 0,

    pub const _desc_table = .{
        .CBJKLLEOHDC = fd(10, .{ .Varint = .Simple }),
        .FDKKIKGANCK = fd(8, .{ .Varint = .Simple }),
        .INBOCKJGLBO = fd(12, .{ .Varint = .Simple }),
        .HKEOAACCBPL = fd(13, .{ .Varint = .Simple }),
        .LJOEKEFKPKO = fd(2, .{ .Varint = .Simple }),
        .EKGOPLDJOII = fd(14, .{ .Varint = .Simple }),
        .NKAOKNMHOLH = fd(7, .{ .Varint = .Simple }),
        .JLLHALOHJII = fd(6, .{ .Varint = .Simple }),
        .exp = fd(4, .{ .Varint = .Simple }),
        .CPHIIOCKHPI = fd(1, .{ .Varint = .Simple }),
        .LJFLFLIMKAD = fd(3, .{ .Varint = .Simple }),
        .EDBMNMDJBKO = fd(9, .{ .Varint = .Simple }),
        .level = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeBpRewardCsReq = struct {
    type: BpRewardType = @enumFromInt(0),
    optional_reward_id: u32 = 0,
    level: u32 = 0,

    pub const _desc_table = .{
        .type = fd(12, .{ .Varint = .Simple }),
        .optional_reward_id = fd(6, .{ .Varint = .Simple }),
        .level = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeBpRewardScRsp = struct {
    reward: ?ItemList = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .reward = fd(7, .{ .SubMessage = {} }),
        .retcode = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BuyBpLevelCsReq = struct {
    LDNJEACFBJE: u32 = 0,

    pub const _desc_table = .{
        .LDNJEACFBJE = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BuyBpLevelScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OptionalReward = struct {
    optional_reward_id: u32 = 0,
    level: u32 = 0,

    pub const _desc_table = .{
        .optional_reward_id = fd(10, .{ .Varint = .Simple }),
        .level = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeAllRewardCsReq = struct {
    MODOOFJOIAO: ArrayList(OptionalReward),

    pub const _desc_table = .{
        .MODOOFJOIAO = fd(15, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeAllRewardScRsp = struct {
    retcode: u32 = 0,
    reward: ?ItemList = null,

    pub const _desc_table = .{
        .retcode = fd(13, .{ .Varint = .Simple }),
        .reward = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetBenefitActivityInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ECMKALKCJAC = struct {
    MPBPONGIGID: ManagedString = .Empty,
    CMAMEDOLLJL: ManagedString = .Empty,
    head_icon: u32 = 0,

    pub const _desc_table = .{
        .MPBPONGIGID = fd(9, .String),
        .CMAMEDOLLJL = fd(7, .String),
        .head_icon = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BenefitRewardItem = struct {
    level: u32 = 0,
    item_list: ?ItemList = null,

    pub const _desc_table = .{
        .level = fd(4, .{ .Varint = .Simple }),
        .item_list = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BenefitItemConfig = struct {
    rogue_score_reward_info: ArrayList(BenefitRewardItem),
    reveal_num_limit: u32 = 0,
    lucky_koi_list: ArrayList(ECMKALKCJAC),
    end_time: u64 = 0,
    begin_time: u64 = 0,
    reveal_time: u64 = 0,

    pub const _desc_table = .{
        .rogue_score_reward_info = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .reveal_num_limit = fd(5, .{ .Varint = .Simple }),
        .lucky_koi_list = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .end_time = fd(2, .{ .Varint = .Simple }),
        .begin_time = fd(12, .{ .Varint = .Simple }),
        .reveal_time = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BenefitData = struct {
    daily_index: u32 = 0,
    status: u32 = 0,
    config: ?BenefitItemConfig = null,
    level: u32 = 0,

    pub const _desc_table = .{
        .daily_index = fd(3, .{ .Varint = .Simple }),
        .status = fd(15, .{ .Varint = .Simple }),
        .config = fd(5, .{ .SubMessage = {} }),
        .level = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetBenefitActivityInfoScRsp = struct {
    retcode: u32 = 0,
    benefit_data_list: ArrayList(BenefitData),
    is_open: bool = false,

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
        .benefit_data_list = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .is_open = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwitchItem = struct {
    EINFBGKENDH: bool = false,
    daily_index: u32 = 0,

    pub const _desc_table = .{
        .EINFBGKENDH = fd(4, .{ .Varint = .Simple }),
        .daily_index = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeBenefitActivityRewardCsReq = struct {
    switch_list: ArrayList(SwitchItem),
    BFBPCBNPFPH: bool = false,

    pub const _desc_table = .{
        .switch_list = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .BFBPCBNPFPH = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RewardSwitchItem = struct {
    EINFBGKENDH: bool = false,
    daily_index: u32 = 0,
    item_list: ?ItemList = null,

    pub const _desc_table = .{
        .EINFBGKENDH = fd(5, .{ .Varint = .Simple }),
        .daily_index = fd(6, .{ .Varint = .Simple }),
        .item_list = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeBenefitActivityRewardScRsp = struct {
    CKEKCCONJGB: ?ItemList = null,
    switch_list: ArrayList(RewardSwitchItem),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .CKEKCCONJGB = fd(1, .{ .SubMessage = {} }),
        .switch_list = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JoinBenefitActivityCsReq = struct {
    daily_index: u32 = 0,

    pub const _desc_table = .{
        .daily_index = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JoinBenefitActivityScRsp = struct {
    retcode: u32 = 0,
    daily_index: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(4, .{ .Varint = .Simple }),
        .daily_index = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IJKJJDHLKLB = struct {
    avatar_type: AvatarType = @enumFromInt(0),
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .avatar_type = fd(14, .{ .Varint = .Simple }),
        .avatar_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FCIHIJLOMGA = struct {
    NAALCBMBPGC: u32 = 0,
    LLFOFPNDAFG: u32 = 0,
    avatar_list: ArrayList(u32),
    APLKNJEGBKF: bool = false,
    CPGOIPICPJF: u32 = 0,
    challenge_id: u32 = 0,
    HLIBIJFHHPG: ArrayList(u32),
    HNPEAPPMGAA: u32 = 0,
    MDLACHDKMPH: ArrayList(IJKJJDHLKLB),
    HJMGLEMJHKG: u32 = 0,

    pub const _desc_table = .{
        .NAALCBMBPGC = fd(2, .{ .Varint = .Simple }),
        .LLFOFPNDAFG = fd(7, .{ .Varint = .Simple }),
        .avatar_list = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .APLKNJEGBKF = fd(14, .{ .Varint = .Simple }),
        .CPGOIPICPJF = fd(12, .{ .Varint = .Simple }),
        .challenge_id = fd(15, .{ .Varint = .Simple }),
        .HLIBIJFHHPG = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
        .HNPEAPPMGAA = fd(11, .{ .Varint = .Simple }),
        .MDLACHDKMPH = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .HJMGLEMJHKG = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetBoxingClubInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetBoxingClubInfoScRsp = struct {
    retcode: u32 = 0,
    challenge_list: ArrayList(FCIHIJLOMGA),

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
        .challenge_list = fd(15, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GNEIBBPOAAB = struct {
    avatar_type: AvatarType = @enumFromInt(0),
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .avatar_type = fd(13, .{ .Varint = .Simple }),
        .avatar_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MatchBoxingClubOpponentCsReq = struct {
    MDLACHDKMPH: ArrayList(GNEIBBPOAAB),
    avatar_list: ArrayList(u32),
    challenge_id: u32 = 0,

    pub const _desc_table = .{
        .MDLACHDKMPH = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .avatar_list = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .challenge_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MatchBoxingClubOpponentScRsp = struct {
    challenge: ?FCIHIJLOMGA = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .challenge = fd(15, .{ .SubMessage = {} }),
        .retcode = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChooseBoxingClubResonanceCsReq = struct {
    challenge_id: u32 = 0,
    LLFOFPNDAFG: u32 = 0,

    pub const _desc_table = .{
        .challenge_id = fd(14, .{ .Varint = .Simple }),
        .LLFOFPNDAFG = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChooseBoxingClubResonanceScRsp = struct {
    retcode: u32 = 0,
    challenge: ?FCIHIJLOMGA = null,

    pub const _desc_table = .{
        .retcode = fd(6, .{ .Varint = .Simple }),
        .challenge = fd(10, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetBoxingClubResonanceLineupCsReq = struct {
    challenge_id: u32 = 0,
    MDLACHDKMPH: ArrayList(GNEIBBPOAAB),

    pub const _desc_table = .{
        .challenge_id = fd(2, .{ .Varint = .Simple }),
        .MDLACHDKMPH = fd(11, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetBoxingClubResonanceLineupScRsp = struct {
    retcode: u32 = 0,
    challenge: ?FCIHIJLOMGA = null,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
        .challenge = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChooseBoxingClubStageOptionalBuffCsReq = struct {
    FMGMAIEGOFP: u32 = 0,
    challenge_id: u32 = 0,

    pub const _desc_table = .{
        .FMGMAIEGOFP = fd(13, .{ .Varint = .Simple }),
        .challenge_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChooseBoxingClubStageOptionalBuffScRsp = struct {
    retcode: u32 = 0,
    challenge: ?FCIHIJLOMGA = null,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
        .challenge = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartBoxingClubBattleCsReq = struct {
    challenge_id: u32 = 0,

    pub const _desc_table = .{
        .challenge_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartBoxingClubBattleScRsp = struct {
    retcode: u32 = 0,
    challenge_id: u32 = 0,
    battle_info: ?SceneBattleInfo = null,

    pub const _desc_table = .{
        .retcode = fd(3, .{ .Varint = .Simple }),
        .challenge_id = fd(8, .{ .Varint = .Simple }),
        .battle_info = fd(13, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GiveUpBoxingClubChallengeCsReq = struct {
    challenge_id: u32 = 0,
    PCPDFJHDJCC: bool = false,

    pub const _desc_table = .{
        .challenge_id = fd(3, .{ .Varint = .Simple }),
        .PCPDFJHDJCC = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GiveUpBoxingClubChallengeScRsp = struct {
    retcode: u32 = 0,
    challenge: ?FCIHIJLOMGA = null,

    pub const _desc_table = .{
        .retcode = fd(2, .{ .Varint = .Simple }),
        .challenge = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BoxingClubRewardScNotify = struct {
    challenge_id: u32 = 0,
    reward: ?ItemList = null,
    NAALCBMBPGC: u32 = 0,
    is_win: bool = false,

    pub const _desc_table = .{
        .challenge_id = fd(6, .{ .Varint = .Simple }),
        .reward = fd(2, .{ .SubMessage = {} }),
        .NAALCBMBPGC = fd(13, .{ .Varint = .Simple }),
        .is_win = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BoxingClubChallengeUpdateScNotify = struct {
    challenge: ?FCIHIJLOMGA = null,

    pub const _desc_table = .{
        .challenge = fd(10, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Challenge = struct {
    score_id: u32 = 0,
    challenge_id: u32 = 0,
    star: u32 = 0,
    stage_info: ?ChallengeStageInfo = null,
    taken_reward: u32 = 0,
    score_two: u32 = 0,
    record_id: u32 = 0,
    KFDAICILNMB: bool = false,

    pub const _desc_table = .{
        .score_id = fd(9, .{ .Varint = .Simple }),
        .challenge_id = fd(14, .{ .Varint = .Simple }),
        .star = fd(4, .{ .Varint = .Simple }),
        .stage_info = fd(15, .{ .SubMessage = {} }),
        .taken_reward = fd(5, .{ .Varint = .Simple }),
        .score_two = fd(7, .{ .Varint = .Simple }),
        .record_id = fd(3, .{ .Varint = .Simple }),
        .KFDAICILNMB = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChallengeGroup = struct {
    taken_stars_count_reward: u64 = 0,
    group_id: u32 = 0,

    pub const _desc_table = .{
        .taken_stars_count_reward = fd(12, .{ .Varint = .Simple }),
        .group_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChallengeHistoryMaxLevel = struct {
    level: u32 = 0,
    reward_display_type: u32 = 0,

    pub const _desc_table = .{
        .level = fd(13, .{ .Varint = .Simple }),
        .reward_display_type = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetChallengeCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetChallengeScRsp = struct {
    max_level_list: ArrayList(ChallengeHistoryMaxLevel),
    retcode: u32 = 0,
    challenge_list: ArrayList(Challenge),
    challenge_group_list: ArrayList(ChallengeGroup),
    LPLJMKPBLIF: u32 = 0,

    pub const _desc_table = .{
        .max_level_list = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(1, .{ .Varint = .Simple }),
        .challenge_list = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .challenge_group_list = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .LPLJMKPBLIF = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChallengeStoryBuffInfo = struct {
    buff_two: u32 = 0,
    buff_one: u32 = 0,

    pub const _desc_table = .{
        .buff_two = fd(3, .{ .Varint = .Simple }),
        .buff_one = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChallengeBossBuffInfo = struct {
    buff_one: u32 = 0,
    buff_two: u32 = 0,

    pub const _desc_table = .{
        .buff_one = fd(1, .{ .Varint = .Simple }),
        .buff_two = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChallengeBuffInfo = struct {
    KFELKJLDKEH: ?KFELKJLDKEH_union,

    pub const _KFELKJLDKEH_case = enum {
        story_info,
        boss_info,
    };
    pub const KFELKJLDKEH_union = union(_KFELKJLDKEH_case) {
        story_info: ChallengeStoryBuffInfo,
        boss_info: ChallengeBossBuffInfo,
        pub const _union_desc = .{
            .story_info = fd(3, .{ .SubMessage = {} }),
            .boss_info = fd(15, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .KFELKJLDKEH = fd(null, .{ .OneOf = KFELKJLDKEH_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartChallengeCsReq = struct {
    stage_info: ?ChallengeBuffInfo = null,
    challenge_id: u32 = 0,
    second_lineup: ArrayList(u32),
    first_lineup: ArrayList(u32),

    pub const _desc_table = .{
        .stage_info = fd(13, .{ .SubMessage = {} }),
        .challenge_id = fd(2, .{ .Varint = .Simple }),
        .second_lineup = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
        .first_lineup = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartChallengeScRsp = struct {
    stage_info: ?ChallengeStageInfo = null,
    lineup_list: ArrayList(LineupInfo),
    scene: ?SceneInfo = null,
    retcode: u32 = 0,
    cur_challenge: ?CurChallenge = null,

    pub const _desc_table = .{
        .stage_info = fd(6, .{ .SubMessage = {} }),
        .lineup_list = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .scene = fd(12, .{ .SubMessage = {} }),
        .retcode = fd(9, .{ .Varint = .Simple }),
        .cur_challenge = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartPartialChallengeCsReq = struct {
    challenge_id: u32 = 0,
    buff_id: u32 = 0,
    is_first_half: bool = false,

    pub const _desc_table = .{
        .challenge_id = fd(4, .{ .Varint = .Simple }),
        .buff_id = fd(1, .{ .Varint = .Simple }),
        .is_first_half = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartPartialChallengeScRsp = struct {
    cur_challenge: ?CurChallenge = null,
    scene: ?SceneInfo = null,
    lineup: ?LineupInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .cur_challenge = fd(9, .{ .SubMessage = {} }),
        .scene = fd(12, .{ .SubMessage = {} }),
        .lineup = fd(13, .{ .SubMessage = {} }),
        .retcode = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LeaveChallengeCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LeaveChallengeScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChallengeSettleNotify = struct {
    challenge_score: u32 = 0,
    max_level: ?ChallengeHistoryMaxLevel = null,
    challenge_id: u32 = 0,
    cur_challenge: ?CurChallenge = null,
    LPLJMKPBLIF: u32 = 0,
    is_win: bool = false,
    reward: ?ItemList = null,
    star: u32 = 0,
    score_two: u32 = 0,
    HAHAEIFMLBM: ArrayList(u32),

    pub const _desc_table = .{
        .challenge_score = fd(4, .{ .Varint = .Simple }),
        .max_level = fd(2, .{ .SubMessage = {} }),
        .challenge_id = fd(1, .{ .Varint = .Simple }),
        .cur_challenge = fd(13, .{ .SubMessage = {} }),
        .LPLJMKPBLIF = fd(15, .{ .Varint = .Simple }),
        .is_win = fd(7, .{ .Varint = .Simple }),
        .reward = fd(3, .{ .SubMessage = {} }),
        .star = fd(6, .{ .Varint = .Simple }),
        .score_two = fd(11, .{ .Varint = .Simple }),
        .HAHAEIFMLBM = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KillMonster = struct {
    kill_num: u32 = 0,
    monster_id: u32 = 0,

    pub const _desc_table = .{
        .kill_num = fd(6, .{ .Varint = .Simple }),
        .monster_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChallengeStoryBuffList = struct {
    buff_list: ArrayList(u32),

    pub const _desc_table = .{
        .buff_list = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChallengeBossBuffList = struct {
    buff_list: ArrayList(u32),
    challenge_boss_const: u32 = 0,

    pub const _desc_table = .{
        .buff_list = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .challenge_boss_const = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChallengeCurBuffInfo = struct {
    KFELKJLDKEH: ?KFELKJLDKEH_union,

    pub const _KFELKJLDKEH_case = enum {
        cur_story_buffs,
        cur_boss_buffs,
    };
    pub const KFELKJLDKEH_union = union(_KFELKJLDKEH_case) {
        cur_story_buffs: ChallengeStoryBuffList,
        cur_boss_buffs: ChallengeBossBuffList,
        pub const _union_desc = .{
            .cur_story_buffs = fd(7, .{ .SubMessage = {} }),
            .cur_boss_buffs = fd(4, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .KFELKJLDKEH = fd(null, .{ .OneOf = KFELKJLDKEH_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CurChallenge = struct {
    score_two: u32 = 0,
    dead_avatar_num: u32 = 0,
    challenge_id: u32 = 0,
    round_count: u32 = 0,
    stage_info: ?ChallengeCurBuffInfo = null,
    status: ChallengeStatus = @enumFromInt(0),
    score_id: u32 = 0,
    extra_lineup_type: ExtraLineupType = @enumFromInt(0),
    kill_monster_list: ArrayList(KillMonster),

    pub const _desc_table = .{
        .score_two = fd(13, .{ .Varint = .Simple }),
        .dead_avatar_num = fd(1, .{ .Varint = .Simple }),
        .challenge_id = fd(11, .{ .Varint = .Simple }),
        .round_count = fd(4, .{ .Varint = .Simple }),
        .stage_info = fd(14, .{ .SubMessage = {} }),
        .status = fd(5, .{ .Varint = .Simple }),
        .score_id = fd(8, .{ .Varint = .Simple }),
        .extra_lineup_type = fd(2, .{ .Varint = .Simple }),
        .kill_monster_list = fd(6, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetCurChallengeCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetCurChallengeScRsp = struct {
    cur_challenge: ?CurChallenge = null,
    retcode: u32 = 0,
    lineup_list: ArrayList(LineupInfo),

    pub const _desc_table = .{
        .cur_challenge = fd(3, .{ .SubMessage = {} }),
        .retcode = fd(2, .{ .Varint = .Simple }),
        .lineup_list = fd(12, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChallengeLineupNotify = struct {
    extra_lineup_type: ExtraLineupType = @enumFromInt(0),

    pub const _desc_table = .{
        .extra_lineup_type = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeChallengeRewardCsReq = struct {
    group_id: u32 = 0,

    pub const _desc_table = .{
        .group_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeChallengeRewardScRsp = struct {
    retcode: u32 = 0,
    group_id: u32 = 0,
    taken_reward_list: ArrayList(TakenChallengeRewardInfo),

    pub const _desc_table = .{
        .retcode = fd(10, .{ .Varint = .Simple }),
        .group_id = fd(15, .{ .Varint = .Simple }),
        .taken_reward_list = fd(8, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakenChallengeRewardInfo = struct {
    reward: ?ItemList = null,
    star_count: u32 = 0,

    pub const _desc_table = .{
        .reward = fd(11, .{ .SubMessage = {} }),
        .star_count = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChallengeStatistics = struct {
    stage_tertinggi: ?ChallengeStageTertinggi = null,
    record_id: u32 = 0,

    pub const _desc_table = .{
        .stage_tertinggi = fd(12, .{ .SubMessage = {} }),
        .record_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChallengeStoryStatistics = struct {
    stage_tertinggi: ?ChallengeStoryStageTertinggi = null,
    record_id: u32 = 0,

    pub const _desc_table = .{
        .stage_tertinggi = fd(10, .{ .SubMessage = {} }),
        .record_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChallengeBossStatistics = struct {
    stage_tertinggi: ?ChallengeBossStageTertinggi = null,
    record_id: u32 = 0,

    pub const _desc_table = .{
        .stage_tertinggi = fd(1, .{ .SubMessage = {} }),
        .record_id = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChallengeStageTertinggi = struct {
    round_count: u32 = 0,
    level: u32 = 0,
    INHDDNNPBDB: u32 = 0,
    lineup_list: ArrayList(ChallengeLineupList),

    pub const _desc_table = .{
        .round_count = fd(9, .{ .Varint = .Simple }),
        .level = fd(8, .{ .Varint = .Simple }),
        .INHDDNNPBDB = fd(14, .{ .Varint = .Simple }),
        .lineup_list = fd(13, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChallengeStoryStageTertinggi = struct {
    score_id: u32 = 0,
    buff_two: u32 = 0,
    buff_one: u32 = 0,
    INHDDNNPBDB: u32 = 0,
    level: u32 = 0,
    lineup_list: ArrayList(ChallengeLineupList),

    pub const _desc_table = .{
        .score_id = fd(6, .{ .Varint = .Simple }),
        .buff_two = fd(15, .{ .Varint = .Simple }),
        .buff_one = fd(9, .{ .Varint = .Simple }),
        .INHDDNNPBDB = fd(14, .{ .Varint = .Simple }),
        .level = fd(5, .{ .Varint = .Simple }),
        .lineup_list = fd(8, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChallengeBossStageTertinggi = struct {
    INHDDNNPBDB: u32 = 0,
    score_id: u32 = 0,
    buff_one: u32 = 0,
    buff_two: u32 = 0,
    lineup_list: ArrayList(ChallengeLineupList),
    level: u32 = 0,

    pub const _desc_table = .{
        .INHDDNNPBDB = fd(10, .{ .Varint = .Simple }),
        .score_id = fd(6, .{ .Varint = .Simple }),
        .buff_one = fd(13, .{ .Varint = .Simple }),
        .buff_two = fd(14, .{ .Varint = .Simple }),
        .lineup_list = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .level = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChallengeLineupList = struct {
    avatar_list: ArrayList(ChallengeAvatarInfo),

    pub const _desc_table = .{
        .avatar_list = fd(3, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChallengeAvatarInfo = struct {
    index: u32 = 0,
    avatar_type: AvatarType = @enumFromInt(0),
    level: u32 = 0,
    id: u32 = 0,
    GGDIIBCDOBB: u32 = 0,

    pub const _desc_table = .{
        .index = fd(4, .{ .Varint = .Simple }),
        .avatar_type = fd(3, .{ .Varint = .Simple }),
        .level = fd(12, .{ .Varint = .Simple }),
        .id = fd(11, .{ .Varint = .Simple }),
        .GGDIIBCDOBB = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetChallengeGroupStatisticsCsReq = struct {
    group_id: u32 = 0,

    pub const _desc_table = .{
        .group_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetChallengeGroupStatisticsScRsp = struct {
    group_id: u32 = 0,
    retcode: u32 = 0,
    JDICGGKKOOI: ?JDICGGKKOOI_union,

    pub const _JDICGGKKOOI_case = enum {
        challenge_default,
        challenge_story,
        challenge_boss,
    };
    pub const JDICGGKKOOI_union = union(_JDICGGKKOOI_case) {
        challenge_default: ChallengeStatistics,
        challenge_story: ChallengeStoryStatistics,
        challenge_boss: ChallengeBossStatistics,
        pub const _union_desc = .{
            .challenge_default = fd(9, .{ .SubMessage = {} }),
            .challenge_story = fd(5, .{ .SubMessage = {} }),
            .challenge_boss = fd(3, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .group_id = fd(7, .{ .Varint = .Simple }),
        .retcode = fd(2, .{ .Varint = .Simple }),
        .JDICGGKKOOI = fd(null, .{ .OneOf = JDICGGKKOOI_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChallengeBossSingleNodeInfo = struct {
    MEELGNDNOMN: bool = false,
    is_win: bool = false,
    buff_id: u32 = 0,
    max_score: u32 = 0,

    pub const _desc_table = .{
        .MEELGNDNOMN = fd(11, .{ .Varint = .Simple }),
        .is_win = fd(12, .{ .Varint = .Simple }),
        .buff_id = fd(15, .{ .Varint = .Simple }),
        .max_score = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChallengeBossEquipmentInfo = struct {
    rank: u32 = 0,
    tid: u32 = 0,
    unique_id: u32 = 0,
    level: u32 = 0,
    promotion: u32 = 0,

    pub const _desc_table = .{
        .rank = fd(9, .{ .Varint = .Simple }),
        .tid = fd(8, .{ .Varint = .Simple }),
        .unique_id = fd(7, .{ .Varint = .Simple }),
        .level = fd(10, .{ .Varint = .Simple }),
        .promotion = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChallengeBossRelicInfo = struct {
    main_affix_id: u32 = 0,
    sub_affix_list: ArrayList(RelicAffix),
    tid: u32 = 0,
    level: u32 = 0,
    unique_id: u32 = 0,

    pub const _desc_table = .{
        .main_affix_id = fd(4, .{ .Varint = .Simple }),
        .sub_affix_list = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .tid = fd(6, .{ .Varint = .Simple }),
        .level = fd(15, .{ .Varint = .Simple }),
        .unique_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChallengeBossAvatarRelicInfo = struct {
    avatar_relic_slot_map: ArrayList(AvatarRelicSlotMapEntry),

    pub const _desc_table = .{
        .avatar_relic_slot_map = fd(11, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const AvatarRelicSlotMapEntry = struct {
        key: u32 = 0,
        value: ?ChallengeBossRelicInfo = null,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChallengeBossInfo = struct {
    first_node: ?ChallengeBossSingleNodeInfo = null,
    first_lineup: ArrayList(u32),
    second_lineup: ArrayList(u32),
    second_node: ?ChallengeBossSingleNodeInfo = null,
    NCBDNPGPEAI: bool = false,
    challenge_avatar_relic_map: ArrayList(ChallengeAvatarRelicMapEntry),
    challenge_avatar_equipment_map: ArrayList(ChallengeAvatarEquipmentMapEntry),

    pub const _desc_table = .{
        .first_node = fd(12, .{ .SubMessage = {} }),
        .first_lineup = fd(11, .{ .PackedList = .{ .Varint = .Simple } }),
        .second_lineup = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
        .second_node = fd(10, .{ .SubMessage = {} }),
        .NCBDNPGPEAI = fd(8, .{ .Varint = .Simple }),
        .challenge_avatar_relic_map = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .challenge_avatar_equipment_map = fd(9, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const ChallengeAvatarRelicMapEntry = struct {
        key: u32 = 0,
        value: ?ChallengeBossAvatarRelicInfo = null,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const ChallengeAvatarEquipmentMapEntry = struct {
        key: u32 = 0,
        value: ?ChallengeBossEquipmentInfo = null,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChallengeStageInfo = struct {
    boss_info: ?ChallengeBossInfo = null,

    pub const _desc_table = .{
        .boss_info = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RestartChallengePhaseCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RestartChallengePhaseScRsp = struct {
    scene: ?SceneInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .scene = fd(14, .{ .SubMessage = {} }),
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterChallengeNextPhaseCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterChallengeNextPhaseScRsp = struct {
    scene: ?SceneInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .scene = fd(5, .{ .SubMessage = {} }),
        .retcode = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChallengeBossPhaseSettleNotify = struct {
    star: u32 = 0,
    score_two: u32 = 0,
    is_win: bool = false,
    phase: u32 = 0,
    is_second_half: bool = false,
    page_type: u32 = 0,
    is_reward: bool = false,
    challenge_id: u32 = 0,
    battle_target_list: ArrayList(BattleTarget),
    challenge_score: u32 = 0,

    pub const _desc_table = .{
        .star = fd(15, .{ .Varint = .Simple }),
        .score_two = fd(14, .{ .Varint = .Simple }),
        .is_win = fd(8, .{ .Varint = .Simple }),
        .phase = fd(9, .{ .Varint = .Simple }),
        .is_second_half = fd(5, .{ .Varint = .Simple }),
        .page_type = fd(2, .{ .Varint = .Simple }),
        .is_reward = fd(1, .{ .Varint = .Simple }),
        .challenge_id = fd(4, .{ .Varint = .Simple }),
        .battle_target_list = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .challenge_score = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SendMsgCsReq = struct {
    extra_id: u32 = 0,
    target_list: ArrayList(u32),
    chat_type: ChatType = @enumFromInt(0),
    message_type: MsgType = @enumFromInt(0),
    HNBEPABNBNG: ?PEDLPHDBNAF = null,
    message_text: ManagedString = .Empty,

    pub const _desc_table = .{
        .extra_id = fd(11, .{ .Varint = .Simple }),
        .target_list = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .chat_type = fd(13, .{ .Varint = .Simple }),
        .message_type = fd(6, .{ .Varint = .Simple }),
        .HNBEPABNBNG = fd(1, .{ .SubMessage = {} }),
        .message_text = fd(3, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SendMsgScRsp = struct {
    retcode: u32 = 0,
    end_time: u64 = 0,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
        .end_time = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChatMessageData = struct {
    message_type: MsgType = @enumFromInt(0),
    HNBEPABNBNG: ?PEDLPHDBNAF = null,
    content: ManagedString = .Empty,
    sender_id: u32 = 0,
    extra_id: u32 = 0,
    create_time: u64 = 0,

    pub const _desc_table = .{
        .message_type = fd(15, .{ .Varint = .Simple }),
        .HNBEPABNBNG = fd(6, .{ .SubMessage = {} }),
        .content = fd(9, .String),
        .sender_id = fd(10, .{ .Varint = .Simple }),
        .extra_id = fd(3, .{ .Varint = .Simple }),
        .create_time = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RevcMsgScNotify = struct {
    extra_id: u32 = 0,
    target_uid: u32 = 0,
    message_type: MsgType = @enumFromInt(0),
    message_text: ManagedString = .Empty,
    HNBEPABNBNG: ?PEDLPHDBNAF = null,
    source_uid: u32 = 0,
    chat_type: ChatType = @enumFromInt(0),

    pub const _desc_table = .{
        .extra_id = fd(2, .{ .Varint = .Simple }),
        .target_uid = fd(7, .{ .Varint = .Simple }),
        .message_type = fd(13, .{ .Varint = .Simple }),
        .message_text = fd(3, .String),
        .HNBEPABNBNG = fd(15, .{ .SubMessage = {} }),
        .source_uid = fd(6, .{ .Varint = .Simple }),
        .chat_type = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PrivateMsgOfflineUsersScNotify = struct {
    contact_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .contact_id_list = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPrivateChatHistoryCsReq = struct {
    target_side: u32 = 0,
    contact_side: u32 = 0,

    pub const _desc_table = .{
        .target_side = fd(7, .{ .Varint = .Simple }),
        .contact_side = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPrivateChatHistoryScRsp = struct {
    chat_message_list: ArrayList(ChatMessageData),
    retcode: u32 = 0,
    contact_side: u32 = 0,
    target_side: u32 = 0,

    pub const _desc_table = .{
        .chat_message_list = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(11, .{ .Varint = .Simple }),
        .contact_side = fd(14, .{ .Varint = .Simple }),
        .target_side = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FriendHistoryInfo = struct {
    contact_side: u32 = 0,
    last_send_time: i64 = 0,

    pub const _desc_table = .{
        .contact_side = fd(1, .{ .Varint = .Simple }),
        .last_send_time = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetChatFriendHistoryCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetChatFriendHistoryScRsp = struct {
    retcode: u32 = 0,
    friend_history_info: ArrayList(FriendHistoryInfo),

    pub const _desc_table = .{
        .retcode = fd(3, .{ .Varint = .Simple }),
        .friend_history_info = fd(14, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetChatEmojiListCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetChatEmojiListScRsp = struct {
    chat_emoji_list: ArrayList(u32),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .chat_emoji_list = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MarkChatEmojiCsReq = struct {
    is_remove_id: bool = false,
    extra_id: u32 = 0,

    pub const _desc_table = .{
        .is_remove_id = fd(2, .{ .Varint = .Simple }),
        .extra_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MarkChatEmojiScRsp = struct {
    retcode: u32 = 0,
    is_remove_id: bool = false,
    extra_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(6, .{ .Varint = .Simple }),
        .is_remove_id = fd(15, .{ .Varint = .Simple }),
        .extra_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BatchMarkChatEmojiCsReq = struct {
    marked_emoji_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .marked_emoji_id_list = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BatchMarkChatEmojiScRsp = struct {
    marked_emoji_id_list: ArrayList(u32),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .marked_emoji_id_list = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetLoginChatInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetLoginChatInfoScRsp = struct {
    retcode: u32 = 0,
    contact_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .retcode = fd(14, .{ .Varint = .Simple }),
        .contact_id_list = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueAvatarReviveCost = struct {
    rogue_revive_cost: ?ItemCostData = null,

    pub const _desc_table = .{
        .rogue_revive_cost = fd(9, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueInfo = struct {
    scene: ?SceneInfo = null,
    lineup: ?LineupInfo = null,

    pub const _desc_table = .{
        .scene = fd(11, .{ .SubMessage = {} }),
        .lineup = fd(5, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueDiceInfo = struct {
    display_id: u32 = 0,
    dice_status: ChessRogueDiceStatus = @enumFromInt(0),
    PAGPBLAFNEH: u32 = 0,
    NGDEDLKNGFG: ArrayList(u32),
    reroll_times: u32 = 0,
    EDPHLDEGJLM: ?EENDHPKPFLP = null,
    cur_surface_slot_id: u32 = 0,
    game_dice_branch_id: u32 = 0,
    JFIPIIFPMMB: i32 = 0,
    dice_type: ChessRogueDiceType = @enumFromInt(0),
    FNEIDJIMJPH: bool = false,
    can_reroll_dice: bool = false,
    game_branch_id: u32 = 0,
    cur_surface_id: u32 = 0,
    cheat_times: u32 = 0,
    rogue_modifider: ?RogueModifier = null,
    dice: ?ChessRogueDice = null,

    pub const _desc_table = .{
        .display_id = fd(11, .{ .Varint = .Simple }),
        .dice_status = fd(7, .{ .Varint = .Simple }),
        .PAGPBLAFNEH = fd(2, .{ .Varint = .Simple }),
        .NGDEDLKNGFG = fd(143, .{ .PackedList = .{ .Varint = .Simple } }),
        .reroll_times = fd(1, .{ .Varint = .Simple }),
        .EDPHLDEGJLM = fd(1998, .{ .SubMessage = {} }),
        .cur_surface_slot_id = fd(5, .{ .Varint = .Simple }),
        .game_dice_branch_id = fd(13, .{ .Varint = .Simple }),
        .JFIPIIFPMMB = fd(1392, .{ .Varint = .Simple }),
        .dice_type = fd(3, .{ .Varint = .Simple }),
        .FNEIDJIMJPH = fd(1030, .{ .Varint = .Simple }),
        .can_reroll_dice = fd(10, .{ .Varint = .Simple }),
        .game_branch_id = fd(12, .{ .Varint = .Simple }),
        .cur_surface_id = fd(8, .{ .Varint = .Simple }),
        .cheat_times = fd(15, .{ .Varint = .Simple }),
        .rogue_modifider = fd(1368, .{ .SubMessage = {} }),
        .dice = fd(340, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueRollDiceCsReq = struct {
    KCHFJDAJECM: u32 = 0,

    pub const _desc_table = .{
        .KCHFJDAJECM = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueRollDiceScRsp = struct {
    retcode: u32 = 0,
    rogue_dice_info: ?ChessRogueDiceInfo = null,

    pub const _desc_table = .{
        .retcode = fd(3, .{ .Varint = .Simple }),
        .rogue_dice_info = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CellMonster = struct {
    monster_id: u32 = 0,
    boss_decay_id: u32 = 0,

    pub const _desc_table = .{
        .monster_id = fd(5, .{ .Varint = .Simple }),
        .boss_decay_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CellMonsterInfo = struct {
    select_boss_id: u32 = 0,
    confirm: bool = false,
    cell_monster_list: ArrayList(CellMonster),

    pub const _desc_table = .{
        .select_boss_id = fd(6, .{ .Varint = .Simple }),
        .confirm = fd(10, .{ .Varint = .Simple }),
        .cell_monster_list = fd(8, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CellMonsterSelectInfo = struct {
    select_decay_id: ArrayList(u32),

    pub const _desc_table = .{
        .select_decay_id = fd(11, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CellFinalMonsterInfo = struct {
    select_boss_info: ?CellMonsterSelectInfo = null,
    cell_boss_info: ?CellMonsterInfo = null,

    pub const _desc_table = .{
        .select_boss_info = fd(1, .{ .SubMessage = {} }),
        .cell_boss_info = fd(4, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CellAdvanceInfo = struct {
    INBKIJDHPLP: ?INBKIJDHPLP_union,

    pub const _INBKIJDHPLP_case = enum {
        cell_boss_info,
        select_boss_info,
        final_boss_info,
    };
    pub const INBKIJDHPLP_union = union(_INBKIJDHPLP_case) {
        cell_boss_info: CellMonsterInfo,
        select_boss_info: CellMonsterSelectInfo,
        final_boss_info: CellFinalMonsterInfo,
        pub const _union_desc = .{
            .cell_boss_info = fd(13, .{ .SubMessage = {} }),
            .select_boss_info = fd(5, .{ .SubMessage = {} }),
            .final_boss_info = fd(8, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .INBKIJDHPLP = fd(null, .{ .OneOf = INBKIJDHPLP_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueCell = struct {
    block_type: u32 = 0,
    pos_x: u32 = 0,
    pos_y: u32 = 0,
    stage_info: ?CellAdvanceInfo = null,
    id: u32 = 0,
    room_id: u32 = 0,
    cell_status: ChessRogueBoardCellStatus = @enumFromInt(0),
    special_type: ChessRogueCellSpecialType = @enumFromInt(0),
    is_unlocked: bool = false,
    unlock: bool = false,
    mark_type: u32 = 0,

    pub const _desc_table = .{
        .block_type = fd(4, .{ .Varint = .Simple }),
        .pos_x = fd(3, .{ .Varint = .Simple }),
        .pos_y = fd(6, .{ .Varint = .Simple }),
        .stage_info = fd(11, .{ .SubMessage = {} }),
        .id = fd(13, .{ .Varint = .Simple }),
        .room_id = fd(8, .{ .Varint = .Simple }),
        .cell_status = fd(15, .{ .Varint = .Simple }),
        .special_type = fd(2, .{ .Varint = .Simple }),
        .is_unlocked = fd(7, .{ .Varint = .Simple }),
        .unlock = fd(1, .{ .Varint = .Simple }),
        .mark_type = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CellInfo = struct {
    HDHIONGOFID: u32 = 0,
    NGHPPEGBPAO: u32 = 0,
    cell_list: ArrayList(ChessRogueCell),
    HLAMICLGPEE: u32 = 0,
    BMAJDILBPOB: u32 = 0,

    pub const _desc_table = .{
        .HDHIONGOFID = fd(5, .{ .Varint = .Simple }),
        .NGHPPEGBPAO = fd(14, .{ .Varint = .Simple }),
        .cell_list = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .HLAMICLGPEE = fd(13, .{ .Varint = .Simple }),
        .BMAJDILBPOB = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueHistoryCellInfo = struct {
    room_id: u32 = 0,
    cell_id: u32 = 0,

    pub const _desc_table = .{
        .room_id = fd(4, .{ .Varint = .Simple }),
        .cell_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KKCKGEOJFKE = struct {
    BOHDMINEJNO: ?EENDHPKPFLP = null,
    BDMLGEPNDFM: u32 = 0,

    pub const _desc_table = .{
        .BOHDMINEJNO = fd(12, .{ .SubMessage = {} }),
        .BDMLGEPNDFM = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueAreaInfo = struct {
    cur_board_id: u32 = 0,
    cell: ?CellInfo = null,
    cur_id: u32 = 0,
    CFEKAOLKHJG: ?KKCKGEOJFKE = null,
    layer_status: ChessRogueBoardCellStatus = @enumFromInt(0),
    history_cell: ArrayList(ChessRogueHistoryCellInfo),
    allow_select_cell_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .cur_board_id = fd(1, .{ .Varint = .Simple }),
        .cell = fd(10, .{ .SubMessage = {} }),
        .cur_id = fd(11, .{ .Varint = .Simple }),
        .CFEKAOLKHJG = fd(7, .{ .SubMessage = {} }),
        .layer_status = fd(15, .{ .Varint = .Simple }),
        .history_cell = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .allow_select_cell_id_list = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueLevelInfo = struct {
    OCDNMHNNKGM: i32 = 0,
    MHOIJAFGECP: u32 = 0,
    action_point: i32 = 0,
    id: u32 = 0,
    level_status: u32 = 0,
    area_id_list: ArrayList(u32),
    area_info: ?ChessRogueAreaInfo = null,
    layer_id: u32 = 0,

    pub const _desc_table = .{
        .OCDNMHNNKGM = fd(8, .{ .Varint = .Simple }),
        .MHOIJAFGECP = fd(12, .{ .Varint = .Simple }),
        .action_point = fd(9, .{ .Varint = .Simple }),
        .id = fd(6, .{ .Varint = .Simple }),
        .level_status = fd(13, .{ .Varint = .Simple }),
        .area_id_list = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .area_info = fd(2, .{ .SubMessage = {} }),
        .layer_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueQueryAeon = struct {
    aeon_id: u32 = 0,
    MAMHOJMFJOF: u32 = 0,

    pub const _desc_table = .{
        .aeon_id = fd(9, .{ .Varint = .Simple }),
        .MAMHOJMFJOF = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueQueryAeonInfo = struct {
    aeon_list: ArrayList(ChessRogueQueryAeon),

    pub const _desc_table = .{
        .aeon_list = fd(8, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueAeonInfo = struct {
    aeon_id_list: ArrayList(u32),
    chess_aeon_info: ?ChessRogueQueryAeonInfo = null,
    ICJABPGMACJ: i32 = 0,
    game_aeon_id: u32 = 0,
    BOHDMINEJNO: ?EENDHPKPFLP = null,

    pub const _desc_table = .{
        .aeon_id_list = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
        .chess_aeon_info = fd(3, .{ .SubMessage = {} }),
        .ICJABPGMACJ = fd(2, .{ .Varint = .Simple }),
        .game_aeon_id = fd(5, .{ .Varint = .Simple }),
        .BOHDMINEJNO = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueLineupAvatarInfo = struct {
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .avatar_id = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueLineupInfo = struct {
    chess_avatar_list: ArrayList(ChessRogueLineupAvatarInfo),
    revive_info: ?RogueAvatarReviveCost = null,

    pub const _desc_table = .{
        .chess_avatar_list = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .revive_info = fd(13, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HKMLALBDPGO = struct {
    LHCBBGIMMDG: u32 = 0,
    BOONPDEOBLA: ArrayList(u32),
    FAHIHDJFOHM: u32 = 0,
    FJKGKAEKBKJ: bool = false,

    pub const _desc_table = .{
        .LHCBBGIMMDG = fd(13, .{ .Varint = .Simple }),
        .BOONPDEOBLA = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
        .FAHIHDJFOHM = fd(10, .{ .Varint = .Simple }),
        .FJKGKAEKBKJ = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueNousValueInfo = struct {
    nous_value: i32 = 0,

    pub const _desc_table = .{
        .nous_value = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueCurrentDifficultyInfo = struct {
    difficulty_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .difficulty_id_list = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueGameInfo = struct {
    story_info: ?HKMLALBDPGO = null,
    level_info: ?ChessRogueLevelInfo = null,
    rogue_buff_info: ?ChessRogueBuffInfo = null,
    nous_value_info: ?ChessRogueNousValueInfo = null,
    rogue_sub_mode: u32 = 0,
    OPAKJJMAGPH: ?IMNPEAJAJJO = null,
    rogue_difficulty_info: ?ChessRogueCurrentDifficultyInfo = null,
    rogue_lineup_info: ?ChessRogueLineupInfo = null,
    rogue_dice_info: ?ChessRogueDiceInfo = null,
    rogue_current_game_info: ArrayList(RogueGameInfo),
    game_miracle_info: ?ChessRogueMiracleInfo = null,
    rogue_aeon_info: ?ChessRogueAeonInfo = null,
    virtual_item_info: ?RogueVirtualItem = null,
    pending_action: ?RogueCommonPendingAction = null,

    pub const _desc_table = .{
        .story_info = fd(9, .{ .SubMessage = {} }),
        .level_info = fd(5, .{ .SubMessage = {} }),
        .rogue_buff_info = fd(15, .{ .SubMessage = {} }),
        .nous_value_info = fd(2, .{ .SubMessage = {} }),
        .rogue_sub_mode = fd(12, .{ .Varint = .Simple }),
        .OPAKJJMAGPH = fd(7, .{ .SubMessage = {} }),
        .rogue_difficulty_info = fd(1389, .{ .SubMessage = {} }),
        .rogue_lineup_info = fd(10, .{ .SubMessage = {} }),
        .rogue_dice_info = fd(14, .{ .SubMessage = {} }),
        .rogue_current_game_info = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .game_miracle_info = fd(11, .{ .SubMessage = {} }),
        .rogue_aeon_info = fd(4, .{ .SubMessage = {} }),
        .virtual_item_info = fd(3, .{ .SubMessage = {} }),
        .pending_action = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueQueryInfo = struct {
    explored_area_id_list: ArrayList(u32),
    talent_info_list: ?ChessRogueTalentInfo = null,
    chess_aeon_info: ?ChessRogueQueryAeonInfo = null,
    query_dice_info: ?ChessRogueQueryDiceInfo = null,
    rogue_difficulty_info: ?ChessRogueQueryDiffcultyInfo = null,
    area_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .explored_area_id_list = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .talent_info_list = fd(4, .{ .SubMessage = {} }),
        .chess_aeon_info = fd(11, .{ .SubMessage = {} }),
        .query_dice_info = fd(6, .{ .SubMessage = {} }),
        .rogue_difficulty_info = fd(2, .{ .SubMessage = {} }),
        .area_id_list = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueCurrentInfo = struct {
    rogue_sub_mode: u32 = 0,
    rogue_current_game_info: ArrayList(RogueGameInfo),

    pub const _desc_table = .{
        .rogue_sub_mode = fd(9, .{ .Varint = .Simple }),
        .rogue_current_game_info = fd(11, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueGetInfo = struct {
    query_dice_info: ?ChessRogueQueryDiceInfo = null,
    talent_info_list: ?ChessRogueTalentInfo = null,
    explored_area_id_list: ArrayList(u32),
    chess_aeon_info: ?ChessRogueQueryAeonInfo = null,
    rogue_difficulty_info: ?ChessRogueQueryDiffcultyInfo = null,
    area_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .query_dice_info = fd(11, .{ .SubMessage = {} }),
        .talent_info_list = fd(14, .{ .SubMessage = {} }),
        .explored_area_id_list = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
        .chess_aeon_info = fd(5, .{ .SubMessage = {} }),
        .rogue_difficulty_info = fd(9, .{ .SubMessage = {} }),
        .area_id_list = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueFinishInfo = struct {
    OPOIMHHAFJO: u32 = 0,
    BGPECKFDELD: ?ItemList = null,
    DMBDNAICPFB: u32 = 0,
    ABEHKCJHCEH: u32 = 0,
    rogue_buff_info: ?ChessRogueBuff = null,
    score_id: u32 = 0,
    IPOJMMGOOPJ: u32 = 0,
    OJGGMOOPGIL: ArrayList(u32),
    OPAKJJMAGPH: ?IMNPEAJAJJO = null,
    EGPCIBJIAJD: u32 = 0,
    rogue_lineup: ?LineupInfo = null,
    PLBCDIAADKD: u32 = 0,
    rogue_sub_mode: u32 = 0,
    BLBBOKOGFDA: u32 = 0,
    game_miracle_info: ?ChessRogueMiracle = null,
    is_finish: bool = false,
    chess_rogue_main_story_id: u32 = 0,
    quit_reason: ChessRogueQuitReason = @enumFromInt(0),
    difficulty_level: u32 = 0,

    pub const _desc_table = .{
        .OPOIMHHAFJO = fd(246, .{ .Varint = .Simple }),
        .BGPECKFDELD = fd(7, .{ .SubMessage = {} }),
        .DMBDNAICPFB = fd(12, .{ .Varint = .Simple }),
        .ABEHKCJHCEH = fd(377, .{ .Varint = .Simple }),
        .rogue_buff_info = fd(6, .{ .SubMessage = {} }),
        .score_id = fd(1118, .{ .Varint = .Simple }),
        .IPOJMMGOOPJ = fd(15, .{ .Varint = .Simple }),
        .OJGGMOOPGIL = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .OPAKJJMAGPH = fd(1506, .{ .SubMessage = {} }),
        .EGPCIBJIAJD = fd(1162, .{ .Varint = .Simple }),
        .rogue_lineup = fd(3, .{ .SubMessage = {} }),
        .PLBCDIAADKD = fd(4, .{ .Varint = .Simple }),
        .rogue_sub_mode = fd(1415, .{ .Varint = .Simple }),
        .BLBBOKOGFDA = fd(13, .{ .Varint = .Simple }),
        .game_miracle_info = fd(11, .{ .SubMessage = {} }),
        .is_finish = fd(2, .{ .Varint = .Simple }),
        .chess_rogue_main_story_id = fd(8, .{ .Varint = .Simple }),
        .quit_reason = fd(14, .{ .Varint = .Simple }),
        .difficulty_level = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OJLEEFJELAP = struct {
    cell_list: ArrayList(ChessRogueCell),
    HBCMGIICJMK: u32 = 0,

    pub const _desc_table = .{
        .cell_list = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .HBCMGIICJMK = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LAHJPFOOHEB = struct {
    chess_rogue_main_story_id: u32 = 0,
    KENPCKFONOK: u32 = 0,

    pub const _desc_table = .{
        .chess_rogue_main_story_id = fd(12, .{ .Varint = .Simple }),
        .KENPCKFONOK = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DIPMFOMGCGL = struct {
    FAHIHDJFOHM: u32 = 0,
    CFIBPMKAINO: u32 = 0,

    pub const _desc_table = .{
        .FAHIHDJFOHM = fd(6, .{ .Varint = .Simple }),
        .CFIBPMKAINO = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueQueryCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueQueryScRsp = struct {
    BOIKABLFKEC: ?ChessRogueFinishInfo = null,
    retcode: u32 = 0,
    query_info: ?ChessRogueQueryInfo = null,
    rogue_get_info: ?ChessRogueGetInfo = null,
    HNDLHICDNPC: ?ChessRogueGameInfo = null,

    pub const _desc_table = .{
        .BOIKABLFKEC = fd(12, .{ .SubMessage = {} }),
        .retcode = fd(8, .{ .Varint = .Simple }),
        .query_info = fd(1, .{ .SubMessage = {} }),
        .rogue_get_info = fd(5, .{ .SubMessage = {} }),
        .HNDLHICDNPC = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueEnterCellCsReq = struct {
    FEMGPNLFAGC: u32 = 0,
    cell_id: u32 = 0,

    pub const _desc_table = .{
        .FEMGPNLFAGC = fd(11, .{ .Varint = .Simple }),
        .cell_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueEnterCellScRsp = struct {
    HNDLHICDNPC: ?ChessRogueGameInfo = null,
    stage_info: ?ChessRogueInfo = null,
    retcode: u32 = 0,
    cell_id: u32 = 0,

    pub const _desc_table = .{
        .HNDLHICDNPC = fd(7, .{ .SubMessage = {} }),
        .stage_info = fd(5, .{ .SubMessage = {} }),
        .retcode = fd(12, .{ .Varint = .Simple }),
        .cell_id = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueEnterCsReq = struct {
    id: u32 = 0,

    pub const _desc_table = .{
        .id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueEnterScRsp = struct {
    retcode: u32 = 0,
    HNDLHICDNPC: ?ChessRogueGameInfo = null,
    stage_info: ?ChessRogueInfo = null,
    id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
        .HNDLHICDNPC = fd(11, .{ .SubMessage = {} }),
        .stage_info = fd(4, .{ .SubMessage = {} }),
        .id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueLeaveCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueLeaveScRsp = struct {
    query_info: ?ChessRogueQueryInfo = null,
    rogue_get_info: ?ChessRogueGetInfo = null,
    stage_info: ?ChessRogueInfo = null,
    retcode: u32 = 0,
    rogue_aeon_info: ?ChessRogueAeonInfo = null,

    pub const _desc_table = .{
        .query_info = fd(7, .{ .SubMessage = {} }),
        .rogue_get_info = fd(13, .{ .SubMessage = {} }),
        .stage_info = fd(3, .{ .SubMessage = {} }),
        .retcode = fd(5, .{ .Varint = .Simple }),
        .rogue_aeon_info = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueGiveUpCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueGiveUpScRsp = struct {
    query_info: ?ChessRogueQueryInfo = null,
    BOIKABLFKEC: ?ChessRogueFinishInfo = null,
    stage_info: ?ChessRogueInfo = null,
    rogue_get_info: ?ChessRogueGetInfo = null,
    rogue_aeon_info: ?ChessRogueAeonInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .query_info = fd(8, .{ .SubMessage = {} }),
        .BOIKABLFKEC = fd(12, .{ .SubMessage = {} }),
        .stage_info = fd(5, .{ .SubMessage = {} }),
        .rogue_get_info = fd(7, .{ .SubMessage = {} }),
        .rogue_aeon_info = fd(13, .{ .SubMessage = {} }),
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueStartCsReq = struct {
    base_avatar_id_list: ArrayList(u32),
    HJGNDHLMMIB: ArrayList(u32),
    branch_id: u32 = 0,
    aeon_id: u32 = 0,
    trial_avatar_id_list: ArrayList(u32),
    start_difficulty_id_list: ArrayList(u32),
    id: u32 = 0,

    pub const _desc_table = .{
        .base_avatar_id_list = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
        .HJGNDHLMMIB = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .branch_id = fd(5, .{ .Varint = .Simple }),
        .aeon_id = fd(8, .{ .Varint = .Simple }),
        .trial_avatar_id_list = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
        .start_difficulty_id_list = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueStartScRsp = struct {
    DBDGAHBLGBB: ?OJLEEFJELAP = null,
    HNDLHICDNPC: ?ChessRogueGameInfo = null,
    retcode: u32 = 0,
    stage_info: ?ChessRogueInfo = null,

    pub const _desc_table = .{
        .DBDGAHBLGBB = fd(2, .{ .SubMessage = {} }),
        .HNDLHICDNPC = fd(12, .{ .SubMessage = {} }),
        .retcode = fd(10, .{ .Varint = .Simple }),
        .stage_info = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueQueryAeonDimensionsCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueQueryAeonDimensionsScRsp = struct {
    HNDLHICDNPC: ?ChessRogueQueryAeonInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .HNDLHICDNPC = fd(1, .{ .SubMessage = {} }),
        .retcode = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueChangeyAeonDimensionNotify = struct {
    HNDLHICDNPC: ?ChessRogueQueryAeon = null,

    pub const _desc_table = .{
        .HNDLHICDNPC = fd(5, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueSelectCellCsReq = struct {
    cell_id: u32 = 0,
    FEMGPNLFAGC: u32 = 0,

    pub const _desc_table = .{
        .cell_id = fd(5, .{ .Varint = .Simple }),
        .FEMGPNLFAGC = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueSelectCellScRsp = struct {
    FEMGPNLFAGC: u32 = 0,
    cell_id: u32 = 0,
    retcode: u32 = 0,
    KAJAFNPEKAJ: ?OIAOLBGOAAG = null,

    pub const _desc_table = .{
        .FEMGPNLFAGC = fd(10, .{ .Varint = .Simple }),
        .cell_id = fd(1, .{ .Varint = .Simple }),
        .retcode = fd(9, .{ .Varint = .Simple }),
        .KAJAFNPEKAJ = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueLayerAccountInfoNotify = struct {
    BOIKABLFKEC: ?ChessRogueFinishInfo = null,
    difficulty_level: u32 = 0,
    layer_id: u32 = 0,

    pub const _desc_table = .{
        .BOIKABLFKEC = fd(3, .{ .SubMessage = {} }),
        .difficulty_level = fd(11, .{ .Varint = .Simple }),
        .layer_id = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetChessRogueBuffEnhanceInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetChessRogueBuffEnhanceInfoScRsp = struct {
    retcode: u32 = 0,
    FHLOMGDANJM: ?ChessRogueBuffEnhanceList = null,

    pub const _desc_table = .{
        .retcode = fd(6, .{ .Varint = .Simple }),
        .FHLOMGDANJM = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnhanceChessRogueBuffCsReq = struct {
    maze_buff_id: u32 = 0,

    pub const _desc_table = .{
        .maze_buff_id = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnhanceChessRogueBuffScRsp = struct {
    FGEFCEFKHMH: bool = false,
    ANAGCODDMOM: ?RogueCommonBuff = null,
    retcode: u32 = 0,
    FHLOMGDANJM: ?ChessRogueBuffEnhanceList = null,

    pub const _desc_table = .{
        .FGEFCEFKHMH = fd(11, .{ .Varint = .Simple }),
        .ANAGCODDMOM = fd(8, .{ .SubMessage = {} }),
        .retcode = fd(1, .{ .Varint = .Simple }),
        .FHLOMGDANJM = fd(4, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRoguePickAvatarCsReq = struct {
    base_avatar_id_list: ArrayList(u32),
    prop_entity_id: u32 = 0,

    pub const _desc_table = .{
        .base_avatar_id_list = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        .prop_entity_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRoguePickAvatarScRsp = struct {
    base_avatar_id_list: ArrayList(u32),
    retcode: u32 = 0,
    rogue_lineup_info: ?ChessRogueLineupInfo = null,

    pub const _desc_table = .{
        .base_avatar_id_list = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(3, .{ .Varint = .Simple }),
        .rogue_lineup_info = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueReviveAvatarCsReq = struct {
    interacted_prop_entity_id: u32 = 0,
    base_avatar_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .interacted_prop_entity_id = fd(7, .{ .Varint = .Simple }),
        .base_avatar_id_list = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueReviveAvatarScRsp = struct {
    base_avatar_id_list: ArrayList(u32),
    retcode: u32 = 0,
    revive_info: ?RogueAvatarReviveCost = null,

    pub const _desc_table = .{
        .base_avatar_id_list = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(15, .{ .Varint = .Simple }),
        .revive_info = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueUpdateReviveInfoScNotify = struct {
    revive_info: ?RogueAvatarReviveCost = null,

    pub const _desc_table = .{
        .revive_info = fd(7, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueUpdateMoneyInfoScNotify = struct {
    virtual_item_info: ?RogueVirtualItem = null,

    pub const _desc_table = .{
        .virtual_item_info = fd(5, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueUpdateDiceInfoScNotify = struct {
    rogue_dice_info: ?ChessRogueDiceInfo = null,

    pub const _desc_table = .{
        .rogue_dice_info = fd(7, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueUpdateLevelBaseInfoScNotify = struct {
    level_status: ChessRogueLevelStatus = @enumFromInt(0),
    reason: ChessRogueUpdateLevelStatus = @enumFromInt(0),

    pub const _desc_table = .{
        .level_status = fd(11, .{ .Varint = .Simple }),
        .reason = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueUpdateAllowedSelectCellScNotify = struct {
    EAMGAHFFECO: u32 = 0,
    allow_select_cell_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .EAMGAHFFECO = fd(14, .{ .Varint = .Simple }),
        .allow_select_cell_id_list = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueUpdateBoardScNotify = struct {
    DHDKNMFMGBC: ?CellInfo = null,

    pub const _desc_table = .{
        .DHDKNMFMGBC = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueUpdateAeonModifierValueScNotify = struct {
    aeon_id: u32 = 0,
    ICJABPGMACJ: i32 = 0,

    pub const _desc_table = .{
        .aeon_id = fd(13, .{ .Varint = .Simple }),
        .ICJABPGMACJ = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueUpdateDicePassiveAccumulateValueScNotify = struct {
    CBLAEMEMMIG: i32 = 0,

    pub const _desc_table = .{
        .CBLAEMEMMIG = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueSkipTeachingLevelCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueSkipTeachingLevelScRsp = struct {
    retcode: u32 = 0,
    NDEEFFOOFLG: ?ItemList = null,

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
        .NDEEFFOOFLG = fd(10, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueUpdateUnlockLevelScNotify = struct {
    area_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .area_id_list = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueEnterNextLayerCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueEnterNextLayerScRsp = struct {
    stage_info: ?ChessRogueInfo = null,
    DBDGAHBLGBB: ?OJLEEFJELAP = null,
    rogue_game_info: ?ChessRogueGameInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .stage_info = fd(15, .{ .SubMessage = {} }),
        .DBDGAHBLGBB = fd(3, .{ .SubMessage = {} }),
        .rogue_game_info = fd(2, .{ .SubMessage = {} }),
        .retcode = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueReRollDiceCsReq = struct {
    KCHFJDAJECM: u32 = 0,

    pub const _desc_table = .{
        .KCHFJDAJECM = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueReRollDiceScRsp = struct {
    rogue_dice_info: ?ChessRogueDiceInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .rogue_dice_info = fd(12, .{ .SubMessage = {} }),
        .retcode = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueConfirmRollCsReq = struct {
    KCHFJDAJECM: u32 = 0,

    pub const _desc_table = .{
        .KCHFJDAJECM = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueConfirmRollScRsp = struct {
    retcode: u32 = 0,
    rogue_dice_info: ?ChessRogueDiceInfo = null,

    pub const _desc_table = .{
        .retcode = fd(3, .{ .Varint = .Simple }),
        .rogue_dice_info = fd(10, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueCheatRollCsReq = struct {
    dice_surface_id: u32 = 0,
    KCHFJDAJECM: u32 = 0,

    pub const _desc_table = .{
        .dice_surface_id = fd(3, .{ .Varint = .Simple }),
        .KCHFJDAJECM = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueCheatRollScRsp = struct {
    NLJOLDMCGAI: u32 = 0,
    dice_surface_id: u32 = 0,
    retcode: u32 = 0,
    rogue_dice_info: ?ChessRogueDiceInfo = null,

    pub const _desc_table = .{
        .NLJOLDMCGAI = fd(1, .{ .Varint = .Simple }),
        .dice_surface_id = fd(6, .{ .Varint = .Simple }),
        .retcode = fd(14, .{ .Varint = .Simple }),
        .rogue_dice_info = fd(13, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueGiveUpRollCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueGiveUpRollScRsp = struct {
    retcode: u32 = 0,
    NKMJHEJCOLP: ?ItemList = null,
    rogue_dice_info: ?ChessRogueDiceInfo = null,

    pub const _desc_table = .{
        .retcode = fd(10, .{ .Varint = .Simple }),
        .NKMJHEJCOLP = fd(6, .{ .SubMessage = {} }),
        .rogue_dice_info = fd(9, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueQuitCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueQuitScRsp = struct {
    level_info: ?ChessRogueLevelInfo = null,
    rogue_aeon_info: ?ChessRogueAeonInfo = null,
    stage_info: ?ChessRogueInfo = null,
    BOIKABLFKEC: ?ChessRogueFinishInfo = null,
    retcode: u32 = 0,
    query_info: ?ChessRogueQueryInfo = null,
    rogue_get_info: ?ChessRogueGetInfo = null,

    pub const _desc_table = .{
        .level_info = fd(2, .{ .SubMessage = {} }),
        .rogue_aeon_info = fd(8, .{ .SubMessage = {} }),
        .stage_info = fd(9, .{ .SubMessage = {} }),
        .BOIKABLFKEC = fd(1, .{ .SubMessage = {} }),
        .retcode = fd(3, .{ .Varint = .Simple }),
        .query_info = fd(12, .{ .SubMessage = {} }),
        .rogue_get_info = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueCellUpdateNotify = struct {
    EAMGAHFFECO: u32 = 0,
    DNIIBBHLLNB: RogueModifierSourceType = @enumFromInt(0),
    cell_list: ArrayList(ChessRogueCell),
    reason: ChessRogueCellUpdateReason = @enumFromInt(0),

    pub const _desc_table = .{
        .EAMGAHFFECO = fd(8, .{ .Varint = .Simple }),
        .DNIIBBHLLNB = fd(5, .{ .Varint = .Simple }),
        .cell_list = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .reason = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueQuestFinishNotify = struct {
    NNJCCFEINDO: u32 = 0,
    quest_id: u32 = 0,

    pub const _desc_table = .{
        .NNJCCFEINDO = fd(8, .{ .Varint = .Simple }),
        .quest_id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetChessRogueStoryInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetChessRogueStoryInfoScRsp = struct {
    IDGIAHOPGAJ: ArrayList(LAHJPFOOHEB),
    retcode: u32 = 0,
    MNHMEKKHKNA: ArrayList(DIPMFOMGCGL),

    pub const _desc_table = .{
        .IDGIAHOPGAJ = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(14, .{ .Varint = .Simple }),
        .MNHMEKKHKNA = fd(4, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SelectChessRogueSubStoryCsReq = struct {
    rogue_dialogue_event_id: u32 = 0,
    FAHIHDJFOHM: u32 = 0,
    IFIIJGNGOGP: u32 = 0,
    IKMNAMKJAFA: u32 = 0,

    pub const _desc_table = .{
        .rogue_dialogue_event_id = fd(2, .{ .Varint = .Simple }),
        .FAHIHDJFOHM = fd(10, .{ .Varint = .Simple }),
        .IFIIJGNGOGP = fd(6, .{ .Varint = .Simple }),
        .IKMNAMKJAFA = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SelectChessRogueSubStoryScRsp = struct {
    FAHIHDJFOHM: u32 = 0,
    retcode: u32 = 0,
    IFIIJGNGOGP: u32 = 0,
    rogue_dialogue_event_id: u32 = 0,
    IKMNAMKJAFA: u32 = 0,

    pub const _desc_table = .{
        .FAHIHDJFOHM = fd(15, .{ .Varint = .Simple }),
        .retcode = fd(6, .{ .Varint = .Simple }),
        .IFIIJGNGOGP = fd(13, .{ .Varint = .Simple }),
        .rogue_dialogue_event_id = fd(2, .{ .Varint = .Simple }),
        .IKMNAMKJAFA = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishChessRogueSubStoryCsReq = struct {
    IKMNAMKJAFA: u32 = 0,

    pub const _desc_table = .{
        .IKMNAMKJAFA = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishChessRogueSubStoryScRsp = struct {
    retcode: u32 = 0,
    chess_rogue_main_story_id: u32 = 0,
    IKMNAMKJAFA: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(14, .{ .Varint = .Simple }),
        .chess_rogue_main_story_id = fd(1, .{ .Varint = .Simple }),
        .IKMNAMKJAFA = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueUpdateActionPointScNotify = struct {
    action_point: i32 = 0,

    pub const _desc_table = .{
        .action_point = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterChessRogueAeonRoomCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterChessRogueAeonRoomScRsp = struct {
    stage_info: ?ChessRogueInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .stage_info = fd(3, .{ .SubMessage = {} }),
        .retcode = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetChessRogueStoryAeonTalkInfoCsReq = struct {
    talk_dialogue_id: u32 = 0,

    pub const _desc_table = .{
        .talk_dialogue_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetChessRogueStoryAeonTalkInfoScRsp = struct {
    KJCBNEINDHL: ArrayList(KJCBNEINDHLEntry),
    retcode: u32 = 0,
    talk_dialogue_id: u32 = 0,

    pub const _desc_table = .{
        .KJCBNEINDHL = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(2, .{ .Varint = .Simple }),
        .talk_dialogue_id = fd(1, .{ .Varint = .Simple }),
    };

    pub const KJCBNEINDHLEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncChessRogueMainStoryFinishScNotify = struct {
    KENPCKFONOK: u32 = 0,
    chess_rogue_main_story_id: u32 = 0,

    pub const _desc_table = .{
        .KENPCKFONOK = fd(6, .{ .Varint = .Simple }),
        .chess_rogue_main_story_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncChessRogueNousValueScNotify = struct {
    nous_value_info: ?ChessRogueNousValueInfo = null,

    pub const _desc_table = .{
        .nous_value_info = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GBEEJNBEBEP = struct {
    status: ChessRogueNousMainStoryStatus = @enumFromInt(0),
    chess_rogue_main_story_id: u32 = 0,

    pub const _desc_table = .{
        .status = fd(13, .{ .Varint = .Simple }),
        .chess_rogue_main_story_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DIECDDGEBNB = struct {
    IKMNAMKJAFA: u32 = 0,

    pub const _desc_table = .{
        .IKMNAMKJAFA = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetChessRogueNousStoryInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetChessRogueNousStoryInfoScRsp = struct {
    IDGIAHOPGAJ: ArrayList(GBEEJNBEBEP),
    MNHMEKKHKNA: ArrayList(DIECDDGEBNB),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .IDGIAHOPGAJ = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .MNHMEKKHKNA = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncChessRogueNousSubStoryScNotify = struct {
    IKMNAMKJAFA: u32 = 0,

    pub const _desc_table = .{
        .IKMNAMKJAFA = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncChessRogueNousMainStoryScNotify = struct {
    IDGIAHOPGAJ: ArrayList(GBEEJNBEBEP),

    pub const _desc_table = .{
        .IDGIAHOPGAJ = fd(11, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IMNPEAJAJJO = struct {
    ILMOOKBJHHC: ArrayList(u32),
    EMLLECGEPCK: ArrayList(u32),
    OBLHBOEOLAF: ArrayList(u32),
    FFHEEIDBHEA: bool = false,
    IKMNAMKJAFA: u32 = 0,
    FFMDBDEHHEG: u32 = 0,
    FJKGKAEKBKJ: bool = false,
    chess_rogue_main_story_id: u32 = 0,

    pub const _desc_table = .{
        .ILMOOKBJHHC = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .EMLLECGEPCK = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
        .OBLHBOEOLAF = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .FFHEEIDBHEA = fd(1, .{ .Varint = .Simple }),
        .IKMNAMKJAFA = fd(15, .{ .Varint = .Simple }),
        .FFMDBDEHHEG = fd(12, .{ .Varint = .Simple }),
        .FJKGKAEKBKJ = fd(10, .{ .Varint = .Simple }),
        .chess_rogue_main_story_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueDiceSurfaceInfo = struct {
    dice_slot_id: u32 = 0,
    dice_surface_id: u32 = 0,

    pub const _desc_table = .{
        .dice_slot_id = fd(12, .{ .Varint = .Simple }),
        .dice_surface_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueDice = struct {
    surface_list: ArrayList(ChessRogueDiceSurfaceInfo),
    surface_id: u32 = 0,
    branch_id: u32 = 0,
    slot_id: u32 = 0,

    pub const _desc_table = .{
        .surface_list = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .surface_id = fd(12, .{ .Varint = .Simple }),
        .branch_id = fd(9, .{ .Varint = .Simple }),
        .slot_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueQueryDiceInfo = struct {
    NBCMAKNLPHG: ArrayList(NBCMAKNLPHGEntry),
    dice_phase: ChessRogueNousDicePhase = @enumFromInt(0),
    surface_id_list: ArrayList(u32),
    dice_list: ArrayList(ChessRogueDice),

    pub const _desc_table = .{
        .NBCMAKNLPHG = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .dice_phase = fd(4, .{ .Varint = .Simple }),
        .surface_id_list = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
        .dice_list = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const NBCMAKNLPHGEntry = struct {
        key: u32 = 0,
        value: bool = false,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueTalentInfo = struct {
    POFMJBLMBJI: u32 = 0,
    rogue_talent_info_list: ?RogueTalentInfoList = null,

    pub const _desc_table = .{
        .POFMJBLMBJI = fd(15, .{ .Varint = .Simple }),
        .rogue_talent_info_list = fd(9, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueQueryDiffcultyInfo = struct {
    query_difficulty_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .query_difficulty_id_list = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueNousEditDiceCsReq = struct {
    query_dice_info: ?ChessRogueDice = null,

    pub const _desc_table = .{
        .query_dice_info = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueNousEditDiceScRsp = struct {
    retcode: u32 = 0,
    query_dice_info: ?ChessRogueDice = null,

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
        .query_dice_info = fd(11, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueNousDiceUpdateNotify = struct {
    MBIBKHKKEFB: ?ChessRogueQueryDiceInfo = null,

    pub const _desc_table = .{
        .MBIBKHKKEFB = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueNousDiceSurfaceUnlockNotify = struct {
    CAPHIDDHLFG: u32 = 0,

    pub const _desc_table = .{
        .CAPHIDDHLFG = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueNousGetRogueTalentInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueNousGetRogueTalentInfoScRsp = struct {
    POFMJBLMBJI: u32 = 0,
    retcode: u32 = 0,
    talent_info_list: ?RogueTalentInfoList = null,

    pub const _desc_table = .{
        .POFMJBLMBJI = fd(4, .{ .Varint = .Simple }),
        .retcode = fd(14, .{ .Varint = .Simple }),
        .talent_info_list = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueNousEnableRogueTalentCsReq = struct {
    talent_id: u32 = 0,

    pub const _desc_table = .{
        .talent_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueNousEnableRogueTalentScRsp = struct {
    POFMJBLMBJI: u32 = 0,
    talent_info_list: ?RogueTalentInfoList = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .POFMJBLMBJI = fd(4, .{ .Varint = .Simple }),
        .talent_info_list = fd(12, .{ .SubMessage = {} }),
        .retcode = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AACOFIKDCPL = struct {
    progress: u32 = 0,
    IENPELBPHDP: u32 = 0,

    pub const _desc_table = .{
        .progress = fd(7, .{ .Varint = .Simple }),
        .IENPELBPHDP = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ODNNKBIMEFH = struct {
    KEEDPLPACLP: ArrayList(AACOFIKDCPL),

    pub const _desc_table = .{
        .KEEDPLPACLP = fd(2, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EADGANMJIPK = struct {
    IBPFGEBMILB: ArrayList(u32),

    pub const _desc_table = .{
        .IBPFGEBMILB = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JCNJDFFCLDG = struct {
    LKEBLPIJMGB: i32 = 0,
    KEEDPLPACLP: ?ODNNKBIMEFH = null,
    id: u32 = 0,
    OOPKIKMBBHH: ArrayList(u32),
    JNBOONPDOCE: bool = false,
    hp: i32 = 0,

    pub const _desc_table = .{
        .LKEBLPIJMGB = fd(13, .{ .Varint = .Simple }),
        .KEEDPLPACLP = fd(8, .{ .SubMessage = {} }),
        .id = fd(1, .{ .Varint = .Simple }),
        .OOPKIKMBBHH = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .JNBOONPDOCE = fd(11, .{ .Varint = .Simple }),
        .hp = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MPJDIBCCOHF = struct {
    MIAIOPGIPHH: u32 = 0,
    OBCPGOBAEDE: ArrayList(u32),

    pub const _desc_table = .{
        .MIAIOPGIPHH = fd(11, .{ .Varint = .Simple }),
        .OBCPGOBAEDE = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DIFPDPLCIGD = struct {
    JFPNMOONLNJ: u32 = 0,
    GONEAKBDGEK: u32 = 0,

    pub const _desc_table = .{
        .JFPNMOONLNJ = fd(6, .{ .Varint = .Simple }),
        .GONEAKBDGEK = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JMAANMPANHM = struct {
    CLPMIBDFPJC: u32 = 0,
    NHJALPDBOGN: u32 = 0,
    FPAIBLDAKLI: u32 = 0,
    index: u32 = 0,
    NOEIMMHCKPM: u32 = 0,
    attack: i32 = 0,
    hp: i32 = 0,
    NKOFFBMHAPI: u32 = 0,

    pub const _desc_table = .{
        .CLPMIBDFPJC = fd(6, .{ .Varint = .Simple }),
        .NHJALPDBOGN = fd(4, .{ .Varint = .Simple }),
        .FPAIBLDAKLI = fd(3, .{ .Varint = .Simple }),
        .index = fd(11, .{ .Varint = .Simple }),
        .NOEIMMHCKPM = fd(9, .{ .Varint = .Simple }),
        .attack = fd(13, .{ .Varint = .Simple }),
        .hp = fd(12, .{ .Varint = .Simple }),
        .NKOFFBMHAPI = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EGDGHFLLMGN = struct {
    total_auto_turns: u32 = 0,
    total_turns: u32 = 0,
    cost_time: u32 = 0,
    total_damage: u32 = 0,
    CFIJIPCHHGO: u32 = 0,
    LCJHGDJDENG: u32 = 0,

    pub const _desc_table = .{
        .total_auto_turns = fd(5, .{ .Varint = .Simple }),
        .total_turns = fd(2, .{ .Varint = .Simple }),
        .cost_time = fd(6, .{ .Varint = .Simple }),
        .total_damage = fd(3, .{ .Varint = .Simple }),
        .CFIJIPCHHGO = fd(13, .{ .Varint = .Simple }),
        .LCJHGDJDENG = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChimeraGetDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChimeraGetDataScRsp = struct {
    KILPNHJBPDB: u32 = 0,
    CJEKJHPIBJL: u32 = 0,
    retcode: u32 = 0,
    KIIMKAEAJAL: ArrayList(JCNJDFFCLDG),
    NCDAOBLMHHP: ArrayList(DIFPDPLCIGD),
    lineup: ?MPJDIBCCOHF = null,
    CPBDBAIDAEH: u32 = 0,
    GBEMDNCKKBA: u32 = 0,
    BBBGKCHNOCK: u32 = 0,
    EAIOJCNLMNG: u32 = 0,
    JFPNMOONLNJ: u32 = 0,
    OLLDKAJOAJD: u32 = 0,
    IJEIOMMFPKA: u32 = 0,
    BBMGIIMECEL: OAPDMKKKEOL = @enumFromInt(0),
    CAGAPLNHABB: u32 = 0,
    MFAFNNCJJNG: ArrayList(u32),
    CJKCNHCLMGD: u32 = 0,
    LFKFOCJFNCJ: u32 = 0,

    pub const _desc_table = .{
        .KILPNHJBPDB = fd(1597, .{ .Varint = .Simple }),
        .CJEKJHPIBJL = fd(1, .{ .Varint = .Simple }),
        .retcode = fd(13, .{ .Varint = .Simple }),
        .KIIMKAEAJAL = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .NCDAOBLMHHP = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .lineup = fd(2, .{ .SubMessage = {} }),
        .CPBDBAIDAEH = fd(134, .{ .Varint = .Simple }),
        .GBEMDNCKKBA = fd(12, .{ .Varint = .Simple }),
        .BBBGKCHNOCK = fd(10, .{ .Varint = .Simple }),
        .EAIOJCNLMNG = fd(3, .{ .Varint = .Simple }),
        .JFPNMOONLNJ = fd(14, .{ .Varint = .Simple }),
        .OLLDKAJOAJD = fd(54, .{ .Varint = .Simple }),
        .IJEIOMMFPKA = fd(4, .{ .Varint = .Simple }),
        .BBMGIIMECEL = fd(7, .{ .Varint = .Simple }),
        .CAGAPLNHABB = fd(518, .{ .Varint = .Simple }),
        .MFAFNNCJJNG = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
        .CJKCNHCLMGD = fd(9, .{ .Varint = .Simple }),
        .LFKFOCJFNCJ = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChimeraSetLineupCsReq = struct {
    lineup: ?MPJDIBCCOHF = null,

    pub const _desc_table = .{
        .lineup = fd(11, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChimeraSetLineupScRsp = struct {
    lineup: ?MPJDIBCCOHF = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .lineup = fd(15, .{ .SubMessage = {} }),
        .retcode = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChimeraFinishRoundCsReq = struct {
    MOLIDIKIFGB: bool = false,
    MLBALJKCMCG: ArrayList(MLBALJKCMCGEntry),
    stt: ?EGDGHFLLMGN = null,
    HGODGDEAAJO: ArrayList(u32),
    BAHHNMLHALJ: ArrayList(BAHHNMLHALJEntry),
    lineup: ?MPJDIBCCOHF = null,
    end_reason: BIAKDFELJFM = @enumFromInt(0),
    HJOEAMDLBPL: u32 = 0,
    OPAMAEIJCOH: ArrayList(JMAANMPANHM),

    pub const _desc_table = .{
        .MOLIDIKIFGB = fd(13, .{ .Varint = .Simple }),
        .MLBALJKCMCG = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .stt = fd(15, .{ .SubMessage = {} }),
        .HGODGDEAAJO = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
        .BAHHNMLHALJ = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .lineup = fd(3, .{ .SubMessage = {} }),
        .end_reason = fd(8, .{ .Varint = .Simple }),
        .HJOEAMDLBPL = fd(6, .{ .Varint = .Simple }),
        .OPAMAEIJCOH = fd(4, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const MLBALJKCMCGEntry = struct {
        key: u32 = 0,
        value: ?ODNNKBIMEFH = null,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const BAHHNMLHALJEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChimeraFinishRoundScRsp = struct {
    MOLIDIKIFGB: bool = false,
    end_reason: BIAKDFELJFM = @enumFromInt(0),
    CJKCNHCLMGD: u32 = 0,
    EAIOJCNLMNG: u32 = 0,
    GHKGCFCLABF: ArrayList(GHKGCFCLABFEntry),
    MFAFNNCJJNG: ArrayList(u32),
    OLLDKAJOAJD: u32 = 0,
    NAHPKPPMDKK: ArrayList(NAHPKPPMDKKEntry),
    JIEIFDOCOHE: bool = false,
    BBMGIIMECEL: OAPDMKKKEOL = @enumFromInt(0),
    retcode: u32 = 0,
    GOIAKPGJLCB: ArrayList(JCNJDFFCLDG),
    JFPNMOONLNJ: u32 = 0,
    NCDAOBLMHHP: ArrayList(DIFPDPLCIGD),
    IJEIOMMFPKA: u32 = 0,

    pub const _desc_table = .{
        .MOLIDIKIFGB = fd(3, .{ .Varint = .Simple }),
        .end_reason = fd(7, .{ .Varint = .Simple }),
        .CJKCNHCLMGD = fd(15, .{ .Varint = .Simple }),
        .EAIOJCNLMNG = fd(2, .{ .Varint = .Simple }),
        .GHKGCFCLABF = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .MFAFNNCJJNG = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
        .OLLDKAJOAJD = fd(9, .{ .Varint = .Simple }),
        .NAHPKPPMDKK = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .JIEIFDOCOHE = fd(5, .{ .Varint = .Simple }),
        .BBMGIIMECEL = fd(8, .{ .Varint = .Simple }),
        .retcode = fd(4, .{ .Varint = .Simple }),
        .GOIAKPGJLCB = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .JFPNMOONLNJ = fd(11, .{ .Varint = .Simple }),
        .NCDAOBLMHHP = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .IJEIOMMFPKA = fd(12, .{ .Varint = .Simple }),
    };

    pub const GHKGCFCLABFEntry = struct {
        key: u32 = 0,
        value: ?EADGANMJIPK = null,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const NAHPKPPMDKKEntry = struct {
        key: u32 = 0,
        value: ?ODNNKBIMEFH = null,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChimeraStartEndlessCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChimeraStartEndlessScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChimeraFinishEndlessRoundCsReq = struct {
    stt: ?EGDGHFLLMGN = null,
    lineup: ?MPJDIBCCOHF = null,
    CPBDBAIDAEH: u32 = 0,
    PAHMAGPFDDJ: bool = false,
    HGODGDEAAJO: ArrayList(u32),
    OPAMAEIJCOH: ArrayList(JMAANMPANHM),

    pub const _desc_table = .{
        .stt = fd(15, .{ .SubMessage = {} }),
        .lineup = fd(11, .{ .SubMessage = {} }),
        .CPBDBAIDAEH = fd(12, .{ .Varint = .Simple }),
        .PAHMAGPFDDJ = fd(9, .{ .Varint = .Simple }),
        .HGODGDEAAJO = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
        .OPAMAEIJCOH = fd(2, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChimeraFinishEndlessRoundScRsp = struct {
    retcode: u32 = 0,
    AEBJNGIMHCJ: u32 = 0,
    GBEMDNCKKBA: u32 = 0,
    CPBDBAIDAEH: u32 = 0,
    LFKFOCJFNCJ: u32 = 0,
    PAHMAGPFDDJ: bool = false,
    IGAGIBNELCK: ArrayList(JCNJDFFCLDG),
    BBBGKCHNOCK: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(15, .{ .Varint = .Simple }),
        .AEBJNGIMHCJ = fd(5, .{ .Varint = .Simple }),
        .GBEMDNCKKBA = fd(10, .{ .Varint = .Simple }),
        .CPBDBAIDAEH = fd(13, .{ .Varint = .Simple }),
        .LFKFOCJFNCJ = fd(11, .{ .Varint = .Simple }),
        .PAHMAGPFDDJ = fd(9, .{ .Varint = .Simple }),
        .IGAGIBNELCK = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .BBBGKCHNOCK = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChimeraQuitEndlessCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChimeraQuitEndlessScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChimeraDoFinalRoundCsReq = struct {
    stt: ?EGDGHFLLMGN = null,
    PAHMAGPFDDJ: bool = false,
    OPAMAEIJCOH: ArrayList(JMAANMPANHM),
    HGODGDEAAJO: ArrayList(u32),
    lineup: ?MPJDIBCCOHF = null,
    CPBDBAIDAEH: u32 = 0,

    pub const _desc_table = .{
        .stt = fd(14, .{ .SubMessage = {} }),
        .PAHMAGPFDDJ = fd(8, .{ .Varint = .Simple }),
        .OPAMAEIJCOH = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .HGODGDEAAJO = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
        .lineup = fd(13, .{ .SubMessage = {} }),
        .CPBDBAIDAEH = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChimeraDoFinalRoundScRsp = struct {
    JFPNMOONLNJ: u32 = 0,
    IGAGIBNELCK: ArrayList(JCNJDFFCLDG),
    CAGAPLNHABB: u32 = 0,
    NCDAOBLMHHP: ArrayList(DIFPDPLCIGD),
    CPBDBAIDAEH: u32 = 0,
    retcode: u32 = 0,
    index: u32 = 0,
    OLLDKAJOAJD: u32 = 0,
    EAIOJCNLMNG: u32 = 0,
    PAHMAGPFDDJ: bool = false,

    pub const _desc_table = .{
        .JFPNMOONLNJ = fd(15, .{ .Varint = .Simple }),
        .IGAGIBNELCK = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .CAGAPLNHABB = fd(2, .{ .Varint = .Simple }),
        .NCDAOBLMHHP = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .CPBDBAIDAEH = fd(14, .{ .Varint = .Simple }),
        .retcode = fd(7, .{ .Varint = .Simple }),
        .index = fd(4, .{ .Varint = .Simple }),
        .OLLDKAJOAJD = fd(11, .{ .Varint = .Simple }),
        .EAIOJCNLMNG = fd(8, .{ .Varint = .Simple }),
        .PAHMAGPFDDJ = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChimeraRoundWorkStartCsReq = struct {
    lineup: ?MPJDIBCCOHF = null,
    MDFEEKIKBMJ: u32 = 0,
    FLGJPHEOPAA: u32 = 0,
    OPAMAEIJCOH: ArrayList(JMAANMPANHM),

    pub const _desc_table = .{
        .lineup = fd(4, .{ .SubMessage = {} }),
        .MDFEEKIKBMJ = fd(13, .{ .Varint = .Simple }),
        .FLGJPHEOPAA = fd(10, .{ .Varint = .Simple }),
        .OPAMAEIJCOH = fd(9, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChimeraRoundWorkStartScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ClockParkGetInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NLLJBBCJIAM = struct {
    ODOGFHENJEP: ArrayList(u32),
    script_id: u32 = 0,

    pub const _desc_table = .{
        .ODOGFHENJEP = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .script_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ClockParkGetInfoScRsp = struct {
    IBJPCOFDLJI: ArrayList(u32),
    EDIAJGCBPFO: u32 = 0,
    BNFHFHEFMEM: ArrayList(NLLJBBCJIAM),
    GFADCAHLKFP: u32 = 0,
    progress: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .IBJPCOFDLJI = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
        .EDIAJGCBPFO = fd(15, .{ .Varint = .Simple }),
        .BNFHFHEFMEM = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .GFADCAHLKFP = fd(3, .{ .Varint = .Simple }),
        .progress = fd(8, .{ .Varint = .Simple }),
        .retcode = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ClockParkUnlockTalentCsReq = struct {
    talent_id: u32 = 0,

    pub const _desc_table = .{
        .talent_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ClockParkUnlockTalentScRsp = struct {
    retcode: u32 = 0,
    talent_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(6, .{ .Varint = .Simple }),
        .talent_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ClockParkStartScriptCsReq = struct {
    JMOJEOALCLO: ArrayList(u32),
    script_id: u32 = 0,

    pub const _desc_table = .{
        .JMOJEOALCLO = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
        .script_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ClockParkStartScriptScRsp = struct {
    script_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .script_id = fd(10, .{ .Varint = .Simple }),
        .retcode = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ClockParkGetOngoingScriptInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LNIHJDAILDJ = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ACCBIGFANOA = struct {
    BJKHPADCLHI: u32 = 0,
    card_id: u32 = 0,
    PNEOOLFLNLK: ArrayList(u32),

    pub const _desc_table = .{
        .BJKHPADCLHI = fd(11, .{ .Varint = .Simple }),
        .card_id = fd(4, .{ .Varint = .Simple }),
        .PNEOOLFLNLK = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HDCKCHPDMMI = struct {
    PNEOOLFLNLK: ArrayList(u32),
    FODPDMPBAND: ArrayList(ACCBIGFANOA),

    pub const _desc_table = .{
        .PNEOOLFLNLK = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .FODPDMPBAND = fd(14, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NNCCFPOOCKH = struct {
    ANCPCPCLJED: ?HDCKCHPDMMI = null,

    pub const _desc_table = .{
        .ANCPCPCLJED = fd(15, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MACHNDHAMNM = struct {
    ANCPCPCLJED: ?HDCKCHPDMMI = null,

    pub const _desc_table = .{
        .ANCPCPCLJED = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IFBDBDCCOPO = struct {
    ANCPCPCLJED: ?HDCKCHPDMMI = null,

    pub const _desc_table = .{
        .ANCPCPCLJED = fd(11, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GLIJKLOOAPA = struct {
    ECFAGNKDAEF: u32 = 0,
    gacha_random: u32 = 0,
    ANCPCPCLJED: ?HDCKCHPDMMI = null,

    pub const _desc_table = .{
        .ECFAGNKDAEF = fd(1, .{ .Varint = .Simple }),
        .gacha_random = fd(6, .{ .Varint = .Simple }),
        .ANCPCPCLJED = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ANBANKMLCLH = struct {
    ANCPCPCLJED: ?HDCKCHPDMMI = null,

    pub const _desc_table = .{
        .ANCPCPCLJED = fd(13, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EPPNKGOLAAP = struct {
    BGDOIJPHFDB: bool = false,

    pub const _desc_table = .{
        .BGDOIJPHFDB = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LKBBKOJDDPD = struct {
    AHIDJBJGGPP: u32 = 0,
    ACNPGAJFFHI: ?ACNPGAJFFHI_union,

    pub const _ACNPGAJFFHI_case = enum {
        PNIMPJFILGF,
        DHLEEJMIIMO,
        OEOFNNBLJIK,
        GPBGDCMJHLN,
        LNKPGGGKMNK,
        AENEFMCBFGM,
        BCIIGHIOAPL,
        GNEOOAIFKIB,
    };
    pub const ACNPGAJFFHI_union = union(_ACNPGAJFFHI_case) {
        PNIMPJFILGF: LNIHJDAILDJ,
        DHLEEJMIIMO: NNCCFPOOCKH,
        OEOFNNBLJIK: MACHNDHAMNM,
        GPBGDCMJHLN: IFBDBDCCOPO,
        LNKPGGGKMNK: GLIJKLOOAPA,
        AENEFMCBFGM: ANBANKMLCLH,
        BCIIGHIOAPL: EPPNKGOLAAP,
        GNEOOAIFKIB: bool,
        pub const _union_desc = .{
            .PNIMPJFILGF = fd(6, .{ .SubMessage = {} }),
            .DHLEEJMIIMO = fd(2, .{ .SubMessage = {} }),
            .OEOFNNBLJIK = fd(15, .{ .SubMessage = {} }),
            .GPBGDCMJHLN = fd(10, .{ .SubMessage = {} }),
            .LNKPGGGKMNK = fd(7, .{ .SubMessage = {} }),
            .AENEFMCBFGM = fd(11, .{ .SubMessage = {} }),
            .BCIIGHIOAPL = fd(3, .{ .SubMessage = {} }),
            .GNEOOAIFKIB = fd(5, .{ .Varint = .Simple }),
        };
    };

    pub const _desc_table = .{
        .AHIDJBJGGPP = fd(4, .{ .Varint = .Simple }),
        .ACNPGAJFFHI = fd(null, .{ .OneOf = ACNPGAJFFHI_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BMLOFPCNGKN = struct {
    OFCNDEMAPPL: i32 = 0,
    IHLHDPNAEKC: i32 = 0,
    DJFHCDDIFMI: i32 = 0,

    pub const _desc_table = .{
        .OFCNDEMAPPL = fd(4, .{ .Varint = .Simple }),
        .IHLHDPNAEKC = fd(11, .{ .Varint = .Simple }),
        .DJFHCDDIFMI = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IONCPPDEJEJ = struct {
    unique_id: u64 = 0,
    buff_id: u32 = 0,
    FEONEHHCJJM: u32 = 0,

    pub const _desc_table = .{
        .unique_id = fd(3, .{ .Varint = .Simple }),
        .buff_id = fd(6, .{ .Varint = .Simple }),
        .FEONEHHCJJM = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ECMILHCKOMO = struct {
    buff_list: ArrayList(IONCPPDEJEJ),

    pub const _desc_table = .{
        .buff_list = fd(4, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ClockParkGetOngoingScriptInfoScRsp = struct {
    OBPFBLNBFKI: u32 = 0,
    AIGEHHNHKPM: u32 = 0,
    EIDLLEOLFGM: ArrayList(u32),
    MJDOGPBOJIP: ?BMLOFPCNGKN = null,
    KIEKJEFFPHK: u32 = 0,
    retcode: u32 = 0,
    BLHGBEDNFIB: u32 = 0,
    CMGKEOLCBIP: ManagedString = .Empty,
    rogue_buff_info: ?ECMILHCKOMO = null,
    IENPHEFANGL: ?LKBBKOJDDPD = null,
    script_id: u32 = 0,
    CHOBAOGMLFN: u32 = 0,

    pub const _desc_table = .{
        .OBPFBLNBFKI = fd(5, .{ .Varint = .Simple }),
        .AIGEHHNHKPM = fd(1, .{ .Varint = .Simple }),
        .EIDLLEOLFGM = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .MJDOGPBOJIP = fd(10, .{ .SubMessage = {} }),
        .KIEKJEFFPHK = fd(3, .{ .Varint = .Simple }),
        .retcode = fd(6, .{ .Varint = .Simple }),
        .BLHGBEDNFIB = fd(14, .{ .Varint = .Simple }),
        .CMGKEOLCBIP = fd(11, .String),
        .rogue_buff_info = fd(9, .{ .SubMessage = {} }),
        .IENPHEFANGL = fd(2, .{ .SubMessage = {} }),
        .script_id = fd(8, .{ .Varint = .Simple }),
        .CHOBAOGMLFN = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OBNONMHMECK = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FFOMIBNCFKI = struct {
    ANCPCPCLJED: ?HDCKCHPDMMI = null,

    pub const _desc_table = .{
        .ANCPCPCLJED = fd(4, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AJEHAMDABNA = struct {
    is_win: bool = false,
    OMDDFKMAAPE: u32 = 0,

    pub const _desc_table = .{
        .is_win = fd(10, .{ .Varint = .Simple }),
        .OMDDFKMAAPE = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AMGHDCABJMJ = struct {
    avatar_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .avatar_id_list = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const INNNICFOLII = struct {
    JCNODAMFFFC: bool = false,
    gacha_random: u32 = 0,

    pub const _desc_table = .{
        .JCNODAMFFFC = fd(2, .{ .Varint = .Simple }),
        .gacha_random = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CEOONFLONDJ = struct {
    OMDDFKMAAPE: u32 = 0,
    is_win: bool = false,

    pub const _desc_table = .{
        .OMDDFKMAAPE = fd(11, .{ .Varint = .Simple }),
        .is_win = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HELNOIHMDHA = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ClockParkHandleWaitOperationCsReq = struct {
    script_id: u32 = 0,
    AHIDJBJGGPP: u32 = 0,
    DEJMPMFHIOC: ?DEJMPMFHIOC_union,

    pub const _DEJMPMFHIOC_case = enum {
        JFBCKCLPAKO,
        IPIKFLCEFLA,
        MEGNBBFILNL,
        ABKKDHAPCHN,
        LIHJMEINGIK,
        LMGGLCNCDHF,
        FNGFOAEPFJN,
        OBPFBLNBFKI,
    };
    pub const DEJMPMFHIOC_union = union(_DEJMPMFHIOC_case) {
        JFBCKCLPAKO: OBNONMHMECK,
        IPIKFLCEFLA: FFOMIBNCFKI,
        MEGNBBFILNL: AJEHAMDABNA,
        ABKKDHAPCHN: AMGHDCABJMJ,
        LIHJMEINGIK: INNNICFOLII,
        LMGGLCNCDHF: CEOONFLONDJ,
        FNGFOAEPFJN: HELNOIHMDHA,
        OBPFBLNBFKI: u32,
        pub const _union_desc = .{
            .JFBCKCLPAKO = fd(9, .{ .SubMessage = {} }),
            .IPIKFLCEFLA = fd(8, .{ .SubMessage = {} }),
            .MEGNBBFILNL = fd(7, .{ .SubMessage = {} }),
            .ABKKDHAPCHN = fd(15, .{ .SubMessage = {} }),
            .LIHJMEINGIK = fd(6, .{ .SubMessage = {} }),
            .LMGGLCNCDHF = fd(13, .{ .SubMessage = {} }),
            .FNGFOAEPFJN = fd(1, .{ .SubMessage = {} }),
            .OBPFBLNBFKI = fd(10, .{ .Varint = .Simple }),
        };
    };

    pub const _desc_table = .{
        .script_id = fd(2, .{ .Varint = .Simple }),
        .AHIDJBJGGPP = fd(12, .{ .Varint = .Simple }),
        .DEJMPMFHIOC = fd(null, .{ .OneOf = DEJMPMFHIOC_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MDJLOJFMEMC = struct {
    progress: u32 = 0,
    reward: ?ItemList = null,
    script_id: u32 = 0,
    EEEHGHKOCJI: bool = false,
    AIGEHHNHKPM: u32 = 0,
    KIEKJEFFPHK: u32 = 0,
    KFDAICILNMB: bool = false,

    pub const _desc_table = .{
        .progress = fd(4, .{ .Varint = .Simple }),
        .reward = fd(3, .{ .SubMessage = {} }),
        .script_id = fd(7, .{ .Varint = .Simple }),
        .EEEHGHKOCJI = fd(8, .{ .Varint = .Simple }),
        .AIGEHHNHKPM = fd(6, .{ .Varint = .Simple }),
        .KIEKJEFFPHK = fd(14, .{ .Varint = .Simple }),
        .KFDAICILNMB = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ClockParkHandleWaitOperationScRsp = struct {
    JFKDBMDOMNK: ClockParkPlayStatus = @enumFromInt(0),
    KOIJFOFFJNJ: u32 = 0,
    FICFGDNHNGE: u32 = 0,
    battle_info: ?SceneBattleInfo = null,
    AHIDJBJGGPP: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .JFKDBMDOMNK = fd(4, .{ .Varint = .Simple }),
        .KOIJFOFFJNJ = fd(13, .{ .Varint = .Simple }),
        .FICFGDNHNGE = fd(14, .{ .Varint = .Simple }),
        .battle_info = fd(11, .{ .SubMessage = {} }),
        .AHIDJBJGGPP = fd(8, .{ .Varint = .Simple }),
        .retcode = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ClockParkQuitScriptCsReq = struct {
    script_id: u32 = 0,
    KHNHPGDEIMM: bool = false,

    pub const _desc_table = .{
        .script_id = fd(12, .{ .Varint = .Simple }),
        .KHNHPGDEIMM = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ClockParkQuitScriptScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ClockParkBattleEndScNotify = struct {
    AHIDJBJGGPP: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .AHIDJBJGGPP = fd(4, .{ .Varint = .Simple }),
        .retcode = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ClockParkUseBuffCsReq = struct {
    unique_id: u64 = 0,
    script_id: u32 = 0,
    AHIDJBJGGPP: u32 = 0,

    pub const _desc_table = .{
        .unique_id = fd(14, .{ .Varint = .Simple }),
        .script_id = fd(9, .{ .Varint = .Simple }),
        .AHIDJBJGGPP = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ClockParkUseBuffScRsp = struct {
    AHIDJBJGGPP: u32 = 0,
    rogue_buff_info: ?ECMILHCKOMO = null,
    retcode: u32 = 0,
    script_id: u32 = 0,
    DBLAAOKFNIH: ?DBLAAOKFNIH_union,

    pub const _DBLAAOKFNIH_case = enum {
        ANCPCPCLJED,
        MJDOGPBOJIP,
    };
    pub const DBLAAOKFNIH_union = union(_DBLAAOKFNIH_case) {
        ANCPCPCLJED: HDCKCHPDMMI,
        MJDOGPBOJIP: BMLOFPCNGKN,
        pub const _union_desc = .{
            .ANCPCPCLJED = fd(1930, .{ .SubMessage = {} }),
            .MJDOGPBOJIP = fd(558, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .AHIDJBJGGPP = fd(14, .{ .Varint = .Simple }),
        .rogue_buff_info = fd(15, .{ .SubMessage = {} }),
        .retcode = fd(2, .{ .Varint = .Simple }),
        .script_id = fd(13, .{ .Varint = .Simple }),
        .DBLAAOKFNIH = fd(null, .{ .OneOf = DBLAAOKFNIH_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ClockParkFinishScriptScNotify = struct {
    rogue_finish_info: ?MDJLOJFMEMC = null,

    pub const _desc_table = .{
        .rogue_finish_info = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Item = struct {
    rank: u32 = 0,
    promotion: u32 = 0,
    main_affix_id: u32 = 0,
    unique_id: u32 = 0,
    level: u32 = 0,
    num: u32 = 0,
    item_id: u32 = 0,

    pub const _desc_table = .{
        .rank = fd(14, .{ .Varint = .Simple }),
        .promotion = fd(2, .{ .Varint = .Simple }),
        .main_affix_id = fd(7, .{ .Varint = .Simple }),
        .unique_id = fd(12, .{ .Varint = .Simple }),
        .level = fd(9, .{ .Varint = .Simple }),
        .num = fd(3, .{ .Varint = .Simple }),
        .item_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ItemList = struct {
    item_list: ArrayList(Item),

    pub const _desc_table = .{
        .item_list = fd(2, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PileItem = struct {
    item_id: u32 = 0,
    item_num: u32 = 0,

    pub const _desc_table = .{
        .item_id = fd(13, .{ .Varint = .Simple }),
        .item_num = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ItemCost = struct {
    item: ?item_union,

    pub const _item_case = enum {
        pile_item,
        equipment_unique_id,
        relic_unique_id,
    };
    pub const item_union = union(_item_case) {
        pile_item: PileItem,
        equipment_unique_id: u32,
        relic_unique_id: u32,
        pub const _union_desc = .{
            .pile_item = fd(6, .{ .SubMessage = {} }),
            .equipment_unique_id = fd(2, .{ .Varint = .Simple }),
            .relic_unique_id = fd(7, .{ .Varint = .Simple }),
        };
    };

    pub const _desc_table = .{
        .item = fd(null, .{ .OneOf = item_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ItemCostData = struct {
    item_list: ArrayList(ItemCost),

    pub const _desc_table = .{
        .item_list = fd(7, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IEKHJDECAPE = struct {
    item_count: u32 = 0,
    item_id: u32 = 0,

    pub const _desc_table = .{
        .item_count = fd(7, .{ .Varint = .Simple }),
        .item_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AKCPALGEMOL = struct {
    rank: u32 = 0,
    promotion: u32 = 0,
    tid: u32 = 0,
    exp: u32 = 0,
    level: u32 = 0,

    pub const _desc_table = .{
        .rank = fd(12, .{ .Varint = .Simple }),
        .promotion = fd(4, .{ .Varint = .Simple }),
        .tid = fd(11, .{ .Varint = .Simple }),
        .exp = fd(3, .{ .Varint = .Simple }),
        .level = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NHDBOFCFCJM = struct {
    main_affix_id: u32 = 0,
    level: u32 = 0,
    sub_affix_list: ArrayList(RelicAffix),
    tid: u32 = 0,
    exp: u32 = 0,

    pub const _desc_table = .{
        .main_affix_id = fd(10, .{ .Varint = .Simple }),
        .level = fd(3, .{ .Varint = .Simple }),
        .sub_affix_list = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .tid = fd(14, .{ .Varint = .Simple }),
        .exp = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NDHOPEDOFOC = struct {
    BPBOPJFHLOO: ?BPBOPJFHLOO_union,

    pub const _BPBOPJFHLOO_case = enum {
        OEKHNGFFGKB,
        ADEOIGEBMDF,
        FHGAFCJCAOA,
    };
    pub const BPBOPJFHLOO_union = union(_BPBOPJFHLOO_case) {
        OEKHNGFFGKB: IEKHJDECAPE,
        ADEOIGEBMDF: AKCPALGEMOL,
        FHGAFCJCAOA: NHDBOFCFCJM,
        pub const _union_desc = .{
            .OEKHNGFFGKB = fd(15, .{ .SubMessage = {} }),
            .ADEOIGEBMDF = fd(1, .{ .SubMessage = {} }),
            .FHGAFCJCAOA = fd(2, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .BPBOPJFHLOO = fd(null, .{ .OneOf = BPBOPJFHLOO_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AODIDFNPICF = struct {
    item_list: ArrayList(NDHOPEDOFOC),

    pub const _desc_table = .{
        .item_list = fd(10, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Vector = struct {
    y: i32 = 0,
    z: i32 = 0,
    x: i32 = 0,

    pub const _desc_table = .{
        .y = fd(5, .{ .Varint = .ZigZagOptimized }),
        .z = fd(9, .{ .Varint = .ZigZagOptimized }),
        .x = fd(14, .{ .Varint = .ZigZagOptimized }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MotionInfo = struct {
    pos: ?Vector = null,
    rot: ?Vector = null,

    pub const _desc_table = .{
        .pos = fd(11, .{ .SubMessage = {} }),
        .rot = fd(5, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Vector4 = struct {
    w: f32 = 0,
    x: f32 = 0,
    y: f32 = 0,
    z: f32 = 0,

    pub const _desc_table = .{
        .w = fd(8, .{ .FixedInt = .I32 }),
        .x = fd(3, .{ .FixedInt = .I32 }),
        .y = fd(9, .{ .FixedInt = .I32 }),
        .z = fd(15, .{ .FixedInt = .I32 }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneMonsterWaveParam = struct {
    DNEAMPLLFME: u32 = 0,
    hard_level_group: u32 = 0,
    level: u32 = 0,
    elite_group: u32 = 0,

    pub const _desc_table = .{
        .DNEAMPLLFME = fd(2, .{ .Varint = .Simple }),
        .hard_level_group = fd(10, .{ .Varint = .Simple }),
        .level = fd(13, .{ .Varint = .Simple }),
        .elite_group = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneMonster = struct {
    cur_hp: u32 = 0,
    max_hp: u32 = 0,
    monster_id: u32 = 0,

    pub const _desc_table = .{
        .cur_hp = fd(4, .{ .Varint = .Simple }),
        .max_hp = fd(12, .{ .Varint = .Simple }),
        .monster_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneMonsterWave = struct {
    JCDLJGHHAOF: ArrayList(ItemList),
    battle_wave_id: u32 = 0,
    battle_stage_id: u32 = 0,
    monster_param: ?SceneMonsterWaveParam = null,
    monster_list: ArrayList(SceneMonster),

    pub const _desc_table = .{
        .JCDLJGHHAOF = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .battle_wave_id = fd(11, .{ .Varint = .Simple }),
        .battle_stage_id = fd(4, .{ .Varint = .Simple }),
        .monster_param = fd(2, .{ .SubMessage = {} }),
        .monster_list = fd(10, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneBattleInfo = struct {
    monster_wave_list: ArrayList(SceneMonsterWave),
    battle_rogue_magic_info: ?BattleRogueMagicInfo = null,
    stage_id: u32 = 0,
    logic_random_seed: u32 = 0,
    monster_wave_length: u32 = 0,
    buff_list: ArrayList(BattleBuff),
    AJGPJGLPMIO: ?LJGIAGLFHHC = null,
    GEGDPNKKAKG: ?EACDEAPKILK = null,
    world_level: u32 = 0,
    MFKJOKAJJMJ: ?GIEIBEACBAO = null,
    NBCKFDGMFDB: bool = false,
    rounds_limit: u32 = 0,
    battle_id: u32 = 0,
    JPGIFCHJDLK: ?EvolveBuildBattleInfo = null,
    battle_event: ArrayList(BattleEventBattleInfo),
    battle_target_info: ArrayList(BattleTargetInfoEntry),
    battle_avatar_list: ArrayList(BattleAvatar),

    pub const _desc_table = .{
        .monster_wave_list = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .battle_rogue_magic_info = fd(853, .{ .SubMessage = {} }),
        .stage_id = fd(14, .{ .Varint = .Simple }),
        .logic_random_seed = fd(10, .{ .Varint = .Simple }),
        .monster_wave_length = fd(5, .{ .Varint = .Simple }),
        .buff_list = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .AJGPJGLPMIO = fd(1167, .{ .SubMessage = {} }),
        .GEGDPNKKAKG = fd(1348, .{ .SubMessage = {} }),
        .world_level = fd(13, .{ .Varint = .Simple }),
        .MFKJOKAJJMJ = fd(1680, .{ .SubMessage = {} }),
        .NBCKFDGMFDB = fd(9, .{ .Varint = .Simple }),
        .rounds_limit = fd(12, .{ .Varint = .Simple }),
        .battle_id = fd(8, .{ .Varint = .Simple }),
        .JPGIFCHJDLK = fd(806, .{ .SubMessage = {} }),
        .battle_event = fd(986, .{ .List = .{ .SubMessage = {} } }),
        .battle_target_info = fd(783, .{ .List = .{ .SubMessage = {} } }),
        .battle_avatar_list = fd(7, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const BattleTargetInfoEntry = struct {
        key: u32 = 0,
        value: ?BattleTargetList = null,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AetherDivideBattleInfo = struct {
    buff_list: ArrayList(BattleBuff),
    monster_wave_list: ArrayList(SceneMonsterWave),
    battle_avatar_list: ArrayList(AetherAvatarInfo),
    stage_id: u32 = 0,
    logic_random_seed: u32 = 0,
    battle_id: u32 = 0,
    NBCKFDGMFDB: bool = false,

    pub const _desc_table = .{
        .buff_list = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .monster_wave_list = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .battle_avatar_list = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .stage_id = fd(4, .{ .Varint = .Simple }),
        .logic_random_seed = fd(6, .{ .Varint = .Simple }),
        .battle_id = fd(3, .{ .Varint = .Simple }),
        .NBCKFDGMFDB = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PHHKOMBGPPK = struct {
    id: u32 = 0,
    assist_uid: u32 = 0,
    avatar_type: AvatarType = @enumFromInt(0),

    pub const _desc_table = .{
        .id = fd(1, .{ .Varint = .Simple }),
        .assist_uid = fd(9, .{ .Varint = .Simple }),
        .avatar_type = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MBKOCMMICPG = struct {
    return_item_list: ?ItemList = null,
    EBNKEIEHNHA: bool = false,
    relic_ids: ArrayList(u32),

    pub const _desc_table = .{
        .return_item_list = fd(14, .{ .SubMessage = {} }),
        .EBNKEIEHNHA = fd(4, .{ .Varint = .Simple }),
        .relic_ids = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KHOCCHABNMN = struct {
    value: u32 = 0,
    key: u32 = 0,

    pub const _desc_table = .{
        .value = fd(3, .{ .Varint = .Simple }),
        .key = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ContentPackageGetDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ContentPackageGetDataScRsp = struct {
    retcode: u32 = 0,
    data: ?ContentPackageData = null,

    pub const _desc_table = .{
        .retcode = fd(14, .{ .Varint = .Simple }),
        .data = fd(9, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ContentPackageInfo = struct {
    status: ContentPackageStatus = @enumFromInt(0),
    content_id: u32 = 0,

    pub const _desc_table = .{
        .status = fd(3, .{ .Varint = .Simple }),
        .content_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ContentPackageData = struct {
    cur_content_id: u32 = 0,
    content_package_list: ArrayList(ContentPackageInfo),

    pub const _desc_table = .{
        .cur_content_id = fd(1, .{ .Varint = .Simple }),
        .content_package_list = fd(4, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ContentPackageSyncDataScNotify = struct {
    data: ?ContentPackageData = null,

    pub const _desc_table = .{
        .data = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ContentPackageUnlockCsReq = struct {
    content_id: u32 = 0,

    pub const _desc_table = .{
        .content_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ContentPackageUnlockScRsp = struct {
    content_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .content_id = fd(5, .{ .Varint = .Simple }),
        .retcode = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ContentPackageTransferScNotify = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DailyActivityInfo = struct {
    level: u32 = 0,
    daily_active_point: u32 = 0,
    world_level: u32 = 0,
    is_has_taken: bool = false,

    pub const _desc_table = .{
        .level = fd(2, .{ .Varint = .Simple }),
        .daily_active_point = fd(15, .{ .Varint = .Simple }),
        .world_level = fd(9, .{ .Varint = .Simple }),
        .is_has_taken = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeApRewardCsReq = struct {
    level: u32 = 0,

    pub const _desc_table = .{
        .level = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeApRewardScRsp = struct {
    level: u32 = 0,
    retcode: u32 = 0,
    reward: ?ItemList = null,

    pub const _desc_table = .{
        .level = fd(10, .{ .Varint = .Simple }),
        .retcode = fd(15, .{ .Varint = .Simple }),
        .reward = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetDailyActiveInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetDailyActiveInfoScRsp = struct {
    daily_active_point: u32 = 0,
    daily_active_quest_id_list: ArrayList(u32),
    retcode: u32 = 0,
    daily_active_level_list: ArrayList(DailyActivityInfo),

    pub const _desc_table = .{
        .daily_active_point = fd(10, .{ .Varint = .Simple }),
        .daily_active_quest_id_list = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(14, .{ .Varint = .Simple }),
        .daily_active_level_list = fd(2, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DailyActiveInfoNotify = struct {
    daily_active_level_list: ArrayList(DailyActivityInfo),
    daily_active_point: u32 = 0,
    daily_active_quest_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .daily_active_level_list = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .daily_active_point = fd(9, .{ .Varint = .Simple }),
        .daily_active_quest_id_list = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeAllApRewardCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeAllApRewardScRsp = struct {
    retcode: u32 = 0,
    reward: ?ItemList = null,
    take_reward_level_list: ArrayList(u32),

    pub const _desc_table = .{
        .retcode = fd(14, .{ .Varint = .Simple }),
        .reward = fd(13, .{ .SubMessage = {} }),
        .take_reward_level_list = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ALPAPMJHADP = struct {
    PIOAJFOGAOM: ServerLogLevel = @enumFromInt(0),
    CLCEHMGLICM: ArrayList(ServerLogTag),

    pub const _desc_table = .{
        .PIOAJFOGAOM = fd(11, .{ .Varint = .Simple }),
        .CLCEHMGLICM = fd(10, .{ .List = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetServerLogSettingsCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetServerLogSettingsScRsp = struct {
    IBPDGNOHFPM: ?ALPAPMJHADP = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .IBPDGNOHFPM = fd(15, .{ .SubMessage = {} }),
        .retcode = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdateServerLogSettingsCsReq = struct {
    IBPDGNOHFPM: ?ALPAPMJHADP = null,

    pub const _desc_table = .{
        .IBPDGNOHFPM = fd(11, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdateServerLogSettingsScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ServerLogScNotify = struct {
    LCPLLGNJNAJ: ManagedString = .Empty,
    level: ServerLogLevel = @enumFromInt(0),
    HKLIGCHHIEG: ManagedString = .Empty,
    tag: ServerLogTag = @enumFromInt(0),

    pub const _desc_table = .{
        .LCPLLGNJNAJ = fd(7, .String),
        .level = fd(11, .{ .Varint = .Simple }),
        .HKLIGCHHIEG = fd(3, .String),
        .tag = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LCMJFEHMCNF = struct {
    config_id: u32 = 0,
    group_id: u32 = 0,

    pub const _desc_table = .{
        .config_id = fd(2, .{ .Varint = .Simple }),
        .group_id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OEDDOIJLGFG = struct {
    KFELKJLDKEH: ?KFELKJLDKEH_union,

    pub const _KFELKJLDKEH_case = enum {
        FFBFCCLODKK,
        KACELKGCNEI,
        FAOMFMMLMHD,
    };
    pub const KFELKJLDKEH_union = union(_KFELKJLDKEH_case) {
        FFBFCCLODKK: u32,
        KACELKGCNEI: u32,
        FAOMFMMLMHD: LCMJFEHMCNF,
        pub const _union_desc = .{
            .FFBFCCLODKK = fd(2, .{ .Varint = .Simple }),
            .KACELKGCNEI = fd(8, .{ .Varint = .Simple }),
            .FAOMFMMLMHD = fd(4, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .KFELKJLDKEH = fd(null, .{ .OneOf = KFELKJLDKEH_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CFCAJKFEPAO = struct {
    BENANABPPJN: ManagedString = .Empty,
    state: OJIDJNDHDGA = @enumFromInt(0),
    msg: ManagedString = .Empty,

    pub const _desc_table = .{
        .BENANABPPJN = fd(11, .String),
        .state = fd(8, .{ .Varint = .Simple }),
        .msg = fd(13, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MONILLJGEID = struct {
    LIOEHLICJHB: JEFKIJNIEIA = @enumFromInt(0),
    DBGFAODBEFC: ?OEDDOIJLGFG = null,

    pub const _desc_table = .{
        .LIOEHLICJHB = fd(12, .{ .Varint = .Simple }),
        .DBGFAODBEFC = fd(7, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KDOEJMHBBGI = struct {
    LOPBAJPAEMI: ArrayList(CFCAJKFEPAO),
    DBGFAODBEFC: ?OEDDOIJLGFG = null,
    LIOEHLICJHB: JEFKIJNIEIA = @enumFromInt(0),

    pub const _desc_table = .{
        .LOPBAJPAEMI = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .DBGFAODBEFC = fd(9, .{ .SubMessage = {} }),
        .LIOEHLICJHB = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetServerGraphDataCsReq = struct {
    EOFCIILDILF: ArrayList(OEDDOIJLGFG),

    pub const _desc_table = .{
        .EOFCIILDILF = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetServerGraphDataScRsp = struct {
    retcode: u32 = 0,
    DCOIHAMJKHJ: ArrayList(KDOEJMHBBGI),

    pub const _desc_table = .{
        .retcode = fd(11, .{ .Varint = .Simple }),
        .DCOIHAMJKHJ = fd(13, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetServerGraphSimpleDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetServerGraphSimpleDataScRsp = struct {
    DCOIHAMJKHJ: ArrayList(MONILLJGEID),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .DCOIHAMJKHJ = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HIAMKFICMNM = struct {
    GHBGPEKCEHH: u32 = 0,
    EOCLPOEPKMP: ArrayList(u32),
    EBMBBPINPGK: u32 = 0,

    pub const _desc_table = .{
        .GHBGPEKCEHH = fd(12, .{ .Varint = .Simple }),
        .EOCLPOEPKMP = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .EBMBBPINPGK = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EEKFECDIHJE = struct {
    DGPPFFKIHOC: u32 = 0,
    DBPGEFGLFJJ: ArrayList(u32),
    KIDBBFGHECN: u32 = 0,
    ODMPHFANIEE: u32 = 0,
    JIBLNLHCNKD: u32 = 0,

    pub const _desc_table = .{
        .DGPPFFKIHOC = fd(9, .{ .Varint = .Simple }),
        .DBPGEFGLFJJ = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
        .KIDBBFGHECN = fd(3, .{ .Varint = .Simple }),
        .ODMPHFANIEE = fd(10, .{ .Varint = .Simple }),
        .JIBLNLHCNKD = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MFLPAMAFJNC = struct {
    FGEFCEFKHMH: bool = false,
    KCFPIECMGBD: u32 = 0,

    pub const _desc_table = .{
        .FGEFCEFKHMH = fd(4, .{ .Varint = .Simple }),
        .KCFPIECMGBD = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetDrinkMakerDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetDrinkMakerDataScRsp = struct {
    retcode: u32 = 0,
    exp: u32 = 0,
    EAOLMHOAAML: u32 = 0,
    level: u32 = 0,
    PCNNPEJEGEF: ArrayList(u32),
    BOINOMBHPCL: ?EEKFECDIHJE = null,
    HEPALNIOJNP: u32 = 0,
    AMEFGBICGDI: u32 = 0,
    DHAKOFAGDOF: u32 = 0,
    PJKIBODPCKI: ArrayList(HIAMKFICMNM),

    pub const _desc_table = .{
        .retcode = fd(5, .{ .Varint = .Simple }),
        .exp = fd(2, .{ .Varint = .Simple }),
        .EAOLMHOAAML = fd(10, .{ .Varint = .Simple }),
        .level = fd(8, .{ .Varint = .Simple }),
        .PCNNPEJEGEF = fd(11, .{ .PackedList = .{ .Varint = .Simple } }),
        .BOINOMBHPCL = fd(3, .{ .SubMessage = {} }),
        .HEPALNIOJNP = fd(9, .{ .Varint = .Simple }),
        .AMEFGBICGDI = fd(15, .{ .Varint = .Simple }),
        .DHAKOFAGDOF = fd(6, .{ .Varint = .Simple }),
        .PJKIBODPCKI = fd(7, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MakeDrinkCsReq = struct {
    LPMCGNJLBGD: ?EEKFECDIHJE = null,
    EAOLMHOAAML: u32 = 0,

    pub const _desc_table = .{
        .LPMCGNJLBGD = fd(15, .{ .SubMessage = {} }),
        .EAOLMHOAAML = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MakeDrinkScRsp = struct {
    APIACEAPLOE: u32 = 0,
    retcode: u32 = 0,
    FGEFCEFKHMH: bool = false,

    pub const _desc_table = .{
        .APIACEAPLOE = fd(8, .{ .Varint = .Simple }),
        .retcode = fd(6, .{ .Varint = .Simple }),
        .FGEFCEFKHMH = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EndDrinkMakerSequenceCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EndDrinkMakerSequenceScRsp = struct {
    retcode: u32 = 0,
    exp: u32 = 0,
    ELNGBAOKFIK: u32 = 0,
    LBKBNLLJHMF: ArrayList(MFLPAMAFJNC),
    level: u32 = 0,
    CAIKJBMNGLD: ?HIAMKFICMNM = null,
    AMEFGBICGDI: u32 = 0,
    reward: ?ItemList = null,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
        .exp = fd(15, .{ .Varint = .Simple }),
        .ELNGBAOKFIK = fd(6, .{ .Varint = .Simple }),
        .LBKBNLLJHMF = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .level = fd(7, .{ .Varint = .Simple }),
        .CAIKJBMNGLD = fd(10, .{ .SubMessage = {} }),
        .AMEFGBICGDI = fd(8, .{ .Varint = .Simple }),
        .reward = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MakeMissionDrinkCsReq = struct {
    LPMCGNJLBGD: ?EEKFECDIHJE = null,
    is_save: bool = false,
    KCFPIECMGBD: u32 = 0,

    pub const _desc_table = .{
        .LPMCGNJLBGD = fd(11, .{ .SubMessage = {} }),
        .is_save = fd(1, .{ .Varint = .Simple }),
        .KCFPIECMGBD = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MakeMissionDrinkScRsp = struct {
    retcode: u32 = 0,
    FGEFCEFKHMH: bool = false,
    is_save: bool = false,
    BOINOMBHPCL: ?EEKFECDIHJE = null,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
        .FGEFCEFKHMH = fd(14, .{ .Varint = .Simple }),
        .is_save = fd(1, .{ .Varint = .Simple }),
        .BOINOMBHPCL = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DrinkMakerDayEndScNotify = struct {
    ECILICNOLFN: u32 = 0,

    pub const _desc_table = .{
        .ECILICNOLFN = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DrinkMakerChallengeCsReq = struct {
    challenge_id: u32 = 0,
    LPMCGNJLBGD: ?EEKFECDIHJE = null,

    pub const _desc_table = .{
        .challenge_id = fd(8, .{ .Varint = .Simple }),
        .LPMCGNJLBGD = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DrinkMakerChallengeScRsp = struct {
    challenge_id: u32 = 0,
    retcode: u32 = 0,
    FGEFCEFKHMH: bool = false,
    reward: ?ItemList = null,

    pub const _desc_table = .{
        .challenge_id = fd(3, .{ .Varint = .Simple }),
        .retcode = fd(8, .{ .Varint = .Simple }),
        .FGEFCEFKHMH = fd(15, .{ .Varint = .Simple }),
        .reward = fd(4, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DrinkMakerUpdateTipsNotify = struct {
    AMEFGBICGDI: u32 = 0,

    pub const _desc_table = .{
        .AMEFGBICGDI = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LOFLGICOPCJ = struct {
    IMMANIPGMIF: ArrayList(u32),
    JKEDDOGNLIF: u32 = 0,
    PBHEDBCPDMI: bool = false,
    LPMCGNJLBGD: ?EEKFECDIHJE = null,

    pub const _desc_table = .{
        .IMMANIPGMIF = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
        .JKEDDOGNLIF = fd(4, .{ .Varint = .Simple }),
        .PBHEDBCPDMI = fd(11, .{ .Varint = .Simple }),
        .LPMCGNJLBGD = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DrinkMakerCheersGetDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DrinkMakerCheersGetDataScRsp = struct {
    retcode: u32 = 0,
    GFDAKNGLDJA: ArrayList(LOFLGICOPCJ),
    LLDDJENBEOG: u32 = 0,
    DMKELEHLHDP: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(15, .{ .Varint = .Simple }),
        .GFDAKNGLDJA = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .LLDDJENBEOG = fd(2, .{ .Varint = .Simple }),
        .DMKELEHLHDP = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DrinkMakerCheersMakeDrinkCsReq = struct {
    group_id: u32 = 0,
    FGFKBCJMCNN: bool = false,
    JKEDDOGNLIF: u32 = 0,
    LPMCGNJLBGD: ?EEKFECDIHJE = null,

    pub const _desc_table = .{
        .group_id = fd(9, .{ .Varint = .Simple }),
        .FGFKBCJMCNN = fd(12, .{ .Varint = .Simple }),
        .JKEDDOGNLIF = fd(15, .{ .Varint = .Simple }),
        .LPMCGNJLBGD = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DrinkMakerCheersMakeDrinkScRsp = struct {
    retcode: u32 = 0,
    EKNAMPLJCBE: ?LOFLGICOPCJ = null,

    pub const _desc_table = .{
        .retcode = fd(8, .{ .Varint = .Simple }),
        .EKNAMPLJCBE = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DrinkMakerCheersEnterNextGroupCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DrinkMakerCheersEnterNextGroupScRsp = struct {
    retcode: u32 = 0,
    LLDDJENBEOG: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(8, .{ .Varint = .Simple }),
        .LLDDJENBEOG = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ELPLCMOGOGJ = struct {
    progress: u32 = 0,
    NJDACJFDOKJ: u32 = 0,

    pub const _desc_table = .{
        .progress = fd(12, .{ .Varint = .Simple }),
        .NJDACJFDOKJ = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CGCLCMMIBIE = struct {
    HFALJIHKECN: u32 = 0,
    GMFEBDAFDPJ: u32 = 0,
    KIPOOFOOBGH: ArrayList(ELPLCMOGOGJ),
    GCIFDNNGOPG: bool = false,
    ODEEEBPGILC: u32 = 0,

    pub const _desc_table = .{
        .HFALJIHKECN = fd(7, .{ .Varint = .Simple }),
        .GMFEBDAFDPJ = fd(3, .{ .Varint = .Simple }),
        .KIPOOFOOBGH = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .GCIFDNNGOPG = fd(15, .{ .Varint = .Simple }),
        .ODEEEBPGILC = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JFNBFKBLGOH = struct {
    AFPKFGMAGKL: bool = false,
    BFECJMDNNOB: u32 = 0,
    EGEGCKINJJD: bool = false,
    cell_id: u32 = 0,
    FNDDKOPJGDA: u32 = 0,
    HGMNJFJPMDF: u32 = 0,

    pub const _desc_table = .{
        .AFPKFGMAGKL = fd(14, .{ .Varint = .Simple }),
        .BFECJMDNNOB = fd(5, .{ .Varint = .Simple }),
        .EGEGCKINJJD = fd(10, .{ .Varint = .Simple }),
        .cell_id = fd(11, .{ .Varint = .Simple }),
        .FNDDKOPJGDA = fd(2, .{ .Varint = .Simple }),
        .HGMNJFJPMDF = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JBGKHHHPMCN = struct {
    ONDCBDNGHEE: ArrayList(JFNBFKBLGOH),
    PGNANLAIIIK: ArrayList(u32),
    BCEILJEABKI: bool = false,

    pub const _desc_table = .{
        .ONDCBDNGHEE = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .PGNANLAIIIK = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .BCEILJEABKI = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PKIKEFAOIDE = struct {
    CJIDBADEKBO: u32 = 0,
    level: u32 = 0,

    pub const _desc_table = .{
        .CJIDBADEKBO = fd(4, .{ .Varint = .Simple }),
        .level = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LJJAHILCODE = struct {
    MFAMKIBGBBG: u32 = 0,
    level: u32 = 0,

    pub const _desc_table = .{
        .MFAMKIBGBBG = fd(2, .{ .Varint = .Simple }),
        .level = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DGMGKOGHFOO = struct {
    DLNKDKAOCAE: u32 = 0,
    MPOJCKOFIKF: u32 = 0,
    MFAMKIBGBBG: u32 = 0,

    pub const _desc_table = .{
        .DLNKDKAOCAE = fd(10, .{ .Varint = .Simple }),
        .MPOJCKOFIKF = fd(14, .{ .Varint = .Simple }),
        .MFAMKIBGBBG = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DFKMFNDIIPE = struct {
    count: u32 = 0,
    HPCHOLPMJFP: u32 = 0,

    pub const _desc_table = .{
        .count = fd(1, .{ .Varint = .Simple }),
        .HPCHOLPMJFP = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JMGEGGOLAMN = struct {
    LGIECNJOCJN: ArrayList(u32),
    FPGEDABJBHO: u64 = 0,
    GPPHOCNOJNF: ArrayList(DGMGKOGHFOO),
    FCIAOJKLBNJ: ArrayList(DFKMFNDIIPE),
    OBGKJKEODNG: u32 = 0,
    NMOEICLLCPG: u32 = 0,
    HELDFGLCNFB: ArrayList(u32),

    pub const _desc_table = .{
        .LGIECNJOCJN = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .FPGEDABJBHO = fd(9, .{ .Varint = .Simple }),
        .GPPHOCNOJNF = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .FCIAOJKLBNJ = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .OBGKJKEODNG = fd(10, .{ .Varint = .Simple }),
        .NMOEICLLCPG = fd(6, .{ .Varint = .Simple }),
        .HELDFGLCNFB = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DDKDLAMFOMM = struct {
    JOBMNGMJJMM: ArrayList(PKIKEFAOIDE),
    BAOJDBHJOKD: ?JMGEGGOLAMN = null,
    DAFDGJLDNAH: ArrayList(LJJAHILCODE),

    pub const _desc_table = .{
        .JOBMNGMJJMM = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .BAOJDBHJOKD = fd(3, .{ .SubMessage = {} }),
        .DAFDGJLDNAH = fd(9, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AICNONBGNNP = struct {
    level: u32 = 0,
    PKGDLPKJBCN: u32 = 0,

    pub const _desc_table = .{
        .level = fd(2, .{ .Varint = .Simple }),
        .PKGDLPKJBCN = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KJCLGNIIAPA = struct {
    CMIJGHAJLOL: ArrayList(AICNONBGNNP),

    pub const _desc_table = .{
        .CMIJGHAJLOL = fd(5, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CJDNINMIBPF = struct {
    HKJOMDJFHIM: u32 = 0,
    DOAHMGAOLOJ: u32 = 0,
    LJOOFLNGMEL: u32 = 0,

    pub const _desc_table = .{
        .HKJOMDJFHIM = fd(7, .{ .Varint = .Simple }),
        .DOAHMGAOLOJ = fd(11, .{ .Varint = .Simple }),
        .LJOOFLNGMEL = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HMKHILLIPOH = struct {
    DLDPMOJFAMC: u32 = 0,
    DOAHMGAOLOJ: u32 = 0,

    pub const _desc_table = .{
        .DLDPMOJFAMC = fd(9, .{ .Varint = .Simple }),
        .DOAHMGAOLOJ = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IJLGEIOKNEN = struct {
    KHIPJLHIDIE: ArrayList(CJDNINMIBPF),
    DLCJADNLLDM: ArrayList(HMKHILLIPOH),

    pub const _desc_table = .{
        .KHIPJLHIDIE = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .DLCJADNLLDM = fd(6, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetElfRestaurantDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetElfRestaurantDataScRsp = struct {
    FGHCIICCLMP: ?JBGKHHHPMCN = null,
    FODHBFMDJCO: ?CGCLCMMIBIE = null,
    ACAEKPJMPHN: ?IJLGEIOKNEN = null,
    retcode: u32 = 0,
    LNKFNBFLNND: ?KJCLGNIIAPA = null,
    PLFHGAMOMLJ: ?DDKDLAMFOMM = null,

    pub const _desc_table = .{
        .FGHCIICCLMP = fd(9, .{ .SubMessage = {} }),
        .FODHBFMDJCO = fd(6, .{ .SubMessage = {} }),
        .ACAEKPJMPHN = fd(12, .{ .SubMessage = {} }),
        .retcode = fd(5, .{ .Varint = .Simple }),
        .LNKFNBFLNND = fd(15, .{ .SubMessage = {} }),
        .PLFHGAMOMLJ = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterElfRestaurantNextDayCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterElfRestaurantNextDayScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OEACNFIKNMD = struct {
    IPKNEAPGPON: ?IPKNEAPGPON_union,

    pub const _IPKNEAPGPON_case = enum {
        LFABGNPHGAF,
        NHJBPKNLKMI,
        ODEAGKEJECI,
        NOBBFJBDEEI,
        EMJFJMBKAIG,
        NHCBGLLNNPC,
        CCPKAHFCPIJ,
        MKJNOGJNNAG,
        FFCMCHKDFAC,
        GANIKGKOGOH,
        BCEILJEABKI,
        EPCOJMKGHPH,
    };
    pub const IPKNEAPGPON_union = union(_IPKNEAPGPON_case) {
        LFABGNPHGAF: CGCLCMMIBIE,
        NHJBPKNLKMI: JFNBFKBLGOH,
        ODEAGKEJECI: AICNONBGNNP,
        NOBBFJBDEEI: u32,
        EMJFJMBKAIG: PKIKEFAOIDE,
        NHCBGLLNNPC: LJJAHILCODE,
        CCPKAHFCPIJ: CJDNINMIBPF,
        MKJNOGJNNAG: u32,
        FFCMCHKDFAC: HMKHILLIPOH,
        GANIKGKOGOH: u32,
        BCEILJEABKI: bool,
        EPCOJMKGHPH: JMGEGGOLAMN,
        pub const _union_desc = .{
            .LFABGNPHGAF = fd(1, .{ .SubMessage = {} }),
            .NHJBPKNLKMI = fd(9, .{ .SubMessage = {} }),
            .ODEAGKEJECI = fd(5, .{ .SubMessage = {} }),
            .NOBBFJBDEEI = fd(3, .{ .Varint = .Simple }),
            .EMJFJMBKAIG = fd(14, .{ .SubMessage = {} }),
            .NHCBGLLNNPC = fd(10, .{ .SubMessage = {} }),
            .CCPKAHFCPIJ = fd(2, .{ .SubMessage = {} }),
            .MKJNOGJNNAG = fd(6, .{ .Varint = .Simple }),
            .FFCMCHKDFAC = fd(12, .{ .SubMessage = {} }),
            .GANIKGKOGOH = fd(11, .{ .Varint = .Simple }),
            .BCEILJEABKI = fd(7, .{ .Varint = .Simple }),
            .EPCOJMKGHPH = fd(13, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .IPKNEAPGPON = fd(null, .{ .OneOf = IPKNEAPGPON_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ElfRestaurantDataChangeNotify = struct {
    LEADMNEIMDP: ArrayList(OEACNFIKNMD),

    pub const _desc_table = .{
        .LEADMNEIMDP = fd(13, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ElfRestaurantBuyFieldCsReq = struct {
    HGMNJFJPMDF: u32 = 0,

    pub const _desc_table = .{
        .HGMNJFJPMDF = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ElfRestaurantBuyFieldScRsp = struct {
    retcode: u32 = 0,
    BHJAPDFONAA: ?ItemCostData = null,

    pub const _desc_table = .{
        .retcode = fd(14, .{ .Varint = .Simple }),
        .BHJAPDFONAA = fd(11, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PFOOPMONPMB = struct {
    HGMNJFJPMDF: u32 = 0,
    cell_id: u32 = 0,

    pub const _desc_table = .{
        .HGMNJFJPMDF = fd(2, .{ .Varint = .Simple }),
        .cell_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GMANHHHCPME = struct {
    HGMNJFJPMDF: u32 = 0,
    cell_id: u32 = 0,
    BHJAPDFONAA: ?ItemCostData = null,

    pub const _desc_table = .{
        .HGMNJFJPMDF = fd(11, .{ .Varint = .Simple }),
        .cell_id = fd(8, .{ .Varint = .Simple }),
        .BHJAPDFONAA = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ElfRestaurantPlantSeedCsReq = struct {
    ONDCBDNGHEE: ArrayList(PFOOPMONPMB),
    FNDDKOPJGDA: u32 = 0,

    pub const _desc_table = .{
        .ONDCBDNGHEE = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .FNDDKOPJGDA = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ElfRestaurantPlantSeedScRsp = struct {
    MANGJGKHKNJ: ArrayList(GMANHHHCPME),
    retcode: u32 = 0,
    AOGDKLONIHI: ArrayList(OJFPDNAJKPL),

    pub const _desc_table = .{
        .MANGJGKHKNJ = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(10, .{ .Varint = .Simple }),
        .AOGDKLONIHI = fd(13, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ElfRestaurantHarvestCropCsReq = struct {
    ONDCBDNGHEE: ArrayList(PFOOPMONPMB),

    pub const _desc_table = .{
        .ONDCBDNGHEE = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JBLGALHCBGC = struct {
    cell_id: u32 = 0,
    KNMMCBONCCH: ArrayList(KNMMCBONCCHEntry),
    HGMNJFJPMDF: u32 = 0,
    GIGCOJGOLPM: ?ItemList = null,

    pub const _desc_table = .{
        .cell_id = fd(14, .{ .Varint = .Simple }),
        .KNMMCBONCCH = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .HGMNJFJPMDF = fd(8, .{ .Varint = .Simple }),
        .GIGCOJGOLPM = fd(5, .{ .SubMessage = {} }),
    };

    pub const KNMMCBONCCHEntry = struct {
        key: u32 = 0,
        value: ?ItemList = null,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ElfRestaurantHarvestCropScRsp = struct {
    HHMIGILBHPH: ArrayList(JBLGALHCBGC),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .HHMIGILBHPH = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ElfRestaurantRecycleSeedCsReq = struct {
    ONDCBDNGHEE: ArrayList(PFOOPMONPMB),

    pub const _desc_table = .{
        .ONDCBDNGHEE = fd(6, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OJFPDNAJKPL = struct {
    HGMNJFJPMDF: u32 = 0,
    cell_id: u32 = 0,
    BJFPHMCGFLB: ?ItemList = null,

    pub const _desc_table = .{
        .HGMNJFJPMDF = fd(8, .{ .Varint = .Simple }),
        .cell_id = fd(7, .{ .Varint = .Simple }),
        .BJFPHMCGFLB = fd(5, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ElfRestaurantRecycleSeedScRsp = struct {
    retcode: u32 = 0,
    AOGDKLONIHI: ArrayList(OJFPDNAJKPL),

    pub const _desc_table = .{
        .retcode = fd(8, .{ .Varint = .Simple }),
        .AOGDKLONIHI = fd(13, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ElfRestaurantTakeVillagerRewardCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NCCDEEOHKJD = struct {
    reward_list: ?ItemList = null,
    progress: u32 = 0,
    KOGDNPFMGFC: u32 = 0,
    AFENFNMLHAH: u32 = 0,

    pub const _desc_table = .{
        .reward_list = fd(11, .{ .SubMessage = {} }),
        .progress = fd(5, .{ .Varint = .Simple }),
        .KOGDNPFMGFC = fd(4, .{ .Varint = .Simple }),
        .AFENFNMLHAH = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ElfRestaurantTakeVillagerRewardScRsp = struct {
    reward_list: ArrayList(NCCDEEOHKJD),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .reward_list = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ElfRestaurantUpgradeEmployeeLevelCsReq = struct {
    LDNJEACFBJE: u32 = 0,
    PKGDLPKJBCN: u32 = 0,

    pub const _desc_table = .{
        .LDNJEACFBJE = fd(1, .{ .Varint = .Simple }),
        .PKGDLPKJBCN = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ElfRestaurantUpgradeEmployeeLevelScRsp = struct {
    BHJAPDFONAA: ?ItemCostData = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .BHJAPDFONAA = fd(5, .{ .SubMessage = {} }),
        .retcode = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ElfRestaurantUpgradeFacilityLevelCsReq = struct {
    CJIDBADEKBO: u32 = 0,
    LDNJEACFBJE: u32 = 0,

    pub const _desc_table = .{
        .CJIDBADEKBO = fd(1, .{ .Varint = .Simple }),
        .LDNJEACFBJE = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ElfRestaurantUpgradeFacilityLevelScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ElfRestaurantUpgradeRecipeLevelCsReq = struct {
    MFAMKIBGBBG: u32 = 0,
    LDNJEACFBJE: u32 = 0,

    pub const _desc_table = .{
        .MFAMKIBGBBG = fd(12, .{ .Varint = .Simple }),
        .LDNJEACFBJE = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ElfRestaurantUpgradeRecipeLevelScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PKDKNKJMFDI = struct {
    MFAMKIBGBBG: u32 = 0,

    pub const _desc_table = .{
        .MFAMKIBGBBG = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CIPHPENJCAK = struct {
    GACJIFJKDAJ: ArrayList(PKDKNKJMFDI),
    EEJJGINLMOO: bool = false,
    HFLCMJBGOME: bool = false,
    IOFLMHAMFHJ: u32 = 0,

    pub const _desc_table = .{
        .GACJIFJKDAJ = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .EEJJGINLMOO = fd(10, .{ .Varint = .Simple }),
        .HFLCMJBGOME = fd(4, .{ .Varint = .Simple }),
        .IOFLMHAMFHJ = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EGOIIEHKMBG = struct {
    HOIOKBKGFDN: u32 = 0,
    num: u32 = 0,

    pub const _desc_table = .{
        .HOIOKBKGFDN = fd(8, .{ .Varint = .Simple }),
        .num = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IOIHFBKLKOM = struct {
    BEJEEDAEBBE: u32 = 0,
    PNPMLAFDAIH: u32 = 0,

    pub const _desc_table = .{
        .BEJEEDAEBBE = fd(9, .{ .Varint = .Simple }),
        .PNPMLAFDAIH = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DBKLNGEBBID = struct {
    MNKAHINFMCA: u32 = 0,
    MLAGPHLLBFB: u32 = 0,
    DAJJJFCHOOJ: u32 = 0,
    GFPPCALLGEK: u32 = 0,
    MFAMKIBGBBG: u32 = 0,
    KFAGAOBAPDI: bool = false,
    LHFFAPBDGLP: bool = false,
    HEKBBDCPOBO: ArrayList(KHOCCHABNMN),

    pub const _desc_table = .{
        .MNKAHINFMCA = fd(1, .{ .Varint = .Simple }),
        .MLAGPHLLBFB = fd(5, .{ .Varint = .Simple }),
        .DAJJJFCHOOJ = fd(11, .{ .Varint = .Simple }),
        .GFPPCALLGEK = fd(13, .{ .Varint = .Simple }),
        .MFAMKIBGBBG = fd(14, .{ .Varint = .Simple }),
        .KFAGAOBAPDI = fd(12, .{ .Varint = .Simple }),
        .LHFFAPBDGLP = fd(9, .{ .Varint = .Simple }),
        .HEKBBDCPOBO = fd(7, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KLFHMMHGOBN = struct {
    DAJJJFCHOOJ: u32 = 0,
    event_id: u32 = 0,
    HBKGIIMPLJH: u32 = 0,

    pub const _desc_table = .{
        .DAJJJFCHOOJ = fd(13, .{ .Varint = .Simple }),
        .event_id = fd(8, .{ .Varint = .Simple }),
        .HBKGIIMPLJH = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SettleElfRestaurantPlayCsReq = struct {
    DMKAHOOAMDM: ArrayList(IOIHFBKLKOM),
    cost_time: u32 = 0,
    FLHMAFIJONE: u32 = 0,
    AEJCOCNNKJD: ArrayList(EGOIIEHKMBG),
    FPGEDABJBHO: u32 = 0,
    HEJMEPGDHGM: ArrayList(CIPHPENJCAK),
    AJJIHPFBHJI: ArrayList(DBKLNGEBBID),
    MCKLEHJKCDC: ArrayList(KLFHMMHGOBN),
    NBIJIOCFKIN: u32 = 0,
    HMKHOLPLKNI: u32 = 0,
    JEHJLJDKBGE: u32 = 0,
    BMLEMOBCNCM: u32 = 0,

    pub const _desc_table = .{
        .DMKAHOOAMDM = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .cost_time = fd(4, .{ .Varint = .Simple }),
        .FLHMAFIJONE = fd(2, .{ .Varint = .Simple }),
        .AEJCOCNNKJD = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .FPGEDABJBHO = fd(5, .{ .Varint = .Simple }),
        .HEJMEPGDHGM = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .AJJIHPFBHJI = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .MCKLEHJKCDC = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .NBIJIOCFKIN = fd(8, .{ .Varint = .Simple }),
        .HMKHOLPLKNI = fd(1, .{ .Varint = .Simple }),
        .JEHJLJDKBGE = fd(10, .{ .Varint = .Simple }),
        .BMLEMOBCNCM = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SettleElfRestaurantPlayScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ElfRestaurantBuyShopItemCsReq = struct {
    BKCGMCKGOKI: u32 = 0,
    HKJOMDJFHIM: u32 = 0,

    pub const _desc_table = .{
        .BKCGMCKGOKI = fd(8, .{ .Varint = .Simple }),
        .HKJOMDJFHIM = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ElfRestaurantBuyShopItemScRsp = struct {
    HKJOMDJFHIM: u32 = 0,
    retcode: u32 = 0,
    FOBNKECCAAB: ?ItemList = null,
    BHJAPDFONAA: ?ItemCostData = null,

    pub const _desc_table = .{
        .HKJOMDJFHIM = fd(12, .{ .Varint = .Simple }),
        .retcode = fd(2, .{ .Varint = .Simple }),
        .FOBNKECCAAB = fd(15, .{ .SubMessage = {} }),
        .BHJAPDFONAA = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ElfRestaurantFinishTradeOrderCsReq = struct {
    DLDPMOJFAMC: u32 = 0,

    pub const _desc_table = .{
        .DLDPMOJFAMC = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ElfRestaurantFinishTradeOrderScRsp = struct {
    retcode: u32 = 0,
    DLDPMOJFAMC: u32 = 0,
    BHJAPDFONAA: ?ItemCostData = null,
    FOBNKECCAAB: ?ItemList = null,

    pub const _desc_table = .{
        .retcode = fd(14, .{ .Varint = .Simple }),
        .DLDPMOJFAMC = fd(6, .{ .Varint = .Simple }),
        .BHJAPDFONAA = fd(4, .{ .SubMessage = {} }),
        .FOBNKECCAAB = fd(9, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetElfRestaurantPlayRecipeCsReq = struct {
    NLMFKNKEIOI: ArrayList(u32),

    pub const _desc_table = .{
        .NLMFKNKEIOI = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetElfRestaurantPlayRecipeScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ElfRestaurantClientStatusCsReq = struct {
    FJINNLFCBOJ: bool = false,

    pub const _desc_table = .{
        .FJINNLFCBOJ = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ElfRestaurantClientStatusScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GOAHFMLPDMF = struct {
    era_flipper_region_id: u32 = 0,
    state: u32 = 0,

    pub const _desc_table = .{
        .era_flipper_region_id = fd(10, .{ .Varint = .Simple }),
        .state = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KKEAENNDMKB = struct {
    NDPGBLAAGHK: ArrayList(GOAHFMLPDMF),

    pub const _desc_table = .{
        .NDPGBLAAGHK = fd(2, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetEraFlipperDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetEraFlipperDataScRsp = struct {
    data: ?KKEAENNDMKB = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .data = fd(10, .{ .SubMessage = {} }),
        .retcode = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChangeEraFlipperDataCsReq = struct {
    data: ?KKEAENNDMKB = null,

    pub const _desc_table = .{
        .data = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChangeEraFlipperDataScRsp = struct {
    retcode: u32 = 0,
    data: ?KKEAENNDMKB = null,

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
        .data = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ResetEraFlipperDataCsReq = struct {
    PAHMAGPFDDJ: bool = false,

    pub const _desc_table = .{
        .PAHMAGPFDDJ = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ResetEraFlipperDataScRsp = struct {
    PAHMAGPFDDJ: bool = false,
    retcode: u32 = 0,
    data: ?KKEAENNDMKB = null,

    pub const _desc_table = .{
        .PAHMAGPFDDJ = fd(9, .{ .Varint = .Simple }),
        .retcode = fd(4, .{ .Varint = .Simple }),
        .data = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterEraFlipperRegionCsReq = struct {
    era_flipper_region_id: u32 = 0,
    state: u32 = 0,

    pub const _desc_table = .{
        .era_flipper_region_id = fd(11, .{ .Varint = .Simple }),
        .state = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterEraFlipperRegionScRsp = struct {
    retcode: u32 = 0,
    era_flipper_region_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
        .era_flipper_region_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EraFlipperDataChangeScNotify = struct {
    floor_id: u32 = 0,
    data: ?KKEAENNDMKB = null,

    pub const _desc_table = .{
        .floor_id = fd(11, .{ .Varint = .Simple }),
        .data = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EvolveBuildAvatar = struct {
    avatar_type: AvatarType = @enumFromInt(0),
    avatar_id: u32 = 0,
    damage: f64 = 0,

    pub const _desc_table = .{
        .avatar_type = fd(2, .{ .Varint = .Simple }),
        .avatar_id = fd(3, .{ .Varint = .Simple }),
        .damage = fd(9, .{ .FixedInt = .I64 }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EvolveBuildLevelInfo = struct {
    period_id_list: ArrayList(u32),
    battle_target_list: ArrayList(BattleTarget),
    avatar_list: ArrayList(EvolveBuildAvatar),
    season: KLNIPNJCNMJ = @enumFromInt(0),
    round_cnt: u32 = 0,
    battle_info: ?EvolveBuildBattleInfo = null,
    cur_game_exp: u32 = 0,

    pub const _desc_table = .{
        .period_id_list = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .battle_target_list = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .avatar_list = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .season = fd(7, .{ .Varint = .Simple }),
        .round_cnt = fd(2, .{ .Varint = .Simple }),
        .battle_info = fd(3, .{ .SubMessage = {} }),
        .cur_game_exp = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CEENLALPDMK = struct {
    max_score: u32 = 0,
    level_id: u32 = 0,
    CEADMDAMHMO: u32 = 0,

    pub const _desc_table = .{
        .max_score = fd(8, .{ .Varint = .Simple }),
        .level_id = fd(6, .{ .Varint = .Simple }),
        .CEADMDAMHMO = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IMGJIEBFGPF = struct {
    NECILJOJGAN: u32 = 0,
    level: u32 = 0,

    pub const _desc_table = .{
        .NECILJOJGAN = fd(10, .{ .Varint = .Simple }),
        .level = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ECMMJLLHPMD = struct {
    NAJOHIHMABC: bool = false,
    level_id: u32 = 0,
    CADMFGHALJG: bool = false,
    LGDNIIGEPHH: ArrayList(u32),

    pub const _desc_table = .{
        .NAJOHIHMABC = fd(8, .{ .Varint = .Simple }),
        .level_id = fd(1, .{ .Varint = .Simple }),
        .CADMFGHALJG = fd(2, .{ .Varint = .Simple }),
        .LGDNIIGEPHH = fd(11, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PDFHJMMDGAE = struct {
    item_value: u32 = 0,
    COKDNPEEMAG: ArrayList(IMGJIEBFGPF),
    MDCJFOAFDJK: KLNIPNJCNMJ = @enumFromInt(0),

    pub const _desc_table = .{
        .item_value = fd(9, .{ .Varint = .Simple }),
        .COKDNPEEMAG = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .MDCJFOAFDJK = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PDICNBBKFNP = struct {
    COKDNPEEMAG: ArrayList(IMGJIEBFGPF),
    exp: u32 = 0,
    KLGHECCBHCG: ArrayList(CEENLALPDMK),
    LMELJCIFBDF: ArrayList(u32),
    item_value: u32 = 0,
    LCJNNDGKIDP: ArrayList(ECMMJLLHPMD),
    rogue_season_info: ArrayList(PDFHJMMDGAE),
    EODGCNAFIAC: u32 = 0,
    FJOCDKIFPPC: ArrayList(u32),

    pub const _desc_table = .{
        .COKDNPEEMAG = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .exp = fd(12, .{ .Varint = .Simple }),
        .KLGHECCBHCG = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .LMELJCIFBDF = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .item_value = fd(13, .{ .Varint = .Simple }),
        .LCJNNDGKIDP = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .rogue_season_info = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .EODGCNAFIAC = fd(1, .{ .Varint = .Simple }),
        .FJOCDKIFPPC = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EvolveBuildQueryInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EvolveBuildQueryInfoScRsp = struct {
    rogue_current_info: ?PDICNBBKFNP = null,
    DHMBDIIBKLM: ArrayList(EvolveBuildLevelInfo),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .rogue_current_info = fd(14, .{ .SubMessage = {} }),
        .DHMBDIIBKLM = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EvolveBuildStartLevelCsReq = struct {
    level_id: u32 = 0,
    JIAPJHDLFBJ: ?KPKKKJPJCPC = null,
    avatar_list: ArrayList(EvolveBuildAvatar),

    pub const _desc_table = .{
        .level_id = fd(14, .{ .Varint = .Simple }),
        .JIAPJHDLFBJ = fd(10, .{ .SubMessage = {} }),
        .avatar_list = fd(2, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EvolveBuildStartLevelScRsp = struct {
    level_info: ?EvolveBuildLevelInfo = null,
    NOPHEEHJHEK: ?SceneBattleInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .level_info = fd(6, .{ .SubMessage = {} }),
        .NOPHEEHJHEK = fd(9, .{ .SubMessage = {} }),
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EvolveBuildStartStageCsReq = struct {
    level_id: u32 = 0,

    pub const _desc_table = .{
        .level_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EvolveBuildStartStageScRsp = struct {
    NOPHEEHJHEK: ?SceneBattleInfo = null,
    retcode: u32 = 0,
    level_info: ?EvolveBuildLevelInfo = null,

    pub const _desc_table = .{
        .NOPHEEHJHEK = fd(4, .{ .SubMessage = {} }),
        .retcode = fd(14, .{ .Varint = .Simple }),
        .level_info = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EvolveBuildGiveupCsReq = struct {
    level_id: u32 = 0,

    pub const _desc_table = .{
        .level_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EvolveBuildGiveupScRsp = struct {
    level_info: ?EvolveBuildLevelInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .level_info = fd(11, .{ .SubMessage = {} }),
        .retcode = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EvolveBuildLeaveCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EvolveBuildLeaveScRsp = struct {
    retcode: u32 = 0,
    level_info: ?EvolveBuildLevelInfo = null,

    pub const _desc_table = .{
        .retcode = fd(11, .{ .Varint = .Simple }),
        .level_info = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EvolveBuildFinishScNotify = struct {
    score: u32 = 0,
    wave: u32 = 0,
    coin: u32 = 0,
    battle_result_type: DLHCMCNIHII = @enumFromInt(0),
    is_lose: bool = false,
    level_id: u32 = 0,
    cur_period_type: u32 = 0,
    exp: u32 = 0,
    level_info: ?EvolveBuildLevelInfo = null,

    pub const _desc_table = .{
        .score = fd(5, .{ .Varint = .Simple }),
        .wave = fd(7, .{ .Varint = .Simple }),
        .coin = fd(4, .{ .Varint = .Simple }),
        .battle_result_type = fd(13, .{ .Varint = .Simple }),
        .is_lose = fd(12, .{ .Varint = .Simple }),
        .level_id = fd(14, .{ .Varint = .Simple }),
        .cur_period_type = fd(15, .{ .Varint = .Simple }),
        .exp = fd(2, .{ .Varint = .Simple }),
        .level_info = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EvolveBuildReRandomStageCsReq = struct {
    level_id: u32 = 0,

    pub const _desc_table = .{
        .level_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EvolveBuildReRandomStageScRsp = struct {
    JGPBFLCCIJP: ?ECMMJLLHPMD = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .JGPBFLCCIJP = fd(12, .{ .SubMessage = {} }),
        .retcode = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EvolveBuildShopAbilityUpCsReq = struct {
    level: u32 = 0,
    NECILJOJGAN: u32 = 0,

    pub const _desc_table = .{
        .level = fd(9, .{ .Varint = .Simple }),
        .NECILJOJGAN = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EvolveBuildShopAbilityUpScRsp = struct {
    retcode: u32 = 0,
    NECILJOJGAN: u32 = 0,
    level: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
        .NECILJOJGAN = fd(7, .{ .Varint = .Simple }),
        .level = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EvolveBuildShopAbilityDownCsReq = struct {
    NECILJOJGAN: u32 = 0,
    level: u32 = 0,

    pub const _desc_table = .{
        .NECILJOJGAN = fd(3, .{ .Varint = .Simple }),
        .level = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EvolveBuildShopAbilityDownScRsp = struct {
    NECILJOJGAN: u32 = 0,
    retcode: u32 = 0,
    level: u32 = 0,

    pub const _desc_table = .{
        .NECILJOJGAN = fd(4, .{ .Varint = .Simple }),
        .retcode = fd(6, .{ .Varint = .Simple }),
        .level = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EvolveBuildShopAbilityResetCsReq = struct {
    MDCJFOAFDJK: KLNIPNJCNMJ = @enumFromInt(0),

    pub const _desc_table = .{
        .MDCJFOAFDJK = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EvolveBuildShopAbilityResetScRsp = struct {
    COKDNPEEMAG: ArrayList(IMGJIEBFGPF),
    item_value: u32 = 0,
    retcode: u32 = 0,
    MDCJFOAFDJK: KLNIPNJCNMJ = @enumFromInt(0),

    pub const _desc_table = .{
        .COKDNPEEMAG = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .item_value = fd(8, .{ .Varint = .Simple }),
        .retcode = fd(10, .{ .Varint = .Simple }),
        .MDCJFOAFDJK = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EvolveBuildCoinNotify = struct {
    item_value: u32 = 0,
    MDCJFOAFDJK: KLNIPNJCNMJ = @enumFromInt(0),

    pub const _desc_table = .{
        .item_value = fd(3, .{ .Varint = .Simple }),
        .MDCJFOAFDJK = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EvolveBuildSkipTeachLevelCsReq = struct {
    level_id: u32 = 0,

    pub const _desc_table = .{
        .level_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EvolveBuildSkipTeachLevelScRsp = struct {
    level_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .level_id = fd(10, .{ .Varint = .Simple }),
        .retcode = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExpeditionInfo = struct {
    start_expedition_time: i64 = 0,
    avatar_id_list: ArrayList(u32),
    id: u32 = 0,
    total_duration: u32 = 0,

    pub const _desc_table = .{
        .start_expedition_time = fd(11, .{ .Varint = .Simple }),
        .avatar_id_list = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .id = fd(5, .{ .Varint = .Simple }),
        .total_duration = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ActivityExpedition = struct {
    FNGGNBMOFAA: u32 = 0,
    start_expedition_time: i64 = 0,
    IPGECLELHGJ: u32 = 0,
    HNAAMDCFIDA: u32 = 0,
    OJFNLMHMLOF: u32 = 0,
    id: u32 = 0,
    avatar_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .FNGGNBMOFAA = fd(5, .{ .Varint = .Simple }),
        .start_expedition_time = fd(14, .{ .Varint = .Simple }),
        .IPGECLELHGJ = fd(8, .{ .Varint = .Simple }),
        .HNAAMDCFIDA = fd(6, .{ .Varint = .Simple }),
        .OJFNLMHMLOF = fd(2, .{ .Varint = .Simple }),
        .id = fd(7, .{ .Varint = .Simple }),
        .avatar_id_list = fd(11, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetExpeditionDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetExpeditionDataScRsp = struct {
    expedition_info: ArrayList(ExpeditionInfo),
    retcode: u32 = 0,
    JFJPADLALMD: ArrayList(u32),
    FNALLOLDGLM: ArrayList(u32),
    FJGIMKEPJOB: ArrayList(u32),
    activity_expedition_info: ArrayList(ActivityExpedition),
    total_expedition_count: u32 = 0,

    pub const _desc_table = .{
        .expedition_info = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(7, .{ .Varint = .Simple }),
        .JFJPADLALMD = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .FNALLOLDGLM = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
        .FJGIMKEPJOB = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
        .activity_expedition_info = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .total_expedition_count = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AcceptExpeditionCsReq = struct {
    accept_expedition: ?ExpeditionInfo = null,

    pub const _desc_table = .{
        .accept_expedition = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AcceptExpeditionScRsp = struct {
    retcode: u32 = 0,
    accept_expedition: ?ExpeditionInfo = null,

    pub const _desc_table = .{
        .retcode = fd(11, .{ .Varint = .Simple }),
        .accept_expedition = fd(9, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AcceptMultipleExpeditionCsReq = struct {
    expedition: ArrayList(ExpeditionInfo),

    pub const _desc_table = .{
        .expedition = fd(11, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AcceptMultipleExpeditionScRsp = struct {
    accept_multi_expedition: ArrayList(ExpeditionInfo),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .accept_multi_expedition = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CancelExpeditionCsReq = struct {
    expedition_id: u32 = 0,

    pub const _desc_table = .{
        .expedition_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CancelExpeditionScRsp = struct {
    retcode: u32 = 0,
    expedition_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
        .expedition_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeExpeditionRewardCsReq = struct {
    expedition_id: u32 = 0,

    pub const _desc_table = .{
        .expedition_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeExpeditionRewardScRsp = struct {
    reward: ?ItemList = null,
    extra_reward: ?ItemList = null,
    retcode: u32 = 0,
    expedition_id: u32 = 0,

    pub const _desc_table = .{
        .reward = fd(1, .{ .SubMessage = {} }),
        .extra_reward = fd(9, .{ .SubMessage = {} }),
        .retcode = fd(13, .{ .Varint = .Simple }),
        .expedition_id = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeMultipleExpeditionRewardCsReq = struct {
    take_multi_expedition: ArrayList(u32),

    pub const _desc_table = .{
        .take_multi_expedition = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeMultipleExpeditionRewardScRsp = struct {
    retcode: u32 = 0,
    extra_reward: ?ItemList = null,
    reward_expedition: ArrayList(u32),
    extra_reward_list: ArrayList(ItemList),
    reward_list: ArrayList(ItemList),
    reward: ?ItemList = null,

    pub const _desc_table = .{
        .retcode = fd(6, .{ .Varint = .Simple }),
        .extra_reward = fd(9, .{ .SubMessage = {} }),
        .reward_expedition = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
        .extra_reward_list = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .reward_list = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .reward = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExpeditionDataChangeScNotify = struct {
    activity_expedition_info: ArrayList(ActivityExpedition),
    JFJPADLALMD: ArrayList(u32),
    total_expedition_count: u32 = 0,
    expedition_info: ArrayList(ExpeditionInfo),
    FNALLOLDGLM: ArrayList(u32),

    pub const _desc_table = .{
        .activity_expedition_info = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .JFJPADLALMD = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
        .total_expedition_count = fd(15, .{ .Varint = .Simple }),
        .expedition_info = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .FNALLOLDGLM = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AcceptActivityExpeditionCsReq = struct {
    LGKJLFJGOJE: ?ActivityExpedition = null,

    pub const _desc_table = .{
        .LGKJLFJGOJE = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AcceptActivityExpeditionScRsp = struct {
    retcode: u32 = 0,
    LGKJLFJGOJE: ?ActivityExpedition = null,

    pub const _desc_table = .{
        .retcode = fd(4, .{ .Varint = .Simple }),
        .LGKJLFJGOJE = fd(10, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CancelActivityExpeditionCsReq = struct {
    MPGEMLGLHBH: u32 = 0,

    pub const _desc_table = .{
        .MPGEMLGLHBH = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CancelActivityExpeditionScRsp = struct {
    MPGEMLGLHBH: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .MPGEMLGLHBH = fd(9, .{ .Varint = .Simple }),
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeActivityExpeditionRewardCsReq = struct {
    MPGEMLGLHBH: u32 = 0,

    pub const _desc_table = .{
        .MPGEMLGLHBH = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeActivityExpeditionRewardScRsp = struct {
    extra_reward: ?ItemList = null,
    MPGEMLGLHBH: u32 = 0,
    score_id: u32 = 0,
    reward: ?ItemList = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .extra_reward = fd(8, .{ .SubMessage = {} }),
        .MPGEMLGLHBH = fd(14, .{ .Varint = .Simple }),
        .score_id = fd(5, .{ .Varint = .Simple }),
        .reward = fd(1, .{ .SubMessage = {} }),
        .retcode = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeMultipleActivityExpeditionRewardCsReq = struct {
    GOMDMNHMMNH: ArrayList(u32),

    pub const _desc_table = .{
        .GOMDMNHMMNH = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MMNJMINGAHJ = struct {
    score_id: u32 = 0,
    reward: ?ItemList = null,
    extra_reward: ?ItemList = null,
    MPGEMLGLHBH: u32 = 0,

    pub const _desc_table = .{
        .score_id = fd(11, .{ .Varint = .Simple }),
        .reward = fd(2, .{ .SubMessage = {} }),
        .extra_reward = fd(12, .{ .SubMessage = {} }),
        .MPGEMLGLHBH = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeMultipleActivityExpeditionRewardScRsp = struct {
    CDNDFCEEDCO: ArrayList(MMNJMINGAHJ),
    retcode: u32 = 0,
    JIEEELIKIJM: ArrayList(u32),

    pub const _desc_table = .{
        .CDNDFCEEDCO = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(4, .{ .Varint = .Simple }),
        .JIEEELIKIJM = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GCAIEMMCPDH = struct {
    buff_list: ArrayList(u32),
    avatar_list: ArrayList(KJMFEOCKCML),

    pub const _desc_table = .{
        .buff_list = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
        .avatar_list = fd(6, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FHBLGMPMIIE = struct {
    JGAJKOEFGPC: ArrayList(JGAJKOEFGPCEntry),
    GBLOOEPPGDM: ArrayList(GBLOOEPPGDMEntry),
    BEJCALDILNC: u32 = 0,
    AMDHNCJJOPH: ArrayList(u32),
    NJNGBPJEMCL: ArrayList(u32),
    HKMMNFGHFPB: ArrayList(u32),
    EDHNAKFOFGJ: ArrayList(u32),

    pub const _desc_table = .{
        .JGAJKOEFGPC = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .GBLOOEPPGDM = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .BEJCALDILNC = fd(11, .{ .Varint = .Simple }),
        .AMDHNCJJOPH = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
        .NJNGBPJEMCL = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        .HKMMNFGHFPB = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .EDHNAKFOFGJ = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub const JGAJKOEFGPCEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const GBLOOEPPGDMEntry = struct {
        key: u32 = 0,
        value: ?GCAIEMMCPDH = null,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFantasticStoryActivityDataCsReq = struct {
    BEJCALDILNC: u32 = 0,

    pub const _desc_table = .{
        .BEJCALDILNC = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFantasticStoryActivityDataScRsp = struct {
    retcode: u32 = 0,
    FPEPICFCFFM: ?FHBLGMPMIIE = null,

    pub const _desc_table = .{
        .retcode = fd(8, .{ .Varint = .Simple }),
        .FPEPICFCFFM = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishChapterScNotify = struct {
    FPEPICFCFFM: ?FHBLGMPMIIE = null,

    pub const _desc_table = .{
        .FPEPICFCFFM = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KJMFEOCKCML = struct {
    avatar_type: AvatarType = @enumFromInt(0),
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .avatar_type = fd(6, .{ .Varint = .Simple }),
        .avatar_id = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterFantasticStoryActivityStageCsReq = struct {
    avatar_list: ArrayList(KJMFEOCKCML),
    buff_list: ArrayList(u32),
    BEJCALDILNC: u32 = 0,
    battle_id: u32 = 0,

    pub const _desc_table = .{
        .avatar_list = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .buff_list = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
        .BEJCALDILNC = fd(9, .{ .Varint = .Simple }),
        .battle_id = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterFantasticStoryActivityStageScRsp = struct {
    battle_id: u32 = 0,
    retcode: u32 = 0,
    BEJCALDILNC: u32 = 0,
    battle_info: ?SceneBattleInfo = null,

    pub const _desc_table = .{
        .battle_id = fd(14, .{ .Varint = .Simple }),
        .retcode = fd(10, .{ .Varint = .Simple }),
        .BEJCALDILNC = fd(1, .{ .Varint = .Simple }),
        .battle_info = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FantasticStoryActivityBattleEndScNotify = struct {
    BEJCALDILNC: u32 = 0,
    PKKLPBBNNCE: u32 = 0,
    battle_id: u32 = 0,

    pub const _desc_table = .{
        .BEJCALDILNC = fd(3, .{ .Varint = .Simple }),
        .PKKLPBBNNCE = fd(1, .{ .Varint = .Simple }),
        .battle_id = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EHFOGJKJMEF = struct {
    IMFCIMKMJPL: u32 = 0,
    modifier_source_type: DLBFAHOAGPH = @enumFromInt(0),

    pub const _desc_table = .{
        .IMFCIMKMJPL = fd(5, .{ .Varint = .Simple }),
        .modifier_source_type = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MAAOLKGLLBI = struct {
    unique_id: u32 = 0,
    KKEAEBAGMKE: bool = false,
    affix_id: u32 = 0,
    monster_list: ArrayList(u32),
    HHENFGJPFOA: bool = false,

    pub const _desc_table = .{
        .unique_id = fd(7, .{ .Varint = .Simple }),
        .KKEAEBAGMKE = fd(6, .{ .Varint = .Simple }),
        .affix_id = fd(14, .{ .Varint = .Simple }),
        .monster_list = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .HHENFGJPFOA = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NFKDAAGBMPJ = struct {
    rank: u32 = 0,
    hp: i32 = 0,
    max_hp: i32 = 0,
    MHGDGGNIJCG: ArrayList(MAAOLKGLLBI),
    status: MGPOCJFMKPM = @enumFromInt(0),
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .rank = fd(14, .{ .Varint = .Simple }),
        .hp = fd(6, .{ .Varint = .Simple }),
        .max_hp = fd(10, .{ .Varint = .Simple }),
        .MHGDGGNIJCG = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .status = fd(7, .{ .Varint = .Simple }),
        .avatar_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FEKFBAOCGKP = struct {
    avatar_id: u32 = 0,
    HNJFFFJDGNE: bool = false,

    pub const _desc_table = .{
        .avatar_id = fd(12, .{ .Varint = .Simple }),
        .HNJFFFJDGNE = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OIEGKNHNIAN = struct {
    JMJDBALGMHD: ?FEKFBAOCGKP = null,
    LGHOCABPPEH: ?FEKFBAOCGKP = null,

    pub const _desc_table = .{
        .JMJDBALGMHD = fd(11, .{ .SubMessage = {} }),
        .LGHOCABPPEH = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MAKGEEHGPOH = struct {
    GMMOPDHDFCI: ArrayList(NFKDAAGBMPJ),

    pub const _desc_table = .{
        .GMMOPDHDFCI = fd(5, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GKICOCCLPMG = struct {
    cnt: u32 = 0,
    buff_id: u32 = 0,

    pub const _desc_table = .{
        .cnt = fd(5, .{ .Varint = .Simple }),
        .buff_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AOGEPPFCPIN = struct {
    cnt: u32 = 0,
    source: ?EHFOGJKJMEF = null,

    pub const _desc_table = .{
        .cnt = fd(15, .{ .Varint = .Simple }),
        .source = fd(7, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AHNNKNPFAGD = struct {
    JHNKMOHLBPJ: u32 = 0,
    LFEGONPNPKG: ArrayList(AOGEPPFCPIN),

    pub const _desc_table = .{
        .JHNKMOHLBPJ = fd(13, .{ .Varint = .Simple }),
        .LFEGONPNPKG = fd(14, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CAHIHNJIAJB = struct {
    DMHEDHLDHMO: ArrayList(u32),
    MIALMMLJBML: ArrayList(AHNNKNPFAGD),
    MKJLCADGMLE: u32 = 0,
    FAJJEOGKOON: ArrayList(FAJJEOGKOONEntry),
    buff_list: ArrayList(GKICOCCLPMG),
    AEKJLHJOPCE: ArrayList(u32),

    pub const _desc_table = .{
        .DMHEDHLDHMO = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        .MIALMMLJBML = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .MKJLCADGMLE = fd(10, .{ .Varint = .Simple }),
        .FAJJEOGKOON = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .buff_list = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .AEKJLHJOPCE = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub const FAJJEOGKOONEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EMNMLIILKKE = struct {
    KHCKFBHCFPL: u32 = 0,
    buff_id: u32 = 0,
    cnt: u32 = 0,
    HDBBBGGMFJP: bool = false,

    pub const _desc_table = .{
        .KHCKFBHCFPL = fd(11, .{ .Varint = .Simple }),
        .buff_id = fd(5, .{ .Varint = .Simple }),
        .cnt = fd(13, .{ .Varint = .Simple }),
        .HDBBBGGMFJP = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BMKFOIFLBLE = struct {
    KMDEIFBPNCB: u32 = 0,
    item_value: u32 = 0,

    pub const _desc_table = .{
        .KMDEIFBPNCB = fd(4, .{ .Varint = .Simple }),
        .item_value = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BMMLAFJKNLH = struct {
    DIPJOIACLHN: bool = false,
    MEECNGKLDJG: u32 = 0,
    PPIBBKHLMJC: ArrayList(EMNMLIILKKE),
    item_value: u32 = 0,
    BCFAIIJFLFA: bool = false,
    IHJIFPPHKJD: ArrayList(BMKFOIFLBLE),
    AKIDCLEFPDK: u32 = 0,

    pub const _desc_table = .{
        .DIPJOIACLHN = fd(1, .{ .Varint = .Simple }),
        .MEECNGKLDJG = fd(8, .{ .Varint = .Simple }),
        .PPIBBKHLMJC = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .item_value = fd(13, .{ .Varint = .Simple }),
        .BCFAIIJFLFA = fd(5, .{ .Varint = .Simple }),
        .IHJIFPPHKJD = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .AKIDCLEFPDK = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MLKOINJENMH = struct {
    NODMOBECPEO: u32 = 0,
    NDBOJANDNJN: u32 = 0,
    HPLJNILNICK: u32 = 0,

    pub const _desc_table = .{
        .NODMOBECPEO = fd(9, .{ .Varint = .Simple }),
        .NDBOJANDNJN = fd(12, .{ .Varint = .Simple }),
        .HPLJNILNICK = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MMEFNOCBBBC = struct {
    PMAOKEOOBNO: ArrayList(u32),

    pub const _desc_table = .{
        .PMAOKEOOBNO = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LOMJKOBDJFP = struct {
    unique_id: u32 = 0,
    FINBJPFFDHI: u32 = 0,

    pub const _desc_table = .{
        .unique_id = fd(1, .{ .Varint = .Simple }),
        .FINBJPFFDHI = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MBLNBBODELL = struct {
    value: i32 = 0,
    unique_id: u32 = 0,
    HAPEKNJBOJE: u32 = 0,

    pub const _desc_table = .{
        .value = fd(8, .{ .Varint = .Simple }),
        .unique_id = fd(5, .{ .Varint = .Simple }),
        .HAPEKNJBOJE = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HDHAPALLLMK = struct {
    FBFJMPFBCHB: ArrayList(LOMJKOBDJFP),
    DEAJILAEAKO: ?BMMLAFJKNLH = null,
    pending_action: ?KADINMKCJBH = null,
    CBFHIDMKFLB: u32 = 0,
    JBPMIBFMCPL: ?MMEFNOCBBBC = null,
    difficulty_level: u32 = 0,
    DHCLLAANEEF: ?MAKGEEHGPOH = null,
    NLMHPLDMCMD: ArrayList(MBLNBBODELL),
    area_id: u32 = 0,
    CJCDNDKHMNK: ?CAHIHNJIAJB = null,
    DPJEGIBDDPC: ?MLKOINJENMH = null,
    status: GHHDMEMLKPO = @enumFromInt(0),
    JCOODGOENPM: ?FBFBMDEPCBP = null,
    DGNAMOELMGK: ?PNNAEEAKHOF = null,

    pub const _desc_table = .{
        .FBFJMPFBCHB = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .DEAJILAEAKO = fd(4, .{ .SubMessage = {} }),
        .pending_action = fd(1, .{ .SubMessage = {} }),
        .CBFHIDMKFLB = fd(3, .{ .Varint = .Simple }),
        .JBPMIBFMCPL = fd(8, .{ .SubMessage = {} }),
        .difficulty_level = fd(12, .{ .Varint = .Simple }),
        .DHCLLAANEEF = fd(13, .{ .SubMessage = {} }),
        .NLMHPLDMCMD = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .area_id = fd(7, .{ .Varint = .Simple }),
        .CJCDNDKHMNK = fd(5, .{ .SubMessage = {} }),
        .DPJEGIBDDPC = fd(9, .{ .SubMessage = {} }),
        .status = fd(15, .{ .Varint = .Simple }),
        .JCOODGOENPM = fd(135, .{ .SubMessage = {} }),
        .DGNAMOELMGK = fd(433, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KADINMKCJBH = struct {
    KIABCFHDGBK: ?PEAJLADINFK = null,
    queue_position: u32 = 0,

    pub const _desc_table = .{
        .KIABCFHDGBK = fd(13, .{ .SubMessage = {} }),
        .queue_position = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateHandlePendingActionCsReq = struct {
    queue_position: u32 = 0,
    KOIJFOFFJNJ: ?KOIJFOFFJNJ_union,

    pub const _KOIJFOFFJNJ_case = enum {
        BAMNOJKMBMN,
        FJGMNIOILOK,
    };
    pub const KOIJFOFFJNJ_union = union(_KOIJFOFFJNJ_case) {
        BAMNOJKMBMN: LICMPOLBCFJ,
        FJGMNIOILOK: DANEMLLJACO,
        pub const _union_desc = .{
            .BAMNOJKMBMN = fd(12, .{ .SubMessage = {} }),
            .FJGMNIOILOK = fd(10, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .queue_position = fd(3, .{ .Varint = .Simple }),
        .KOIJFOFFJNJ = fd(null, .{ .OneOf = KOIJFOFFJNJ_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LICMPOLBCFJ = struct {
    NOJIPBNOFEP: u32 = 0,

    pub const _desc_table = .{
        .NOJIPBNOFEP = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DANEMLLJACO = struct {
    LECDHDDCEIA: bool = false,
    BCOLEEDGCPK: u32 = 0,

    pub const _desc_table = .{
        .LECDHDDCEIA = fd(2, .{ .Varint = .Simple }),
        .BCOLEEDGCPK = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateHandlePendingActionScRsp = struct {
    queue_position: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .queue_position = fd(11, .{ .Varint = .Simple }),
        .retcode = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateSyncActionResultScNotify = struct {
    action_result_list: ArrayList(IBEIIHLDKAN),

    pub const _desc_table = .{
        .action_result_list = fd(13, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IBEIIHLDKAN = struct {
    ECOEKHPGMEA: ?ECOEKHPGMEA_union,

    pub const _ECOEKHPGMEA_case = enum {
        DPBGPFADPJB,
        APOAAJEHEFA,
        MHEAGDGLGCD,
        LJOIKIFPDKD,
        JFCOPCFMOBC,
        OODNPIBEGCF,
        OFJFLADAGPG,
        CLMCJCOAHJA,
        ILPMCFEPLHD,
        EABFCLLKPJA,
        GDFAPBIOMGP,
        JGBLIMAOOKD,
        EPEJBIOEJGH,
        LGKFIGMHHOG,
        KHCDHCNGFFD,
        MBIFDIPFMDN,
        PHFPNGODBLD,
        NCFFKKBBBOF,
        INDJMLOCFKI,
        MBAMPALALIE,
        FNEFFJODFJI,
        PGCPAICCCKH,
    };
    pub const ECOEKHPGMEA_union = union(_ECOEKHPGMEA_case) {
        DPBGPFADPJB: JKPNBBIIBNP,
        APOAAJEHEFA: CIFDFLDEOKC,
        MHEAGDGLGCD: KOJPPIAGBDF,
        LJOIKIFPDKD: HIFEBJCJLCN,
        JFCOPCFMOBC: JBHPFNNFKIP,
        OODNPIBEGCF: HMCAPGMLPOB,
        OFJFLADAGPG: OHCMFGGBJCJ,
        CLMCJCOAHJA: LOLENBEAHBI,
        ILPMCFEPLHD: IGKEEHMGCPA,
        EABFCLLKPJA: ALGENLCOGGI,
        GDFAPBIOMGP: AIFKHOMFGLF,
        JGBLIMAOOKD: JPBJLKJBJOA,
        EPEJBIOEJGH: MFDALMKKHOM,
        LGKFIGMHHOG: BHIHNLGPFFG,
        KHCDHCNGFFD: HOMJEMILMMF,
        MBIFDIPFMDN: EGLBNLJHBFJ,
        PHFPNGODBLD: OKLHBCFMBBO,
        NCFFKKBBBOF: FAJOFMFCJEM,
        INDJMLOCFKI: OAGAOPCJDJA,
        MBAMPALALIE: IAKNHMEGIKO,
        FNEFFJODFJI: LIMLKCFGKFA,
        PGCPAICCCKH: MKGOHMIHGGJ,
        pub const _union_desc = .{
            .DPBGPFADPJB = fd(10, .{ .SubMessage = {} }),
            .APOAAJEHEFA = fd(7, .{ .SubMessage = {} }),
            .MHEAGDGLGCD = fd(6, .{ .SubMessage = {} }),
            .LJOIKIFPDKD = fd(8, .{ .SubMessage = {} }),
            .JFCOPCFMOBC = fd(9, .{ .SubMessage = {} }),
            .OODNPIBEGCF = fd(15, .{ .SubMessage = {} }),
            .OFJFLADAGPG = fd(5, .{ .SubMessage = {} }),
            .CLMCJCOAHJA = fd(1, .{ .SubMessage = {} }),
            .ILPMCFEPLHD = fd(11, .{ .SubMessage = {} }),
            .EABFCLLKPJA = fd(4, .{ .SubMessage = {} }),
            .GDFAPBIOMGP = fd(3, .{ .SubMessage = {} }),
            .JGBLIMAOOKD = fd(13, .{ .SubMessage = {} }),
            .EPEJBIOEJGH = fd(14, .{ .SubMessage = {} }),
            .LGKFIGMHHOG = fd(12, .{ .SubMessage = {} }),
            .KHCDHCNGFFD = fd(2, .{ .SubMessage = {} }),
            .MBIFDIPFMDN = fd(1725, .{ .SubMessage = {} }),
            .PHFPNGODBLD = fd(714, .{ .SubMessage = {} }),
            .NCFFKKBBBOF = fd(183, .{ .SubMessage = {} }),
            .INDJMLOCFKI = fd(1623, .{ .SubMessage = {} }),
            .MBAMPALALIE = fd(1128, .{ .SubMessage = {} }),
            .FNEFFJODFJI = fd(1841, .{ .SubMessage = {} }),
            .PGCPAICCCKH = fd(267, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .ECOEKHPGMEA = fd(null, .{ .OneOf = ECOEKHPGMEA_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HMCAPGMLPOB = struct {
    AKIDCLEFPDK: u32 = 0,
    MEECNGKLDJG: u32 = 0,

    pub const _desc_table = .{
        .AKIDCLEFPDK = fd(8, .{ .Varint = .Simple }),
        .MEECNGKLDJG = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HOMJEMILMMF = struct {
    DEAJILAEAKO: ?BMMLAFJKNLH = null,

    pub const _desc_table = .{
        .DEAJILAEAKO = fd(13, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LIMLKCFGKFA = struct {
    BCFAIIJFLFA: bool = false,

    pub const _desc_table = .{
        .BCFAIIJFLFA = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MKGOHMIHGGJ = struct {
    PMAOKEOOBNO: ArrayList(u32),

    pub const _desc_table = .{
        .PMAOKEOOBNO = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JPBJLKJBJOA = struct {
    INBADCFNJIF: ArrayList(u32),
    IJOMBHBCGNN: ArrayList(GKICOCCLPMG),

    pub const _desc_table = .{
        .INBADCFNJIF = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .IJOMBHBCGNN = fd(7, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MFDALMKKHOM = struct {
    BJGMJNGOGJG: ArrayList(AHNNKNPFAGD),
    IEAKBNHFNID: ArrayList(u32),

    pub const _desc_table = .{
        .BJGMJNGOGJG = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .IEAKBNHFNID = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BHIHNLGPFFG = struct {
    ICFPFLMBJGP: ArrayList(u32),
    FNDGCJHFCDG: ArrayList(u32),

    pub const _desc_table = .{
        .ICFPFLMBJGP = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
        .FNDGCJHFCDG = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OKLHBCFMBBO = struct {
    MCPMIJACMCI: ArrayList(u32),
    NFBGLBEEIBM: ArrayList(NFBGLBEEIBMEntry),

    pub const _desc_table = .{
        .MCPMIJACMCI = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        .NFBGLBEEIBM = fd(3, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const NFBGLBEEIBMEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IAKNHMEGIKO = struct {
    AEKJLHJOPCE: ArrayList(u32),

    pub const _desc_table = .{
        .AEKJLHJOPCE = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FAJOFMFCJEM = struct {
    GAKBPIPLDIO: ?COIEIHNKCDK = null,

    pub const _desc_table = .{
        .GAKBPIPLDIO = fd(13, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OAGAOPCJDJA = struct {
    FHIKIHFLEIA: ?EHFOGJKJMEF = null,

    pub const _desc_table = .{
        .FHIKIHFLEIA = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JKPNBBIIBNP = struct {
    KFGJBILJGDP: ?MLKOINJENMH = null,

    pub const _desc_table = .{
        .KFGJBILJGDP = fd(4, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CIFDFLDEOKC = struct {
    PJGBFKNJPNO: GHHDMEMLKPO = @enumFromInt(0),

    pub const _desc_table = .{
        .PJGBFKNJPNO = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KCLGBMFEHBE = struct {
    KDGCCOMKIPO: f64 = 0,
    NFKMDDNPGBJ: u32 = 0,
    DCABNHJMMJG: bool = false,
    BPOCKMFJMEK: u32 = 0,
    CBLAMACCEPB: u32 = 0,
    avatar_id: u32 = 0,
    EMPLJNHEPHC: bool = false,
    BAMEDJDAOMC: u32 = 0,
    NKBMEBELLFJ: u32 = 0,

    pub const _desc_table = .{
        .KDGCCOMKIPO = fd(13, .{ .FixedInt = .I64 }),
        .NFKMDDNPGBJ = fd(15, .{ .Varint = .Simple }),
        .DCABNHJMMJG = fd(12, .{ .Varint = .Simple }),
        .BPOCKMFJMEK = fd(4, .{ .Varint = .Simple }),
        .CBLAMACCEPB = fd(14, .{ .Varint = .Simple }),
        .avatar_id = fd(6, .{ .Varint = .Simple }),
        .EMPLJNHEPHC = fd(11, .{ .Varint = .Simple }),
        .BAMEDJDAOMC = fd(8, .{ .Varint = .Simple }),
        .NKBMEBELLFJ = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KOJPPIAGBDF = struct {
    AMHBLHCPCOH: ArrayList(KCLGBMFEHBE),
    IMHHILCMMGI: u32 = 0,
    BILEJKHIHJL: u32 = 0,
    HAHJHBFAEFC: u32 = 0,
    DKPDEHNDFLH: ArrayList(u32),
    GMMOPDHDFCI: ArrayList(NFKDAAGBMPJ),
    CPCNMDEJILI: u32 = 0,
    CFLDPLOFKAM: bool = false,

    pub const _desc_table = .{
        .AMHBLHCPCOH = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .IMHHILCMMGI = fd(13, .{ .Varint = .Simple }),
        .BILEJKHIHJL = fd(1, .{ .Varint = .Simple }),
        .HAHJHBFAEFC = fd(12, .{ .Varint = .Simple }),
        .DKPDEHNDFLH = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
        .GMMOPDHDFCI = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .CPCNMDEJILI = fd(9, .{ .Varint = .Simple }),
        .CFLDPLOFKAM = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HIFEBJCJLCN = struct {
    FMLLHLKOJLJ: ArrayList(OIEGKNHNIAN),

    pub const _desc_table = .{
        .FMLLHLKOJLJ = fd(9, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JBHPFNNFKIP = struct {
    HHJOCGOMECO: u32 = 0,

    pub const _desc_table = .{
        .HHJOCGOMECO = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OHCMFGGBJCJ = struct {
    MKJLCADGMLE: u32 = 0,

    pub const _desc_table = .{
        .MKJLCADGMLE = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LOLENBEAHBI = struct {
    GECNFFHGIAH: ?LOMJKOBDJFP = null,

    pub const _desc_table = .{
        .GECNFFHGIAH = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IGKEEHMGCPA = struct {
    unique_id: u32 = 0,

    pub const _desc_table = .{
        .unique_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ALGENLCOGGI = struct {
    HKFHBAKHNLH: ?MBLNBBODELL = null,

    pub const _desc_table = .{
        .HKFHBAKHNLH = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AIFKHOMFGLF = struct {
    unique_id: u32 = 0,

    pub const _desc_table = .{
        .unique_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EGLBNLJHBFJ = struct {
    AIMGDMFAAHH: ?NFKDAAGBMPJ = null,

    pub const _desc_table = .{
        .AIMGDMFAAHH = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateSyncPendingActionScNotify = struct {
    pending_action: ?KADINMKCJBH = null,

    pub const _desc_table = .{
        .pending_action = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PEAJLADINFK = struct {
    ECOEKHPGMEA: ?ECOEKHPGMEA_union,

    pub const _ECOEKHPGMEA_case = enum {
        BAMNOJKMBMN,
        FJGMNIOILOK,
    };
    pub const ECOEKHPGMEA_union = union(_ECOEKHPGMEA_case) {
        BAMNOJKMBMN: CMHMBLALOHN,
        FJGMNIOILOK: NLFDKOIODMD,
        pub const _union_desc = .{
            .BAMNOJKMBMN = fd(12, .{ .SubMessage = {} }),
            .FJGMNIOILOK = fd(4, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .ECOEKHPGMEA = fd(null, .{ .OneOf = ECOEKHPGMEA_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CMHMBLALOHN = struct {
    GPBGBMALJKP: ArrayList(u32),

    pub const _desc_table = .{
        .GPBGBMALJKP = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IDMDLOKHEBJ = struct {
    APPKEEOBJKC: u32 = 0,
    HAPEKNJBOJE: u32 = 0,

    pub const _desc_table = .{
        .APPKEEOBJKC = fd(14, .{ .Varint = .Simple }),
        .HAPEKNJBOJE = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NLFDKOIODMD = struct {
    IPMAJOJKBDB: ArrayList(IDMDLOKHEBJ),

    pub const _desc_table = .{
        .IPMAJOJKBDB = fd(5, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MGCEHCMPAHE = struct {
    EHBGHCGKFBH: ArrayList(u32),
    JJDOACKKCBJ: ?JGOGDBMPLCP = null,
    MFKJDOEBLIM: ?DLIKBEGADFP = null,
    NGPIGMBNIAC: ArrayList(u32),

    pub const _desc_table = .{
        .EHBGHCGKFBH = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
        .JJDOACKKCBJ = fd(14, .{ .SubMessage = {} }),
        .MFKJDOEBLIM = fd(12, .{ .SubMessage = {} }),
        .NGPIGMBNIAC = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DLIKBEGADFP = struct {
    KGFFJFOMCJH: u32 = 0,
    OGNKLCEJPHA: ArrayList(OGNKLCEJPHAEntry),
    HCNPHHBABPI: ?OKDBFBHKAKK = null,
    AJAOOLENENN: ArrayList(CKFKNBMHMHM),
    EHMOJBCCEMH: ?OKDBFBHKAKK = null,

    pub const _desc_table = .{
        .KGFFJFOMCJH = fd(7, .{ .Varint = .Simple }),
        .OGNKLCEJPHA = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .HCNPHHBABPI = fd(12, .{ .SubMessage = {} }),
        .AJAOOLENENN = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .EHMOJBCCEMH = fd(6, .{ .SubMessage = {} }),
    };

    pub const OGNKLCEJPHAEntry = struct {
        key: u32 = 0,
        value: ?OKDBFBHKAKK = null,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JGOGDBMPLCP = struct {
    FJOKPLKODLD: ArrayList(u32),
    FMCDGPJFEAF: ArrayList(u32),
    exp: u32 = 0,

    pub const _desc_table = .{
        .FJOKPLKODLD = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
        .FMCDGPJFEAF = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
        .exp = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OKDBFBHKAKK = struct {
    LBBJIMAMCGE: u32 = 0,
    LJLKNDJCBMF: ArrayList(LJLKNDJCBMFEntry),
    CEIHFOKENOB: ArrayList(u32),
    durability: u32 = 0,

    pub const _desc_table = .{
        .LBBJIMAMCGE = fd(14, .{ .Varint = .Simple }),
        .LJLKNDJCBMF = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .CEIHFOKENOB = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .durability = fd(9, .{ .Varint = .Simple }),
    };

    pub const LJLKNDJCBMFEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateQueryCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateQueryScRsp = struct {
    retcode: u32 = 0,
    rogue_get_info: ?MGCEHCMPAHE = null,
    level_info: ?HDHAPALLLMK = null,

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
        .rogue_get_info = fd(2, .{ .SubMessage = {} }),
        .level_info = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateStartCsReq = struct {
    area_id: u32 = 0,
    difficulty_level: u32 = 0,
    avatar_list: ArrayList(FeverTimeAvatar),

    pub const _desc_table = .{
        .area_id = fd(14, .{ .Varint = .Simple }),
        .difficulty_level = fd(8, .{ .Varint = .Simple }),
        .avatar_list = fd(3, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateStartScRsp = struct {
    level_info: ?HDHAPALLLMK = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .level_info = fd(4, .{ .SubMessage = {} }),
        .retcode = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateBattleStartCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateBattleStartScRsp = struct {
    retcode: u32 = 0,
    battle_info: ?SceneBattleInfo = null,

    pub const _desc_table = .{
        .retcode = fd(10, .{ .Varint = .Simple }),
        .battle_info = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateChangeLineupCsReq = struct {
    avatar_list: ArrayList(FeverTimeAvatar),

    pub const _desc_table = .{
        .avatar_list = fd(7, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateChangeLineupScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateShopBuyGoodsCsReq = struct {
    DBANKKBMEMM: u32 = 0,

    pub const _desc_table = .{
        .DBANKKBMEMM = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateShopBuyGoodsScRsp = struct {
    DBANKKBMEMM: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .DBANKKBMEMM = fd(1, .{ .Varint = .Simple }),
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateShopSellBuffCsReq = struct {
    IMAJOANAKDC: u32 = 0,
    PIGDOHEJLMJ: bool = false,
    OLPEMMHKJPN: u32 = 0,

    pub const _desc_table = .{
        .IMAJOANAKDC = fd(8, .{ .Varint = .Simple }),
        .PIGDOHEJLMJ = fd(11, .{ .Varint = .Simple }),
        .OLPEMMHKJPN = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateShopSellBuffScRsp = struct {
    IMAJOANAKDC: u32 = 0,
    OLPEMMHKJPN: u32 = 0,
    PIGDOHEJLMJ: bool = false,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .IMAJOANAKDC = fd(6, .{ .Varint = .Simple }),
        .OLPEMMHKJPN = fd(7, .{ .Varint = .Simple }),
        .PIGDOHEJLMJ = fd(15, .{ .Varint = .Simple }),
        .retcode = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateShopRefreshGoodsCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateShopRefreshGoodsScRsp = struct {
    PPIBBKHLMJC: ArrayList(EMNMLIILKKE),
    DIPJOIACLHN: bool = false,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .PPIBBKHLMJC = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .DIPJOIACLHN = fd(14, .{ .Varint = .Simple }),
        .retcode = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateShopLockGoodsCsReq = struct {
    is_locked: bool = false,

    pub const _desc_table = .{
        .is_locked = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateShopLockGoodsScRsp = struct {
    retcode: u32 = 0,
    is_locked: bool = false,

    pub const _desc_table = .{
        .retcode = fd(5, .{ .Varint = .Simple }),
        .is_locked = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateShopLeaveCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateShopLeaveScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FBFBMDEPCBP = struct {
    FMLLHLKOJLJ: ArrayList(OIEGKNHNIAN),

    pub const _desc_table = .{
        .FMLLHLKOJLJ = fd(11, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const COIEIHNKCDK = struct {
    source: ?EHFOGJKJMEF = null,
    DFGDJMPMBLF: ArrayList(DFGDJMPMBLFEntry),

    pub const _desc_table = .{
        .source = fd(1, .{ .SubMessage = {} }),
        .DFGDJMPMBLF = fd(5, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const DFGDJMPMBLFEntry = struct {
        key: u32 = 0,
        value: f64 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .FixedInt = .I64 }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PNNAEEAKHOF = struct {
    JJBOOHNMPNB: ArrayList(COIEIHNKCDK),

    pub const _desc_table = .{
        .JJBOOHNMPNB = fd(14, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateSettleCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateSettleScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BHMCFKHILFO = struct {
    avatar_type: AvatarType = @enumFromInt(0),
    id: u32 = 0,
    level: u32 = 0,
    CHNPDAJEIPK: bool = false,

    pub const _desc_table = .{
        .avatar_type = fd(2, .{ .Varint = .Simple }),
        .id = fd(11, .{ .Varint = .Simple }),
        .level = fd(12, .{ .Varint = .Simple }),
        .CHNPDAJEIPK = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CKFKNBMHMHM = struct {
    NLMHPLDMCMD: ArrayList(u32),
    GIBCHCAGIAN: ArrayList(GIBCHCAGIANEntry),
    CBFHIDMKFLB: u32 = 0,
    difficulty_level: u32 = 0,
    FBFJMPFBCHB: ArrayList(u32),
    CHCBOPFLICI: ArrayList(CHCBOPFLICIEntry),
    HPLJNILNICK: u32 = 0,
    EAEFKGOKFKH: ArrayList(EAEFKGOKFKHEntry),
    NDBOJANDNJN: u32 = 0,
    level_id: u32 = 0,
    OBNDMKNGOJJ: u32 = 0,
    NODMOBECPEO: u32 = 0,
    avatar_list: ArrayList(BHMCFKHILFO),

    pub const _desc_table = .{
        .NLMHPLDMCMD = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
        .GIBCHCAGIAN = fd(1222, .{ .List = .{ .SubMessage = {} } }),
        .CBFHIDMKFLB = fd(3, .{ .Varint = .Simple }),
        .difficulty_level = fd(11, .{ .Varint = .Simple }),
        .FBFJMPFBCHB = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
        .CHCBOPFLICI = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .HPLJNILNICK = fd(6, .{ .Varint = .Simple }),
        .EAEFKGOKFKH = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .NDBOJANDNJN = fd(9, .{ .Varint = .Simple }),
        .level_id = fd(5, .{ .Varint = .Simple }),
        .OBNDMKNGOJJ = fd(2, .{ .Varint = .Simple }),
        .NODMOBECPEO = fd(4, .{ .Varint = .Simple }),
        .avatar_list = fd(14, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const GIBCHCAGIANEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const CHCBOPFLICIEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const EAEFKGOKFKHEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateSettleScNotify = struct {
    OKECGDDEMBL: ?CKFKNBMHMHM = null,
    score_id: u32 = 0,
    reward: ?ItemList = null,

    pub const _desc_table = .{
        .OKECGDDEMBL = fd(9, .{ .SubMessage = {} }),
        .score_id = fd(15, .{ .Varint = .Simple }),
        .reward = fd(4, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateTakeExpRewardCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateTakeExpRewardScRsp = struct {
    JGFBCDOICJF: ArrayList(u32),
    reward: ?ItemList = null,
    retcode: u32 = 0,
    OBGOBOELEFM: ArrayList(u32),

    pub const _desc_table = .{
        .JGFBCDOICJF = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
        .reward = fd(7, .{ .SubMessage = {} }),
        .retcode = fd(10, .{ .Varint = .Simple }),
        .OBGOBOELEFM = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateDebugAutoPlayCsReq = struct {
    difficulty_level: u32 = 0,
    area_id: u32 = 0,
    HOONHJJPLOE: ArrayList(u32),
    FALFKMGCDCM: u32 = 0,
    avatar_list: ArrayList(FeverTimeAvatar),

    pub const _desc_table = .{
        .difficulty_level = fd(15, .{ .Varint = .Simple }),
        .area_id = fd(6, .{ .Varint = .Simple }),
        .HOONHJJPLOE = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
        .FALFKMGCDCM = fd(10, .{ .Varint = .Simple }),
        .avatar_list = fd(4, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateDebugAutoPlayScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FateDebugAutoPlayFinishScNotify = struct {
    DDBCBINMFBE: bool = false,
    OKECGDDEMBL: ?CKFKNBMHMHM = null,

    pub const _desc_table = .{
        .DDBCBINMFBE = fd(1, .{ .Varint = .Simple }),
        .OKECGDDEMBL = fd(4, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FeverTimeActivityData = struct {
    PLIKADKKLGD: FeverTimeBattleRank = @enumFromInt(0),
    NLPKLPCCJPL: u32 = 0,
    JBOLAAFDKAN: u32 = 0,

    pub const _desc_table = .{
        .PLIKADKKLGD = fd(11, .{ .Varint = .Simple }),
        .NLPKLPCCJPL = fd(14, .{ .Varint = .Simple }),
        .JBOLAAFDKAN = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFeverTimeActivityDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFeverTimeActivityDataScRsp = struct {
    retcode: u32 = 0,
    CAAEJFIJIDJ: ArrayList(FeverTimeActivityData),

    pub const _desc_table = .{
        .retcode = fd(4, .{ .Varint = .Simple }),
        .CAAEJFIJIDJ = fd(12, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FeverTimeActivityBattleEndScNotify = struct {
    FHFMFMLLLGD: u32 = 0,
    HOEHIOBIIEJ: u32 = 0,
    id: u32 = 0,
    LFJKKFGPKDM: FeverTimeBattleRank = @enumFromInt(0),

    pub const _desc_table = .{
        .FHFMFMLLLGD = fd(7, .{ .Varint = .Simple }),
        .HOEHIOBIIEJ = fd(10, .{ .Varint = .Simple }),
        .id = fd(8, .{ .Varint = .Simple }),
        .LFJKKFGPKDM = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterFeverTimeActivityStageCsReq = struct {
    avatar_list: ArrayList(FeverTimeAvatar),
    FFINMBACAHH: u32 = 0,
    id: u32 = 0,
    GCJEICIFJGI: u32 = 0,

    pub const _desc_table = .{
        .avatar_list = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .FFINMBACAHH = fd(1, .{ .Varint = .Simple }),
        .id = fd(8, .{ .Varint = .Simple }),
        .GCJEICIFJGI = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterFeverTimeActivityStageScRsp = struct {
    id: u32 = 0,
    battle_info: ?SceneBattleInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .id = fd(1, .{ .Varint = .Simple }),
        .battle_info = fd(8, .{ .SubMessage = {} }),
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightEnterCsReq = struct {
    platform: u32 = 0,
    KPKDNMDAJGL: u64 = 0,
    client_res_version: u32 = 0,
    AOKCMMPFGBC: ManagedString = .Empty,
    MKINIOFGIAG: u32 = 0,
    ICMFPNPIJJF: u32 = 0,
    FGOJLPAEJEC: u32 = 0,
    uid: u32 = 0,

    pub const _desc_table = .{
        .platform = fd(12, .{ .Varint = .Simple }),
        .KPKDNMDAJGL = fd(6, .{ .Varint = .Simple }),
        .client_res_version = fd(2, .{ .Varint = .Simple }),
        .AOKCMMPFGBC = fd(13, .String),
        .MKINIOFGIAG = fd(1, .{ .Varint = .Simple }),
        .ICMFPNPIJJF = fd(14, .{ .Varint = .Simple }),
        .FGOJLPAEJEC = fd(10, .{ .Varint = .Simple }),
        .uid = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightEnterScRsp = struct {
    secret_key_seed: u64 = 0,
    server_timestamp_ms: u64 = 0,
    MKINIOFGIAG: u32 = 0,
    retcode: u32 = 0,
    JLPKEOBINCP: bool = false,

    pub const _desc_table = .{
        .secret_key_seed = fd(13, .{ .Varint = .Simple }),
        .server_timestamp_ms = fd(7, .{ .Varint = .Simple }),
        .MKINIOFGIAG = fd(6, .{ .Varint = .Simple }),
        .retcode = fd(15, .{ .Varint = .Simple }),
        .JLPKEOBINCP = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightLeaveScNotify = struct {
    CAGJMMMFDLI: u32 = 0,

    pub const _desc_table = .{
        .CAGJMMMFDLI = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightKickOutScNotify = struct {
    kick_type: FightKickoutType = @enumFromInt(0),

    pub const _desc_table = .{
        .kick_type = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightHeartBeatCsReq = struct {
    client_time_ms: u64 = 0,

    pub const _desc_table = .{
        .client_time_ms = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightHeartBeatScRsp = struct {
    retcode: u32 = 0,
    server_time_ms: u64 = 0,
    client_time_ms: u64 = 0,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
        .server_time_ms = fd(4, .{ .Varint = .Simple }),
        .client_time_ms = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightSessionStopScNotify = struct {
    PFFFJNGNPOM: ?PPGGKMDAOEA = null,

    pub const _desc_table = .{
        .PFFFJNGNPOM = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightGeneralCsReq = struct {
    JJCMFKJHCFA: u32 = 0,
    MBBDNLNCEJD: ManagedString = .Empty,

    pub const _desc_table = .{
        .JJCMFKJHCFA = fd(12, .{ .Varint = .Simple }),
        .MBBDNLNCEJD = fd(13, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightGeneralScRsp = struct {
    MBBDNLNCEJD: ManagedString = .Empty,
    retcode: u32 = 0,
    JJCMFKJHCFA: u32 = 0,

    pub const _desc_table = .{
        .MBBDNLNCEJD = fd(4, .String),
        .retcode = fd(15, .{ .Varint = .Simple }),
        .JJCMFKJHCFA = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightGeneralScNotify = struct {
    MBBDNLNCEJD: ManagedString = .Empty,
    JJCMFKJHCFA: u32 = 0,

    pub const _desc_table = .{
        .MBBDNLNCEJD = fd(11, .String),
        .JJCMFKJHCFA = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JHPKNHHNAPP = struct {
    LBGDLHKEEKC: ManagedString = .Empty,
    AHMDOBICECA: ArrayList(FightGeneralScNotify),
    KBJFONAGBHK: ManagedString = .Empty,
    ELINMPKBEFL: u32 = 0,
    JBLECMAPFDC: ArrayList(u32),

    pub const _desc_table = .{
        .LBGDLHKEEKC = fd(7, .String),
        .AHMDOBICECA = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .KBJFONAGBHK = fd(10, .String),
        .ELINMPKBEFL = fd(14, .{ .Varint = .Simple }),
        .JBLECMAPFDC = fd(11, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AIDOADPOOFG = struct {
    LIPJDJPMOKB: ArrayList(CBBDIOMIFHD),

    pub const _desc_table = .{
        .LIPJDJPMOKB = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ICLFKKNFDME = struct {
    OKJNNENKLCE: u32 = 0,
    GGGHOOGILFH: ArrayList(u32),
    AKDLDFHCFBK: u32 = 0,
    group_id: u32 = 0,

    pub const _desc_table = .{
        .OKJNNENKLCE = fd(2, .{ .Varint = .Simple }),
        .GGGHOOGILFH = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
        .AKDLDFHCFBK = fd(15, .{ .Varint = .Simple }),
        .group_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFightActivityDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFightActivityDataScRsp = struct {
    KAIOMPFBGKL: bool = false,
    DGNFCMDJOPA: ArrayList(DGNFCMDJOPAEntry),
    retcode: u32 = 0,
    JKHIFDGHJDO: ArrayList(ICLFKKNFDME),
    world_level: u32 = 0,

    pub const _desc_table = .{
        .KAIOMPFBGKL = fd(14, .{ .Varint = .Simple }),
        .DGNFCMDJOPA = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(1, .{ .Varint = .Simple }),
        .JKHIFDGHJDO = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .world_level = fd(6, .{ .Varint = .Simple }),
    };

    pub const DGNFCMDJOPAEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightActivityDataChangeScNotify = struct {
    DGNFCMDJOPA: ArrayList(DGNFCMDJOPAEntry),
    JKHIFDGHJDO: ArrayList(ICLFKKNFDME),

    pub const _desc_table = .{
        .DGNFCMDJOPA = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .JKHIFDGHJDO = fd(3, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const DGNFCMDJOPAEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NPEDHHCKLIA = struct {
    avatar_id: u32 = 0,
    avatar_type: AvatarType = @enumFromInt(0),

    pub const _desc_table = .{
        .avatar_id = fd(5, .{ .Varint = .Simple }),
        .avatar_type = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterFightActivityStageCsReq = struct {
    avatar_list: ArrayList(u32),
    FOPNLGBGAGH: ArrayList(NPEDHHCKLIA),
    NEDFIBONLKB: u32 = 0,
    group_id: u32 = 0,
    item_list: ArrayList(u32),

    pub const _desc_table = .{
        .avatar_list = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .FOPNLGBGAGH = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .NEDFIBONLKB = fd(15, .{ .Varint = .Simple }),
        .group_id = fd(7, .{ .Varint = .Simple }),
        .item_list = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterFightActivityStageScRsp = struct {
    retcode: u32 = 0,
    group_id: u32 = 0,
    NEDFIBONLKB: u32 = 0,
    battle_info: ?SceneBattleInfo = null,

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
        .group_id = fd(10, .{ .Varint = .Simple }),
        .NEDFIBONLKB = fd(7, .{ .Varint = .Simple }),
        .battle_info = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeFightActivityRewardCsReq = struct {
    NEDFIBONLKB: u32 = 0,
    group_id: u32 = 0,

    pub const _desc_table = .{
        .NEDFIBONLKB = fd(3, .{ .Varint = .Simple }),
        .group_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeFightActivityRewardScRsp = struct {
    group_id: u32 = 0,
    reward: ?ItemList = null,
    retcode: u32 = 0,
    NEDFIBONLKB: u32 = 0,

    pub const _desc_table = .{
        .group_id = fd(15, .{ .Varint = .Simple }),
        .reward = fd(4, .{ .SubMessage = {} }),
        .retcode = fd(11, .{ .Varint = .Simple }),
        .NEDFIBONLKB = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IKLNILKPENA = struct {
    challenge_id: u32 = 0,
    AEIEOJGCMMO: u32 = 0,
    PLIKADKKLGD: HGDAPJPKFFB = @enumFromInt(0),
    JBOLAAFDKAN: u32 = 0,

    pub const _desc_table = .{
        .challenge_id = fd(2, .{ .Varint = .Simple }),
        .AEIEOJGCMMO = fd(13, .{ .Varint = .Simple }),
        .PLIKADKKLGD = fd(4, .{ .Varint = .Simple }),
        .JBOLAAFDKAN = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFightFestDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFightFestDataScRsp = struct {
    retcode: u32 = 0,
    item_value: u32 = 0,
    MFGONHJGIPP: ArrayList(u32),
    challenge_list: ArrayList(IKLNILKPENA),
    score_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
        .item_value = fd(8, .{ .Varint = .Simple }),
        .MFGONHJGIPP = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .challenge_list = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .score_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AFODMEJODLG = struct {
    avatar_type: AvatarType = @enumFromInt(0),
    id: u32 = 0,

    pub const _desc_table = .{
        .avatar_type = fd(7, .{ .Varint = .Simple }),
        .id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartFightFestCsReq = struct {
    event_id: u32 = 0,
    avatar_list: ArrayList(AFODMEJODLG),
    MFGONHJGIPP: ArrayList(u32),
    type: APLOAGDIBKI = @enumFromInt(0),
    id: u32 = 0,

    pub const _desc_table = .{
        .event_id = fd(5, .{ .Varint = .Simple }),
        .avatar_list = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .MFGONHJGIPP = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
        .type = fd(10, .{ .Varint = .Simple }),
        .id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartFightFestScRsp = struct {
    type: APLOAGDIBKI = @enumFromInt(0),
    event_id: u32 = 0,
    id: u32 = 0,
    battle_info: ?SceneBattleInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .type = fd(14, .{ .Varint = .Simple }),
        .event_id = fd(11, .{ .Varint = .Simple }),
        .id = fd(15, .{ .Varint = .Simple }),
        .battle_info = fd(3, .{ .SubMessage = {} }),
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightFestScoreUpdateNotify = struct {
    score_id: u32 = 0,
    GNPKPLJLABM: u32 = 0,

    pub const _desc_table = .{
        .score_id = fd(13, .{ .Varint = .Simple }),
        .GNPKPLJLABM = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightFestUnlockSkillNotify = struct {
    EJJEHJMMBGJ: u32 = 0,

    pub const _desc_table = .{
        .EJJEHJMMBGJ = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightFestUpdateChallengeRecordNotify = struct {
    FKPEPBMJHKN: HGDAPJPKFFB = @enumFromInt(0),
    HOEHIOBIIEJ: u32 = 0,
    challenge_id: u32 = 0,
    rank: HGDAPJPKFFB = @enumFromInt(0),
    JBOLAAFDKAN: u32 = 0,

    pub const _desc_table = .{
        .FKPEPBMJHKN = fd(3, .{ .Varint = .Simple }),
        .HOEHIOBIIEJ = fd(6, .{ .Varint = .Simple }),
        .challenge_id = fd(5, .{ .Varint = .Simple }),
        .rank = fd(14, .{ .Varint = .Simple }),
        .JBOLAAFDKAN = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightFestUpdateCoinNotify = struct {
    item_value: u32 = 0,

    pub const _desc_table = .{
        .item_value = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KPBFCKNEEIA = struct {
    BLGNMALBOLO: i32 = 0,
    LDNBEIDJBHI: u64 = 0,
    OILPCHBIJNO: FFJPPNGGLFF = @enumFromInt(0),

    pub const _desc_table = .{
        .BLGNMALBOLO = fd(1, .{ .Varint = .Simple }),
        .LDNBEIDJBHI = fd(3, .{ .Varint = .Simple }),
        .OILPCHBIJNO = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GLDHEPJPMFM = struct {
    action_result_list: ArrayList(KPBFCKNEEIA),

    pub const _desc_table = .{
        .action_result_list = fd(14, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PFGAIEBGHCP = struct {
    x: f32 = 0,
    y: f32 = 0,

    pub const _desc_table = .{
        .x = fd(15, .{ .FixedInt = .I32 }),
        .y = fd(9, .{ .FixedInt = .I32 }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightMatch3UseItemCsReq = struct {
    KBCEJINFNNJ: ?PFGAIEBGHCP = null,
    item_id: u32 = 0,

    pub const _desc_table = .{
        .KBCEJINFNNJ = fd(9, .{ .SubMessage = {} }),
        .item_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AKOKICDPFMP = struct {
    AHEHKCILDFA: u32 = 0,
    HBFOFPDAFPD: ?HBFOFPDAFPD_union,

    pub const _HBFOFPDAFPD_case = enum {
        LGPIEMDLHJM,
        PHMCJEJIDJA,
        rogue_finish_info,
        MEJDMJIKIMO,
        JHFGDIJPFCG,
    };
    pub const HBFOFPDAFPD_union = union(_HBFOFPDAFPD_case) {
        LGPIEMDLHJM: LBAOGIBPJOP,
        PHMCJEJIDJA: GLDNBPFCNHD,
        rogue_finish_info: ICAOOPPMJDJ,
        MEJDMJIKIMO: MAOGFDKDCKM,
        JHFGDIJPFCG: GOCKGIGBDCG,
        pub const _union_desc = .{
            .LGPIEMDLHJM = fd(1111, .{ .SubMessage = {} }),
            .PHMCJEJIDJA = fd(672, .{ .SubMessage = {} }),
            .rogue_finish_info = fd(1833, .{ .SubMessage = {} }),
            .MEJDMJIKIMO = fd(1983, .{ .SubMessage = {} }),
            .JHFGDIJPFCG = fd(1886, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .AHEHKCILDFA = fd(9, .{ .Varint = .Simple }),
        .HBFOFPDAFPD = fd(null, .{ .OneOf = HBFOFPDAFPD_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightMatch3SwapCsReq = struct {
    LNDIGHEIHLN: ArrayList(AKOKICDPFMP),

    pub const _desc_table = .{
        .LNDIGHEIHLN = fd(8, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LBAOGIBPJOP = struct {
    JJEFBPKPKBK: ArrayList(u32),
    CEIFKJIEAJE: JOMKPEGEFMP = @enumFromInt(0),
    NLIBKABFGCC: u32 = 0,
    LIPJDJPMOKB: ArrayList(CBBDIOMIFHD),
    DKPNENBHELH: u32 = 0,
    JIJHAAIHNCN: u32 = 0,
    LIKHCLPMHJK: bool = false,
    MODDKLNDAMK: u32 = 0,
    PBFAIOJJGNL: u32 = 0,
    JIKEIGBCABB: bool = false,
    HJEFOLKGAEI: JOMKPEGEFMP = @enumFromInt(0),
    PCMGAGAHBLK: ArrayList(u32),
    level_id: u32 = 0,
    EIGABCKEDNP: u32 = 0,
    KHCMOFPFOAK: u32 = 0,
    BBDOPLEKIAC: u32 = 0,

    pub const _desc_table = .{
        .JJEFBPKPKBK = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .CEIFKJIEAJE = fd(6, .{ .Varint = .Simple }),
        .NLIBKABFGCC = fd(11, .{ .Varint = .Simple }),
        .LIPJDJPMOKB = fd(1206, .{ .List = .{ .SubMessage = {} } }),
        .DKPNENBHELH = fd(7, .{ .Varint = .Simple }),
        .JIJHAAIHNCN = fd(13, .{ .Varint = .Simple }),
        .LIKHCLPMHJK = fd(1, .{ .Varint = .Simple }),
        .MODDKLNDAMK = fd(14, .{ .Varint = .Simple }),
        .PBFAIOJJGNL = fd(10, .{ .Varint = .Simple }),
        .JIKEIGBCABB = fd(9, .{ .Varint = .Simple }),
        .HJEFOLKGAEI = fd(5, .{ .Varint = .Simple }),
        .PCMGAGAHBLK = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
        .level_id = fd(4, .{ .Varint = .Simple }),
        .EIGABCKEDNP = fd(3, .{ .Varint = .Simple }),
        .KHCMOFPFOAK = fd(15, .{ .Varint = .Simple }),
        .BBDOPLEKIAC = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GKLOALDHNEF = struct {
    item_id: u32 = 0,
    JPHEDNECAGD: i32 = 0,
    FALBKIMMPIH: i32 = 0,
    JOJAHIAFNLK: u32 = 0,
    total_damage: i32 = 0,

    pub const _desc_table = .{
        .item_id = fd(13, .{ .Varint = .Simple }),
        .JPHEDNECAGD = fd(11, .{ .Varint = .Simple }),
        .FALBKIMMPIH = fd(2, .{ .Varint = .Simple }),
        .JOJAHIAFNLK = fd(9, .{ .Varint = .Simple }),
        .total_damage = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ICAOOPPMJDJ = struct {
    BPIPOBHCMFD: ArrayList(GKLOALDHNEF),
    DJEEEABMDDK: bool = false,
    BLKFGAJHMLK: u32 = 0,
    CHLLMFJGPPA: u32 = 0,
    is_win: bool = false,
    CLBNHPEABFK: i32 = 0,
    KJPMOHFIILO: EEIBHJPNJCF = @enumFromInt(0),

    pub const _desc_table = .{
        .BPIPOBHCMFD = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .DJEEEABMDDK = fd(3, .{ .Varint = .Simple }),
        .BLKFGAJHMLK = fd(1, .{ .Varint = .Simple }),
        .CHLLMFJGPPA = fd(2, .{ .Varint = .Simple }),
        .is_win = fd(4, .{ .Varint = .Simple }),
        .CLBNHPEABFK = fd(7, .{ .Varint = .Simple }),
        .KJPMOHFIILO = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DCDNIAJCEHN = struct {
    JLCIKBLNENH: u32 = 0,
    LKEFOLCGFGD: ?PFGAIEBGHCP = null,
    GODNAALNOKL: ?PFGAIEBGHCP = null,
    KAMIHNEJMFG: LKKAJCACIJI = @enumFromInt(0),
    HDBLELEBKHO: i32 = 0,
    IAAGGMKGODC: ?PFGAIEBGHCP = null,
    id: u32 = 0,
    PNLDLMNKJMK: u32 = 0,
    PLFKOCCDBAG: bool = false,
    IDABOFPKOKN: u32 = 0,
    skill_id: u32 = 0,
    JLJIGEPLPMH: u32 = 0,
    max_hp: i32 = 0,
    buff_id: u32 = 0,
    DHELBCIMLGA: u32 = 0,
    CCLMFABDENA: FIPPKLCOEGJ = @enumFromInt(0),
    level: u32 = 0,
    FNIHJJJGOEE: ?PFGAIEBGHCP = null,
    MNBEMGNNFOD: f32 = 0,
    NBKELCHILGG: bool = false,
    CIPICLLLIJH: u32 = 0,
    DJOADECJPOB: PAJNHIAGODD = @enumFromInt(0),
    text_id: u32 = 0,
    DKPNENBHELH: u32 = 0,
    JIJHAAIHNCN: u32 = 0,
    FDNDMHJOHMO: ?PFGAIEBGHCP = null,
    GGBFKENAHOE: f32 = 0,
    time: f32 = 0,
    hp: i32 = 0,
    attack: i32 = 0,
    DMBBMFFEJGI: bool = false,

    pub const _desc_table = .{
        .JLCIKBLNENH = fd(285, .{ .Varint = .Simple }),
        .LKEFOLCGFGD = fd(1, .{ .SubMessage = {} }),
        .GODNAALNOKL = fd(14, .{ .SubMessage = {} }),
        .KAMIHNEJMFG = fd(5, .{ .Varint = .Simple }),
        .HDBLELEBKHO = fd(50, .{ .Varint = .Simple }),
        .IAAGGMKGODC = fd(10, .{ .SubMessage = {} }),
        .id = fd(13, .{ .Varint = .Simple }),
        .PNLDLMNKJMK = fd(148, .{ .Varint = .Simple }),
        .PLFKOCCDBAG = fd(1989, .{ .Varint = .Simple }),
        .IDABOFPKOKN = fd(1197, .{ .Varint = .Simple }),
        .skill_id = fd(4, .{ .Varint = .Simple }),
        .JLJIGEPLPMH = fd(9, .{ .Varint = .Simple }),
        .max_hp = fd(11, .{ .Varint = .Simple }),
        .buff_id = fd(1504, .{ .Varint = .Simple }),
        .DHELBCIMLGA = fd(192, .{ .Varint = .Simple }),
        .CCLMFABDENA = fd(1900, .{ .Varint = .Simple }),
        .level = fd(1443, .{ .Varint = .Simple }),
        .FNIHJJJGOEE = fd(2, .{ .SubMessage = {} }),
        .MNBEMGNNFOD = fd(426, .{ .FixedInt = .I32 }),
        .NBKELCHILGG = fd(1127, .{ .Varint = .Simple }),
        .CIPICLLLIJH = fd(8, .{ .Varint = .Simple }),
        .DJOADECJPOB = fd(6, .{ .Varint = .Simple }),
        .text_id = fd(1004, .{ .Varint = .Simple }),
        .DKPNENBHELH = fd(87, .{ .Varint = .Simple }),
        .JIJHAAIHNCN = fd(1095, .{ .Varint = .Simple }),
        .FDNDMHJOHMO = fd(12, .{ .SubMessage = {} }),
        .GGBFKENAHOE = fd(418, .{ .FixedInt = .I32 }),
        .time = fd(15, .{ .FixedInt = .I32 }),
        .hp = fd(3, .{ .Varint = .Simple }),
        .attack = fd(7, .{ .Varint = .Simple }),
        .DMBBMFFEJGI = fd(623, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GLDNBPFCNHD = struct {
    FMKDIFNJAJC: u32 = 0,
    KNCHEHIIJNN: ArrayList(u32),
    FOMBHJKDHGO: u32 = 0,
    NKHPCKEGPCL: u32 = 0,
    FJKBAIMDPEP: bool = false,
    DNDJKDFHEPE: IMPKPKAMIAF = @enumFromInt(0),
    HLIEAMPLIPP: ArrayList(DCDNIAJCEHN),
    OMKKPGFJHFE: bool = false,
    AINLMGDNHIB: ArrayList(DCDNIAJCEHN),
    EEFCBBKKFLC: f32 = 0,
    JLDCFLKCBLD: ArrayList(u32),
    queue_position: u32 = 0,
    HMFFHGBKOGL: u32 = 0,
    EHCJCILCNOP: u32 = 0,
    KJGDKNJFCPG: u32 = 0,
    extra_id: u32 = 0,
    DHELBCIMLGA: u32 = 0,
    IEPGCLGKHEG: u32 = 0,
    DPOOAPKPCHF: ArrayList(u32),
    PMANBPLFLKL: bool = false,

    pub const _desc_table = .{
        .FMKDIFNJAJC = fd(6, .{ .Varint = .Simple }),
        .KNCHEHIIJNN = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
        .FOMBHJKDHGO = fd(1185, .{ .Varint = .Simple }),
        .NKHPCKEGPCL = fd(582, .{ .Varint = .Simple }),
        .FJKBAIMDPEP = fd(11, .{ .Varint = .Simple }),
        .DNDJKDFHEPE = fd(4, .{ .Varint = .Simple }),
        .HLIEAMPLIPP = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .OMKKPGFJHFE = fd(513, .{ .Varint = .Simple }),
        .AINLMGDNHIB = fd(1593, .{ .List = .{ .SubMessage = {} } }),
        .EEFCBBKKFLC = fd(8, .{ .FixedInt = .I32 }),
        .JLDCFLKCBLD = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
        .queue_position = fd(9, .{ .Varint = .Simple }),
        .HMFFHGBKOGL = fd(10, .{ .Varint = .Simple }),
        .EHCJCILCNOP = fd(14, .{ .Varint = .Simple }),
        .KJGDKNJFCPG = fd(15, .{ .Varint = .Simple }),
        .extra_id = fd(1, .{ .Varint = .Simple }),
        .DHELBCIMLGA = fd(2, .{ .Varint = .Simple }),
        .IEPGCLGKHEG = fd(1166, .{ .Varint = .Simple }),
        .DPOOAPKPCHF = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        .PMANBPLFLKL = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MAOGFDKDCKM = struct {
    LGPIEMDLHJM: ?LBAOGIBPJOP = null,
    OLKMCBJFLEJ: ArrayList(HBGHAOPBKJP),
    CHLLMFJGPPA: u32 = 0,
    IEHFHKMDAGC: u32 = 0,
    KHCMOFPFOAK: ?EOJLNGDDLNN = null,
    DPLGCEKJACK: f32 = 0,
    OMKKPGFJHFE: bool = false,
    HMFFHGBKOGL: u32 = 0,
    DIBPGGOOGPK: ArrayList(HBGHAOPBKJP),
    phase: PPIFFKJEJJA = @enumFromInt(0),
    KNCHEHIIJNN: ArrayList(u32),
    BBDOPLEKIAC: ?EOJLNGDDLNN = null,

    pub const _desc_table = .{
        .LGPIEMDLHJM = fd(15, .{ .SubMessage = {} }),
        .OLKMCBJFLEJ = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .CHLLMFJGPPA = fd(11, .{ .Varint = .Simple }),
        .IEHFHKMDAGC = fd(13, .{ .Varint = .Simple }),
        .KHCMOFPFOAK = fd(10, .{ .SubMessage = {} }),
        .DPLGCEKJACK = fd(8, .{ .FixedInt = .I32 }),
        .OMKKPGFJHFE = fd(1, .{ .Varint = .Simple }),
        .HMFFHGBKOGL = fd(9, .{ .Varint = .Simple }),
        .DIBPGGOOGPK = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .phase = fd(14, .{ .Varint = .Simple }),
        .KNCHEHIIJNN = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .BBDOPLEKIAC = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GOCKGIGBDCG = struct {
    KBCEJINFNNJ: ?PFGAIEBGHCP = null,
    CHLLMFJGPPA: u32 = 0,
    item_id: u32 = 0,

    pub const _desc_table = .{
        .KBCEJINFNNJ = fd(7, .{ .SubMessage = {} }),
        .CHLLMFJGPPA = fd(5, .{ .Varint = .Simple }),
        .item_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EOJLNGDDLNN = struct {
    NBKHPJHJMHO: ArrayList(HBGHAOPBKJP),
    MDBGGBLEGEM: ArrayList(JALLAPPCPFE),
    JFEDJMKMLFO: ArrayList(u32),
    NBKELCHILGG: bool = false,
    PANBCNICOHJ: u32 = 0,
    CGNBHKBHICG: u32 = 0,
    BLALJMMHIFP: bool = false,

    pub const _desc_table = .{
        .NBKHPJHJMHO = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .MDBGGBLEGEM = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .JFEDJMKMLFO = fd(11, .{ .PackedList = .{ .Varint = .Simple } }),
        .NBKELCHILGG = fd(13, .{ .Varint = .Simple }),
        .PANBCNICOHJ = fd(10, .{ .Varint = .Simple }),
        .CGNBHKBHICG = fd(6, .{ .Varint = .Simple }),
        .BLALJMMHIFP = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HBGHAOPBKJP = struct {
    MNBEMGNNFOD: f32 = 0,
    hp: i32 = 0,
    level: u32 = 0,
    JLCIKBLNENH: u32 = 0,
    PMANBPLFLKL: bool = false,
    PLFKOCCDBAG: bool = false,
    attack: i32 = 0,
    id: u32 = 0,
    max_hp: i32 = 0,
    buff_id: u32 = 0,
    DMBBMFFEJGI: bool = false,
    BMNECPIOPDN: bool = false,
    LKEFOLCGFGD: ?PFGAIEBGHCP = null,
    FNIHJJJGOEE: ?PFGAIEBGHCP = null,

    pub const _desc_table = .{
        .MNBEMGNNFOD = fd(10, .{ .FixedInt = .I32 }),
        .hp = fd(4, .{ .Varint = .Simple }),
        .level = fd(7, .{ .Varint = .Simple }),
        .JLCIKBLNENH = fd(5, .{ .Varint = .Simple }),
        .PMANBPLFLKL = fd(6, .{ .Varint = .Simple }),
        .PLFKOCCDBAG = fd(14, .{ .Varint = .Simple }),
        .attack = fd(8, .{ .Varint = .Simple }),
        .id = fd(15, .{ .Varint = .Simple }),
        .max_hp = fd(1, .{ .Varint = .Simple }),
        .buff_id = fd(9, .{ .Varint = .Simple }),
        .DMBBMFFEJGI = fd(11, .{ .Varint = .Simple }),
        .BMNECPIOPDN = fd(13, .{ .Varint = .Simple }),
        .LKEFOLCGFGD = fd(3, .{ .SubMessage = {} }),
        .FNIHJJJGOEE = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JALLAPPCPFE = struct {
    FHOKFDMFNKG: bool = false,
    DHELBCIMLGA: u32 = 0,

    pub const _desc_table = .{
        .FHOKFDMFNKG = fd(8, .{ .Varint = .Simple }),
        .DHELBCIMLGA = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MEKDNIKFDNA = struct {
    OGNEPBFPILH: u32 = 0,
    hp: u32 = 0,
    score_id: u32 = 0,
    NMLFFOGBPOC: u32 = 0,
    LDNBEIDJBHI: u32 = 0,
    item_list: ArrayList(BHGPHKLEHEC),
    state: NPPNFPPENMC = @enumFromInt(0),
    rank: u32 = 0,
    HNJFFFJDGNE: bool = false,

    pub const _desc_table = .{
        .OGNEPBFPILH = fd(5, .{ .Varint = .Simple }),
        .hp = fd(10, .{ .Varint = .Simple }),
        .score_id = fd(14, .{ .Varint = .Simple }),
        .NMLFFOGBPOC = fd(1, .{ .Varint = .Simple }),
        .LDNBEIDJBHI = fd(4, .{ .Varint = .Simple }),
        .item_list = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .state = fd(15, .{ .Varint = .Simple }),
        .rank = fd(8, .{ .Varint = .Simple }),
        .HNJFFFJDGNE = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KLDMJEMIMCN = struct {
    MCOKHHFPBPJ: u64 = 0,
    JGIBHFJMOBE: DGFCBOFAOIA = @enumFromInt(0),
    HCBBHCKJNJI: i32 = 0,
    CPKPINCCEIP: ArrayList(MEKDNIKFDNA),
    MEJDMJIKIMO: ?MDOHAFBEEPK = null,
    HBANCCOKOFC: ArrayList(u32),
    DANCCAOJLJN: u32 = 0,

    pub const _desc_table = .{
        .MCOKHHFPBPJ = fd(7, .{ .Varint = .Simple }),
        .JGIBHFJMOBE = fd(15, .{ .Varint = .Simple }),
        .HCBBHCKJNJI = fd(8, .{ .Varint = .Simple }),
        .CPKPINCCEIP = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .MEJDMJIKIMO = fd(13, .{ .SubMessage = {} }),
        .HBANCCOKOFC = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
        .DANCCAOJLJN = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JJAEPDIHCNL = struct {
    FPBEDNCOCHO: u32 = 0,
    HECKMDLOLAG: u32 = 0,

    pub const _desc_table = .{
        .FPBEDNCOCHO = fd(14, .{ .Varint = .Simple }),
        .HECKMDLOLAG = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MDOHAFBEEPK = struct {
    KJPMOHFIILO: NPPNFPPENMC = @enumFromInt(0),
    buff_list: ArrayList(KNDBNNPIDPB),
    MIDEJNJCAIA: u32 = 0,
    GDFNDPMJDAF: u32 = 0,
    score_id: u32 = 0,
    item_list: ArrayList(BHGPHKLEHEC),
    cur_hp: u32 = 0,
    energy_info: u32 = 0,
    NIAEGHJLNMB: ?CDIMEMFJJFP = null,
    op_list: ArrayList(ODDKKAHNMHK),
    ANHFJKEPCGF: u32 = 0,
    AIHMGHAJGKJ: ArrayList(u32),
    NAJLPNLNOJE: u32 = 0,
    PKDPIEMGIBE: u32 = 0,

    pub const _desc_table = .{
        .KJPMOHFIILO = fd(3, .{ .Varint = .Simple }),
        .buff_list = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .MIDEJNJCAIA = fd(9, .{ .Varint = .Simple }),
        .GDFNDPMJDAF = fd(1, .{ .Varint = .Simple }),
        .score_id = fd(2, .{ .Varint = .Simple }),
        .item_list = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .cur_hp = fd(14, .{ .Varint = .Simple }),
        .energy_info = fd(12, .{ .Varint = .Simple }),
        .NIAEGHJLNMB = fd(10, .{ .SubMessage = {} }),
        .op_list = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .ANHFJKEPCGF = fd(6, .{ .Varint = .Simple }),
        .AIHMGHAJGKJ = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
        .NAJLPNLNOJE = fd(4, .{ .Varint = .Simple }),
        .PKDPIEMGIBE = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EGCDDLKHFEB = struct {
    MLPCFGDAFND: ?MDOHAFBEEPK = null,
    OLKNDFJBDGJ: BFILLIOBMFN = @enumFromInt(0),

    pub const _desc_table = .{
        .MLPCFGDAFND = fd(4, .{ .SubMessage = {} }),
        .OLKNDFJBDGJ = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightMatch3DataCsReq = struct {
    player_data: i32 = 0,

    pub const _desc_table = .{
        .player_data = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightMatch3DataScRsp = struct {
    data: ?KLDMJEMIMCN = null,
    retcode: u32 = 0,
    LIPJDJPMOKB: ArrayList(CBBDIOMIFHD),

    pub const _desc_table = .{
        .data = fd(5, .{ .SubMessage = {} }),
        .retcode = fd(3, .{ .Varint = .Simple }),
        .LIPJDJPMOKB = fd(2, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightMatch3StartCountDownScNotify = struct {
    data: ?KLDMJEMIMCN = null,

    pub const _desc_table = .{
        .data = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightMatch3TurnStartScNotify = struct {
    HKPODFLGCDJ: ?KLDMJEMIMCN = null,

    pub const _desc_table = .{
        .HKPODFLGCDJ = fd(4, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightMatch3TurnEndScNotify = struct {
    CINLCMHHKKO: ?KLDMJEMIMCN = null,
    HIKLOBGICMP: ?KLDMJEMIMCN = null,

    pub const _desc_table = .{
        .CINLCMHHKKO = fd(11, .{ .SubMessage = {} }),
        .HIKLOBGICMP = fd(9, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GALEOPDOMKG = struct {
    FECLGLBFIDH: ?JJAEPDIHCNL = null,
    cur_index: u32 = 0,
    ECKKBLNELBM: ArrayList(EGCDDLKHFEB),
    PHNLDPOKBKL: ?JJAEPDIHCNL = null,

    pub const _desc_table = .{
        .FECLGLBFIDH = fd(13, .{ .SubMessage = {} }),
        .cur_index = fd(5, .{ .Varint = .Simple }),
        .ECKKBLNELBM = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .PHNLDPOKBKL = fd(15, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightMatch3SwapScRsp = struct {
    PGMGMJDILCL: bool = false,
    retcode: u32 = 0,
    cur_index: u32 = 0,
    CHMAONMMEGM: ?MDOHAFBEEPK = null,

    pub const _desc_table = .{
        .PGMGMJDILCL = fd(13, .{ .Varint = .Simple }),
        .retcode = fd(3, .{ .Varint = .Simple }),
        .cur_index = fd(5, .{ .Varint = .Simple }),
        .CHMAONMMEGM = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightMatch3OpponentDataScNotify = struct {
    DANCCAOJLJN: u32 = 0,
    state: NPPNFPPENMC = @enumFromInt(0),
    hp: u32 = 0,
    NMLFFOGBPOC: u32 = 0,
    score_id: u32 = 0,
    item_list: ArrayList(BHGPHKLEHEC),

    pub const _desc_table = .{
        .DANCCAOJLJN = fd(4, .{ .Varint = .Simple }),
        .state = fd(2, .{ .Varint = .Simple }),
        .hp = fd(1, .{ .Varint = .Simple }),
        .NMLFFOGBPOC = fd(5, .{ .Varint = .Simple }),
        .score_id = fd(3, .{ .Varint = .Simple }),
        .item_list = fd(9, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightMatch3ChatCsReq = struct {
    HABDKBFMKEE: u32 = 0,

    pub const _desc_table = .{
        .HABDKBFMKEE = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightMatch3ChatScRsp = struct {
    retcode: u32 = 0,
    HABDKBFMKEE: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
        .HABDKBFMKEE = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightMatch3ChatScNotify = struct {
    HABDKBFMKEE: u32 = 0,
    EGKPFGNJAHN: u32 = 0,

    pub const _desc_table = .{
        .HABDKBFMKEE = fd(14, .{ .Varint = .Simple }),
        .EGKPFGNJAHN = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightMatch3ForceUpdateNotify = struct {
    data: ?KLDMJEMIMCN = null,

    pub const _desc_table = .{
        .data = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BHGPHKLEHEC = struct {
    FOJCMHIMAFN: u32 = 0,
    NFFNNEFCMOI: u32 = 0,
    cur_times: u32 = 0,
    DMKFFFPDLDI: u32 = 0,

    pub const _desc_table = .{
        .FOJCMHIMAFN = fd(9, .{ .Varint = .Simple }),
        .NFFNNEFCMOI = fd(12, .{ .Varint = .Simple }),
        .cur_times = fd(10, .{ .Varint = .Simple }),
        .DMKFFFPDLDI = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ODDKKAHNMHK = struct {
    HEFMJAHOHKG: u32 = 0,
    op_type: NLAAMOGOOBE = @enumFromInt(0),

    pub const _desc_table = .{
        .HEFMJAHOHKG = fd(13, .{ .Varint = .Simple }),
        .op_type = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KNDBNNPIDPB = struct {
    display_value: u32 = 0,
    PEPLINOGEGC: GANMCIJCOKI = @enumFromInt(0),

    pub const _desc_table = .{
        .display_value = fd(8, .{ .Varint = .Simple }),
        .PEPLINOGEGC = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BFDLHIDCNMF = struct {
    COCONGACIFJ: bool = false,
    item_list: ArrayList(BHGPHKLEHEC),
    MIDEJNJCAIA: u32 = 0,
    KJPMOHFIILO: NPPNFPPENMC = @enumFromInt(0),
    LDNBEIDJBHI: u32 = 0,
    energy_info: u32 = 0,
    ANHFJKEPCGF: u32 = 0,
    NIAEGHJLNMB: ?CDIMEMFJJFP = null,
    OGNEPBFPILH: u32 = 0,
    JDNGFBOAJAP: bool = false,
    score_id: u32 = 0,

    pub const _desc_table = .{
        .COCONGACIFJ = fd(2, .{ .Varint = .Simple }),
        .item_list = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .MIDEJNJCAIA = fd(13, .{ .Varint = .Simple }),
        .KJPMOHFIILO = fd(6, .{ .Varint = .Simple }),
        .LDNBEIDJBHI = fd(8, .{ .Varint = .Simple }),
        .energy_info = fd(5, .{ .Varint = .Simple }),
        .ANHFJKEPCGF = fd(14, .{ .Varint = .Simple }),
        .NIAEGHJLNMB = fd(9, .{ .SubMessage = {} }),
        .OGNEPBFPILH = fd(1, .{ .Varint = .Simple }),
        .JDNGFBOAJAP = fd(7, .{ .Varint = .Simple }),
        .score_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IOIJEPGMJAF = struct {
    MEJDMJIKIMO: ?MDOHAFBEEPK = null,
    HCBBHCKJNJI: i32 = 0,
    CPKPINCCEIP: ArrayList(BFDLHIDCNMF),
    HLOACJFDNGN: u32 = 0,
    JGIBHFJMOBE: KJJLDIMBGMM = @enumFromInt(0),
    EBKPMEOBNPO: u32 = 0,
    MCOKHHFPBPJ: u64 = 0,

    pub const _desc_table = .{
        .MEJDMJIKIMO = fd(15, .{ .SubMessage = {} }),
        .HCBBHCKJNJI = fd(10, .{ .Varint = .Simple }),
        .CPKPINCCEIP = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .HLOACJFDNGN = fd(4, .{ .Varint = .Simple }),
        .JGIBHFJMOBE = fd(14, .{ .Varint = .Simple }),
        .EBKPMEOBNPO = fd(6, .{ .Varint = .Simple }),
        .MCOKHHFPBPJ = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BCEKDIDFLCM = struct {
    GDIMMFMFPJA: ArrayList(JJAEPDIHCNL),
    use_item_id: u32 = 0,
    ECKKBLNELBM: ArrayList(EGCDDLKHFEB),

    pub const _desc_table = .{
        .GDIMMFMFPJA = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .use_item_id = fd(3, .{ .Varint = .Simple }),
        .ECKKBLNELBM = fd(13, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightMatch3UseItemScRsp = struct {
    EHELGAOABJJ: ?MDOHAFBEEPK = null,
    use_item_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .EHELGAOABJJ = fd(14, .{ .SubMessage = {} }),
        .use_item_id = fd(10, .{ .Varint = .Simple }),
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightMatch3SoloDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightMatch3SoloDataScRsp = struct {
    LIPJDJPMOKB: ArrayList(CBBDIOMIFHD),
    data: ?IOIJEPGMJAF = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .LIPJDJPMOKB = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .data = fd(5, .{ .SubMessage = {} }),
        .retcode = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightMatch3SoloAnimEndCsReq = struct {
    HLOACJFDNGN: u32 = 0,
    GDCHLIBMFKM: u32 = 0,
    BKGGNMBBGNL: u32 = 0,

    pub const _desc_table = .{
        .HLOACJFDNGN = fd(8, .{ .Varint = .Simple }),
        .GDCHLIBMFKM = fd(1, .{ .Varint = .Simple }),
        .BKGGNMBBGNL = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightMatch3SoloAnimEndScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightMatch3SoloDataUpdateNotify = struct {
    data: ?IOIJEPGMJAF = null,
    reason: ABBDJBMIIBE = @enumFromInt(0),

    pub const _desc_table = .{
        .data = fd(13, .{ .SubMessage = {} }),
        .reason = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightMatch3SoloSwapNotify = struct {
    MEDBONHALOD: ?GALEOPDOMKG = null,
    EHELGAOABJJ: ?MDOHAFBEEPK = null,

    pub const _desc_table = .{
        .MEDBONHALOD = fd(11, .{ .SubMessage = {} }),
        .EHELGAOABJJ = fd(5, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightMatch3SoloUseItemNotify = struct {
    MEDBONHALOD: ?BCEKDIDFLCM = null,
    EHELGAOABJJ: ?MDOHAFBEEPK = null,

    pub const _desc_table = .{
        .MEDBONHALOD = fd(8, .{ .SubMessage = {} }),
        .EHELGAOABJJ = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightMatch3SoloPreTurnEndCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightMatch3SoloPreTurnEndScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AssistSimpleInfo = struct {
    dressed_skin_id: u32 = 0,
    avatar_id: u32 = 0,
    level: u32 = 0,
    pos: u32 = 0,

    pub const _desc_table = .{
        .dressed_skin_id = fd(13, .{ .Varint = .Simple }),
        .avatar_id = fd(1, .{ .Varint = .Simple }),
        .level = fd(10, .{ .Varint = .Simple }),
        .pos = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IHKGNJDNALJ = struct {
    group_id: u32 = 0,
    FCCDILGGOCI: u32 = 0,
    JGMIPMDPPIJ: u32 = 0,
    KHCNAJOKJHJ: u32 = 0,

    pub const _desc_table = .{
        .group_id = fd(13, .{ .Varint = .Simple }),
        .FCCDILGGOCI = fd(14, .{ .Varint = .Simple }),
        .JGMIPMDPPIJ = fd(1, .{ .Varint = .Simple }),
        .KHCNAJOKJHJ = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KPIGLOPEMCF = struct {
    IJHLOJEFCPM: u32 = 0,

    pub const _desc_table = .{
        .IJHLOJEFCPM = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PHHLIOGFDEK = struct {
    CAPICCCIEBO: ArrayList(u32),
    OFGBJCCCIKE: u32 = 0,
    IJHLOJEFCPM: u32 = 0,

    pub const _desc_table = .{
        .CAPICCCIEBO = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
        .OFGBJCCCIKE = fd(14, .{ .Varint = .Simple }),
        .IJHLOJEFCPM = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BCPDFIPOMAP = struct {
    LBHJEHFJLNF: ?PHHLIOGFDEK = null,

    pub const _desc_table = .{
        .LBHJEHFJLNF = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OBIHNGMNKEK = struct {
    JEHDFHLGCNL: ?JEHDFHLGCNL_union,

    pub const _JEHDFHLGCNL_case = enum {
        LOONEHFNAPC,
        DAOPOHAMOMF,
    };
    pub const JEHDFHLGCNL_union = union(_JEHDFHLGCNL_case) {
        LOONEHFNAPC: KPIGLOPEMCF,
        DAOPOHAMOMF: BCPDFIPOMAP,
        pub const _union_desc = .{
            .LOONEHFNAPC = fd(9, .{ .SubMessage = {} }),
            .DAOPOHAMOMF = fd(6, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .JEHDFHLGCNL = fd(null, .{ .OneOf = JEHDFHLGCNL_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HIEJJBDNCNH = struct {
    display_type: BattleRecordType = @enumFromInt(0),
    EBOOMGDGNEP: ?IHKGNJDNALJ = null,
    JFPCPDCFLMD: ?OBIHNGMNKEK = null,

    pub const _desc_table = .{
        .display_type = fd(2, .{ .Varint = .Simple }),
        .EBOOMGDGNEP = fd(9, .{ .SubMessage = {} }),
        .JFPCPDCFLMD = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerSimpleInfo = struct {
    ANPLLAOBFJI: u32 = 0,
    AKCEJFCFBAN: ManagedString = .Empty,
    nickname: ManagedString = .Empty,
    last_active_time: i64 = 0,
    chat_bubble_id: u32 = 0,
    head_icon: u32 = 0,
    signature: ManagedString = .Empty,
    GMALCPNOHBF: ManagedString = .Empty,
    uid: u32 = 0,
    platform: PlatformType = @enumFromInt(0),
    is_banned: bool = false,
    level: u32 = 0,
    online_status: FriendOnlineStatus = @enumFromInt(0),
    assist_simple_info_list: ArrayList(AssistSimpleInfo),

    pub const _desc_table = .{
        .ANPLLAOBFJI = fd(9, .{ .Varint = .Simple }),
        .AKCEJFCFBAN = fd(11, .String),
        .nickname = fd(10, .String),
        .last_active_time = fd(8, .{ .Varint = .Simple }),
        .chat_bubble_id = fd(6, .{ .Varint = .Simple }),
        .head_icon = fd(14, .{ .Varint = .Simple }),
        .signature = fd(5, .String),
        .GMALCPNOHBF = fd(12, .String),
        .uid = fd(1, .{ .Varint = .Simple }),
        .platform = fd(4, .{ .Varint = .Simple }),
        .is_banned = fd(15, .{ .Varint = .Simple }),
        .level = fd(7, .{ .Varint = .Simple }),
        .online_status = fd(3, .{ .Varint = .Simple }),
        .assist_simple_info_list = fd(13, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DisplayEquipmentInfo = struct {
    level: u32 = 0,
    rank: u32 = 0,
    tid: u32 = 0,
    promotion: u32 = 0,
    exp: u32 = 0,

    pub const _desc_table = .{
        .level = fd(3, .{ .Varint = .Simple }),
        .rank = fd(2, .{ .Varint = .Simple }),
        .tid = fd(7, .{ .Varint = .Simple }),
        .promotion = fd(5, .{ .Varint = .Simple }),
        .exp = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DisplayRelicInfo = struct {
    tid: u32 = 0,
    main_affix_id: u32 = 0,
    level: u32 = 0,
    exp: u32 = 0,
    type: u32 = 0,
    sub_affix_list: ArrayList(RelicAffix),

    pub const _desc_table = .{
        .tid = fd(6, .{ .Varint = .Simple }),
        .main_affix_id = fd(13, .{ .Varint = .Simple }),
        .level = fd(1, .{ .Varint = .Simple }),
        .exp = fd(2, .{ .Varint = .Simple }),
        .type = fd(14, .{ .Varint = .Simple }),
        .sub_affix_list = fd(11, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DisplayAvatarDetailInfo = struct {
    equipment: ?DisplayEquipmentInfo = null,
    avatar_id: u32 = 0,
    dressed_skin_id: u32 = 0,
    exp: u32 = 0,
    rank: u32 = 0,
    promotion: u32 = 0,
    skilltree_list: ArrayList(AvatarSkillTree),
    enhanced_id: u32 = 0,
    pos: u32 = 0,
    relic_list: ArrayList(DisplayRelicInfo),
    level: u32 = 0,

    pub const _desc_table = .{
        .equipment = fd(2, .{ .SubMessage = {} }),
        .avatar_id = fd(14, .{ .Varint = .Simple }),
        .dressed_skin_id = fd(11, .{ .Varint = .Simple }),
        .exp = fd(8, .{ .Varint = .Simple }),
        .rank = fd(3, .{ .Varint = .Simple }),
        .promotion = fd(5, .{ .Varint = .Simple }),
        .skilltree_list = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .enhanced_id = fd(12, .{ .Varint = .Simple }),
        .pos = fd(7, .{ .Varint = .Simple }),
        .relic_list = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .level = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerCollectionInfo = struct {
    NLJIFEKDPHN: u32 = 0,
    PGCDMMNNCJC: u32 = 0,
    PJCJNKBEIMK: u32 = 0,
    BDBMIKDJLKO: u32 = 0,
    LJPEKEDICML: u32 = 0,

    pub const _desc_table = .{
        .NLJIFEKDPHN = fd(12, .{ .Varint = .Simple }),
        .PGCDMMNNCJC = fd(5, .{ .Varint = .Simple }),
        .PJCJNKBEIMK = fd(6, .{ .Varint = .Simple }),
        .BDBMIKDJLKO = fd(15, .{ .Varint = .Simple }),
        .LJPEKEDICML = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerRecordInfo = struct {
    HKNOAKGCJBK: u32 = 0,
    CFDFMGLLICO: u32 = 0,
    GEKKNDONHLJ: u32 = 0,
    EHBDEIJJOHK: u32 = 0,
    JFPGBKBPBNF: u32 = 0,
    EMJDEBDMHLL: u32 = 0,
    BHFEFEODNIM: u32 = 0,
    FHKKMPDDMGO: u32 = 0,
    collection_info: ?PlayerCollectionInfo = null,

    pub const _desc_table = .{
        .HKNOAKGCJBK = fd(1, .{ .Varint = .Simple }),
        .CFDFMGLLICO = fd(12, .{ .Varint = .Simple }),
        .GEKKNDONHLJ = fd(7, .{ .Varint = .Simple }),
        .EHBDEIJJOHK = fd(6, .{ .Varint = .Simple }),
        .JFPGBKBPBNF = fd(11, .{ .Varint = .Simple }),
        .EMJDEBDMHLL = fd(13, .{ .Varint = .Simple }),
        .BHFEFEODNIM = fd(9, .{ .Varint = .Simple }),
        .FHKKMPDDMGO = fd(4, .{ .Varint = .Simple }),
        .collection_info = fd(10, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PrivacySettings = struct {
    KJNCCKHJFHE: bool = false,
    AICNFAOBCPI: bool = false,
    NJFMILJOFOK: bool = false,
    APONEIDMPHL: bool = false,
    PBKBGLHHKPE: bool = false,

    pub const _desc_table = .{
        .KJNCCKHJFHE = fd(7, .{ .Varint = .Simple }),
        .AICNFAOBCPI = fd(6, .{ .Varint = .Simple }),
        .NJFMILJOFOK = fd(12, .{ .Varint = .Simple }),
        .APONEIDMPHL = fd(4, .{ .Varint = .Simple }),
        .PBKBGLHHKPE = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerDisplaySettings = struct {
    JFPCPDCFLMD: ?OBIHNGMNKEK = null,
    challenge_list: ArrayList(IHKGNJDNALJ),

    pub const _desc_table = .{
        .JFPCPDCFLMD = fd(12, .{ .SubMessage = {} }),
        .challenge_list = fd(13, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerDetailInfo = struct {
    AKCEJFCFBAN: ManagedString = .Empty,
    signature: ManagedString = .Empty,
    ANPLLAOBFJI: u32 = 0,
    EMOBIJBDKEI: bool = false,
    platform: PlatformType = @enumFromInt(0),
    ONKHLHOJHGN: ?PlayerDisplaySettings = null,
    OOOPBHIMNFD: u32 = 0,
    world_level: u32 = 0,
    is_banned: bool = false,
    assist_avatar_list: ArrayList(DisplayAvatarDetailInfo),
    record_info: ?PlayerRecordInfo = null,
    GMALCPNOHBF: ManagedString = .Empty,
    head_icon: u32 = 0,
    privacy_settings: ?PrivacySettings = null,
    uid: u32 = 0,
    KBMGBNINFBK: u32 = 0,
    display_avatar_list: ArrayList(DisplayAvatarDetailInfo),
    level: u32 = 0,
    nickname: ManagedString = .Empty,

    pub const _desc_table = .{
        .AKCEJFCFBAN = fd(4, .String),
        .signature = fd(6, .String),
        .ANPLLAOBFJI = fd(1212, .{ .Varint = .Simple }),
        .EMOBIJBDKEI = fd(13, .{ .Varint = .Simple }),
        .platform = fd(9, .{ .Varint = .Simple }),
        .ONKHLHOJHGN = fd(395, .{ .SubMessage = {} }),
        .OOOPBHIMNFD = fd(1, .{ .Varint = .Simple }),
        .world_level = fd(7, .{ .Varint = .Simple }),
        .is_banned = fd(12, .{ .Varint = .Simple }),
        .assist_avatar_list = fd(440, .{ .List = .{ .SubMessage = {} } }),
        .record_info = fd(8, .{ .SubMessage = {} }),
        .GMALCPNOHBF = fd(14, .String),
        .head_icon = fd(3, .{ .Varint = .Simple }),
        .privacy_settings = fd(890, .{ .SubMessage = {} }),
        .uid = fd(10, .{ .Varint = .Simple }),
        .KBMGBNINFBK = fd(5, .{ .Varint = .Simple }),
        .display_avatar_list = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .level = fd(15, .{ .Varint = .Simple }),
        .nickname = fd(2, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FriendSimpleInfo = struct {
    is_marked: bool = false,
    playing_state: PlayingState = @enumFromInt(0),
    player_info: ?PlayerSimpleInfo = null,
    create_time: i64 = 0,
    remark_name: ManagedString = .Empty,
    ILCHAJCFFBF: ?HIEJJBDNCNH = null,

    pub const _desc_table = .{
        .is_marked = fd(15, .{ .Varint = .Simple }),
        .playing_state = fd(13, .{ .Varint = .Simple }),
        .player_info = fd(10, .{ .SubMessage = {} }),
        .create_time = fd(3, .{ .Varint = .Simple }),
        .remark_name = fd(4, .String),
        .ILCHAJCFFBF = fd(7, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FriendApplyInfo = struct {
    player_info: ?PlayerSimpleInfo = null,
    apply_time: i64 = 0,

    pub const _desc_table = .{
        .player_info = fd(9, .{ .SubMessage = {} }),
        .apply_time = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FriendRecommendInfo = struct {
    JHOLBLPEGLJ: bool = false,
    player_info: ?PlayerSimpleInfo = null,

    pub const _desc_table = .{
        .JHOLBLPEGLJ = fd(12, .{ .Varint = .Simple }),
        .player_info = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerAssistInfo = struct {
    MDHFANLHNMA: ?DisplayAvatarDetailInfo = null,
    player_info: ?PlayerSimpleInfo = null,

    pub const _desc_table = .{
        .MDHFANLHNMA = fd(2, .{ .SubMessage = {} }),
        .player_info = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FLCMJAHGKFK = struct {
    GMALCPNOHBF: ManagedString = .Empty,
    uid: u32 = 0,
    platform: PlatformType = @enumFromInt(0),
    level: u32 = 0,
    NPPPHGFENPH: u32 = 0,
    INNANICLCAE: u32 = 0,
    remark_name: ManagedString = .Empty,
    nickname: ManagedString = .Empty,
    head_icon: u32 = 0,

    pub const _desc_table = .{
        .GMALCPNOHBF = fd(8, .String),
        .uid = fd(6, .{ .Varint = .Simple }),
        .platform = fd(12, .{ .Varint = .Simple }),
        .level = fd(3, .{ .Varint = .Simple }),
        .NPPPHGFENPH = fd(15, .{ .Varint = .Simple }),
        .INNANICLCAE = fd(13, .{ .Varint = .Simple }),
        .remark_name = fd(11, .String),
        .nickname = fd(10, .String),
        .head_icon = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FCNOLLFGPCK = struct {
    buff_two: u32 = 0,
    INHDDNNPBDB: u32 = 0,
    score_id: u32 = 0,
    buff_one: u32 = 0,
    remark_name: ManagedString = .Empty,
    player_info: ?PlayerSimpleInfo = null,
    lineup_list: ArrayList(ChallengeLineupList),

    pub const _desc_table = .{
        .buff_two = fd(9, .{ .Varint = .Simple }),
        .INHDDNNPBDB = fd(15, .{ .Varint = .Simple }),
        .score_id = fd(3, .{ .Varint = .Simple }),
        .buff_one = fd(14, .{ .Varint = .Simple }),
        .remark_name = fd(8, .String),
        .player_info = fd(1, .{ .SubMessage = {} }),
        .lineup_list = fd(5, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CHKIICNAPHA = struct {
    group_id: u32 = 0,
    KHCNAJOKJHJ: u32 = 0,
    JDICGGKKOOI: ?JDICGGKKOOI_union,

    pub const _JDICGGKKOOI_case = enum {
        challenge_default,
        challenge_story,
        challenge_boss,
    };
    pub const JDICGGKKOOI_union = union(_JDICGGKKOOI_case) {
        challenge_default: ChallengeStatistics,
        challenge_story: ChallengeStoryStatistics,
        challenge_boss: ChallengeBossStatistics,
        pub const _union_desc = .{
            .challenge_default = fd(224, .{ .SubMessage = {} }),
            .challenge_story = fd(1486, .{ .SubMessage = {} }),
            .challenge_boss = fd(81, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .group_id = fd(1, .{ .Varint = .Simple }),
        .KHCNAJOKJHJ = fd(14, .{ .Varint = .Simple }),
        .JDICGGKKOOI = fd(null, .{ .OneOf = JDICGGKKOOI_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OGNLDADPJFO = struct {
    rogue_finish_info: ?RogueFinishInfo = null,
    map_id: u32 = 0,

    pub const _desc_table = .{
        .rogue_finish_info = fd(9, .{ .SubMessage = {} }),
        .map_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EAIMKOMHKHD = struct {
    avatar_id: u32 = 0,
    GGDIIBCDOBB: u32 = 0,

    pub const _desc_table = .{
        .avatar_id = fd(14, .{ .Varint = .Simple }),
        .GGDIIBCDOBB = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ANGOAMADOMA = struct {
    tourn_finish_info: ?RogueTournFinishInfo = null,
    JBLOKLCPAFN: u32 = 0,
    IJHLOJEFCPM: u32 = 0,
    OFGBJCCCIKE: u32 = 0,

    pub const _desc_table = .{
        .tourn_finish_info = fd(14, .{ .SubMessage = {} }),
        .JBLOKLCPAFN = fd(3, .{ .Varint = .Simple }),
        .IJHLOJEFCPM = fd(12, .{ .Varint = .Simple }),
        .OFGBJCCCIKE = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GGKBHALPIDK = struct {
    IMLHFGEPCAN: u32 = 0,
    LHBDONJIICC: u32 = 0,
    area_id: u32 = 0,

    pub const _desc_table = .{
        .IMLHFGEPCAN = fd(4, .{ .Varint = .Simple }),
        .LHBDONJIICC = fd(2, .{ .Varint = .Simple }),
        .area_id = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LFJPDDCNBKC = struct {
    EPLJMCAPMPC: u32 = 0,
    FNMGAOHMLIM: u32 = 0,
    FJHIGBBMJDM: u32 = 0,
    area_id: u32 = 0,

    pub const _desc_table = .{
        .EPLJMCAPMPC = fd(4, .{ .Varint = .Simple }),
        .FNMGAOHMLIM = fd(3, .{ .Varint = .Simple }),
        .FJHIGBBMJDM = fd(5, .{ .Varint = .Simple }),
        .area_id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NHAGPMMCDCF = struct {
    OIAJANCBABP: u32 = 0,
    area_id: u32 = 0,
    AGIJKFBCJOC: u32 = 0,
    ONAHHAMHFDB: u32 = 0,

    pub const _desc_table = .{
        .OIAJANCBABP = fd(4, .{ .Varint = .Simple }),
        .area_id = fd(9, .{ .Varint = .Simple }),
        .AGIJKFBCJOC = fd(8, .{ .Varint = .Simple }),
        .ONAHHAMHFDB = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OKDBOGBABNI = struct {
    PLCCEHDNAFL: ?GGKBHALPIDK = null,
    HDLJBADEKFI: ?NHAGPMMCDCF = null,
    APMJFGKIFON: ?LFJPDDCNBKC = null,
    GNKACKHFHHD: ?GNKACKHFHHD_union,

    pub const _GNKACKHFHHD_case = enum {
        EDGFEDJBAHF,
        OPFPOLCGMED,
    };
    pub const GNKACKHFHHD_union = union(_GNKACKHFHHD_case) {
        EDGFEDJBAHF: OGNLDADPJFO,
        OPFPOLCGMED: ANGOAMADOMA,
        pub const _union_desc = .{
            .EDGFEDJBAHF = fd(551, .{ .SubMessage = {} }),
            .OPFPOLCGMED = fd(128, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .PLCCEHDNAFL = fd(8, .{ .SubMessage = {} }),
        .HDLJBADEKFI = fd(6, .{ .SubMessage = {} }),
        .APMJFGKIFON = fd(4, .{ .SubMessage = {} }),
        .GNKACKHFHHD = fd(null, .{ .OneOf = GNKACKHFHHD_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IOJHJAHIMHM = struct {
    area_id: u32 = 0,

    pub const _desc_table = .{
        .area_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JIENKFADCHE = struct {
    NJOICIOPBNH: u32 = 0,
    area_id: u32 = 0,

    pub const _desc_table = .{
        .NJOICIOPBNH = fd(14, .{ .Varint = .Simple }),
        .area_id = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MEEHCBGDBEA = struct {
    challenge_id: u32 = 0,

    pub const _desc_table = .{
        .challenge_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DHAHAKMPNAF = struct {
    time: i64 = 0,
    EJHMNKHEPFA: DevelopmentType = @enumFromInt(0),
    EBBMJDKKFIB: ?EBBMJDKKFIB_union,

    pub const _EBBMJDKKFIB_case = enum {
        LIIBBGGEHFP,
        IKFFOBAMGHJ,
        avatar_id,
        MDMGKHLHIIN,
        CKKNNHMDCOG,
        IELHLBFFAGK,
        panel_id,
    };
    pub const EBBMJDKKFIB_union = union(_EBBMJDKKFIB_case) {
        LIIBBGGEHFP: IOJHJAHIMHM,
        IKFFOBAMGHJ: MEEHCBGDBEA,
        avatar_id: u32,
        MDMGKHLHIIN: u32,
        CKKNNHMDCOG: u32,
        IELHLBFFAGK: JIENKFADCHE,
        panel_id: u32,
        pub const _union_desc = .{
            .LIIBBGGEHFP = fd(926, .{ .SubMessage = {} }),
            .IKFFOBAMGHJ = fd(1058, .{ .SubMessage = {} }),
            .avatar_id = fd(932, .{ .Varint = .Simple }),
            .MDMGKHLHIIN = fd(367, .{ .Varint = .Simple }),
            .CKKNNHMDCOG = fd(1029, .{ .Varint = .Simple }),
            .IELHLBFFAGK = fd(824, .{ .SubMessage = {} }),
            .panel_id = fd(195, .{ .Varint = .Simple }),
        };
    };

    pub const _desc_table = .{
        .time = fd(1, .{ .Varint = .Simple }),
        .EJHMNKHEPFA = fd(7, .{ .Varint = .Simple }),
        .EBBMJDKKFIB = fd(null, .{ .OneOf = EBBMJDKKFIB_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFriendListInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFriendListInfoScRsp = struct {
    retcode: u32 = 0,
    friend_list: ArrayList(FriendSimpleInfo),
    black_list: ArrayList(PlayerSimpleInfo),

    pub const _desc_table = .{
        .retcode = fd(14, .{ .Varint = .Simple }),
        .friend_list = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .black_list = fd(12, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPlayerDetailInfoCsReq = struct {
    uid: u32 = 0,

    pub const _desc_table = .{
        .uid = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPlayerDetailInfoScRsp = struct {
    retcode: u32 = 0,
    detail_info: ?PlayerDetailInfo = null,

    pub const _desc_table = .{
        .retcode = fd(15, .{ .Varint = .Simple }),
        .detail_info = fd(10, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFriendApplyListInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFriendApplyListInfoScRsp = struct {
    retcode: u32 = 0,
    send_apply_list: ArrayList(u32),
    receive_apply_list: ArrayList(FriendApplyInfo),

    pub const _desc_table = .{
        .retcode = fd(14, .{ .Varint = .Simple }),
        .send_apply_list = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
        .receive_apply_list = fd(15, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ApplyFriendCsReq = struct {
    source: FriendApplySource = @enumFromInt(0),
    uid: u32 = 0,

    pub const _desc_table = .{
        .source = fd(3, .{ .Varint = .Simple }),
        .uid = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ApplyFriendScRsp = struct {
    uid: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .uid = fd(6, .{ .Varint = .Simple }),
        .retcode = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncApplyFriendScNotify = struct {
    apply_info: ?FriendApplyInfo = null,

    pub const _desc_table = .{
        .apply_info = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HandleFriendCsReq = struct {
    uid: u32 = 0,
    is_accept: bool = false,

    pub const _desc_table = .{
        .uid = fd(1, .{ .Varint = .Simple }),
        .is_accept = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HandleFriendScRsp = struct {
    friend_info: ?FriendSimpleInfo = null,
    is_accept: bool = false,
    uid: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .friend_info = fd(15, .{ .SubMessage = {} }),
        .is_accept = fd(9, .{ .Varint = .Simple }),
        .uid = fd(2, .{ .Varint = .Simple }),
        .retcode = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncHandleFriendScNotify = struct {
    is_accept: bool = false,
    uid: u32 = 0,
    friend_info: ?FriendSimpleInfo = null,

    pub const _desc_table = .{
        .is_accept = fd(8, .{ .Varint = .Simple }),
        .uid = fd(13, .{ .Varint = .Simple }),
        .friend_info = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DeleteFriendCsReq = struct {
    uid: u32 = 0,
    FIOCDBIPCGB: u32 = 0,

    pub const _desc_table = .{
        .uid = fd(6, .{ .Varint = .Simple }),
        .FIOCDBIPCGB = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DeleteFriendScRsp = struct {
    retcode: u32 = 0,
    uid: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(6, .{ .Varint = .Simple }),
        .uid = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncDeleteFriendScNotify = struct {
    uid: u32 = 0,

    pub const _desc_table = .{
        .uid = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AddBlacklistCsReq = struct {
    uid: u32 = 0,

    pub const _desc_table = .{
        .uid = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AddBlacklistScRsp = struct {
    retcode: u32 = 0,
    black_info: ?PlayerSimpleInfo = null,

    pub const _desc_table = .{
        .retcode = fd(11, .{ .Varint = .Simple }),
        .black_info = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncAddBlacklistScNotify = struct {
    uid: u32 = 0,

    pub const _desc_table = .{
        .uid = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFriendRecommendListInfoCsReq = struct {
    AHOILNFIIEG: bool = false,

    pub const _desc_table = .{
        .AHOILNFIIEG = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFriendRecommendListInfoScRsp = struct {
    player_info_list: ArrayList(FriendRecommendInfo),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .player_info_list = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetFriendRemarkNameCsReq = struct {
    uid: u32 = 0,
    remark_name: ManagedString = .Empty,
    reason: u32 = 0,

    pub const _desc_table = .{
        .uid = fd(12, .{ .Varint = .Simple }),
        .remark_name = fd(6, .String),
        .reason = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetFriendRemarkNameScRsp = struct {
    remark_name: ManagedString = .Empty,
    retcode: u32 = 0,
    uid: u32 = 0,

    pub const _desc_table = .{
        .remark_name = fd(8, .String),
        .retcode = fd(9, .{ .Varint = .Simple }),
        .uid = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ReportPlayerCsReq = struct {
    MIMAKHAABAH: ManagedString = .Empty,
    EHBCLJFPOOE: u32 = 0,
    uid: u32 = 0,

    pub const _desc_table = .{
        .MIMAKHAABAH = fd(13, .String),
        .EHBCLJFPOOE = fd(12, .{ .Varint = .Simple }),
        .uid = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ReportPlayerScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DeleteBlacklistCsReq = struct {
    uid: u32 = 0,

    pub const _desc_table = .{
        .uid = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DeleteBlacklistScRsp = struct {
    uid: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .uid = fd(2, .{ .Varint = .Simple }),
        .retcode = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SearchPlayerCsReq = struct {
    uid_list: ArrayList(u32),
    AHOILNFIIEG: bool = false,

    pub const _desc_table = .{
        .uid_list = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
        .AHOILNFIIEG = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SearchPlayerScRsp = struct {
    result_uid_list: ArrayList(u32),
    simple_info_list: ArrayList(PlayerSimpleInfo),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .result_uid_list = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
        .simple_info_list = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetAssistListCsReq = struct {
    AHOILNFIIEG: bool = false,
    KIBOAGMOJCP: bool = false,

    pub const _desc_table = .{
        .AHOILNFIIEG = fd(7, .{ .Varint = .Simple }),
        .KIBOAGMOJCP = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetAssistListScRsp = struct {
    retcode: u32 = 0,
    assist_list: ArrayList(PlayerAssistInfo),

    pub const _desc_table = .{
        .retcode = fd(10, .{ .Varint = .Simple }),
        .assist_list = fd(8, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetAssistCsReq = struct {
    uid: u32 = 0,
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .uid = fd(11, .{ .Varint = .Simple }),
        .avatar_id = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetAssistScRsp = struct {
    retcode: u32 = 0,
    uid: u32 = 0,
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(5, .{ .Varint = .Simple }),
        .uid = fd(11, .{ .Varint = .Simple }),
        .avatar_id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetCurAssistCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetCurAssistScRsp = struct {
    assist_info: ?PlayerAssistInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .assist_info = fd(11, .{ .SubMessage = {} }),
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetAssistHistoryCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetAssistHistoryScRsp = struct {
    today_use_uid_list: ArrayList(u32),
    OMHCHJLLIIF: u32 = 0,
    NFJJAPNPPKP: u32 = 0,
    PBFNEIGOPMP: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .today_use_uid_list = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
        .OMHCHJLLIIF = fd(5, .{ .Varint = .Simple }),
        .NFJJAPNPPKP = fd(12, .{ .Varint = .Simple }),
        .PBFNEIGOPMP = fd(1, .{ .Varint = .Simple }),
        .retcode = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NewAssistHistoryNotify = struct {
    NFJJAPNPPKP: u32 = 0,

    pub const _desc_table = .{
        .NFJJAPNPPKP = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeAssistRewardCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeAssistRewardScRsp = struct {
    reward: ?ItemList = null,
    NLCNBIEHCOH: ArrayList(FLCMJAHGKFK),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .reward = fd(6, .{ .SubMessage = {} }),
        .NLCNBIEHCOH = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CurAssistChangedNotify = struct {
    assist_info: ?PlayerAssistInfo = null,

    pub const _desc_table = .{
        .assist_info = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPlatformPlayerInfoCsReq = struct {
    platform: PlatformType = @enumFromInt(0),
    DNENLCHJEKG: ArrayList(ManagedString),

    pub const _desc_table = .{
        .platform = fd(2, .{ .Varint = .Simple }),
        .DNENLCHJEKG = fd(3, .{ .List = .String }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPlatformPlayerInfoScRsp = struct {
    retcode: u32 = 0,
    player_info_list: ArrayList(PlayerSimpleInfo),

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
        .player_info_list = fd(15, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFriendLoginInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFriendLoginInfoScRsp = struct {
    DBNDOMDMMGF: ArrayList(u32),
    BOHNBJMMKBO: bool = false,
    IIHDBINOPMG: ArrayList(u32),
    LIFCEHLFDNM: bool = false,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .DBNDOMDMMGF = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
        .BOHNBJMMKBO = fd(10, .{ .Varint = .Simple }),
        .IIHDBINOPMG = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
        .LIFCEHLFDNM = fd(14, .{ .Varint = .Simple }),
        .retcode = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetForbidOtherApplyFriendCsReq = struct {
    MJPFLIKAFEJ: bool = false,

    pub const _desc_table = .{
        .MJPFLIKAFEJ = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetForbidOtherApplyFriendScRsp = struct {
    MJPFLIKAFEJ: bool = false,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .MJPFLIKAFEJ = fd(10, .{ .Varint = .Simple }),
        .retcode = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetFriendMarkCsReq = struct {
    reason: u32 = 0,
    ADJGKCOKOLN: bool = false,
    uid: u32 = 0,

    pub const _desc_table = .{
        .reason = fd(10, .{ .Varint = .Simple }),
        .ADJGKCOKOLN = fd(15, .{ .Varint = .Simple }),
        .uid = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetFriendMarkScRsp = struct {
    uid: u32 = 0,
    retcode: u32 = 0,
    ADJGKCOKOLN: bool = false,

    pub const _desc_table = .{
        .uid = fd(5, .{ .Varint = .Simple }),
        .retcode = fd(1, .{ .Varint = .Simple }),
        .ADJGKCOKOLN = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFriendAssistListCsReq = struct {
    MLOOGABMIHP: AssistAvatarType = @enumFromInt(0),
    KCPAODEBJDG: ArrayList(u32),
    BIJGJECJMHM: ArrayList(u32),
    target_side: u32 = 0,
    AHOILNFIIEG: bool = false,

    pub const _desc_table = .{
        .MLOOGABMIHP = fd(1, .{ .Varint = .Simple }),
        .KCPAODEBJDG = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .BIJGJECJMHM = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
        .target_side = fd(8, .{ .Varint = .Simple }),
        .AHOILNFIIEG = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFriendAssistListScRsp = struct {
    assist_list: ArrayList(PlayerAssistInfo),
    retcode: u32 = 0,
    target_side: u32 = 0,

    pub const _desc_table = .{
        .assist_list = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(12, .{ .Varint = .Simple }),
        .target_side = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFriendChallengeLineupCsReq = struct {
    challenge_id: u32 = 0,

    pub const _desc_table = .{
        .challenge_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFriendChallengeLineupScRsp = struct {
    ONOCJEEBFCI: bool = false,
    challenge_recommend_list: ArrayList(FCNOLLFGPCK),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .ONOCJEEBFCI = fd(13, .{ .Varint = .Simple }),
        .challenge_recommend_list = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFriendChallengeDetailCsReq = struct {
    challenge_id: u32 = 0,
    uid: u32 = 0,

    pub const _desc_table = .{
        .challenge_id = fd(11, .{ .Varint = .Simple }),
        .uid = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFriendChallengeDetailScRsp = struct {
    challenge_id: u32 = 0,
    retcode: u32 = 0,
    CCGDMOOLHHB: ArrayList(DisplayAvatarDetailInfo),
    uid: u32 = 0,

    pub const _desc_table = .{
        .challenge_id = fd(10, .{ .Varint = .Simple }),
        .retcode = fd(14, .{ .Varint = .Simple }),
        .CCGDMOOLHHB = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .uid = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KAMCIOPBPGA = struct {
    JHIAKMCHPLB: ArrayList(u32),
    remark_name: ManagedString = .Empty,
    avatar_list: ArrayList(OILPIACENNH),
    player_info: ?PlayerSimpleInfo = null,

    pub const _desc_table = .{
        .JHIAKMCHPLB = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
        .remark_name = fd(3, .String),
        .avatar_list = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .player_info = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KEHMGKIHEFN = struct {
    NFGNBBJGANG: ?NFGNBBJGANG_union,

    pub const _NFGNBBJGANG_case = enum {
        GIEIDJEEPAC,
        ADDCJEJPFEF,
    };
    pub const NFGNBBJGANG_union = union(_NFGNBBJGANG_case) {
        GIEIDJEEPAC: FCNOLLFGPCK,
        ADDCJEJPFEF: KAMCIOPBPGA,
        pub const _union_desc = .{
            .GIEIDJEEPAC = fd(11, .{ .SubMessage = {} }),
            .ADDCJEJPFEF = fd(3, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .NFGNBBJGANG = fd(null, .{ .OneOf = NFGNBBJGANG_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFriendRecommendLineupCsReq = struct {
    type: DLLLEANDAIH = @enumFromInt(0),
    key: u32 = 0,

    pub const _desc_table = .{
        .type = fd(1, .{ .Varint = .Simple }),
        .key = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFriendRecommendLineupScRsp = struct {
    challenge_recommend_list: ArrayList(KEHMGKIHEFN),
    type: DLLLEANDAIH = @enumFromInt(0),
    ONOCJEEBFCI: bool = false,
    key: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .challenge_recommend_list = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .type = fd(12, .{ .Varint = .Simple }),
        .ONOCJEEBFCI = fd(9, .{ .Varint = .Simple }),
        .key = fd(10, .{ .Varint = .Simple }),
        .retcode = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFriendRecommendLineupDetailCsReq = struct {
    key: u32 = 0,
    type: DLLLEANDAIH = @enumFromInt(0),
    uid: u32 = 0,

    pub const _desc_table = .{
        .key = fd(3, .{ .Varint = .Simple }),
        .type = fd(6, .{ .Varint = .Simple }),
        .uid = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFriendRecommendLineupDetailScRsp = struct {
    CCGDMOOLHHB: ArrayList(DisplayAvatarDetailInfo),
    retcode: u32 = 0,
    type: DLLLEANDAIH = @enumFromInt(0),
    uid: u32 = 0,
    key: u32 = 0,

    pub const _desc_table = .{
        .CCGDMOOLHHB = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(1, .{ .Varint = .Simple }),
        .type = fd(14, .{ .Varint = .Simple }),
        .uid = fd(6, .{ .Varint = .Simple }),
        .key = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFriendBattleRecordDetailCsReq = struct {
    uid: u32 = 0,

    pub const _desc_table = .{
        .uid = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFriendBattleRecordDetailScRsp = struct {
    uid: u32 = 0,
    retcode: u32 = 0,
    PGBBEPKAHBH: ?OKDBOGBABNI = null,
    JDIDIHOBAOD: ArrayList(CHKIICNAPHA),

    pub const _desc_table = .{
        .uid = fd(4, .{ .Varint = .Simple }),
        .retcode = fd(2, .{ .Varint = .Simple }),
        .PGBBEPKAHBH = fd(11, .{ .SubMessage = {} }),
        .JDIDIHOBAOD = fd(14, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFriendDevelopmentInfoCsReq = struct {
    uid: u32 = 0,

    pub const _desc_table = .{
        .uid = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFriendDevelopmentInfoScRsp = struct {
    retcode: u32 = 0,
    JBHBFBJGBPH: ArrayList(DHAHAKMPNAF),
    uid: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
        .JBHBFBJGBPH = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .uid = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetGachaInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GachaCeilingAvatar = struct {
    repeated_cnt: u32 = 0,
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .repeated_cnt = fd(3, .{ .Varint = .Simple }),
        .avatar_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GachaCeiling = struct {
    is_claimed: bool = false,
    ceiling_num: u32 = 0,
    avatar_list: ArrayList(GachaCeilingAvatar),

    pub const _desc_table = .{
        .is_claimed = fd(12, .{ .Varint = .Simple }),
        .ceiling_num = fd(13, .{ .Varint = .Simple }),
        .avatar_list = fd(11, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LOPDJAHFPHN = struct {
    CHDOIBFEHLP: u32 = 0,
    IINCDJPOOMC: u32 = 0,
    DLABDNPIHFF: ArrayList(u32),
    JIGONEALCPC: ArrayList(u32),

    pub const _desc_table = .{
        .CHDOIBFEHLP = fd(4, .{ .Varint = .Simple }),
        .IINCDJPOOMC = fd(6, .{ .Varint = .Simple }),
        .DLABDNPIHFF = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
        .JIGONEALCPC = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GachaInfo = struct {
    detail_webview: ManagedString = .Empty,
    prize_item_list: ArrayList(u32),
    gacha_id: u32 = 0,
    ANNGPMHPNIM: ArrayList(u32),
    GDIFAAHIFBH: u32 = 0,
    KMNJNMJFGBG: u32 = 0,
    begin_time: i64 = 0,
    drop_history_webview: ManagedString = .Empty,
    end_time: i64 = 0,
    item_detail_list: ArrayList(u32),
    IINCDJPOOMC: u32 = 0,
    gacha_ceiling: ?GachaCeiling = null,

    pub const _desc_table = .{
        .detail_webview = fd(3, .String),
        .prize_item_list = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .gacha_id = fd(4, .{ .Varint = .Simple }),
        .ANNGPMHPNIM = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
        .GDIFAAHIFBH = fd(12, .{ .Varint = .Simple }),
        .KMNJNMJFGBG = fd(14, .{ .Varint = .Simple }),
        .begin_time = fd(11, .{ .Varint = .Simple }),
        .drop_history_webview = fd(13, .String),
        .end_time = fd(7, .{ .Varint = .Simple }),
        .item_detail_list = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .IINCDJPOOMC = fd(10, .{ .Varint = .Simple }),
        .gacha_ceiling = fd(15, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetGachaInfoScRsp = struct {
    NOPBEBKHIKA: u32 = 0,
    IDEHAJMEMAK: ArrayList(LOPDJAHFPHN),
    retcode: u32 = 0,
    gacha_random: u32 = 0,
    NBELNOIPOEK: u32 = 0,
    DJNDMNPEBKA: u32 = 0,
    gacha_info_list: ArrayList(GachaInfo),

    pub const _desc_table = .{
        .NOPBEBKHIKA = fd(6, .{ .Varint = .Simple }),
        .IDEHAJMEMAK = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(1, .{ .Varint = .Simple }),
        .gacha_random = fd(15, .{ .Varint = .Simple }),
        .NBELNOIPOEK = fd(9, .{ .Varint = .Simple }),
        .DJNDMNPEBKA = fd(7, .{ .Varint = .Simple }),
        .gacha_info_list = fd(3, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DoGachaCsReq = struct {
    gacha_random: u32 = 0,
    gacha_id: u32 = 0,
    simulate_magic: u32 = 0,
    gacha_num: u32 = 0,

    pub const _desc_table = .{
        .gacha_random = fd(15, .{ .Varint = .Simple }),
        .gacha_id = fd(1, .{ .Varint = .Simple }),
        .simulate_magic = fd(11, .{ .Varint = .Simple }),
        .gacha_num = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GachaItem = struct {
    is_new: bool = false,
    transfer_item_list: ?ItemList = null,
    gacha_item: ?Item = null,
    token_item: ?ItemList = null,

    pub const _desc_table = .{
        .is_new = fd(9, .{ .Varint = .Simple }),
        .transfer_item_list = fd(7, .{ .SubMessage = {} }),
        .gacha_item = fd(2, .{ .SubMessage = {} }),
        .token_item = fd(15, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DoGachaScRsp = struct {
    retcode: u32 = 0,
    PENILHGLHHM: u32 = 0,
    KMNJNMJFGBG: u32 = 0,
    gacha_item_list: ArrayList(GachaItem),
    GDIFAAHIFBH: u32 = 0,
    gacha_id: u32 = 0,
    ceiling_num: u32 = 0,
    gacha_num: u32 = 0,
    NOPBEBKHIKA: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(13, .{ .Varint = .Simple }),
        .PENILHGLHHM = fd(7, .{ .Varint = .Simple }),
        .KMNJNMJFGBG = fd(4, .{ .Varint = .Simple }),
        .gacha_item_list = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .GDIFAAHIFBH = fd(2, .{ .Varint = .Simple }),
        .gacha_id = fd(9, .{ .Varint = .Simple }),
        .ceiling_num = fd(1, .{ .Varint = .Simple }),
        .gacha_num = fd(10, .{ .Varint = .Simple }),
        .NOPBEBKHIKA = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetGachaCeilingCsReq = struct {
    gacha_type: u32 = 0,

    pub const _desc_table = .{
        .gacha_type = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetGachaCeilingScRsp = struct {
    gacha_type: u32 = 0,
    retcode: u32 = 0,
    gacha_ceiling: ?GachaCeiling = null,

    pub const _desc_table = .{
        .gacha_type = fd(11, .{ .Varint = .Simple }),
        .retcode = fd(12, .{ .Varint = .Simple }),
        .gacha_ceiling = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeGachaCeilingCsReq = struct {
    gacha_type: u32 = 0,
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .gacha_type = fd(13, .{ .Varint = .Simple }),
        .avatar_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeGachaCeilingScRsp = struct {
    gacha_type: u32 = 0,
    transfer_item_list: ?ItemList = null,
    retcode: u32 = 0,
    gacha_ceiling: ?GachaCeiling = null,
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .gacha_type = fd(2, .{ .Varint = .Simple }),
        .transfer_item_list = fd(5, .{ .SubMessage = {} }),
        .retcode = fd(11, .{ .Varint = .Simple }),
        .gacha_ceiling = fd(8, .{ .SubMessage = {} }),
        .avatar_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetGachaDecideItemCsReq = struct {
    gacha_id: u32 = 0,
    DLABDNPIHFF: ArrayList(u32),
    CHDOIBFEHLP: u32 = 0,

    pub const _desc_table = .{
        .gacha_id = fd(2, .{ .Varint = .Simple }),
        .DLABDNPIHFF = fd(11, .{ .PackedList = .{ .Varint = .Simple } }),
        .CHDOIBFEHLP = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetGachaDecideItemScRsp = struct {
    retcode: u32 = 0,
    GDPOEEJNMHN: ?LOPDJAHFPHN = null,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
        .GDPOEEJNMHN = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeartDialDialogueInfo = struct {
    dialogue_id: u32 = 0,
    FBKEKCGELBE: bool = false,

    pub const _desc_table = .{
        .dialogue_id = fd(10, .{ .Varint = .Simple }),
        .FBKEKCGELBE = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeartDialScriptInfo = struct {
    step: HeartDialStepType = @enumFromInt(0),
    script_id: u32 = 0,
    KKGFIGCHKIB: bool = false,
    JMPEJFICKJO: bool = false,
    cur_emotion_type: HeartDialEmotionType = @enumFromInt(0),

    pub const _desc_table = .{
        .step = fd(14, .{ .Varint = .Simple }),
        .script_id = fd(13, .{ .Varint = .Simple }),
        .KKGFIGCHKIB = fd(2, .{ .Varint = .Simple }),
        .JMPEJFICKJO = fd(3, .{ .Varint = .Simple }),
        .cur_emotion_type = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MMEINFMDJFG = struct {
    script_id: u32 = 0,
    KBMMMMCKJNI: u32 = 0,

    pub const _desc_table = .{
        .script_id = fd(13, .{ .Varint = .Simple }),
        .KBMMMMCKJNI = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetHeartDialInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetHeartDialInfoScRsp = struct {
    script_info_list: ArrayList(HeartDialScriptInfo),
    OCMOEJIDLAM: ArrayList(MMEINFMDJFG),
    unlock_status: HeartDialUnlockStatus = @enumFromInt(0),
    retcode: u32 = 0,
    dialogue_info_list: ArrayList(HeartDialDialogueInfo),

    pub const _desc_table = .{
        .script_info_list = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .OCMOEJIDLAM = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .unlock_status = fd(8, .{ .Varint = .Simple }),
        .retcode = fd(13, .{ .Varint = .Simple }),
        .dialogue_info_list = fd(4, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChangeScriptEmotionCsReq = struct {
    target_emotion_type: HeartDialEmotionType = @enumFromInt(0),
    script_id: u32 = 0,
    FIHNCOABELA: u32 = 0,

    pub const _desc_table = .{
        .target_emotion_type = fd(1, .{ .Varint = .Simple }),
        .script_id = fd(2, .{ .Varint = .Simple }),
        .FIHNCOABELA = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChangeScriptEmotionScRsp = struct {
    script_id: u32 = 0,
    emotion_type: HeartDialEmotionType = @enumFromInt(0),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .script_id = fd(15, .{ .Varint = .Simple }),
        .emotion_type = fd(2, .{ .Varint = .Simple }),
        .retcode = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SubmitEmotionItemCsReq = struct {
    script_id: u32 = 0,
    FIHNCOABELA: u32 = 0,
    item_list: ?ItemList = null,

    pub const _desc_table = .{
        .script_id = fd(1, .{ .Varint = .Simple }),
        .FIHNCOABELA = fd(10, .{ .Varint = .Simple }),
        .item_list = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SubmitEmotionItemScRsp = struct {
    script_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .script_id = fd(14, .{ .Varint = .Simple }),
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishEmotionDialoguePerformanceCsReq = struct {
    FIHNCOABELA: u32 = 0,
    dialogue_id: u32 = 0,
    script_id: u32 = 0,

    pub const _desc_table = .{
        .FIHNCOABELA = fd(8, .{ .Varint = .Simple }),
        .dialogue_id = fd(5, .{ .Varint = .Simple }),
        .script_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishEmotionDialoguePerformanceScRsp = struct {
    retcode: u32 = 0,
    script_id: u32 = 0,
    reward_list: ?ItemList = null,
    dialogue_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(4, .{ .Varint = .Simple }),
        .script_id = fd(7, .{ .Varint = .Simple }),
        .reward_list = fd(6, .{ .SubMessage = {} }),
        .dialogue_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeartDialScriptChangeScNotify = struct {
    changed_dialogue_info_list: ArrayList(HeartDialDialogueInfo),
    changed_script_info_list: ArrayList(HeartDialScriptInfo),
    OCMOEJIDLAM: ArrayList(MMEINFMDJFG),
    unlock_status: HeartDialUnlockStatus = @enumFromInt(0),

    pub const _desc_table = .{
        .changed_dialogue_info_list = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .changed_script_info_list = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .OCMOEJIDLAM = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .unlock_status = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeartDialTraceScriptCsReq = struct {
    AGOIPFBDDPO: ?MMEINFMDJFG = null,

    pub const _desc_table = .{
        .AGOIPFBDDPO = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeartDialTraceScriptScRsp = struct {
    AGOIPFBDDPO: ?MMEINFMDJFG = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .AGOIPFBDDPO = fd(8, .{ .SubMessage = {} }),
        .retcode = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DEJAKPOEPKN = struct {
    CGFGFMGDPNJ: u32 = 0,
    LFPMAOBGNEN: ArrayList(u32),

    pub const _desc_table = .{
        .CGFGFMGDPNJ = fd(8, .{ .Varint = .Simple }),
        .LFPMAOBGNEN = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JMIJJHKIBLB = struct {
    challenge_id: u32 = 0,
    star: u32 = 0,
    GJIEAHDBNNI: bool = false,

    pub const _desc_table = .{
        .challenge_id = fd(14, .{ .Varint = .Simple }),
        .star = fd(7, .{ .Varint = .Simple }),
        .GJIEAHDBNNI = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeliobusChallengeLineup = struct {
    group_id: u32 = 0,
    skill_id: u32 = 0,
    avatar_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .group_id = fd(7, .{ .Varint = .Simple }),
        .skill_id = fd(12, .{ .Varint = .Simple }),
        .avatar_id_list = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeliobusActivityDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeliobusActivityDataScRsp = struct {
    IBHAAEJEEHC: u32 = 0,
    EENJBPMNDOL: u32 = 0,
    skill_info: ?DEJAKPOEPKN = null,
    retcode: u32 = 0,
    level: u32 = 0,
    IPHKDELMOIH: u32 = 0,
    GCLJENGJICM: ArrayList(HeliobusChallengeLineup),
    NFDBMHPPFIP: ArrayList(GBJKKFHPFFN),
    phase: u32 = 0,
    challenge_list: ArrayList(JMIJJHKIBLB),

    pub const _desc_table = .{
        .IBHAAEJEEHC = fd(4, .{ .Varint = .Simple }),
        .EENJBPMNDOL = fd(11, .{ .Varint = .Simple }),
        .skill_info = fd(3, .{ .SubMessage = {} }),
        .retcode = fd(1, .{ .Varint = .Simple }),
        .level = fd(13, .{ .Varint = .Simple }),
        .IPHKDELMOIH = fd(6, .{ .Varint = .Simple }),
        .GCLJENGJICM = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .NFDBMHPPFIP = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .phase = fd(5, .{ .Varint = .Simple }),
        .challenge_list = fd(14, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GOAMMAGCIJJ = struct {
    JNDKOOEJCFC: ArrayList(GOAMMAGCIJJ),
    ELIADKDAECO: u32 = 0,
    KMAEMPMOCCC: u32 = 0,

    pub const _desc_table = .{
        .JNDKOOEJCFC = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .ELIADKDAECO = fd(4, .{ .Varint = .Simple }),
        .KMAEMPMOCCC = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GBJKKFHPFFN = struct {
    IHKEJEBCEIB: u32 = 0,
    DEKHDIBCFAB: bool = false,
    NDJFNHFPCGD: ArrayList(GOAMMAGCIJJ),
    JFMOFIIDCNP: u32 = 0,
    AKNKPKPLJHF: u32 = 0,
    AJCIODKLLML: bool = false,
    FCLNOOGEHMC: u32 = 0,
    CMHGBBHKNCI: u32 = 0,

    pub const _desc_table = .{
        .IHKEJEBCEIB = fd(2, .{ .Varint = .Simple }),
        .DEKHDIBCFAB = fd(13, .{ .Varint = .Simple }),
        .NDJFNHFPCGD = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .JFMOFIIDCNP = fd(1, .{ .Varint = .Simple }),
        .AKNKPKPLJHF = fd(4, .{ .Varint = .Simple }),
        .AJCIODKLLML = fd(3, .{ .Varint = .Simple }),
        .FCLNOOGEHMC = fd(9, .{ .Varint = .Simple }),
        .CMHGBBHKNCI = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeliobusSnsReadCsReq = struct {
    IHKEJEBCEIB: u32 = 0,

    pub const _desc_table = .{
        .IHKEJEBCEIB = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeliobusSnsReadScRsp = struct {
    IHKEJEBCEIB: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .IHKEJEBCEIB = fd(14, .{ .Varint = .Simple }),
        .retcode = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeliobusSnsPostCsReq = struct {
    IHKEJEBCEIB: u32 = 0,
    JFMOFIIDCNP: u32 = 0,
    FCLNOOGEHMC: u32 = 0,

    pub const _desc_table = .{
        .IHKEJEBCEIB = fd(6, .{ .Varint = .Simple }),
        .JFMOFIIDCNP = fd(7, .{ .Varint = .Simple }),
        .FCLNOOGEHMC = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeliobusSnsPostScRsp = struct {
    retcode: u32 = 0,
    EIMCNIFMLBL: ?GBJKKFHPFFN = null,

    pub const _desc_table = .{
        .retcode = fd(8, .{ .Varint = .Simple }),
        .EIMCNIFMLBL = fd(10, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeliobusSnsLikeCsReq = struct {
    IHKEJEBCEIB: u32 = 0,

    pub const _desc_table = .{
        .IHKEJEBCEIB = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeliobusSnsLikeScRsp = struct {
    IHKEJEBCEIB: u32 = 0,
    DEKHDIBCFAB: bool = false,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .IHKEJEBCEIB = fd(4, .{ .Varint = .Simple }),
        .DEKHDIBCFAB = fd(9, .{ .Varint = .Simple }),
        .retcode = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeliobusSnsCommentCsReq = struct {
    KMAEMPMOCCC: u32 = 0,
    KALJKFKJFFA: u32 = 0,
    IHKEJEBCEIB: u32 = 0,

    pub const _desc_table = .{
        .KMAEMPMOCCC = fd(8, .{ .Varint = .Simple }),
        .KALJKFKJFFA = fd(13, .{ .Varint = .Simple }),
        .IHKEJEBCEIB = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeliobusSnsCommentScRsp = struct {
    EIMCNIFMLBL: ?GBJKKFHPFFN = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .EIMCNIFMLBL = fd(8, .{ .SubMessage = {} }),
        .retcode = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeliobusSnsUpdateScNotify = struct {
    GKFHMGMBIKA: ArrayList(GBJKKFHPFFN),

    pub const _desc_table = .{
        .GKFHMGMBIKA = fd(2, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeliobusInfoChangedScNotify = struct {
    IPHKDELMOIH: u32 = 0,
    GKFHMGMBIKA: ArrayList(GBJKKFHPFFN),
    phase: u32 = 0,
    EENJBPMNDOL: u32 = 0,

    pub const _desc_table = .{
        .IPHKDELMOIH = fd(9, .{ .Varint = .Simple }),
        .GKFHMGMBIKA = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .phase = fd(10, .{ .Varint = .Simple }),
        .EENJBPMNDOL = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeliobusUpgradeLevelCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeliobusUpgradeLevelScRsp = struct {
    retcode: u32 = 0,
    level: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
        .level = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeliobusUnlockSkillScNotify = struct {
    CGFGFMGDPNJ: u32 = 0,
    skill_id: u32 = 0,

    pub const _desc_table = .{
        .CGFGFMGDPNJ = fd(13, .{ .Varint = .Simple }),
        .skill_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeliobusEnterBattleCsReq = struct {
    avatar_id_list: ArrayList(u32),
    event_id: u32 = 0,
    skill_id: u32 = 0,

    pub const _desc_table = .{
        .avatar_id_list = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .event_id = fd(8, .{ .Varint = .Simple }),
        .skill_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeliobusEnterBattleScRsp = struct {
    retcode: u32 = 0,
    battle_info: ?SceneBattleInfo = null,
    event_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(2, .{ .Varint = .Simple }),
        .battle_info = fd(11, .{ .SubMessage = {} }),
        .event_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeliobusSelectSkillCsReq = struct {
    skill_id: u32 = 0,

    pub const _desc_table = .{
        .skill_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeliobusSelectSkillScRsp = struct {
    skill_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .skill_id = fd(15, .{ .Varint = .Simple }),
        .retcode = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeliobusChallengeUpdateScNotify = struct {
    challenge: ?JMIJJHKIBLB = null,

    pub const _desc_table = .{
        .challenge = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeliobusLineupUpdateScNotify = struct {
    lineup: ?HeliobusChallengeLineup = null,

    pub const _desc_table = .{
        .lineup = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeliobusStartRaidCsReq = struct {
    is_save: bool = false,
    avatar_list: ArrayList(u32),
    skill_id: u32 = 0,
    raid_id: u32 = 0,
    prop_entity_id: u32 = 0,
    ENLKNPIBLIO: u32 = 0,

    pub const _desc_table = .{
        .is_save = fd(1, .{ .Varint = .Simple }),
        .avatar_list = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
        .skill_id = fd(4, .{ .Varint = .Simple }),
        .raid_id = fd(11, .{ .Varint = .Simple }),
        .prop_entity_id = fd(14, .{ .Varint = .Simple }),
        .ENLKNPIBLIO = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeliobusStartRaidScRsp = struct {
    scene: ?FNLGPLNCPCL = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .scene = fd(7, .{ .SubMessage = {} }),
        .retcode = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetBagCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Equipment = struct {
    promotion: u32 = 0,
    rank: u32 = 0,
    equip_avatar_id: u32 = 0,
    is_protected: bool = false,
    tid: u32 = 0,
    unique_id: u32 = 0,
    exp: u32 = 0,
    level: u32 = 0,

    pub const _desc_table = .{
        .promotion = fd(2, .{ .Varint = .Simple }),
        .rank = fd(7, .{ .Varint = .Simple }),
        .equip_avatar_id = fd(3, .{ .Varint = .Simple }),
        .is_protected = fd(15, .{ .Varint = .Simple }),
        .tid = fd(1, .{ .Varint = .Simple }),
        .unique_id = fd(14, .{ .Varint = .Simple }),
        .exp = fd(6, .{ .Varint = .Simple }),
        .level = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Relic = struct {
    level: u32 = 0,
    exp: u32 = 0,
    unique_id: u32 = 0,
    reforge_sub_affix_list: ArrayList(RelicAffix),
    is_protected: bool = false,
    is_discarded: bool = false,
    main_affix_id: u32 = 0,
    equip_avatar_id: u32 = 0,
    sub_affix_list: ArrayList(RelicAffix),
    tid: u32 = 0,

    pub const _desc_table = .{
        .level = fd(12, .{ .Varint = .Simple }),
        .exp = fd(7, .{ .Varint = .Simple }),
        .unique_id = fd(5, .{ .Varint = .Simple }),
        .reforge_sub_affix_list = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .is_protected = fd(9, .{ .Varint = .Simple }),
        .is_discarded = fd(13, .{ .Varint = .Simple }),
        .main_affix_id = fd(3, .{ .Varint = .Simple }),
        .equip_avatar_id = fd(8, .{ .Varint = .Simple }),
        .sub_affix_list = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .tid = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Material = struct {
    tid: u32 = 0,
    expire_time: u64 = 0,
    num: u32 = 0,

    pub const _desc_table = .{
        .tid = fd(4, .{ .Varint = .Simple }),
        .expire_time = fd(12, .{ .Varint = .Simple }),
        .num = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const WaitDelResource = struct {
    tid: u32 = 0,
    num: u32 = 0,

    pub const _desc_table = .{
        .tid = fd(2, .{ .Varint = .Simple }),
        .num = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Material0 = struct {
    expire_time: u64 = 0,
    tid: u32 = 0,
    num: u32 = 0,

    pub const _desc_table = .{
        .expire_time = fd(6, .{ .Varint = .Simple }),
        .tid = fd(7, .{ .Varint = .Simple }),
        .num = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NKDOHHODNNH = struct {
    ICFLIHHBPMG: ?PileItem = null,
    FIPHHBDEIDF: ArrayList(PileItem),

    pub const _desc_table = .{
        .ICFLIHHBPMG = fd(11, .{ .SubMessage = {} }),
        .FIPHHBDEIDF = fd(6, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JLEHFBOHNIE = struct {
    MCBCNKCNOIB: ArrayList(NKDOHHODNNH),
    time: u64 = 0,

    pub const _desc_table = .{
        .MCBCNKCNOIB = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .time = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetBagScRsp = struct {
    GNALANJPEGO: ArrayList(JLEHFBOHNIE),
    FDBJLGDHCDO: ArrayList(u32),
    retcode: u32 = 0,
    AOIIHCFMFPH: ArrayList(u32),
    PHNGMELJKBE: ArrayList(Material0),
    BAFEBHDOBFJ: ArrayList(PileItem),
    KMJEFMFBLLI: ArrayList(TurnFoodSwitch),
    GEMCACJLPIJ: ArrayList(u32),
    IFENMDPBNKG: ArrayList(Material),
    wait_del_resource_list: ArrayList(WaitDelResource),
    FCOKFFEAPMI: ArrayList(Material0),
    AEPNIDPONKC: u32 = 0,
    material_list: ArrayList(Material),
    equipment_list: ArrayList(Equipment),
    relic_list: ArrayList(Relic),

    pub const _desc_table = .{
        .GNALANJPEGO = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .FDBJLGDHCDO = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(6, .{ .Varint = .Simple }),
        .AOIIHCFMFPH = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .PHNGMELJKBE = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .BAFEBHDOBFJ = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .KMJEFMFBLLI = fd(3, .{ .List = .{ .Varint = .Simple } }),
        .GEMCACJLPIJ = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
        .IFENMDPBNKG = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .wait_del_resource_list = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .FCOKFFEAPMI = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .AEPNIDPONKC = fd(1, .{ .Varint = .Simple }),
        .material_list = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .equipment_list = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .relic_list = fd(4, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PromoteEquipmentCsReq = struct {
    equipment_unique_id: u32 = 0,
    cost_data: ?ItemCostData = null,

    pub const _desc_table = .{
        .equipment_unique_id = fd(9, .{ .Varint = .Simple }),
        .cost_data = fd(10, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PromoteEquipmentScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LockEquipmentCsReq = struct {
    is_locked: bool = false,
    ODLDPKIOEOM: ArrayList(u32),

    pub const _desc_table = .{
        .is_locked = fd(14, .{ .Varint = .Simple }),
        .ODLDPKIOEOM = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LockEquipmentScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UseItemCsReq = struct {
    use_item_id: u32 = 0,
    use_avatar_type: AvatarType = @enumFromInt(0),
    base_avatar_id: u32 = 0,
    use_item_count: u32 = 0,
    optional_reward_id: u32 = 0,
    FELCIEMKCGF: bool = false,

    pub const _desc_table = .{
        .use_item_id = fd(5, .{ .Varint = .Simple }),
        .use_avatar_type = fd(6, .{ .Varint = .Simple }),
        .base_avatar_id = fd(15, .{ .Varint = .Simple }),
        .use_item_count = fd(10, .{ .Varint = .Simple }),
        .optional_reward_id = fd(9, .{ .Varint = .Simple }),
        .FELCIEMKCGF = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UseItemScRsp = struct {
    use_item_count: u32 = 0,
    use_item_id: u32 = 0,
    formula_id: u32 = 0,
    retcode: u32 = 0,
    month_card_out_date_time: u64 = 0,
    return_data: ?ItemList = null,

    pub const _desc_table = .{
        .use_item_count = fd(1, .{ .Varint = .Simple }),
        .use_item_id = fd(14, .{ .Varint = .Simple }),
        .formula_id = fd(10, .{ .Varint = .Simple }),
        .retcode = fd(7, .{ .Varint = .Simple }),
        .month_card_out_date_time = fd(9, .{ .Varint = .Simple }),
        .return_data = fd(13, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RankUpEquipmentCsReq = struct {
    cost_data: ?ItemCostData = null,
    equipment_unique_id: u32 = 0,

    pub const _desc_table = .{
        .cost_data = fd(13, .{ .SubMessage = {} }),
        .equipment_unique_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RankUpEquipmentScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BEPAHBKLJNN = struct {
    cost_data: ?ItemCostData = null,
    equipment_unique_id: u32 = 0,

    pub const _desc_table = .{
        .cost_data = fd(15, .{ .SubMessage = {} }),
        .equipment_unique_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BatchRankUpEquipmentCsReq = struct {
    switch_list: ArrayList(BEPAHBKLJNN),

    pub const _desc_table = .{
        .switch_list = fd(12, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BatchRankUpEquipmentScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExpUpEquipmentCsReq = struct {
    equipment_unique_id: u32 = 0,
    cost_data: ?ItemCostData = null,

    pub const _desc_table = .{
        .equipment_unique_id = fd(12, .{ .Varint = .Simple }),
        .cost_data = fd(13, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExpUpEquipmentScRsp = struct {
    return_item_list: ArrayList(PileItem),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .return_item_list = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ComposeItemCsReq = struct {
    compose_id: u32 = 0,
    count: u32 = 0,
    compose_item_list: ?ItemCostData = null,
    convert_item_list: ?ItemCostData = null,

    pub const _desc_table = .{
        .compose_id = fd(10, .{ .Varint = .Simple }),
        .count = fd(1, .{ .Varint = .Simple }),
        .compose_item_list = fd(5, .{ .SubMessage = {} }),
        .convert_item_list = fd(4, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ComposeItemScRsp = struct {
    retcode: u32 = 0,
    count: u32 = 0,
    compose_id: u32 = 0,
    return_item_list: ?ItemList = null,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
        .count = fd(2, .{ .Varint = .Simple }),
        .compose_id = fd(7, .{ .Varint = .Simple }),
        .return_item_list = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ComposeSelectedRelicCsReq = struct {
    wr_item_list: ?ItemCostData = null,
    compose_relic_id: u32 = 0,
    count: u32 = 0,
    compose_id: u32 = 0,
    compose_item_list: ?ItemCostData = null,
    main_affix_id: u32 = 0,
    sub_affix_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .wr_item_list = fd(5, .{ .SubMessage = {} }),
        .compose_relic_id = fd(4, .{ .Varint = .Simple }),
        .count = fd(1, .{ .Varint = .Simple }),
        .compose_id = fd(13, .{ .Varint = .Simple }),
        .compose_item_list = fd(11, .{ .SubMessage = {} }),
        .main_affix_id = fd(12, .{ .Varint = .Simple }),
        .sub_affix_id_list = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ComposeSelectedRelicScRsp = struct {
    compose_id: u32 = 0,
    retcode: u32 = 0,
    return_item_list: ?ItemList = null,

    pub const _desc_table = .{
        .compose_id = fd(8, .{ .Varint = .Simple }),
        .retcode = fd(14, .{ .Varint = .Simple }),
        .return_item_list = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExpUpRelicCsReq = struct {
    relic_unique_id: u32 = 0,
    cost_data: ?ItemCostData = null,

    pub const _desc_table = .{
        .relic_unique_id = fd(2, .{ .Varint = .Simple }),
        .cost_data = fd(7, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExpUpRelicScRsp = struct {
    return_item_list: ArrayList(PileItem),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .return_item_list = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LockRelicCsReq = struct {
    relic_ids: ArrayList(u32),
    IEMNPGOMJCO: bool = false,
    is_locked: bool = false,

    pub const _desc_table = .{
        .relic_ids = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
        .IEMNPGOMJCO = fd(7, .{ .Varint = .Simple }),
        .is_locked = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LockRelicScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DiscardRelicCsReq = struct {
    JNKHGFILJPB: bool = false,
    NLPCONNJONF: ICPINEHOLML = @enumFromInt(0),
    HNHFDMDIBIO: u64 = 0,
    relic_ids: ArrayList(u32),

    pub const _desc_table = .{
        .JNKHGFILJPB = fd(2, .{ .Varint = .Simple }),
        .NLPCONNJONF = fd(10, .{ .Varint = .Simple }),
        .HNHFDMDIBIO = fd(6, .{ .Varint = .Simple }),
        .relic_ids = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DiscardRelicScRsp = struct {
    retcode: u32 = 0,
    relic_ids: ArrayList(u32),
    JNKHGFILJPB: bool = false,
    NLPCONNJONF: ICPINEHOLML = @enumFromInt(0),

    pub const _desc_table = .{
        .retcode = fd(6, .{ .Varint = .Simple }),
        .relic_ids = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
        .JNKHGFILJPB = fd(8, .{ .Varint = .Simple }),
        .NLPCONNJONF = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SellItemCsReq = struct {
    cost_data: ?ItemCostData = null,
    OLFKACKGOFK: bool = false,

    pub const _desc_table = .{
        .cost_data = fd(8, .{ .SubMessage = {} }),
        .OLFKACKGOFK = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SellItemScRsp = struct {
    retcode: u32 = 0,
    return_item_list: ?ItemList = null,

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
        .return_item_list = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RechargeSuccNotify = struct {
    item_list: ?ItemList = null,
    ChannelOrderNo: ManagedString = .Empty,
    month_card_out_date_time: u64 = 0,
    product_id: ManagedString = .Empty,

    pub const _desc_table = .{
        .item_list = fd(8, .{ .SubMessage = {} }),
        .ChannelOrderNo = fd(9, .String),
        .month_card_out_date_time = fd(15, .{ .Varint = .Simple }),
        .product_id = fd(11, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeHcoinCsReq = struct {
    num: u32 = 0,

    pub const _desc_table = .{
        .num = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeHcoinScRsp = struct {
    retcode: u32 = 0,
    num: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(11, .{ .Varint = .Simple }),
        .num = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AddEquipmentScNotify = struct {
    MDMGKHLHIIN: u32 = 0,

    pub const _desc_table = .{
        .MDMGKHLHIIN = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRecyleTimeCsReq = struct {
    CJLNDNILGMF: ArrayList(u32),

    pub const _desc_table = .{
        .CJLNDNILGMF = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRecyleTimeScRsp = struct {
    retcode: u32 = 0,
    FCOKFFEAPMI: ArrayList(Material0),

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
        .FCOKFFEAPMI = fd(12, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FNHMMMKJGPB = struct {
    formula_id: u32 = 0,
    OJEMELHCMPJ: u32 = 0,

    pub const _desc_table = .{
        .formula_id = fd(10, .{ .Varint = .Simple }),
        .OJEMELHCMPJ = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ComposeLimitNumCompleteNotify = struct {
    DCHNAEDINMM: ArrayList(FNHMMMKJGPB),

    pub const _desc_table = .{
        .DCHNAEDINMM = fd(6, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ComposeLimitNumUpdateNotify = struct {
    FGLFGJDPJPD: ?FNHMMMKJGPB = null,

    pub const _desc_table = .{
        .FGLFGJDPJPD = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DestroyItemCsReq = struct {
    item_count: u32 = 0,
    item_id: u32 = 0,
    cur_item_count: u32 = 0,

    pub const _desc_table = .{
        .item_count = fd(3, .{ .Varint = .Simple }),
        .item_id = fd(9, .{ .Varint = .Simple }),
        .cur_item_count = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DestroyItemScRsp = struct {
    retcode: u32 = 0,
    cur_item_count: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
        .cur_item_count = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMarkItemListCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMarkItemListScRsp = struct {
    retcode: u32 = 0,
    PDBIHONOLFJ: ArrayList(u32),

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
        .PDBIHONOLFJ = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MarkItemCsReq = struct {
    item_id: u32 = 0,
    NAEHPHHDGEK: bool = false,

    pub const _desc_table = .{
        .item_id = fd(3, .{ .Varint = .Simple }),
        .NAEHPHHDGEK = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MarkItemScRsp = struct {
    NAEHPHHDGEK: bool = false,
    retcode: u32 = 0,
    item_id: u32 = 0,

    pub const _desc_table = .{
        .NAEHPHHDGEK = fd(15, .{ .Varint = .Simple }),
        .retcode = fd(13, .{ .Varint = .Simple }),
        .item_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CancelMarkItemNotify = struct {
    item_id: u32 = 0,

    pub const _desc_table = .{
        .item_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncTurnFoodNotify = struct {
    FDBJLGDHCDO: ArrayList(u32),
    KMJEFMFBLLI: ArrayList(TurnFoodSwitch),

    pub const _desc_table = .{
        .FDBJLGDHCDO = fd(11, .{ .PackedList = .{ .Varint = .Simple } }),
        .KMJEFMFBLLI = fd(9, .{ .List = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetTurnFoodSwitchCsReq = struct {
    JCAKHHKFDFN: TurnFoodSwitch = @enumFromInt(0),
    BNDLHJHALMB: bool = false,

    pub const _desc_table = .{
        .JCAKHHKFDFN = fd(9, .{ .Varint = .Simple }),
        .BNDLHJHALMB = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetTurnFoodSwitchScRsp = struct {
    JCAKHHKFDFN: TurnFoodSwitch = @enumFromInt(0),
    BNDLHJHALMB: bool = false,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .JCAKHHKFDFN = fd(15, .{ .Varint = .Simple }),
        .BNDLHJHALMB = fd(8, .{ .Varint = .Simple }),
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GeneralVirtualItemDataNotify = struct {
    FDJKCCGDNKA: ArrayList(PileItem),
    PKBAHPFJGDB: bool = false,

    pub const _desc_table = .{
        .FDJKCCGDNKA = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .PKBAHPFJGDB = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PACFHNEJADB = struct {
    PBKOLNFGJDL: u32 = 0,
    HNMGPIIILON: bool = false,

    pub const _desc_table = .{
        .PBKOLNFGJDL = fd(2, .{ .Varint = .Simple }),
        .HNMGPIIILON = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KFPJGGIFIEN = struct {
    GFIDNAANAFH: ?PACFHNEJADB = null,
    EHKJHCOAKBK: u32 = 0,
    IBPDGNOHFPM: ?IIPKANNMLFN = null,
    name: ManagedString = .Empty,
    CABIGIPLIHB: i64 = 0,
    max_times: u32 = 0,
    is_marked: bool = false,

    pub const _desc_table = .{
        .GFIDNAANAFH = fd(8, .{ .SubMessage = {} }),
        .EHKJHCOAKBK = fd(4, .{ .Varint = .Simple }),
        .IBPDGNOHFPM = fd(6, .{ .SubMessage = {} }),
        .name = fd(5, .String),
        .CABIGIPLIHB = fd(13, .{ .Varint = .Simple }),
        .max_times = fd(7, .{ .Varint = .Simple }),
        .is_marked = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRelicFilterPlanCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRelicFilterPlanScRsp = struct {
    retcode: u32 = 0,
    ECNAFDIBCKF: ArrayList(KFPJGGIFIEN),

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
        .ECNAFDIBCKF = fd(2, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AddRelicFilterPlanCsReq = struct {
    GFIDNAANAFH: ?PACFHNEJADB = null,
    name: ManagedString = .Empty,
    is_marked: bool = false,
    EHKJHCOAKBK: u32 = 0,
    IBPDGNOHFPM: ?IIPKANNMLFN = null,

    pub const _desc_table = .{
        .GFIDNAANAFH = fd(4, .{ .SubMessage = {} }),
        .name = fd(11, .String),
        .is_marked = fd(6, .{ .Varint = .Simple }),
        .EHKJHCOAKBK = fd(12, .{ .Varint = .Simple }),
        .IBPDGNOHFPM = fd(15, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AddRelicFilterPlanScRsp = struct {
    relic_plan: ?KFPJGGIFIEN = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .relic_plan = fd(2, .{ .SubMessage = {} }),
        .retcode = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ModifyRelicFilterPlanCsReq = struct {
    max_times: u32 = 0,
    KFELKJLDKEH: ?KFELKJLDKEH_union,

    pub const _KFELKJLDKEH_case = enum {
        name,
        GFIDNAANAFH,
        IBPDGNOHFPM,
    };
    pub const KFELKJLDKEH_union = union(_KFELKJLDKEH_case) {
        name: ManagedString,
        GFIDNAANAFH: PACFHNEJADB,
        IBPDGNOHFPM: IIPKANNMLFN,
        pub const _union_desc = .{
            .name = fd(8, .String),
            .GFIDNAANAFH = fd(10, .{ .SubMessage = {} }),
            .IBPDGNOHFPM = fd(11, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .max_times = fd(4, .{ .Varint = .Simple }),
        .KFELKJLDKEH = fd(null, .{ .OneOf = KFELKJLDKEH_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ModifyRelicFilterPlanScRsp = struct {
    retcode: u32 = 0,
    max_times: u32 = 0,
    CABIGIPLIHB: i64 = 0,
    KFELKJLDKEH: ?KFELKJLDKEH_union,

    pub const _KFELKJLDKEH_case = enum {
        name,
        GFIDNAANAFH,
        IBPDGNOHFPM,
    };
    pub const KFELKJLDKEH_union = union(_KFELKJLDKEH_case) {
        name: ManagedString,
        GFIDNAANAFH: PACFHNEJADB,
        IBPDGNOHFPM: IIPKANNMLFN,
        pub const _union_desc = .{
            .name = fd(12, .String),
            .GFIDNAANAFH = fd(3, .{ .SubMessage = {} }),
            .IBPDGNOHFPM = fd(6, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .retcode = fd(8, .{ .Varint = .Simple }),
        .max_times = fd(14, .{ .Varint = .Simple }),
        .CABIGIPLIHB = fd(7, .{ .Varint = .Simple }),
        .KFELKJLDKEH = fd(null, .{ .OneOf = KFELKJLDKEH_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DeleteRelicFilterPlanCsReq = struct {
    IEMNPGOMJCO: bool = false,
    NDOBMAJMLNK: ArrayList(u32),

    pub const _desc_table = .{
        .IEMNPGOMJCO = fd(5, .{ .Varint = .Simple }),
        .NDOBMAJMLNK = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DeleteRelicFilterPlanScRsp = struct {
    IEMNPGOMJCO: bool = false,
    NDOBMAJMLNK: ArrayList(u32),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .IEMNPGOMJCO = fd(13, .{ .Varint = .Simple }),
        .NDOBMAJMLNK = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MarkRelicFilterPlanCsReq = struct {
    NDOBMAJMLNK: ArrayList(u32),
    IEMNPGOMJCO: bool = false,
    ADJGKCOKOLN: bool = false,

    pub const _desc_table = .{
        .NDOBMAJMLNK = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .IEMNPGOMJCO = fd(5, .{ .Varint = .Simple }),
        .ADJGKCOKOLN = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MarkRelicFilterPlanScRsp = struct {
    ADJGKCOKOLN: bool = false,
    NDOBMAJMLNK: ArrayList(u32),
    IEMNPGOMJCO: bool = false,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .ADJGKCOKOLN = fd(12, .{ .Varint = .Simple }),
        .NDOBMAJMLNK = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .IEMNPGOMJCO = fd(1, .{ .Varint = .Simple }),
        .retcode = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RelicFilterPlanClearNameScNotify = struct {
    max_times: u32 = 0,

    pub const _desc_table = .{
        .max_times = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RelicReforgeCsReq = struct {
    relic_unique_id: u32 = 0,

    pub const _desc_table = .{
        .relic_unique_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RelicReforgeScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RelicReforgeConfirmCsReq = struct {
    is_cancel: bool = false,
    relic_unique_id: u32 = 0,

    pub const _desc_table = .{
        .is_cancel = fd(2, .{ .Varint = .Simple }),
        .relic_unique_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RelicReforgeConfirmScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MusicData = struct {
    group_id: u32 = 0,
    is_played: bool = false,
    id: u32 = 0,

    pub const _desc_table = .{
        .group_id = fd(10, .{ .Varint = .Simple }),
        .is_played = fd(2, .{ .Varint = .Simple }),
        .id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetJukeboxDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetJukeboxDataScRsp = struct {
    unlocked_music_list: ArrayList(MusicData),
    current_music_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .unlocked_music_list = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .current_music_id = fd(15, .{ .Varint = .Simple }),
        .retcode = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayBackGroundMusicCsReq = struct {
    play_music_id: u32 = 0,

    pub const _desc_table = .{
        .play_music_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayBackGroundMusicScRsp = struct {
    current_music_id: u32 = 0,
    play_music_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .current_music_id = fd(2, .{ .Varint = .Simple }),
        .play_music_id = fd(10, .{ .Varint = .Simple }),
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UnlockBackGroundMusicCsReq = struct {
    unlock_ids: ArrayList(u32),

    pub const _desc_table = .{
        .unlock_ids = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UnlockBackGroundMusicScRsp = struct {
    unlocked_music_list: ArrayList(MusicData),
    OGHDILHDLEB: ArrayList(u32),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .unlocked_music_list = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .OGHDILHDLEB = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrialBackGroundMusicCsReq = struct {
    PIGBBGCLAMJ: u32 = 0,

    pub const _desc_table = .{
        .PIGBBGCLAMJ = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrialBackGroundMusicScRsp = struct {
    retcode: u32 = 0,
    PIGBBGCLAMJ: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(11, .{ .Varint = .Simple }),
        .PIGBBGCLAMJ = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetStageLineupCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JLCHBKKFANL = struct {
    stage_type: u32 = 0,
    DOGDACFLBOE: u32 = 0,

    pub const _desc_table = .{
        .stage_type = fd(11, .{ .Varint = .Simple }),
        .DOGDACFLBOE = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetStageLineupScRsp = struct {
    NMKPEKMMNBP: ArrayList(JLCHBKKFANL),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .NMKPEKMMNBP = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LineupAvatar = struct {
    avatar_type: AvatarType = @enumFromInt(0),
    id: u32 = 0,
    sp_bar: ?SpBarInfo = null,
    slot: u32 = 0,
    hp: u32 = 0,
    satiety: u32 = 0,

    pub const _desc_table = .{
        .avatar_type = fd(10, .{ .Varint = .Simple }),
        .id = fd(6, .{ .Varint = .Simple }),
        .sp_bar = fd(15, .{ .SubMessage = {} }),
        .slot = fd(13, .{ .Varint = .Simple }),
        .hp = fd(3, .{ .Varint = .Simple }),
        .satiety = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LineupInfo = struct {
    index: u32 = 0,
    BFNBKLMAMKB: bool = false,
    mp: u32 = 0,
    MANKKFPBFCB: ArrayList(u32),
    max_mp: u32 = 0,
    plane_id: u32 = 0,
    extra_lineup_type: ExtraLineupType = @enumFromInt(0),
    game_story_line_id: u32 = 0,
    leader_slot: u32 = 0,
    name: ManagedString = .Empty,
    KOMPCJPAPKM: ArrayList(u32),
    avatar_list: ArrayList(LineupAvatar),
    story_line_avatar_id_list: ArrayList(u32),
    is_virtual: bool = false,

    pub const _desc_table = .{
        .index = fd(9, .{ .Varint = .Simple }),
        .BFNBKLMAMKB = fd(2, .{ .Varint = .Simple }),
        .mp = fd(10, .{ .Varint = .Simple }),
        .MANKKFPBFCB = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        .max_mp = fd(14, .{ .Varint = .Simple }),
        .plane_id = fd(6, .{ .Varint = .Simple }),
        .extra_lineup_type = fd(1, .{ .Varint = .Simple }),
        .game_story_line_id = fd(4, .{ .Varint = .Simple }),
        .leader_slot = fd(15, .{ .Varint = .Simple }),
        .name = fd(12, .String),
        .KOMPCJPAPKM = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
        .avatar_list = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .story_line_avatar_id_list = fd(11, .{ .PackedList = .{ .Varint = .Simple } }),
        .is_virtual = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetCurLineupDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetCurLineupDataScRsp = struct {
    lineup: ?LineupInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .lineup = fd(7, .{ .SubMessage = {} }),
        .retcode = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JoinLineupCsReq = struct {
    slot: u32 = 0,
    base_avatar_id: u32 = 0,
    extra_lineup_type: ExtraLineupType = @enumFromInt(0),
    index: u32 = 0,
    is_virtual: bool = false,
    avatar_type: AvatarType = @enumFromInt(0),
    plane_id: u32 = 0,

    pub const _desc_table = .{
        .slot = fd(9, .{ .Varint = .Simple }),
        .base_avatar_id = fd(12, .{ .Varint = .Simple }),
        .extra_lineup_type = fd(3, .{ .Varint = .Simple }),
        .index = fd(7, .{ .Varint = .Simple }),
        .is_virtual = fd(5, .{ .Varint = .Simple }),
        .avatar_type = fd(1, .{ .Varint = .Simple }),
        .plane_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JoinLineupScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const QuitLineupCsReq = struct {
    extra_lineup_type: ExtraLineupType = @enumFromInt(0),
    plane_id: u32 = 0,
    base_avatar_id: u32 = 0,
    is_virtual: bool = false,
    index: u32 = 0,
    avatar_type: AvatarType = @enumFromInt(0),

    pub const _desc_table = .{
        .extra_lineup_type = fd(9, .{ .Varint = .Simple }),
        .plane_id = fd(13, .{ .Varint = .Simple }),
        .base_avatar_id = fd(2, .{ .Varint = .Simple }),
        .is_virtual = fd(11, .{ .Varint = .Simple }),
        .index = fd(12, .{ .Varint = .Simple }),
        .avatar_type = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const QuitLineupScRsp = struct {
    plane_id: u32 = 0,
    retcode: u32 = 0,
    HIOFPDKDOFD: bool = false,
    base_avatar_id: u32 = 0,
    is_virtual: bool = false,

    pub const _desc_table = .{
        .plane_id = fd(3, .{ .Varint = .Simple }),
        .retcode = fd(15, .{ .Varint = .Simple }),
        .HIOFPDKDOFD = fd(5, .{ .Varint = .Simple }),
        .base_avatar_id = fd(10, .{ .Varint = .Simple }),
        .is_virtual = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwapLineupCsReq = struct {
    extra_lineup_type: ExtraLineupType = @enumFromInt(0),
    is_virtual: bool = false,
    index: u32 = 0,
    ELLIDANJNOB: u32 = 0,
    NEDIKHNGMBH: u32 = 0,
    plane_id: u32 = 0,

    pub const _desc_table = .{
        .extra_lineup_type = fd(15, .{ .Varint = .Simple }),
        .is_virtual = fd(10, .{ .Varint = .Simple }),
        .index = fd(6, .{ .Varint = .Simple }),
        .ELLIDANJNOB = fd(2, .{ .Varint = .Simple }),
        .NEDIKHNGMBH = fd(7, .{ .Varint = .Simple }),
        .plane_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwapLineupScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncLineupNotify = struct {
    lineup: ?LineupInfo = null,
    ReasonList: ArrayList(SyncLineupReason),

    pub const _desc_table = .{
        .lineup = fd(14, .{ .SubMessage = {} }),
        .ReasonList = fd(4, .{ .List = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetLineupAvatarDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LineupAvatarData = struct {
    id: u32 = 0,
    avatar_type: AvatarType = @enumFromInt(0),
    hp: u32 = 0,

    pub const _desc_table = .{
        .id = fd(9, .{ .Varint = .Simple }),
        .avatar_type = fd(4, .{ .Varint = .Simple }),
        .hp = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetLineupAvatarDataScRsp = struct {
    retcode: u32 = 0,
    avatar_data_list: ArrayList(LineupAvatarData),

    pub const _desc_table = .{
        .retcode = fd(14, .{ .Varint = .Simple }),
        .avatar_data_list = fd(4, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChangeLineupLeaderCsReq = struct {
    slot: u32 = 0,

    pub const _desc_table = .{
        .slot = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChangeLineupLeaderScRsp = struct {
    slot: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .slot = fd(7, .{ .Varint = .Simple }),
        .retcode = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwitchLineupIndexCsReq = struct {
    index: u32 = 0,

    pub const _desc_table = .{
        .index = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwitchLineupIndexScRsp = struct {
    retcode: u32 = 0,
    index: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(4, .{ .Varint = .Simple }),
        .index = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetLineupNameCsReq = struct {
    index: u32 = 0,
    name: ManagedString = .Empty,

    pub const _desc_table = .{
        .index = fd(4, .{ .Varint = .Simple }),
        .name = fd(6, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetLineupNameScRsp = struct {
    retcode: u32 = 0,
    index: u32 = 0,
    name: ManagedString = .Empty,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
        .index = fd(3, .{ .Varint = .Simple }),
        .name = fd(8, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetAllLineupDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetAllLineupDataScRsp = struct {
    retcode: u32 = 0,
    lineup_list: ArrayList(LineupInfo),
    cur_index: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(10, .{ .Varint = .Simple }),
        .lineup_list = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .cur_index = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const VirtualLineupDestroyNotify = struct {
    plane_id: u32 = 0,

    pub const _desc_table = .{
        .plane_id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LineupSlotData = struct {
    id: u32 = 0,
    avatar_type: AvatarType = @enumFromInt(0),
    slot: u32 = 0,

    pub const _desc_table = .{
        .id = fd(10, .{ .Varint = .Simple }),
        .avatar_type = fd(7, .{ .Varint = .Simple }),
        .slot = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ReplaceLineupCsReq = struct {
    is_virtual: bool = false,
    extra_lineup_type: ExtraLineupType = @enumFromInt(0),
    lineup_slot_list: ArrayList(LineupSlotData),
    plane_id: u32 = 0,
    leader_slot: u32 = 0,
    game_story_line_id: u32 = 0,
    index: u32 = 0,

    pub const _desc_table = .{
        .is_virtual = fd(14, .{ .Varint = .Simple }),
        .extra_lineup_type = fd(5, .{ .Varint = .Simple }),
        .lineup_slot_list = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .plane_id = fd(8, .{ .Varint = .Simple }),
        .leader_slot = fd(1, .{ .Varint = .Simple }),
        .game_story_line_id = fd(4, .{ .Varint = .Simple }),
        .index = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ReplaceLineupScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExtraLineupDestroyNotify = struct {
    extra_lineup_type: ExtraLineupType = @enumFromInt(0),

    pub const _desc_table = .{
        .extra_lineup_type = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const VirtualLineupTrialAvatarChangeScNotify = struct {
    plane_id: u32 = 0,
    IBLBNIANPHD: ArrayList(u32),
    CLIIGMNMHNA: bool = false,
    KFMFFGGJMNE: ArrayList(u32),

    pub const _desc_table = .{
        .plane_id = fd(2, .{ .Varint = .Simple }),
        .IBLBNIANPHD = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
        .CLIIGMNMHNA = fd(6, .{ .Varint = .Simple }),
        .KFMFFGGJMNE = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LobbyCreateCsReq = struct {
    NEPODDOJJFE: u32 = 0,
    NBDLPGBIDLC: FightGameMode = @enumFromInt(0),
    EJOFCNAEDHK: ?EPEGHCGCMHP = null,

    pub const _desc_table = .{
        .NEPODDOJJFE = fd(4, .{ .Varint = .Simple }),
        .NBDLPGBIDLC = fd(14, .{ .Varint = .Simple }),
        .EJOFCNAEDHK = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LobbyCreateScRsp = struct {
    LIPJDJPMOKB: ArrayList(CBBDIOMIFHD),
    NEPODDOJJFE: u32 = 0,
    NBDLPGBIDLC: FightGameMode = @enumFromInt(0),
    room_id: u64 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .LIPJDJPMOKB = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .NEPODDOJJFE = fd(13, .{ .Varint = .Simple }),
        .NBDLPGBIDLC = fd(6, .{ .Varint = .Simple }),
        .room_id = fd(10, .{ .Varint = .Simple }),
        .retcode = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LobbyInviteCsReq = struct {
    uid_list: ArrayList(u32),

    pub const _desc_table = .{
        .uid_list = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LobbyInviteScRsp = struct {
    uid_list: ArrayList(u32),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .uid_list = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LobbyJoinCsReq = struct {
    EJOFCNAEDHK: ?EPEGHCGCMHP = null,
    room_id: u64 = 0,

    pub const _desc_table = .{
        .EJOFCNAEDHK = fd(9, .{ .SubMessage = {} }),
        .room_id = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LobbyJoinScRsp = struct {
    LIPJDJPMOKB: ArrayList(CBBDIOMIFHD),
    NBDLPGBIDLC: FightGameMode = @enumFromInt(0),
    retcode: u32 = 0,
    NEPODDOJJFE: u32 = 0,
    room_id: u64 = 0,

    pub const _desc_table = .{
        .LIPJDJPMOKB = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .NBDLPGBIDLC = fd(6, .{ .Varint = .Simple }),
        .retcode = fd(4, .{ .Varint = .Simple }),
        .NEPODDOJJFE = fd(13, .{ .Varint = .Simple }),
        .room_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LobbyQuitCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LobbyQuitScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LobbyStartFightCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LobbyStartFightScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LobbyModifyPlayerInfoCsReq = struct {
    HFDJAELBNGA: u32 = 0,
    EJOFCNAEDHK: ?EPEGHCGCMHP = null,
    type: LobbyModifyType = @enumFromInt(0),

    pub const _desc_table = .{
        .HFDJAELBNGA = fd(15, .{ .Varint = .Simple }),
        .EJOFCNAEDHK = fd(8, .{ .SubMessage = {} }),
        .type = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LobbyModifyPlayerInfoScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LobbySyncInfoScNotify = struct {
    LIPJDJPMOKB: ArrayList(CBBDIOMIFHD),
    uid: u32 = 0,
    type: LobbyModifyType = @enumFromInt(0),

    pub const _desc_table = .{
        .LIPJDJPMOKB = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .uid = fd(12, .{ .Varint = .Simple }),
        .type = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LobbyKickOutCsReq = struct {
    uid: u32 = 0,

    pub const _desc_table = .{
        .uid = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LobbyKickOutScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LobbyInviteScNotify = struct {
    sender_id: u32 = 0,
    NBDLPGBIDLC: FightGameMode = @enumFromInt(0),
    room_id: u32 = 0,

    pub const _desc_table = .{
        .sender_id = fd(12, .{ .Varint = .Simple }),
        .NBDLPGBIDLC = fd(10, .{ .Varint = .Simple }),
        .room_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LobbyGetInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LobbyGetInfoScRsp = struct {
    retcode: u32 = 0,
    NEPODDOJJFE: u32 = 0,
    NBDLPGBIDLC: FightGameMode = @enumFromInt(0),
    LIPJDJPMOKB: ArrayList(CBBDIOMIFHD),
    room_id: u64 = 0,
    NOGFEEMNHPC: u64 = 0,

    pub const _desc_table = .{
        .retcode = fd(15, .{ .Varint = .Simple }),
        .NEPODDOJJFE = fd(7, .{ .Varint = .Simple }),
        .NBDLPGBIDLC = fd(12, .{ .Varint = .Simple }),
        .LIPJDJPMOKB = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .room_id = fd(8, .{ .Varint = .Simple }),
        .NOGFEEMNHPC = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LobbyInteractCsReq = struct {
    CBEGNBKMHCD: u32 = 0,
    IHCILNHKLMC: IMAONMHILNE = @enumFromInt(0),

    pub const _desc_table = .{
        .CBEGNBKMHCD = fd(12, .{ .Varint = .Simple }),
        .IHCILNHKLMC = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LobbyInteractScRsp = struct {
    retcode: u32 = 0,
    CBEGNBKMHCD: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
        .CBEGNBKMHCD = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LobbyInteractScNotify = struct {
    sender_id: u32 = 0,
    IHCILNHKLMC: IMAONMHILNE = @enumFromInt(0),

    pub const _desc_table = .{
        .sender_id = fd(11, .{ .Varint = .Simple }),
        .IHCILNHKLMC = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMailCsReq = struct {
    CIJEFNOOJJK: u32 = 0,
    DAPCDNELCMA: u32 = 0,

    pub const _desc_table = .{
        .CIJEFNOOJJK = fd(7, .{ .Varint = .Simple }),
        .DAPCDNELCMA = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ClientMail = struct {
    expire_time: i64 = 0,
    content: ManagedString = .Empty,
    template_id: u32 = 0,
    id: u32 = 0,
    para_list: ArrayList(ManagedString),
    attachment: ?ItemList = null,
    title: ManagedString = .Empty,
    is_read: bool = false,
    mail_type: MailType = @enumFromInt(0),
    time: i64 = 0,
    sender: ManagedString = .Empty,

    pub const _desc_table = .{
        .expire_time = fd(7, .{ .Varint = .Simple }),
        .content = fd(3, .String),
        .template_id = fd(1, .{ .Varint = .Simple }),
        .id = fd(12, .{ .Varint = .Simple }),
        .para_list = fd(5, .{ .List = .String }),
        .attachment = fd(15, .{ .SubMessage = {} }),
        .title = fd(6, .String),
        .is_read = fd(10, .{ .Varint = .Simple }),
        .mail_type = fd(11, .{ .Varint = .Simple }),
        .time = fd(4, .{ .Varint = .Simple }),
        .sender = fd(8, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMailScRsp = struct {
    is_end: bool = false,
    total_num: u32 = 0,
    start: u32 = 0,
    retcode: u32 = 0,
    mail_list: ArrayList(ClientMail),
    notice_mail_list: ArrayList(ClientMail),

    pub const _desc_table = .{
        .is_end = fd(4, .{ .Varint = .Simple }),
        .total_num = fd(3, .{ .Varint = .Simple }),
        .start = fd(11, .{ .Varint = .Simple }),
        .retcode = fd(13, .{ .Varint = .Simple }),
        .mail_list = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .notice_mail_list = fd(7, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MarkReadMailCsReq = struct {
    id: u32 = 0,

    pub const _desc_table = .{
        .id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MarkReadMailScRsp = struct {
    id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .id = fd(7, .{ .Varint = .Simple }),
        .retcode = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DelMailCsReq = struct {
    id_list: ArrayList(u32),

    pub const _desc_table = .{
        .id_list = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DelMailScRsp = struct {
    retcode: u32 = 0,
    id_list: ArrayList(u32),

    pub const _desc_table = .{
        .retcode = fd(11, .{ .Varint = .Simple }),
        .id_list = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeMailAttachmentCsReq = struct {
    mail_id_list: ArrayList(u32),
    optional_reward_id: u32 = 0,

    pub const _desc_table = .{
        .mail_id_list = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
        .optional_reward_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ClientMailAttachmentItem = struct {
    item_id: u32 = 0,
    mail_id: u32 = 0,

    pub const _desc_table = .{
        .item_id = fd(11, .{ .Varint = .Simple }),
        .mail_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeMailAttachmentScRsp = struct {
    retcode: u32 = 0,
    succ_mail_id_list: ArrayList(u32),
    attachment: ?ItemList = null,
    fail_mail_list: ArrayList(ClientMailAttachmentItem),

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
        .succ_mail_id_list = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .attachment = fd(9, .{ .SubMessage = {} }),
        .fail_mail_list = fd(11, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NewMailScNotify = struct {
    mail_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .mail_id_list = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMapRotateInfo = struct {
    rotater_data_list: ArrayList(RotaterData),
    charger_info: ArrayList(ChargerInfo),
    era_flipper_region_id: i32 = 0,
    is_rotate: bool = false,
    NFLBONDJAIE: u32 = 0,
    rogue_map: ?RotateMapInfo = null,
    energy_info: ?RotaterEnergyInfo = null,

    pub const _desc_table = .{
        .rotater_data_list = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .charger_info = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .era_flipper_region_id = fd(4, .{ .Varint = .Simple }),
        .is_rotate = fd(15, .{ .Varint = .Simple }),
        .NFLBONDJAIE = fd(14, .{ .Varint = .Simple }),
        .rogue_map = fd(2, .{ .SubMessage = {} }),
        .energy_info = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RotaterEnergyInfo = struct {
    max_num: u32 = 0,
    cur_num: u32 = 0,

    pub const _desc_table = .{
        .max_num = fd(11, .{ .Varint = .Simple }),
        .cur_num = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RotateMapInfo = struct {
    rotate_vector: ?Vector4 = null,
    vector: ?Vector = null,

    pub const _desc_table = .{
        .rotate_vector = fd(6, .{ .SubMessage = {} }),
        .vector = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterMapRotationRegionCsReq = struct {
    NFLBONDJAIE: u32 = 0,
    motion: ?MotionInfo = null,
    era_flipper_region_id: u32 = 0,

    pub const _desc_table = .{
        .NFLBONDJAIE = fd(11, .{ .Varint = .Simple }),
        .motion = fd(2, .{ .SubMessage = {} }),
        .era_flipper_region_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterMapRotationRegionScRsp = struct {
    era_flipper_region_id: u32 = 0,
    client_pos_version: u32 = 0,
    retcode: u32 = 0,
    energy_info: ?RotaterEnergyInfo = null,
    NFLBONDJAIE: u32 = 0,
    motion: ?MotionInfo = null,

    pub const _desc_table = .{
        .era_flipper_region_id = fd(5, .{ .Varint = .Simple }),
        .client_pos_version = fd(1, .{ .Varint = .Simple }),
        .retcode = fd(15, .{ .Varint = .Simple }),
        .energy_info = fd(8, .{ .SubMessage = {} }),
        .NFLBONDJAIE = fd(9, .{ .Varint = .Simple }),
        .motion = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChargerInfo = struct {
    GLHAGJGAEHE: u32 = 0,
    group_id: u32 = 0,

    pub const _desc_table = .{
        .GLHAGJGAEHE = fd(5, .{ .Varint = .Simple }),
        .group_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const InteractChargerCsReq = struct {
    charger_info: ?ChargerInfo = null,

    pub const _desc_table = .{
        .charger_info = fd(11, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const InteractChargerScRsp = struct {
    charger_info: ?ChargerInfo = null,
    retcode: u32 = 0,
    energy_info: ?RotaterEnergyInfo = null,

    pub const _desc_table = .{
        .charger_info = fd(14, .{ .SubMessage = {} }),
        .retcode = fd(3, .{ .Varint = .Simple }),
        .energy_info = fd(13, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RotaterData = struct {
    group_id: u32 = 0,
    GLHAGJGAEHE: u32 = 0,
    LKEFOLCGFGD: f32 = 0,

    pub const _desc_table = .{
        .group_id = fd(13, .{ .Varint = .Simple }),
        .GLHAGJGAEHE = fd(14, .{ .Varint = .Simple }),
        .LKEFOLCGFGD = fd(9, .{ .FixedInt = .I32 }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DeployRotaterCsReq = struct {
    rotater_data: ?RotaterData = null,

    pub const _desc_table = .{
        .rotater_data = fd(7, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DeployRotaterScRsp = struct {
    rotater_data: ?RotaterData = null,
    retcode: u32 = 0,
    energy_info: ?RotaterEnergyInfo = null,

    pub const _desc_table = .{
        .rotater_data = fd(11, .{ .SubMessage = {} }),
        .retcode = fd(6, .{ .Varint = .Simple }),
        .energy_info = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RotateMapCsReq = struct {
    rogue_map: ?RotateMapInfo = null,
    group_id: u32 = 0,
    GLHAGJGAEHE: u32 = 0,
    motion: ?MotionInfo = null,

    pub const _desc_table = .{
        .rogue_map = fd(2, .{ .SubMessage = {} }),
        .group_id = fd(5, .{ .Varint = .Simple }),
        .GLHAGJGAEHE = fd(9, .{ .Varint = .Simple }),
        .motion = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RotateMapScRsp = struct {
    retcode: u32 = 0,
    motion: ?MotionInfo = null,
    client_pos_version: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(6, .{ .Varint = .Simple }),
        .motion = fd(9, .{ .SubMessage = {} }),
        .client_pos_version = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LeaveMapRotationRegionCsReq = struct {
    motion: ?MotionInfo = null,

    pub const _desc_table = .{
        .motion = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LeaveMapRotationRegionScRsp = struct {
    retcode: u32 = 0,
    client_pos_version: u32 = 0,
    motion: ?MotionInfo = null,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
        .client_pos_version = fd(14, .{ .Varint = .Simple }),
        .motion = fd(10, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMapRotationDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMapRotationDataScRsp = struct {
    OMEJLLMNPCN: bool = false,
    charger_info: ArrayList(ChargerInfo),
    era_flipper_region_id: i32 = 0,
    rotater_data_list: ArrayList(RotaterData),
    rogue_map: ?RotateMapInfo = null,
    energy_info: ?RotaterEnergyInfo = null,
    retcode: u32 = 0,
    NFLBONDJAIE: u32 = 0,

    pub const _desc_table = .{
        .OMEJLLMNPCN = fd(13, .{ .Varint = .Simple }),
        .charger_info = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .era_flipper_region_id = fd(12, .{ .Varint = .Simple }),
        .rotater_data_list = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .rogue_map = fd(4, .{ .SubMessage = {} }),
        .energy_info = fd(14, .{ .SubMessage = {} }),
        .retcode = fd(2, .{ .Varint = .Simple }),
        .NFLBONDJAIE = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ResetMapRotationRegionCsReq = struct {
    motion: ?MotionInfo = null,
    rogue_map: ?RotateMapInfo = null,

    pub const _desc_table = .{
        .motion = fd(14, .{ .SubMessage = {} }),
        .rogue_map = fd(5, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ResetMapRotationRegionScRsp = struct {
    client_pos_version: u32 = 0,
    motion: ?MotionInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .client_pos_version = fd(6, .{ .Varint = .Simple }),
        .motion = fd(13, .{ .SubMessage = {} }),
        .retcode = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LeaveMapRotationRegionScNotify = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdateEnergyScNotify = struct {
    energy_info: ?RotaterEnergyInfo = null,

    pub const _desc_table = .{
        .energy_info = fd(11, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdateMapRotationDataScNotify = struct {
    NFLBONDJAIE: u32 = 0,
    charger_info: ArrayList(ChargerInfo),
    OMEJLLMNPCN: bool = false,
    energy_info: ?RotaterEnergyInfo = null,
    rotater_data_list: ArrayList(RotaterData),
    rogue_map: ?RotateMapInfo = null,
    era_flipper_region_id: i32 = 0,

    pub const _desc_table = .{
        .NFLBONDJAIE = fd(13, .{ .Varint = .Simple }),
        .charger_info = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .OMEJLLMNPCN = fd(10, .{ .Varint = .Simple }),
        .energy_info = fd(7, .{ .SubMessage = {} }),
        .rotater_data_list = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .rogue_map = fd(5, .{ .SubMessage = {} }),
        .era_flipper_region_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RemoveRotaterCsReq = struct {
    rotater_data: ?RotaterData = null,

    pub const _desc_table = .{
        .rotater_data = fd(15, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RemoveRotaterScRsp = struct {
    energy_info: ?RotaterEnergyInfo = null,
    retcode: u32 = 0,
    rotater_data: ?RotaterData = null,

    pub const _desc_table = .{
        .energy_info = fd(11, .{ .SubMessage = {} }),
        .retcode = fd(8, .{ .Varint = .Simple }),
        .rotater_data = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdateRotaterScNotify = struct {
    rotater_data_list: ArrayList(RotaterData),

    pub const _desc_table = .{
        .rotater_data_list = fd(7, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MarbleGetDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MarbleGetDataScRsp = struct {
    MPBMPFFGIBO: ArrayList(u32),
    IOGDKGFDFPC: ArrayList(u32),
    OJNPGILJIEN: ArrayList(u32),
    score_id: i32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .MPBMPFFGIBO = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
        .IOGDKGFDFPC = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
        .OJNPGILJIEN = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .score_id = fd(8, .{ .Varint = .Simple }),
        .retcode = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MarbleLevelFinishCsReq = struct {
    NLIBKABFGCC: u32 = 0,
    PMKANGDFLKI: ArrayList(u32),

    pub const _desc_table = .{
        .NLIBKABFGCC = fd(4, .{ .Varint = .Simple }),
        .PMKANGDFLKI = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MarbleLevelFinishScRsp = struct {
    retcode: u32 = 0,
    NLIBKABFGCC: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(2, .{ .Varint = .Simple }),
        .NLIBKABFGCC = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MarbleShopBuyCsReq = struct {
    PMKANGDFLKI: ArrayList(u32),

    pub const _desc_table = .{
        .PMKANGDFLKI = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MarbleShopBuyScRsp = struct {
    retcode: u32 = 0,
    PMKANGDFLKI: ArrayList(u32),

    pub const _desc_table = .{
        .retcode = fd(15, .{ .Varint = .Simple }),
        .PMKANGDFLKI = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MarbleUnlockSealScNotify = struct {
    PMKANGDFLKI: ArrayList(u32),

    pub const _desc_table = .{
        .PMKANGDFLKI = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MarblePvpDataUpdateScNotify = struct {
    score_id: i32 = 0,

    pub const _desc_table = .{
        .score_id = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MarbleUpdateShownSealCsReq = struct {
    EHENKPLCPCH: ArrayList(u32),

    pub const _desc_table = .{
        .EHENKPLCPCH = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MarbleUpdateShownSealScRsp = struct {
    EHENKPLCPCH: ArrayList(u32),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .EHENKPLCPCH = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MarkChestInfo = struct {
    group_id: u32 = 0,
    floor_id: u32 = 0,
    config_id: u32 = 0,
    plane_id: u32 = 0,

    pub const _desc_table = .{
        .group_id = fd(3, .{ .Varint = .Simple }),
        .floor_id = fd(6, .{ .Varint = .Simple }),
        .config_id = fd(7, .{ .Varint = .Simple }),
        .plane_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MarkChestFuncInfo = struct {
    mark_time: i64 = 0,
    func_id: u32 = 0,
    mark_chest_info_list: ArrayList(MarkChestInfo),

    pub const _desc_table = .{
        .mark_time = fd(12, .{ .Varint = .Simple }),
        .func_id = fd(7, .{ .Varint = .Simple }),
        .mark_chest_info_list = fd(5, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMarkChestCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMarkChestScRsp = struct {
    retcode: u32 = 0,
    mark_chest_func_info: ArrayList(MarkChestFuncInfo),

    pub const _desc_table = .{
        .retcode = fd(2, .{ .Varint = .Simple }),
        .mark_chest_func_info = fd(12, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdateMarkChestCsReq = struct {
    mark_chest_info_list: ArrayList(MarkChestInfo),
    func_id: u32 = 0,
    trigger_param_id: u32 = 0,

    pub const _desc_table = .{
        .mark_chest_info_list = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .func_id = fd(10, .{ .Varint = .Simple }),
        .trigger_param_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdateMarkChestScRsp = struct {
    mark_chest_func_info: ArrayList(MarkChestFuncInfo),
    retcode: u32 = 0,
    func_id: u32 = 0,
    trigger_param_id: u32 = 0,

    pub const _desc_table = .{
        .mark_chest_func_info = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(12, .{ .Varint = .Simple }),
        .func_id = fd(15, .{ .Varint = .Simple }),
        .trigger_param_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MarkChestChangedScNotify = struct {
    mark_chest_func_info: ArrayList(MarkChestFuncInfo),

    pub const _desc_table = .{
        .mark_chest_func_info = fd(13, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartMatchCsReq = struct {
    EJOFCNAEDHK: ?EPEGHCGCMHP = null,
    NBDLPGBIDLC: FightGameMode = @enumFromInt(0),

    pub const _desc_table = .{
        .EJOFCNAEDHK = fd(13, .{ .SubMessage = {} }),
        .NBDLPGBIDLC = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartMatchScRsp = struct {
    EJOFCNAEDHK: ?EPEGHCGCMHP = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .EJOFCNAEDHK = fd(8, .{ .SubMessage = {} }),
        .retcode = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CancelMatchCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CancelMatchScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MatchResultScNotify = struct {
    retcode: u32 = 0,
    LIPJDJPMOKB: ArrayList(CBBDIOMIFHD),

    pub const _desc_table = .{
        .retcode = fd(2, .{ .Varint = .Simple }),
        .LIPJDJPMOKB = fd(6, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetCrossInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetCrossInfoScRsp = struct {
    room_id: u64 = 0,
    NOGFEEMNHPC: u64 = 0,
    retcode: u32 = 0,
    NBDLPGBIDLC: FightGameMode = @enumFromInt(0),

    pub const _desc_table = .{
        .room_id = fd(4, .{ .Varint = .Simple }),
        .NOGFEEMNHPC = fd(8, .{ .Varint = .Simple }),
        .retcode = fd(14, .{ .Varint = .Simple }),
        .NBDLPGBIDLC = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MatchThreeGetDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LMPIECFMFOI = struct {
    EBGMBDMPEGM: u32 = 0,
    level_id: u32 = 0,

    pub const _desc_table = .{
        .EBGMBDMPEGM = fd(5, .{ .Varint = .Simple }),
        .level_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DHONNIHMACI = struct {
    pos: u32 = 0,
    count: u32 = 0,
    FMKKABMDINJ: u32 = 0,
    BKMPFEOCFIB: u32 = 0,

    pub const _desc_table = .{
        .pos = fd(3, .{ .Varint = .Simple }),
        .count = fd(12, .{ .Varint = .Simple }),
        .FMKKABMDINJ = fd(6, .{ .Varint = .Simple }),
        .BKMPFEOCFIB = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ABGEJNBCDJK = struct {
    BGAFCOBNLPM: ArrayList(DHONNIHMACI),
    ILBHDLMLMCK: ArrayList(ILBHDLMLMCKEntry),
    BEGMFIAPHLM: ArrayList(BEGMFIAPHLMEntry),
    JMBCICLCHKD: ArrayList(LMPIECFMFOI),

    pub const _desc_table = .{
        .BGAFCOBNLPM = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .ILBHDLMLMCK = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .BEGMFIAPHLM = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .JMBCICLCHKD = fd(6, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const ILBHDLMLMCKEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const BEGMFIAPHLMEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MatchThreeGetDataScRsp = struct {
    retcode: u32 = 0,
    MFKJDOEBLIM: ?ABGEJNBCDJK = null,

    pub const _desc_table = .{
        .retcode = fd(15, .{ .Varint = .Simple }),
        .MFKJDOEBLIM = fd(11, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MatchThreeLevelEndCsReq = struct {
    JEPPFDINBNB: ArrayList(u32),
    BKMPFEOCFIB: u32 = 0,
    level_id: u32 = 0,
    EBGMBDMPEGM: u32 = 0,
    uuid: ManagedString = .Empty,
    FMKKABMDINJ: u32 = 0,
    ILBHDLMLMCK: ArrayList(ILBHDLMLMCKEntry),

    pub const _desc_table = .{
        .JEPPFDINBNB = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .BKMPFEOCFIB = fd(9, .{ .Varint = .Simple }),
        .level_id = fd(10, .{ .Varint = .Simple }),
        .EBGMBDMPEGM = fd(3, .{ .Varint = .Simple }),
        .uuid = fd(4, .String),
        .FMKKABMDINJ = fd(14, .{ .Varint = .Simple }),
        .ILBHDLMLMCK = fd(13, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const ILBHDLMLMCKEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MatchThreeLevelEndScRsp = struct {
    EBGMBDMPEGM: u32 = 0,
    level_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .EBGMBDMPEGM = fd(3, .{ .Varint = .Simple }),
        .level_id = fd(4, .{ .Varint = .Simple }),
        .retcode = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MatchThreeSyncDataScNotify = struct {
    MFKJDOEBLIM: ?ABGEJNBCDJK = null,

    pub const _desc_table = .{
        .MFKJDOEBLIM = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MatchThreeSetBirdPosCsReq = struct {
    pos: u32 = 0,
    BKMPFEOCFIB: u32 = 0,

    pub const _desc_table = .{
        .pos = fd(12, .{ .Varint = .Simple }),
        .BKMPFEOCFIB = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MatchThreeSetBirdPosScRsp = struct {
    pos: u32 = 0,
    retcode: u32 = 0,
    BKMPFEOCFIB: u32 = 0,

    pub const _desc_table = .{
        .pos = fd(5, .{ .Varint = .Simple }),
        .retcode = fd(3, .{ .Varint = .Simple }),
        .BKMPFEOCFIB = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MatchThreeV2GetDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GNEBBAEIKGJ = struct {
    AKLOEIGKGAN: ArrayList(u32),
    level_id: u32 = 0,

    pub const _desc_table = .{
        .AKLOEIGKGAN = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .level_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LNOIKGKJHLK = struct {
    FMKKABMDINJ: u32 = 0,
    BKMPFEOCFIB: u32 = 0,
    pos: u32 = 0,
    count: u32 = 0,

    pub const _desc_table = .{
        .FMKKABMDINJ = fd(9, .{ .Varint = .Simple }),
        .BKMPFEOCFIB = fd(7, .{ .Varint = .Simple }),
        .pos = fd(10, .{ .Varint = .Simple }),
        .count = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KFNJAKGEFLA = struct {
    HLPODGBCLKA: ArrayList(KHOCCHABNMN),
    OMKFKGIGFPP: ArrayList(KHOCCHABNMN),
    EDGJDDIEPAG: ArrayList(KHOCCHABNMN),
    EHBGHCGKFBH: ArrayList(GNEBBAEIKGJ),
    DPBMLFFPOKH: u32 = 0,
    CDMPOGJJMJM: u32 = 0,
    BGAFCOBNLPM: ArrayList(LNOIKGKJHLK),

    pub const _desc_table = .{
        .HLPODGBCLKA = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .OMKFKGIGFPP = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .EDGJDDIEPAG = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .EHBGHCGKFBH = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .DPBMLFFPOKH = fd(1, .{ .Varint = .Simple }),
        .CDMPOGJJMJM = fd(8, .{ .Varint = .Simple }),
        .BGAFCOBNLPM = fd(7, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MatchThreeV2GetDataScRsp = struct {
    retcode: u32 = 0,
    EAHMJFLLGGK: ?KFNJAKGEFLA = null,

    pub const _desc_table = .{
        .retcode = fd(5, .{ .Varint = .Simple }),
        .EAHMJFLLGGK = fd(10, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MatchThreeV2BattleItemLevelUpCsReq = struct {
    LDNJEACFBJE: u32 = 0,
    DMKFFFPDLDI: u32 = 0,

    pub const _desc_table = .{
        .LDNJEACFBJE = fd(12, .{ .Varint = .Simple }),
        .DMKFFFPDLDI = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MatchThreeV2BattleItemLevelUpScRsp = struct {
    retcode: u32 = 0,
    DMKFFFPDLDI: u32 = 0,
    LDNJEACFBJE: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(4, .{ .Varint = .Simple }),
        .DMKFFFPDLDI = fd(7, .{ .Varint = .Simple }),
        .LDNJEACFBJE = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MatchThreeV2LevelEndCsReq = struct {
    uuid: ManagedString = .Empty,
    HLDNMIBKLKJ: ArrayList(KHOCCHABNMN),
    JKFPENGNJPI: u32 = 0,
    EHMPEMEONGE: u32 = 0,
    BKMPFEOCFIB: u32 = 0,
    level_id: u32 = 0,
    BBGKAKHGOIO: ArrayList(u32),
    DKBJHPIJCAE: u32 = 0,

    pub const _desc_table = .{
        .uuid = fd(11, .String),
        .HLDNMIBKLKJ = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .JKFPENGNJPI = fd(9, .{ .Varint = .Simple }),
        .EHMPEMEONGE = fd(12, .{ .Varint = .Simple }),
        .BKMPFEOCFIB = fd(5, .{ .Varint = .Simple }),
        .level_id = fd(15, .{ .Varint = .Simple }),
        .BBGKAKHGOIO = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
        .DKBJHPIJCAE = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MatchThreeV2LevelEndScRsp = struct {
    retcode: u32 = 0,
    MNBEJDHHOJN: ArrayList(ItemList),
    EBHAJENIKAF: u32 = 0,
    AEKCPPIDNMD: ?LNOIKGKJHLK = null,
    CDMPOGJJMJM: u32 = 0,
    level_info: ?GNEBBAEIKGJ = null,
    PECFJCDBCBN: ?ItemList = null,
    level_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
        .MNBEJDHHOJN = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .EBHAJENIKAF = fd(13, .{ .Varint = .Simple }),
        .AEKCPPIDNMD = fd(1, .{ .SubMessage = {} }),
        .CDMPOGJJMJM = fd(9, .{ .Varint = .Simple }),
        .level_info = fd(5, .{ .SubMessage = {} }),
        .PECFJCDBCBN = fd(4, .{ .SubMessage = {} }),
        .level_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MatchThreeV2SetBirdPosCsReq = struct {
    pos: u32 = 0,
    BKMPFEOCFIB: u32 = 0,

    pub const _desc_table = .{
        .pos = fd(9, .{ .Varint = .Simple }),
        .BKMPFEOCFIB = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MatchThreeV2SetBirdPosScRsp = struct {
    pos: u32 = 0,
    BKMPFEOCFIB: u32 = 0,
    retcode: u32 = 0,
    JMHPFPMAJFG: u32 = 0,

    pub const _desc_table = .{
        .pos = fd(6, .{ .Varint = .Simple }),
        .BKMPFEOCFIB = fd(3, .{ .Varint = .Simple }),
        .retcode = fd(15, .{ .Varint = .Simple }),
        .JMHPFPMAJFG = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MatchThreeV2ScNotify = struct {
    EAHMJFLLGGK: ?KFNJAKGEFLA = null,

    pub const _desc_table = .{
        .EAHMJFLLGGK = fd(9, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MatchThreeV2PvpFinishScNotify = struct {
    NIAEGHJLNMB: ?CDIMEMFJJFP = null,
    KOJIHJIHKIA: u32 = 0,
    BEIPBPKKDMI: FightGameMode = @enumFromInt(0),
    FDGDOKAFBDH: u32 = 0,
    reason: Match3FinishReason = @enumFromInt(0),
    EAHMJFLLGGK: ?KFNJAKGEFLA = null,

    pub const _desc_table = .{
        .NIAEGHJLNMB = fd(1, .{ .SubMessage = {} }),
        .KOJIHJIHKIA = fd(8, .{ .Varint = .Simple }),
        .BEIPBPKKDMI = fd(5, .{ .Varint = .Simple }),
        .FDGDOKAFBDH = fd(14, .{ .Varint = .Simple }),
        .reason = fd(12, .{ .Varint = .Simple }),
        .EAHMJFLLGGK = fd(9, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetNpcMessageGroupCsReq = struct {
    contact_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .contact_id_list = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MessageItem = struct {
    item_id: u32 = 0,
    text_id: u32 = 0,

    pub const _desc_table = .{
        .item_id = fd(10, .{ .Varint = .Simple }),
        .text_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MessageSection = struct {
    frozen_item_id: u32 = 0,
    item_list: ArrayList(MessageItem),
    id: u32 = 0,
    message_item_list: ArrayList(u32),
    status: MessageSectionStatus = @enumFromInt(0),

    pub const _desc_table = .{
        .frozen_item_id = fd(15, .{ .Varint = .Simple }),
        .item_list = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .id = fd(1, .{ .Varint = .Simple }),
        .message_item_list = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        .status = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MessageGroup = struct {
    message_section_list: ArrayList(MessageSection),
    status: MessageGroupStatus = @enumFromInt(0),
    id: u32 = 0,
    refresh_time: i64 = 0,
    message_section_id: u32 = 0,

    pub const _desc_table = .{
        .message_section_list = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .status = fd(3, .{ .Varint = .Simple }),
        .id = fd(1, .{ .Varint = .Simple }),
        .refresh_time = fd(8, .{ .Varint = .Simple }),
        .message_section_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetNpcMessageGroupScRsp = struct {
    retcode: u32 = 0,
    message_group_list: ArrayList(MessageGroup),

    pub const _desc_table = .{
        .retcode = fd(6, .{ .Varint = .Simple }),
        .message_group_list = fd(9, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetNpcStatusCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NpcStatus = struct {
    npc_id: u32 = 0,
    is_finish: bool = false,

    pub const _desc_table = .{
        .npc_id = fd(10, .{ .Varint = .Simple }),
        .is_finish = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GroupStatus = struct {
    refresh_time: i64 = 0,
    group_status: MessageGroupStatus = @enumFromInt(0),
    group_id: u32 = 0,

    pub const _desc_table = .{
        .refresh_time = fd(6, .{ .Varint = .Simple }),
        .group_status = fd(7, .{ .Varint = .Simple }),
        .group_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SectionStatus = struct {
    section_id: u32 = 0,
    section_status: MessageSectionStatus = @enumFromInt(0),

    pub const _desc_table = .{
        .section_id = fd(2, .{ .Varint = .Simple }),
        .section_status = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetNpcStatusScRsp = struct {
    npc_status_list: ArrayList(NpcStatus),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .npc_status_list = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishItemIdCsReq = struct {
    text_id: u32 = 0,
    item_id: u32 = 0,

    pub const _desc_table = .{
        .text_id = fd(4, .{ .Varint = .Simple }),
        .item_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishItemIdScRsp = struct {
    item_id: u32 = 0,
    text_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .item_id = fd(3, .{ .Varint = .Simple }),
        .text_id = fd(12, .{ .Varint = .Simple }),
        .retcode = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishSectionIdCsReq = struct {
    section_id: u32 = 0,

    pub const _desc_table = .{
        .section_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishSectionIdScRsp = struct {
    section_id: u32 = 0,
    reward: ?ItemList = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .section_id = fd(4, .{ .Varint = .Simple }),
        .reward = fd(13, .{ .SubMessage = {} }),
        .retcode = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishPerformSectionIdCsReq = struct {
    item_list: ArrayList(MessageItem),
    section_id: u32 = 0,

    pub const _desc_table = .{
        .item_list = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .section_id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishPerformSectionIdScRsp = struct {
    reward: ?ItemList = null,
    retcode: u32 = 0,
    item_list: ArrayList(MessageItem),
    section_id: u32 = 0,

    pub const _desc_table = .{
        .reward = fd(8, .{ .SubMessage = {} }),
        .retcode = fd(10, .{ .Varint = .Simple }),
        .item_list = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .section_id = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMissionMessageInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMissionMessageInfoScRsp = struct {
    retcode: u32 = 0,
    APOLDLGPKOP: ArrayList(APOLDLGPKOPEntry),

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
        .APOLDLGPKOP = fd(4, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const APOLDLGPKOPEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ShareCsReq = struct {
    ENFKGGNOMEO: u32 = 0,

    pub const _desc_table = .{
        .ENFKGGNOMEO = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ADGNKECPOMA = struct {
    ENFKGGNOMEO: u32 = 0,
    CCCDKGAMDLB: u32 = 0,

    pub const _desc_table = .{
        .ENFKGGNOMEO = fd(11, .{ .Varint = .Simple }),
        .CCCDKGAMDLB = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ShareScRsp = struct {
    reward: ?ItemList = null,
    retcode: u32 = 0,
    FGPLILEBKGL: ?ADGNKECPOMA = null,

    pub const _desc_table = .{
        .reward = fd(4, .{ .SubMessage = {} }),
        .retcode = fd(12, .{ .Varint = .Simple }),
        .FGPLILEBKGL = fd(9, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetShareDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetShareDataScRsp = struct {
    retcode: u32 = 0,
    MFKJJBPNDAM: ArrayList(ADGNKECPOMA),

    pub const _desc_table = .{
        .retcode = fd(6, .{ .Varint = .Simple }),
        .MFKJJBPNDAM = fd(13, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakePictureCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakePictureScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NLBMCGCAEIO = struct {
    PILDEFKPKLE: ArrayList(u32),
    AFLEAJIHNEB: u32 = 0,
    type: u32 = 0,

    pub const _desc_table = .{
        .PILDEFKPKLE = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
        .AFLEAJIHNEB = fd(4, .{ .Varint = .Simple }),
        .type = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TriggerVoiceCsReq = struct {
    MNELHNHCKPJ: ArrayList(NLBMCGCAEIO),

    pub const _desc_table = .{
        .MNELHNHCKPJ = fd(14, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TriggerVoiceScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CancelCacheNotifyCsReq = struct {
    type: CancelCacheType = @enumFromInt(0),
    KCLJMCAKOJF: ArrayList(ManagedString),
    daily_index: ArrayList(u32),

    pub const _desc_table = .{
        .type = fd(1, .{ .Varint = .Simple }),
        .KCLJMCAKOJF = fd(8, .{ .List = .String }),
        .daily_index = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CancelCacheNotifyScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SecurityReportCsReq = struct {
    DGDLNIEFCPF: ManagedString = .Empty,

    pub const _desc_table = .{
        .DGDLNIEFCPF = fd(5, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SecurityReportScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GMAAJHDFACD = struct {
    type: MovieRacingType = @enumFromInt(0),
    IFAIKOIOIDD: u32 = 0,
    PDOMACFEMGG: u32 = 0,
    level: u32 = 0,

    pub const _desc_table = .{
        .type = fd(8, .{ .Varint = .Simple }),
        .IFAIKOIOIDD = fd(10, .{ .Varint = .Simple }),
        .PDOMACFEMGG = fd(3, .{ .Varint = .Simple }),
        .level = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMovieRacingDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMovieRacingDataScRsp = struct {
    retcode: u32 = 0,
    ODJIGEBEHGC: ArrayList(GMAAJHDFACD),

    pub const _desc_table = .{
        .retcode = fd(15, .{ .Varint = .Simple }),
        .ODJIGEBEHGC = fd(9, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdateMovieRacingDataCsReq = struct {
    KIHCHDFFPOL: ?GMAAJHDFACD = null,

    pub const _desc_table = .{
        .KIHCHDFFPOL = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdateMovieRacingDataScRsp = struct {
    retcode: u32 = 0,
    KIHCHDFFPOL: ?GMAAJHDFACD = null,

    pub const _desc_table = .{
        .retcode = fd(11, .{ .Varint = .Simple }),
        .KIHCHDFFPOL = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SubmitOrigamiItemCsReq = struct {
    LCBOFMOPGKE: u32 = 0,

    pub const _desc_table = .{
        .LCBOFMOPGKE = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SubmitOrigamiItemScRsp = struct {
    LCBOFMOPGKE: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .LCBOFMOPGKE = fd(10, .{ .Varint = .Simple }),
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetOrigamiPropInfoCsReq = struct {
    content_id: u32 = 0,
    entry_story_line_id: u32 = 0,
    floor_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .content_id = fd(15, .{ .Varint = .Simple }),
        .entry_story_line_id = fd(6, .{ .Varint = .Simple }),
        .floor_id_list = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LAMMCHABAGH = struct {
    config_id: u32 = 0,
    group_id: u32 = 0,
    state: u32 = 0,

    pub const _desc_table = .{
        .config_id = fd(13, .{ .Varint = .Simple }),
        .group_id = fd(12, .{ .Varint = .Simple }),
        .state = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FCHOLNDIPKC = struct {
    CLJJAFGFKEL: ArrayList(LAMMCHABAGH),
    floor_id: u32 = 0,

    pub const _desc_table = .{
        .CLJJAFGFKEL = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .floor_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetOrigamiPropInfoScRsp = struct {
    retcode: u32 = 0,
    LMEBHNLDKDJ: ArrayList(FCHOLNDIPKC),
    entry_story_line_id: u32 = 0,
    content_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(15, .{ .Varint = .Simple }),
        .LMEBHNLDKDJ = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .entry_story_line_id = fd(3, .{ .Varint = .Simple }),
        .content_id = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KLBHFHJDBFI = struct {
    level: u32 = 0,
    NCNAONIFPFM: bool = false,
    IFAIKOIOIDD: u32 = 0,
    BMCJHONBHJH: u32 = 0,

    pub const _desc_table = .{
        .level = fd(1, .{ .Varint = .Simple }),
        .NCNAONIFPFM = fd(11, .{ .Varint = .Simple }),
        .IFAIKOIOIDD = fd(15, .{ .Varint = .Simple }),
        .BMCJHONBHJH = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetGunPlayDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetGunPlayDataScRsp = struct {
    retcode: u32 = 0,
    LNBFDJMNACN: ArrayList(KLBHFHJDBFI),

    pub const _desc_table = .{
        .retcode = fd(10, .{ .Varint = .Simple }),
        .LNBFDJMNACN = fd(7, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdateGunPlayDataCsReq = struct {
    ODFHNCHIEJN: ?KLBHFHJDBFI = null,
    PNEIFBEGMDH: u32 = 0,
    group_id: u32 = 0,
    uuid: u64 = 0,

    pub const _desc_table = .{
        .ODFHNCHIEJN = fd(5, .{ .SubMessage = {} }),
        .PNEIFBEGMDH = fd(14, .{ .Varint = .Simple }),
        .group_id = fd(1, .{ .Varint = .Simple }),
        .uuid = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdateGunPlayDataScRsp = struct {
    ODFHNCHIEJN: ?KLBHFHJDBFI = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .ODFHNCHIEJN = fd(10, .{ .SubMessage = {} }),
        .retcode = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JCDNMBCKPLF = struct {
    modifier_source_type: GIILENMKCAH = @enumFromInt(0),
    KCMJKGADPIP: DifficultyAdjustmentType = @enumFromInt(0),
    id: u32 = 0,

    pub const _desc_table = .{
        .modifier_source_type = fd(11, .{ .Varint = .Simple }),
        .KCMJKGADPIP = fd(5, .{ .Varint = .Simple }),
        .id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DifficultyAdjustmentGetDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DifficultyAdjustmentGetDataScRsp = struct {
    retcode: u32 = 0,
    content_package_list: ArrayList(JCDNMBCKPLF),

    pub const _desc_table = .{
        .retcode = fd(4, .{ .Varint = .Simple }),
        .content_package_list = fd(5, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DifficultyAdjustmentUpdateDataCsReq = struct {
    data: ?JCDNMBCKPLF = null,

    pub const _desc_table = .{
        .data = fd(5, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DifficultyAdjustmentUpdateDataScRsp = struct {
    retcode: u32 = 0,
    content_package_list: ArrayList(JCDNMBCKPLF),
    data: ?JCDNMBCKPLF = null,

    pub const _desc_table = .{
        .retcode = fd(4, .{ .Varint = .Simple }),
        .content_package_list = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .data = fd(10, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MazeKillDirectCsReq = struct {
    entity_list: ArrayList(u32),
    MMKOGOKNPKL: u32 = 0,
    modifier_source_type: MNIJHMEPGNN = @enumFromInt(0),

    pub const _desc_table = .{
        .entity_list = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        .MMKOGOKNPKL = fd(11, .{ .Varint = .Simple }),
        .modifier_source_type = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MazeKillDirectScRsp = struct {
    retcode: u32 = 0,
    entity_list: ArrayList(u32),

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
        .entity_list = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DirectDeliveryScNotify = struct {
    reward_list: ArrayList(ItemList),
    MDDJNCKMJHG: u32 = 0,

    pub const _desc_table = .{
        .reward_list = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .MDDJNCKMJHG = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CancelDirectDeliveryNoticeCsReq = struct {
    MDDJNCKMJHG: u32 = 0,

    pub const _desc_table = .{
        .MDDJNCKMJHG = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CancelDirectDeliveryNoticeScRsp = struct {
    retcode: u32 = 0,
    MDDJNCKMJHG: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(13, .{ .Varint = .Simple }),
        .MDDJNCKMJHG = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMissionDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IKAMMKLBOCO = struct {
    type: MissionSyncRecord = @enumFromInt(0),
    id: u32 = 0,
    display_value: u32 = 0,

    pub const _desc_table = .{
        .type = fd(2, .{ .Varint = .Simple }),
        .id = fd(10, .{ .Varint = .Simple }),
        .display_value = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Mission = struct {
    status: MissionStatus = @enumFromInt(0),
    id: u32 = 0,
    progress: u32 = 0,

    pub const _desc_table = .{
        .status = fd(13, .{ .Varint = .Simple }),
        .id = fd(6, .{ .Varint = .Simple }),
        .progress = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MissionCustomValue = struct {
    custom_value: u32 = 0,
    index: u32 = 0,
    DFDEKANJBLG: ManagedString = .Empty,

    pub const _desc_table = .{
        .custom_value = fd(12, .{ .Varint = .Simple }),
        .index = fd(5, .{ .Varint = .Simple }),
        .DFDEKANJBLG = fd(1, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MissionCustomValueList = struct {
    custom_value_list: ArrayList(MissionCustomValue),

    pub const _desc_table = .{
        .custom_value_list = fd(2, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MainMission = struct {
    id: u32 = 0,
    status: MissionStatus = @enumFromInt(0),
    custom_value_list: ArrayList(MissionCustomValue),

    pub const _desc_table = .{
        .id = fd(3, .{ .Varint = .Simple }),
        .status = fd(10, .{ .Varint = .Simple }),
        .custom_value_list = fd(9, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FHABEIKAFBO = struct {
    id: u32 = 0,
    custom_value_list: ?MissionCustomValueList = null,

    pub const _desc_table = .{
        .id = fd(15, .{ .Varint = .Simple }),
        .custom_value_list = fd(1935, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MainMissionCustomValue = struct {
    main_mission_id: u32 = 0,
    custom_value_list: ?MissionCustomValueList = null,

    pub const _desc_table = .{
        .main_mission_id = fd(6, .{ .Varint = .Simple }),
        .custom_value_list = fd(13, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMissionDataScRsp = struct {
    mission_list: ArrayList(Mission),
    track_mission_id: u32 = 0,
    retcode: u32 = 0,
    main_mission_list: ArrayList(MainMission),
    OJOMOCGIAIC: ArrayList(u32),

    pub const _desc_table = .{
        .mission_list = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .track_mission_id = fd(12, .{ .Varint = .Simple }),
        .retcode = fd(9, .{ .Varint = .Simple }),
        .main_mission_list = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .OJOMOCGIAIC = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AcceptMainMissionCsReq = struct {
    main_mission_id: u32 = 0,

    pub const _desc_table = .{
        .main_mission_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AcceptMainMissionScRsp = struct {
    retcode: u32 = 0,
    main_mission_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(10, .{ .Varint = .Simple }),
        .main_mission_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishTalkMissionCsReq = struct {
    talk_str: ManagedString = .Empty,
    custom_value_list: ArrayList(MissionCustomValue),
    sub_mission_id: u32 = 0,

    pub const _desc_table = .{
        .talk_str = fd(3, .String),
        .custom_value_list = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .sub_mission_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishTalkMissionScRsp = struct {
    sub_mission_id: u32 = 0,
    retcode: u32 = 0,
    talk_str: ManagedString = .Empty,
    custom_value_list: ArrayList(MissionCustomValue),

    pub const _desc_table = .{
        .sub_mission_id = fd(1, .{ .Varint = .Simple }),
        .retcode = fd(13, .{ .Varint = .Simple }),
        .talk_str = fd(5, .String),
        .custom_value_list = fd(14, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MissionRewardScNotify = struct {
    main_mission_id: u32 = 0,
    reward: ?ItemList = null,
    sub_mission_id: u32 = 0,

    pub const _desc_table = .{
        .main_mission_id = fd(2, .{ .Varint = .Simple }),
        .reward = fd(6, .{ .SubMessage = {} }),
        .sub_mission_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SubMissionRewardScNotify = struct {
    sub_mission_id: u32 = 0,
    reward: ?ItemList = null,

    pub const _desc_table = .{
        .sub_mission_id = fd(5, .{ .Varint = .Simple }),
        .reward = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncTaskCsReq = struct {
    key: ManagedString = .Empty,

    pub const _desc_table = .{
        .key = fd(10, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncTaskScRsp = struct {
    retcode: u32 = 0,
    key: ManagedString = .Empty,

    pub const _desc_table = .{
        .retcode = fd(2, .{ .Varint = .Simple }),
        .key = fd(14, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MissionGroupWarnScNotify = struct {
    group_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .group_id_list = fd(11, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishCosumeItemMissionCsReq = struct {
    sub_mission_id: u32 = 0,
    item_list: ?ItemList = null,

    pub const _desc_table = .{
        .sub_mission_id = fd(3, .{ .Varint = .Simple }),
        .item_list = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishCosumeItemMissionScRsp = struct {
    sub_mission_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .sub_mission_id = fd(8, .{ .Varint = .Simple }),
        .retcode = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMissionStatusCsReq = struct {
    sub_mission_id_list: ArrayList(u32),
    main_mission_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .sub_mission_id_list = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .main_mission_id_list = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMissionStatusScRsp = struct {
    unfinished_main_mission_id_list: ArrayList(u32),
    sub_mission_status_list: ArrayList(Mission),
    finished_main_mission_id_list: ArrayList(u32),
    main_mission_mcv_list: ArrayList(MainMissionCustomValue),
    retcode: u32 = 0,
    disabled_main_mission_id_list: ArrayList(u32),
    curversion_finished_main_mission_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .unfinished_main_mission_id_list = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
        .sub_mission_status_list = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .finished_main_mission_id_list = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .main_mission_mcv_list = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(12, .{ .Varint = .Simple }),
        .disabled_main_mission_id_list = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
        .curversion_finished_main_mission_id_list = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TeleportToMissionResetPointCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TeleportToMissionResetPointScRsp = struct {
    client_pos_version: u32 = 0,
    motion: ?MotionInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .client_pos_version = fd(13, .{ .Varint = .Simple }),
        .motion = fd(3, .{ .SubMessage = {} }),
        .retcode = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartFinishSubMissionScNotify = struct {
    sub_mission_id: u32 = 0,

    pub const _desc_table = .{
        .sub_mission_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartFinishMainMissionScNotify = struct {
    main_mission_id: u32 = 0,

    pub const _desc_table = .{
        .main_mission_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMainMissionCustomValueCsReq = struct {
    main_mission_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .main_mission_id_list = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMainMissionCustomValueScRsp = struct {
    main_mission_list: ArrayList(MainMission),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .main_mission_list = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MissionAcceptScNotify = struct {
    sub_mission_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .sub_mission_id_list = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdateTrackMainMissionIdCsReq = struct {
    IJDJMNJBOBI: TrackMainMissionUpdateReasonId = @enumFromInt(0),
    LMBCEOPCIGC: u32 = 0,
    track_mission_id: u32 = 0,

    pub const _desc_table = .{
        .IJDJMNJBOBI = fd(9, .{ .Varint = .Simple }),
        .LMBCEOPCIGC = fd(5, .{ .Varint = .Simple }),
        .track_mission_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdateTrackMainMissionIdScRsp = struct {
    track_mission_id: u32 = 0,
    prev_track_mission_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .track_mission_id = fd(8, .{ .Varint = .Simple }),
        .prev_track_mission_id = fd(7, .{ .Varint = .Simple }),
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishedMissionScNotify = struct {
    finished_main_mission_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .finished_main_mission_id_list = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdateMainMissionCustomValueCsReq = struct {
    main_mission_id: u32 = 0,
    DFDEKANJBLG: ManagedString = .Empty,
    value: u32 = 0,

    pub const _desc_table = .{
        .main_mission_id = fd(4, .{ .Varint = .Simple }),
        .DFDEKANJBLG = fd(9, .String),
        .value = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdateMainMissionCustomValueScRsp = struct {
    LPJFBMJBEPP: ?MainMission = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .LPJFBMJBEPP = fd(2, .{ .SubMessage = {} }),
        .retcode = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMonopolyInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ODAIJIGEAJL = struct {
    HGMMCHHBKPB: bool = false,
    LJFGIFBDANC: bool = false,
    ENGJFICHDML: u32 = 0,
    EJHDCNEEGMI: u32 = 0,
    FLJBJPAHJIF: u32 = 0,
    item_value: u32 = 0,

    pub const _desc_table = .{
        .HGMMCHHBKPB = fd(5, .{ .Varint = .Simple }),
        .LJFGIFBDANC = fd(15, .{ .Varint = .Simple }),
        .ENGJFICHDML = fd(9, .{ .Varint = .Simple }),
        .EJHDCNEEGMI = fd(8, .{ .Varint = .Simple }),
        .FLJBJPAHJIF = fd(2, .{ .Varint = .Simple }),
        .item_value = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LLGNIKNMCKE = struct {
    OFIODJNLBEA: ArrayList(u32),
    NMAMONLLALL: GOJOINDBKIK = @enumFromInt(0),

    pub const _desc_table = .{
        .OFIODJNLBEA = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .NMAMONLLALL = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OOEMIBFNLLD = struct {
    progress: u32 = 0,
    EKPNCLPOENK: u32 = 0,

    pub const _desc_table = .{
        .progress = fd(2, .{ .Varint = .Simple }),
        .EKPNCLPOENK = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LAILNIGFPOO = struct {
    KHGPFHBOELE: u64 = 0,
    is_taken_reward: bool = false,
    AELPFEBGNOK: bool = false,

    pub const _desc_table = .{
        .KHGPFHBOELE = fd(9, .{ .Varint = .Simple }),
        .is_taken_reward = fd(1, .{ .Varint = .Simple }),
        .AELPFEBGNOK = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BCMOKFHJMPM = struct {
    EBABBEJIPJN: ArrayList(LAILNIGFPOO),
    LJJMLEIOIFE: u32 = 0,
    DGALCMFIDFP: u32 = 0,
    JGNIHLJFJPP: u32 = 0,
    JOJNDGBEJEK: u64 = 0,
    OMGKJLJIHLH: u64 = 0,
    DDIBEFMILMP: ManagedString = .Empty,
    CJFMAIAKENL: ArrayList(OOEMIBFNLLD),
    IFKFEPKHLGN: ArrayList(OOEMIBFNLLD),
    JLEGPNIHMJD: ManagedString = .Empty,
    FHOLFDONOII: bool = false,
    KGBEJKNCLFK: ArrayList(OOEMIBFNLLD),
    JCKNGFJEEGI: ArrayList(OOEMIBFNLLD),
    HHJPBLEKAPN: u32 = 0,
    BNOLDNBMJHF: u32 = 0,
    EBOOLGNACJJ: u64 = 0,
    DGEPMKFFOAB: u32 = 0,
    PJDFBPBMBBA: ManagedString = .Empty,

    pub const _desc_table = .{
        .EBABBEJIPJN = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .LJJMLEIOIFE = fd(12, .{ .Varint = .Simple }),
        .DGALCMFIDFP = fd(10, .{ .Varint = .Simple }),
        .JGNIHLJFJPP = fd(4, .{ .Varint = .Simple }),
        .JOJNDGBEJEK = fd(9, .{ .Varint = .Simple }),
        .OMGKJLJIHLH = fd(11, .{ .Varint = .Simple }),
        .DDIBEFMILMP = fd(1098, .String),
        .CJFMAIAKENL = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .IFKFEPKHLGN = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .JLEGPNIHMJD = fd(1265, .String),
        .FHOLFDONOII = fd(13, .{ .Varint = .Simple }),
        .KGBEJKNCLFK = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .JCKNGFJEEGI = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .HHJPBLEKAPN = fd(1, .{ .Varint = .Simple }),
        .BNOLDNBMJHF = fd(14, .{ .Varint = .Simple }),
        .EBOOLGNACJJ = fd(8, .{ .Varint = .Simple }),
        .DGEPMKFFOAB = fd(15, .{ .Varint = .Simple }),
        .PJDFBPBMBBA = fd(2018, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EDKGOMNEHOH = struct {
    FJOAFFLLEOK: ArrayList(BCMOKFHJMPM),

    pub const _desc_table = .{
        .FJOAFFLLEOK = fd(13, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMonopolyInfoScRsp = struct {
    HEHJKFILINN: ?NFDGIJLOLGD = null,
    OELHKEIPIDJ: ?CANNIBGCLCL = null,
    rogue_map: ?JAJGKKDPALC = null,
    JNHJEELJFHF: ?LLGNIKNMCKE = null,
    GPFGDOKNGEL: ?ICIHABOLHPN = null,
    COKCGFMEIBA: ArrayList(u32),
    stt: ?KJBMLBGIBJF = null,
    IEDGKHDJJDC: ?EDKGOMNEHOH = null,
    LJAOGAPDFHA: ?AEDKPBFCKGO = null,
    rogue_buff_info: ?AFDALBGANPC = null,
    HLJMHNABFMC: ?ODAIJIGEAJL = null,
    FGHCIADCMNJ: ?HFDGMJJFOHM = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .HEHJKFILINN = fd(4, .{ .SubMessage = {} }),
        .OELHKEIPIDJ = fd(3, .{ .SubMessage = {} }),
        .rogue_map = fd(11, .{ .SubMessage = {} }),
        .JNHJEELJFHF = fd(5, .{ .SubMessage = {} }),
        .GPFGDOKNGEL = fd(6, .{ .SubMessage = {} }),
        .COKCGFMEIBA = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
        .stt = fd(9, .{ .SubMessage = {} }),
        .IEDGKHDJJDC = fd(13, .{ .SubMessage = {} }),
        .LJAOGAPDFHA = fd(15, .{ .SubMessage = {} }),
        .rogue_buff_info = fd(1, .{ .SubMessage = {} }),
        .HLJMHNABFMC = fd(2, .{ .SubMessage = {} }),
        .FGHCIADCMNJ = fd(12, .{ .SubMessage = {} }),
        .retcode = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NFDGIJLOLGD = struct {
    HFMDLHIFMPI: ArrayList(u32),

    pub const _desc_table = .{
        .HFMDLHIFMPI = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyConditionUpdateScNotify = struct {
    HEHJKFILINN: ?NFDGIJLOLGD = null,

    pub const _desc_table = .{
        .HEHJKFILINN = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KJBMLBGIBJF = struct {
    OCCMNIDEBBJ: ArrayList(u32),
    JIHCHILFJPI: ArrayList(u32),

    pub const _desc_table = .{
        .OCCMNIDEBBJ = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
        .JIHCHILFJPI = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolySttUpdateScNotify = struct {
    stt: ?KJBMLBGIBJF = null,

    pub const _desc_table = .{
        .stt = fd(4, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IAACCAFGEPI = struct {
    JMDEFLAFICE: bool = false,
    map_id: u32 = 0,
    cell_id: u32 = 0,
    MAFKCBODMMC: IHGJLLNGDKL = @enumFromInt(0),

    pub const _desc_table = .{
        .JMDEFLAFICE = fd(3, .{ .Varint = .Simple }),
        .map_id = fd(6, .{ .Varint = .Simple }),
        .cell_id = fd(13, .{ .Varint = .Simple }),
        .MAFKCBODMMC = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JAJGKKDPALC = struct {
    PGALBDIIEFG: u32 = 0,
    LBBONKACGEJ: u32 = 0,
    NBMPBGPJONH: ArrayList(IAACCAFGEPI),
    HGBIGBFGBOM: ?IAACCAFGEPI = null,
    IMOPIEJBHOD: ArrayList(IAACCAFGEPI),

    pub const _desc_table = .{
        .PGALBDIIEFG = fd(12, .{ .Varint = .Simple }),
        .LBBONKACGEJ = fd(8, .{ .Varint = .Simple }),
        .NBMPBGPJONH = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .HGBIGBFGBOM = fd(9, .{ .SubMessage = {} }),
        .IMOPIEJBHOD = fd(2, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyEventLoadUpdateScNotify = struct {
    NBMPBGPJONH: ArrayList(IAACCAFGEPI),
    IMOPIEJBHOD: ArrayList(IAACCAFGEPI),

    pub const _desc_table = .{
        .NBMPBGPJONH = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .IMOPIEJBHOD = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const COMEOLGLNKO = struct {
    event_id: u32 = 0,

    pub const _desc_table = .{
        .event_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PBLCEJHPOPO = struct {
    event_id: u32 = 0,

    pub const _desc_table = .{
        .event_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LIHOCEHEPDB = struct {
    event_id: u32 = 0,
    LFCMBGOAIBB: u32 = 0,
    HFEJHLNIGGH: ArrayList(u32),
    option_id: u32 = 0,

    pub const _desc_table = .{
        .event_id = fd(4, .{ .Varint = .Simple }),
        .LFCMBGOAIBB = fd(11, .{ .Varint = .Simple }),
        .HFEJHLNIGGH = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .option_id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OHNBCHLOEBL = struct {
    LFCMBGOAIBB: u32 = 0,
    OLFNJJKLGMK: u32 = 0,
    HFEJHLNIGGH: ArrayList(u32),
    event_id: u32 = 0,
    ECCJBGLBIGM: u32 = 0,

    pub const _desc_table = .{
        .LFCMBGOAIBB = fd(15, .{ .Varint = .Simple }),
        .OLFNJJKLGMK = fd(8, .{ .Varint = .Simple }),
        .HFEJHLNIGGH = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        .event_id = fd(9, .{ .Varint = .Simple }),
        .ECCJBGLBIGM = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BLMJNFFPMCN = struct {
    KMKFOJAHELJ: ArrayList(LBENAAHCPEO),
    PIFPGKFFBPN: u32 = 0,

    pub const _desc_table = .{
        .KMKFOJAHELJ = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .PIFPGKFFBPN = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AAIBAKECHCE = struct {
    PAGCAMAGFLB: u32 = 0,

    pub const _desc_table = .{
        .PAGCAMAGFLB = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FGONFNIDOHJ = struct {
    shop_id: u32 = 0,

    pub const _desc_table = .{
        .shop_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IPONFKAJENJ = struct {
    APAOBDGJMEG: u32 = 0,

    pub const _desc_table = .{
        .APAOBDGJMEG = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NALPJMLJPNP = struct {
    get_item_list: u32 = 0,
    OEFHMBJBLGC: u32 = 0,

    pub const _desc_table = .{
        .get_item_list = fd(5, .{ .Varint = .Simple }),
        .OEFHMBJBLGC = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LBENAAHCPEO = struct {
    OKDLMEJPCHE: u32 = 0,
    BMPFOIKMGBK: ?BMPFOIKMGBK_union,

    pub const _BMPFOIKMGBK_case = enum {
        PECBIMKOOAH,
        EMLNNMLGNKH,
        JBJLDPPDBBC,
        ECOIFNNJDAP,
        NBJICDAJDGF,
        GAJBFPCPIGM,
        JOPPAEMPPFH,
        JOADHBLDIMF,
        IEFOGHNGCMC,
    };
    pub const BMPFOIKMGBK_union = union(_BMPFOIKMGBK_case) {
        PECBIMKOOAH: COMEOLGLNKO,
        EMLNNMLGNKH: PBLCEJHPOPO,
        JBJLDPPDBBC: LIHOCEHEPDB,
        ECOIFNNJDAP: AAIBAKECHCE,
        NBJICDAJDGF: FGONFNIDOHJ,
        GAJBFPCPIGM: IPONFKAJENJ,
        JOPPAEMPPFH: NALPJMLJPNP,
        JOADHBLDIMF: OHNBCHLOEBL,
        IEFOGHNGCMC: BLMJNFFPMCN,
        pub const _union_desc = .{
            .PECBIMKOOAH = fd(3, .{ .SubMessage = {} }),
            .EMLNNMLGNKH = fd(15, .{ .SubMessage = {} }),
            .JBJLDPPDBBC = fd(13, .{ .SubMessage = {} }),
            .ECOIFNNJDAP = fd(14, .{ .SubMessage = {} }),
            .NBJICDAJDGF = fd(11, .{ .SubMessage = {} }),
            .GAJBFPCPIGM = fd(6, .{ .SubMessage = {} }),
            .JOPPAEMPPFH = fd(12, .{ .SubMessage = {} }),
            .JOADHBLDIMF = fd(7, .{ .SubMessage = {} }),
            .IEFOGHNGCMC = fd(9, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .OKDLMEJPCHE = fd(8, .{ .Varint = .Simple }),
        .BMPFOIKMGBK = fd(null, .{ .OneOf = BMPFOIKMGBK_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ICIHABOLHPN = struct {
    FHNPAGIHINF: ?LBENAAHCPEO = null,

    pub const _desc_table = .{
        .FHNPAGIHINF = fd(7, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyContentUpdateScNotify = struct {
    FHNPAGIHINF: ?LBENAAHCPEO = null,

    pub const _desc_table = .{
        .FHNPAGIHINF = fd(9, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyCellUpdateNotify = struct {
    HGBIGBFGBOM: ?IAACCAFGEPI = null,

    pub const _desc_table = .{
        .HGBIGBFGBOM = fd(10, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyRollDiceCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyRollDiceScRsp = struct {
    BLHIABBKGPB: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .BLHIABBKGPB = fd(6, .{ .Varint = .Simple }),
        .retcode = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyCheatDiceCsReq = struct {
    OCFHHDCBFBH: u32 = 0,

    pub const _desc_table = .{
        .OCFHHDCBFBH = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyCheatDiceScRsp = struct {
    OCFHHDCBFBH: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .OCFHHDCBFBH = fd(5, .{ .Varint = .Simple }),
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyMoveCsReq = struct {
    CNIFHNBIOFJ: u32 = 0,
    DGBMDPBIALG: u32 = 0,

    pub const _desc_table = .{
        .CNIFHNBIOFJ = fd(7, .{ .Varint = .Simple }),
        .DGBMDPBIALG = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyMoveScRsp = struct {
    retcode: u32 = 0,
    rogue_map: ?JAJGKKDPALC = null,
    HECJNJNIAKK: ArrayList(IAACCAFGEPI),

    pub const _desc_table = .{
        .retcode = fd(6, .{ .Varint = .Simple }),
        .rogue_map = fd(9, .{ .SubMessage = {} }),
        .HECJNJNIAKK = fd(11, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolySelectOptionCsReq = struct {
    option_id: u32 = 0,
    event_id: u32 = 0,

    pub const _desc_table = .{
        .option_id = fd(15, .{ .Varint = .Simple }),
        .event_id = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DDCELCOJGNP = struct {
    option_id: u32 = 0,
    LGIIAHIDLMG: u32 = 0,
    event_id: u32 = 0,

    pub const _desc_table = .{
        .option_id = fd(11, .{ .Varint = .Simple }),
        .LGIIAHIDLMG = fd(1, .{ .Varint = .Simple }),
        .event_id = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolySelectOptionScRsp = struct {
    event_id: u32 = 0,
    option_id: u32 = 0,
    ABNOINLOKLN: ArrayList(DDCELCOJGNP),
    GPFGDOKNGEL: ?LBENAAHCPEO = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .event_id = fd(1, .{ .Varint = .Simple }),
        .option_id = fd(15, .{ .Varint = .Simple }),
        .ABNOINLOKLN = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .GPFGDOKNGEL = fd(2, .{ .SubMessage = {} }),
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyRollRandomCsReq = struct {
    event_id: u32 = 0,

    pub const _desc_table = .{
        .event_id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyRollRandomScRsp = struct {
    event_id: u32 = 0,
    GPFGDOKNGEL: ?LBENAAHCPEO = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .event_id = fd(8, .{ .Varint = .Simple }),
        .GPFGDOKNGEL = fd(3, .{ .SubMessage = {} }),
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyReRollRandomCsReq = struct {
    event_id: u32 = 0,

    pub const _desc_table = .{
        .event_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyReRollRandomScRsp = struct {
    GPFGDOKNGEL: ?LBENAAHCPEO = null,
    retcode: u32 = 0,
    event_id: u32 = 0,

    pub const _desc_table = .{
        .GPFGDOKNGEL = fd(4, .{ .SubMessage = {} }),
        .retcode = fd(3, .{ .Varint = .Simple }),
        .event_id = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyConfirmRandomCsReq = struct {
    event_id: u32 = 0,

    pub const _desc_table = .{
        .event_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyConfirmRandomScRsp = struct {
    retcode: u32 = 0,
    event_id: u32 = 0,
    GPFGDOKNGEL: ?LBENAAHCPEO = null,

    pub const _desc_table = .{
        .retcode = fd(8, .{ .Varint = .Simple }),
        .event_id = fd(7, .{ .Varint = .Simple }),
        .GPFGDOKNGEL = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyBuyGoodsCsReq = struct {
    shop_id: u32 = 0,
    goods_id: u32 = 0,

    pub const _desc_table = .{
        .shop_id = fd(15, .{ .Varint = .Simple }),
        .goods_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyBuyGoodsScRsp = struct {
    goods_id: u32 = 0,
    retcode: u32 = 0,
    shop_id: u32 = 0,

    pub const _desc_table = .{
        .goods_id = fd(11, .{ .Varint = .Simple }),
        .retcode = fd(15, .{ .Varint = .Simple }),
        .shop_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyUpgradeAssetCsReq = struct {
    PAGCAMAGFLB: u32 = 0,

    pub const _desc_table = .{
        .PAGCAMAGFLB = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyUpgradeAssetScRsp = struct {
    PAGCAMAGFLB: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .PAGCAMAGFLB = fd(11, .{ .Varint = .Simple }),
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyGiveUpCurContentCsReq = struct {
    content_id: u32 = 0,

    pub const _desc_table = .{
        .content_id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyGiveUpCurContentScRsp = struct {
    content_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .content_id = fd(1, .{ .Varint = .Simple }),
        .retcode = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyActionResult = struct {
    effect_type: u32 = 0,
    source_type: GKEJFKAKENM = @enumFromInt(0),
    click_cell_id: u32 = 0,
    detail: ?NIBJAMFMEFD = null,
    trigger_map_id: u32 = 0,
    trigger_cell_id: u32 = 0,
    click_map_id: u32 = 0,

    pub const _desc_table = .{
        .effect_type = fd(1, .{ .Varint = .Simple }),
        .source_type = fd(9, .{ .Varint = .Simple }),
        .click_cell_id = fd(14, .{ .Varint = .Simple }),
        .detail = fd(4, .{ .SubMessage = {} }),
        .trigger_map_id = fd(11, .{ .Varint = .Simple }),
        .trigger_cell_id = fd(8, .{ .Varint = .Simple }),
        .click_map_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyActionResultScNotify = struct {
    PFNOKNCDPGE: ArrayList(MonopolyActionResult),

    pub const _desc_table = .{
        .PFNOKNCDPGE = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LMMEBMBGLDN = struct {
    HKMIHEJCAEM: u32 = 0,
    BLHDOHMACBM: bool = false,

    pub const _desc_table = .{
        .HKMIHEJCAEM = fd(9, .{ .Varint = .Simple }),
        .BLHDOHMACBM = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NIBJAMFMEFD = struct {
    FBKHKLGJMFH: ?FBKHKLGJMFH_union,

    pub const _FBKHKLGJMFH_case = enum {
        MECLLCDABNO,
        FFIPKMHCKHJ,
        NFBCGKNOPDA,
        DACHANHPPBG,
        get_buff_list,
        remove_buff_list,
        DMDPCOOAFJK,
        HHIBFNAGKFF,
        NKCMGBCPJGG,
        HANOGACJPKB,
        OMFECIMLADC,
        NGONCCBLAOL,
        FJGHNLNJLPH,
    };
    pub const FBKHKLGJMFH_union = union(_FBKHKLGJMFH_case) {
        MECLLCDABNO: LMKAAEFPFFO,
        FFIPKMHCKHJ: LMKAAEFPFFO,
        NFBCGKNOPDA: AIDFBBIAPEP,
        DACHANHPPBG: AIDFBBIAPEP,
        get_buff_list: BMPLFJKEOLF,
        remove_buff_list: BMPLFJKEOLF,
        DMDPCOOAFJK: LNKMKNBPIJH,
        HHIBFNAGKFF: LNKMKNBPIJH,
        NKCMGBCPJGG: LMMEBMBGLDN,
        HANOGACJPKB: LPBAMOKKJCM,
        OMFECIMLADC: BMPLFJKEOLF,
        NGONCCBLAOL: LNKMKNBPIJH,
        FJGHNLNJLPH: NMGHFOLKFAJ,
        pub const _union_desc = .{
            .MECLLCDABNO = fd(10, .{ .SubMessage = {} }),
            .FFIPKMHCKHJ = fd(1, .{ .SubMessage = {} }),
            .NFBCGKNOPDA = fd(6, .{ .SubMessage = {} }),
            .DACHANHPPBG = fd(12, .{ .SubMessage = {} }),
            .get_buff_list = fd(11, .{ .SubMessage = {} }),
            .remove_buff_list = fd(13, .{ .SubMessage = {} }),
            .DMDPCOOAFJK = fd(9, .{ .SubMessage = {} }),
            .HHIBFNAGKFF = fd(7, .{ .SubMessage = {} }),
            .NKCMGBCPJGG = fd(8, .{ .SubMessage = {} }),
            .HANOGACJPKB = fd(2, .{ .SubMessage = {} }),
            .OMFECIMLADC = fd(15, .{ .SubMessage = {} }),
            .NGONCCBLAOL = fd(14, .{ .SubMessage = {} }),
            .FJGHNLNJLPH = fd(3, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .FBKHKLGJMFH = fd(null, .{ .OneOf = FBKHKLGJMFH_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NMGHFOLKFAJ = struct {
    GJLKOGGIIFO: u32 = 0,

    pub const _desc_table = .{
        .GJLKOGGIIFO = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LMKAAEFPFFO = struct {
    item_id: u32 = 0,
    BMALPKEKBEL: u32 = 0,
    OGJOFMCMFPG: u32 = 0,

    pub const _desc_table = .{
        .item_id = fd(9, .{ .Varint = .Simple }),
        .BMALPKEKBEL = fd(11, .{ .Varint = .Simple }),
        .OGJOFMCMFPG = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LNKMKNBPIJH = struct {
    IGDBOFCDJOL: u32 = 0,
    OGNKMDNJGOG: u32 = 0,

    pub const _desc_table = .{
        .IGDBOFCDJOL = fd(9, .{ .Varint = .Simple }),
        .OGNKMDNJGOG = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LPBAMOKKJCM = struct {
    NJDGGJBEFCN: u32 = 0,
    MDFLFLLMGNA: u32 = 0,
    HNLFMJOKNBN: u32 = 0,
    KNGGPPIOGAE: u32 = 0,

    pub const _desc_table = .{
        .NJDGGJBEFCN = fd(14, .{ .Varint = .Simple }),
        .MDFLFLLMGNA = fd(7, .{ .Varint = .Simple }),
        .HNLFMJOKNBN = fd(2, .{ .Varint = .Simple }),
        .KNGGPPIOGAE = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HAKNOFDPBOD = struct {
    FPOGIALMCIP: u32 = 0,
    ACDOPCBMPNL: u32 = 0,
    config_id: u32 = 0,
    NGIKDJMNGBG: ?NGIKDJMNGBG_union,

    pub const _NGIKDJMNGBG_case = enum {
        EJCOLGNJGDC,
        LKANIPLNKGC,
        BDEMPAKHGMJ,
    };
    pub const NGIKDJMNGBG_union = union(_NGIKDJMNGBG_case) {
        EJCOLGNJGDC: GJKIAPIPGAN,
        LKANIPLNKGC: EIMOBGLLEFO,
        BDEMPAKHGMJ: EOPFMPAOOJE,
        pub const _union_desc = .{
            .EJCOLGNJGDC = fd(1, .{ .SubMessage = {} }),
            .LKANIPLNKGC = fd(10, .{ .SubMessage = {} }),
            .BDEMPAKHGMJ = fd(8, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .FPOGIALMCIP = fd(4, .{ .Varint = .Simple }),
        .ACDOPCBMPNL = fd(13, .{ .Varint = .Simple }),
        .config_id = fd(14, .{ .Varint = .Simple }),
        .NGIKDJMNGBG = fd(null, .{ .OneOf = NGIKDJMNGBG_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HFDGMJJFOHM = struct {
    NPOIGJPCGFB: ?LMMEBMBGLDN = null,
    AJCINKHBDJB: ?HAKNOFDPBOD = null,
    PEFMDFKECOD: ArrayList(HAKNOFDPBOD),

    pub const _desc_table = .{
        .NPOIGJPCGFB = fd(1, .{ .SubMessage = {} }),
        .AJCINKHBDJB = fd(2, .{ .SubMessage = {} }),
        .PEFMDFKECOD = fd(12, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyGameSettleScNotify = struct {
    PEMIJIMJMIO: ?ItemList = null,
    GAJBFPCPIGM: ?HAKNOFDPBOD = null,
    item_list: ?ItemList = null,

    pub const _desc_table = .{
        .PEMIJIMJMIO = fd(14, .{ .SubMessage = {} }),
        .GAJBFPCPIGM = fd(11, .{ .SubMessage = {} }),
        .item_list = fd(15, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyGameCreateScNotify = struct {
    NPOIGJPCGFB: ?LMMEBMBGLDN = null,
    GAJBFPCPIGM: ?HAKNOFDPBOD = null,

    pub const _desc_table = .{
        .NPOIGJPCGFB = fd(2, .{ .SubMessage = {} }),
        .GAJBFPCPIGM = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyGameRaiseRatioCsReq = struct {
    ACDOPCBMPNL: u32 = 0,

    pub const _desc_table = .{
        .ACDOPCBMPNL = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyGameRaiseRatioScRsp = struct {
    retcode: u32 = 0,
    ratio: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(8, .{ .Varint = .Simple }),
        .ratio = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DailyFirstEnterMonopolyActivityCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DailyFirstEnterMonopolyActivityScRsp = struct {
    OICAGHGMMFP: bool = false,
    KEKJCDMIDDL: u32 = 0,
    retcode: u32 = 0,
    LJAOGAPDFHA: ?AEDKPBFCKGO = null,
    IIHKIKLIOJI: i64 = 0,

    pub const _desc_table = .{
        .OICAGHGMMFP = fd(2, .{ .Varint = .Simple }),
        .KEKJCDMIDDL = fd(14, .{ .Varint = .Simple }),
        .retcode = fd(15, .{ .Varint = .Simple }),
        .LJAOGAPDFHA = fd(7, .{ .SubMessage = {} }),
        .IIHKIKLIOJI = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyGetDailyInitItemCsReq = struct {
    IFHPJJBLNDL: bool = false,

    pub const _desc_table = .{
        .IFHPJJBLNDL = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyGetDailyInitItemScRsp = struct {
    IIHKIKLIOJI: i64 = 0,
    IOABHFPABBE: u32 = 0,
    OFGNIGNOHAF: u32 = 0,
    HEOOFPGKDCD: u32 = 0,
    retcode: u32 = 0,
    HBFFFGPJKIC: u32 = 0,
    HCDBBFLPCFL: u32 = 0,

    pub const _desc_table = .{
        .IIHKIKLIOJI = fd(13, .{ .Varint = .Simple }),
        .IOABHFPABBE = fd(8, .{ .Varint = .Simple }),
        .OFGNIGNOHAF = fd(7, .{ .Varint = .Simple }),
        .HEOOFPGKDCD = fd(11, .{ .Varint = .Simple }),
        .retcode = fd(4, .{ .Varint = .Simple }),
        .HBFFFGPJKIC = fd(10, .{ .Varint = .Simple }),
        .HCDBBFLPCFL = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GJKIAPIPGAN = struct {
    OEFJMEFPIPL: u32 = 0,
    POGEMMICILA: ArrayList(u32),
    FHBOPEPJAEN: ArrayList(u32),
    NFEADMFNFLK: bool = false,
    LEGHKNNKOMG: ArrayList(u32),

    pub const _desc_table = .{
        .OEFJMEFPIPL = fd(1, .{ .Varint = .Simple }),
        .POGEMMICILA = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .FHBOPEPJAEN = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .NFEADMFNFLK = fd(12, .{ .Varint = .Simple }),
        .LEGHKNNKOMG = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyGameBingoFlipCardCsReq = struct {
    HCFPOFMDGKN: u32 = 0,

    pub const _desc_table = .{
        .HCFPOFMDGKN = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyGameBingoFlipCardScRsp = struct {
    NFEADMFNFLK: bool = false,
    retcode: u32 = 0,
    LEGHKNNKOMG: ArrayList(u32),
    NPJEECEDPOK: u32 = 0,

    pub const _desc_table = .{
        .NFEADMFNFLK = fd(15, .{ .Varint = .Simple }),
        .retcode = fd(10, .{ .Varint = .Simple }),
        .LEGHKNNKOMG = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        .NPJEECEDPOK = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyGameGachaCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyGameGachaScRsp = struct {
    retcode: u32 = 0,
    result_list: ArrayList(u32),

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
        .result_list = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NKACIMEOAPD = struct {
    IBADOBADHJH: u32 = 0,
    POGJHKFBMCH: u32 = 0,

    pub const _desc_table = .{
        .IBADOBADHJH = fd(3, .{ .Varint = .Simple }),
        .POGJHKFBMCH = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EIMOBGLLEFO = struct {
    NDGGACPICBF: ArrayList(NKACIMEOAPD),
    HPNHHCMKJCB: ArrayList(u32),
    OHLEPKEKMNH: u32 = 0,
    EAEJLOFGAFO: u32 = 0,
    CHJNGDIOOME: u32 = 0,
    BHPFPEJBKEC: u32 = 0,

    pub const _desc_table = .{
        .NDGGACPICBF = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .HPNHHCMKJCB = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
        .OHLEPKEKMNH = fd(4, .{ .Varint = .Simple }),
        .EAEJLOFGAFO = fd(10, .{ .Varint = .Simple }),
        .CHJNGDIOOME = fd(11, .{ .Varint = .Simple }),
        .BHPFPEJBKEC = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyAcceptQuizCsReq = struct {
    NDGGACPICBF: ArrayList(NKACIMEOAPD),

    pub const _desc_table = .{
        .NDGGACPICBF = fd(12, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyAcceptQuizScRsp = struct {
    LKANIPLNKGC: ?EIMOBGLLEFO = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .LKANIPLNKGC = fd(5, .{ .SubMessage = {} }),
        .retcode = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OOCKALNFHNP = struct {
    CHJNGDIOOME: u32 = 0,
    BGBIHIDHCON: u32 = 0,
    HMCJOBJBPKJ: u32 = 0,

    pub const _desc_table = .{
        .CHJNGDIOOME = fd(11, .{ .Varint = .Simple }),
        .BGBIHIDHCON = fd(13, .{ .Varint = .Simple }),
        .HMCJOBJBPKJ = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyQuizDurationChangeScNotify = struct {
    LEADMNEIMDP: ArrayList(OOCKALNFHNP),

    pub const _desc_table = .{
        .LEADMNEIMDP = fd(6, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EOPFMPAOOJE = struct {
    LOPDBAEGFKP: bool = false,
    PPCLBDBJLMO: u32 = 0,
    HMHJDBIFGDI: u32 = 0,

    pub const _desc_table = .{
        .LOPDBAEGFKP = fd(6, .{ .Varint = .Simple }),
        .PPCLBDBJLMO = fd(8, .{ .Varint = .Simple }),
        .HMHJDBIFGDI = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyGuessChooseCsReq = struct {
    HMHJDBIFGDI: u32 = 0,

    pub const _desc_table = .{
        .HMHJDBIFGDI = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyGuessChooseScRsp = struct {
    HMHJDBIFGDI: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .HMHJDBIFGDI = fd(5, .{ .Varint = .Simple }),
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ACKNCAAAMJM = struct {
    PPCLBDBJLMO: u32 = 0,
    item_list: ?ItemList = null,
    GIACFCDDJNM: u32 = 0,

    pub const _desc_table = .{
        .PPCLBDBJLMO = fd(15, .{ .Varint = .Simple }),
        .item_list = fd(14, .{ .SubMessage = {} }),
        .GIACFCDDJNM = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyGuessDrawScNotify = struct {
    JHIIKPEJEIE: ArrayList(ACKNCAAAMJM),

    pub const _desc_table = .{
        .JHIIKPEJEIE = fd(6, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyGuessBuyInformationCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyGuessBuyInformationScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AIDFBBIAPEP = struct {
    level: u32 = 0,
    MILKEACFLPO: u32 = 0,
    PAGCAMAGFLB: u32 = 0,

    pub const _desc_table = .{
        .level = fd(13, .{ .Varint = .Simple }),
        .MILKEACFLPO = fd(6, .{ .Varint = .Simple }),
        .PAGCAMAGFLB = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CANNIBGCLCL = struct {
    MAGEFLJGJND: ArrayList(AIDFBBIAPEP),

    pub const _desc_table = .{
        .MAGEFLJGJND = fd(11, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AEDKPBFCKGO = struct {
    FNIGPGBGEHN: u32 = 0,
    IFKDGEBCDEG: u32 = 0,
    GIMDHBNJOOO: u32 = 0,
    EFINFPKKJLE: u32 = 0,
    PILAAGOKAOF: u32 = 0,
    IMOBLGOAJCB: bool = false,
    PKDLKCBKKPF: u32 = 0,
    PDDNGKNCPEB: u32 = 0,
    KMGIEMOFOGB: u32 = 0,

    pub const _desc_table = .{
        .FNIGPGBGEHN = fd(13, .{ .Varint = .Simple }),
        .IFKDGEBCDEG = fd(2, .{ .Varint = .Simple }),
        .GIMDHBNJOOO = fd(3, .{ .Varint = .Simple }),
        .EFINFPKKJLE = fd(8, .{ .Varint = .Simple }),
        .PILAAGOKAOF = fd(6, .{ .Varint = .Simple }),
        .IMOBLGOAJCB = fd(10, .{ .Varint = .Simple }),
        .PKDLKCBKKPF = fd(5, .{ .Varint = .Simple }),
        .PDDNGKNCPEB = fd(11, .{ .Varint = .Simple }),
        .KMGIEMOFOGB = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyDailySettleScNotify = struct {
    LJAOGAPDFHA: ?AEDKPBFCKGO = null,
    KEKJCDMIDDL: u32 = 0,

    pub const _desc_table = .{
        .LJAOGAPDFHA = fd(1, .{ .SubMessage = {} }),
        .KEKJCDMIDDL = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BMPLFJKEOLF = struct {
    buff_id: u32 = 0,
    OKDLMEJPCHE: u32 = 0,
    COFFEBNIBHK: u32 = 0,

    pub const _desc_table = .{
        .buff_id = fd(11, .{ .Varint = .Simple }),
        .OKDLMEJPCHE = fd(8, .{ .Varint = .Simple }),
        .COFFEBNIBHK = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AFDALBGANPC = struct {
    buff_list: ArrayList(BMPLFJKEOLF),

    pub const _desc_table = .{
        .buff_list = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const INDGLKCECDC = struct {
    FNIGPGBGEHN: u32 = 0,
    HDILBDIPGHO: u32 = 0,
    DPJKOJGCJLP: u32 = 0,
    uid: u32 = 0,
    PILAAGOKAOF: u32 = 0,

    pub const _desc_table = .{
        .FNIGPGBGEHN = fd(4, .{ .Varint = .Simple }),
        .HDILBDIPGHO = fd(12, .{ .Varint = .Simple }),
        .DPJKOJGCJLP = fd(6, .{ .Varint = .Simple }),
        .uid = fd(7, .{ .Varint = .Simple }),
        .PILAAGOKAOF = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMonopolyFriendRankingListCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMonopolyFriendRankingListScRsp = struct {
    retcode: u32 = 0,
    DCFHGAAJLNN: ArrayList(INDGLKCECDC),
    ICMGEGEFDLE: ?INDGLKCECDC = null,

    pub const _desc_table = .{
        .retcode = fd(4, .{ .Varint = .Simple }),
        .DCFHGAAJLNN = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .ICMGEGEFDLE = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyLikeCsReq = struct {
    CBEGNBKMHCD: u32 = 0,

    pub const _desc_table = .{
        .CBEGNBKMHCD = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyLikeScRsp = struct {
    reward_list: ?ItemList = null,
    CBEGNBKMHCD: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .reward_list = fd(4, .{ .SubMessage = {} }),
        .CBEGNBKMHCD = fd(12, .{ .Varint = .Simple }),
        .retcode = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyLikeScNotify = struct {
    OFIODJNLBEA: ArrayList(u32),
    HDILBDIPGHO: u32 = 0,

    pub const _desc_table = .{
        .OFIODJNLBEA = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .HDILBDIPGHO = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMbtiReportCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MFDKINPDMKE = struct {
    cnt: u32 = 0,
    FIOEPGPEBFD: u32 = 0,

    pub const _desc_table = .{
        .cnt = fd(6, .{ .Varint = .Simple }),
        .FIOEPGPEBFD = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMbtiReportScRsp = struct {
    ABNOINLOKLN: ArrayList(DDCELCOJGNP),
    PHNKKELLANM: i32 = 0,
    PCADCGCELIN: bool = false,
    retcode: u32 = 0,
    progress: u32 = 0,
    is_taken_reward: bool = false,
    GMDHHOGBACN: ArrayList(MFDKINPDMKE),
    LJHAIFCIABH: i32 = 0,

    pub const _desc_table = .{
        .ABNOINLOKLN = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .PHNKKELLANM = fd(3, .{ .Varint = .Simple }),
        .PCADCGCELIN = fd(11, .{ .Varint = .Simple }),
        .retcode = fd(14, .{ .Varint = .Simple }),
        .progress = fd(12, .{ .Varint = .Simple }),
        .is_taken_reward = fd(2, .{ .Varint = .Simple }),
        .GMDHHOGBACN = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .LJHAIFCIABH = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyEventSelectFriendCsReq = struct {
    BAGMAOIPMJE: bool = false,
    IPGECLELHGJ: u32 = 0,

    pub const _desc_table = .{
        .BAGMAOIPMJE = fd(2, .{ .Varint = .Simple }),
        .IPGECLELHGJ = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyEventSelectFriendScRsp = struct {
    HGBIGBFGBOM: ?IAACCAFGEPI = null,
    get_item_list: u32 = 0,
    retcode: u32 = 0,
    OEFHMBJBLGC: u32 = 0,

    pub const _desc_table = .{
        .HGBIGBFGBOM = fd(14, .{ .SubMessage = {} }),
        .get_item_list = fd(6, .{ .Varint = .Simple }),
        .retcode = fd(8, .{ .Varint = .Simple }),
        .OEFHMBJBLGC = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SocialEventServerCache = struct {
    sub_coin: u32 = 0,
    add_coin: u32 = 0,
    src_uid: u32 = 0,
    id: u32 = 0,

    pub const _desc_table = .{
        .sub_coin = fd(9, .{ .Varint = .Simple }),
        .add_coin = fd(2, .{ .Varint = .Simple }),
        .src_uid = fd(3, .{ .Varint = .Simple }),
        .id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolySocialEventEffectScNotify = struct {
    MIAEAFFDGMH: ArrayList(SocialEventServerCache),

    pub const _desc_table = .{
        .MIAEAFFDGMH = fd(14, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetSocialEventServerCacheCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetSocialEventServerCacheScRsp = struct {
    retcode: u32 = 0,
    MIAEAFFDGMH: ArrayList(SocialEventServerCache),

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
        .MIAEAFFDGMH = fd(13, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DeleteSocialEventServerCacheCsReq = struct {
    JIDDLNHJNPB: ArrayList(u32),

    pub const _desc_table = .{
        .JIDDLNHJNPB = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DeleteSocialEventServerCacheScRsp = struct {
    BFGJMMPCPNJ: ArrayList(u32),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .BFGJMMPCPNJ = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyGetRaffleTicketCsReq = struct {
    HHJPBLEKAPN: u32 = 0,

    pub const _desc_table = .{
        .HHJPBLEKAPN = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyGetRaffleTicketScRsp = struct {
    retcode: u32 = 0,
    BLMEDLNOKEI: ArrayList(LAILNIGFPOO),
    HHJPBLEKAPN: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
        .BLMEDLNOKEI = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .HHJPBLEKAPN = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyTakeRaffleTicketRewardCsReq = struct {
    HHJPBLEKAPN: u32 = 0,
    PMELCDFHGKC: u64 = 0,

    pub const _desc_table = .{
        .HHJPBLEKAPN = fd(6, .{ .Varint = .Simple }),
        .PMELCDFHGKC = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyTakeRaffleTicketRewardScRsp = struct {
    PMELCDFHGKC: u32 = 0,
    HHJPBLEKAPN: u32 = 0,
    reward_list: ?ItemList = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .PMELCDFHGKC = fd(8, .{ .Varint = .Simple }),
        .HHJPBLEKAPN = fd(2, .{ .Varint = .Simple }),
        .reward_list = fd(5, .{ .SubMessage = {} }),
        .retcode = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyScrachRaffleTicketCsReq = struct {
    HHJPBLEKAPN: u32 = 0,
    PMELCDFHGKC: u64 = 0,

    pub const _desc_table = .{
        .HHJPBLEKAPN = fd(4, .{ .Varint = .Simple }),
        .PMELCDFHGKC = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyScrachRaffleTicketScRsp = struct {
    HHJPBLEKAPN: u32 = 0,
    PMELCDFHGKC: u64 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .HHJPBLEKAPN = fd(5, .{ .Varint = .Simple }),
        .PMELCDFHGKC = fd(11, .{ .Varint = .Simple }),
        .retcode = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyGetRegionProgressCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyGetRegionProgressScRsp = struct {
    retcode: u32 = 0,
    DPJKOJGCJLP: u32 = 0,
    EIMGBKNLGNF: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(13, .{ .Varint = .Simple }),
        .DPJKOJGCJLP = fd(7, .{ .Varint = .Simple }),
        .EIMGBKNLGNF = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyGetRafflePoolInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyGetRafflePoolInfoScRsp = struct {
    IEDGKHDJJDC: ?EDKGOMNEHOH = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .IEDGKHDJJDC = fd(8, .{ .SubMessage = {} }),
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyTakePhaseRewardCsReq = struct {
    LJBGJHPKKJJ: ArrayList(u32),

    pub const _desc_table = .{
        .LJBGJHPKKJJ = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyTakePhaseRewardScRsp = struct {
    LJBGJHPKKJJ: ArrayList(u32),
    reward_list: ?ItemList = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .LJBGJHPKKJJ = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
        .reward_list = fd(9, .{ .SubMessage = {} }),
        .retcode = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMonopolyMbtiReportRewardCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMonopolyMbtiReportRewardScRsp = struct {
    retcode: u32 = 0,
    reward_list: ?ItemList = null,

    pub const _desc_table = .{
        .retcode = fd(6, .{ .Varint = .Simple }),
        .reward_list = fd(11, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMonopolyDailyReportCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMonopolyDailyReportScRsp = struct {
    retcode: u32 = 0,
    LJAOGAPDFHA: ?AEDKPBFCKGO = null,

    pub const _desc_table = .{
        .retcode = fd(8, .{ .Varint = .Simple }),
        .LJAOGAPDFHA = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyClickCellCsReq = struct {
    cell_id: u32 = 0,
    map_id: u32 = 0,

    pub const _desc_table = .{
        .cell_id = fd(10, .{ .Varint = .Simple }),
        .map_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyClickCellScRsp = struct {
    cell_id: u32 = 0,
    retcode: u32 = 0,
    map_id: u32 = 0,

    pub const _desc_table = .{
        .cell_id = fd(10, .{ .Varint = .Simple }),
        .retcode = fd(1, .{ .Varint = .Simple }),
        .map_id = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyClickMbtiReportCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonopolyClickMbtiReportScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MultiplayerFightGameStateCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MultiplayerFightGameStateScRsp = struct {
    LIPJDJPMOKB: ArrayList(CBBDIOMIFHD),
    PFFFJNGNPOM: ?PPGGKMDAOEA = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .LIPJDJPMOKB = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .PFFFJNGNPOM = fd(1, .{ .SubMessage = {} }),
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MultiplayerGetFightGateCsReq = struct {
    player_data: u32 = 0,

    pub const _desc_table = .{
        .player_data = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MultiplayerGetFightGateScRsp = struct {
    ip: ManagedString = .Empty,
    NOGFEEMNHPC: u64 = 0,
    retcode: u32 = 0,
    port: u32 = 0,
    AOKCMMPFGBC: ManagedString = .Empty,

    pub const _desc_table = .{
        .ip = fd(6, .String),
        .NOGFEEMNHPC = fd(3, .{ .Varint = .Simple }),
        .retcode = fd(1, .{ .Varint = .Simple }),
        .port = fd(10, .{ .Varint = .Simple }),
        .AOKCMMPFGBC = fd(9, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MultiplayerFightGiveUpCsReq = struct {
    NOGFEEMNHPC: u64 = 0,

    pub const _desc_table = .{
        .NOGFEEMNHPC = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MultiplayerFightGiveUpScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MultiplayerFightGameStartScNotify = struct {
    LIPJDJPMOKB: ArrayList(CBBDIOMIFHD),
    PFFFJNGNPOM: ?PPGGKMDAOEA = null,

    pub const _desc_table = .{
        .LIPJDJPMOKB = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .PFFFJNGNPOM = fd(9, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MultiplayerFightGameFinishScNotify = struct {
    PFFFJNGNPOM: ?PPGGKMDAOEA = null,

    pub const _desc_table = .{
        .PFFFJNGNPOM = fd(4, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MultiplayerMatch3FinishScNotify = struct {
    reason: Match3FinishReason = @enumFromInt(0),
    NIAEGHJLNMB: ?CDIMEMFJJFP = null,
    KOJIHJIHKIA: u32 = 0,
    FDGDOKAFBDH: u32 = 0,

    pub const _desc_table = .{
        .reason = fd(14, .{ .Varint = .Simple }),
        .NIAEGHJLNMB = fd(13, .{ .SubMessage = {} }),
        .KOJIHJIHKIA = fd(15, .{ .Varint = .Simple }),
        .FDGDOKAFBDH = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMultipleDropInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ECCNNONKFCA = struct {
    id: u32 = 0,
    OLALHIKMJOP: u32 = 0,

    pub const _desc_table = .{
        .id = fd(8, .{ .Varint = .Simple }),
        .OLALHIKMJOP = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMultipleDropInfoScRsp = struct {
    retcode: u32 = 0,
    FCHNNKEKFCL: ArrayList(OHDNCHFGFMA),
    LJCPDMNKJIF: ArrayList(ECCNNONKFCA),

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
        .FCHNNKEKFCL = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .LJCPDMNKJIF = fd(14, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MultipleDropInfoScNotify = struct {
    LJCPDMNKJIF: ArrayList(ECCNNONKFCA),

    pub const _desc_table = .{
        .LJCPDMNKJIF = fd(13, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPlayerReturnMultiDropInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JBFIPIJJIDL = struct {
    DKJGCBJKEEN: u32 = 0,
    panel_id: u32 = 0,
    PJHDJKMJPKH: u32 = 0,
    LJKFFDMHOJH: u32 = 0,

    pub const _desc_table = .{
        .DKJGCBJKEEN = fd(6, .{ .Varint = .Simple }),
        .panel_id = fd(4, .{ .Varint = .Simple }),
        .PJHDJKMJPKH = fd(11, .{ .Varint = .Simple }),
        .LJKFFDMHOJH = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OHDNCHFGFMA = struct {
    panel_id: u32 = 0,
    BJFBGLBJBNN: u32 = 0,
    LCLMHEGDGGB: u32 = 0,
    durability: u32 = 0,

    pub const _desc_table = .{
        .panel_id = fd(9, .{ .Varint = .Simple }),
        .BJFBGLBJBNN = fd(11, .{ .Varint = .Simple }),
        .LCLMHEGDGGB = fd(13, .{ .Varint = .Simple }),
        .durability = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPlayerReturnMultiDropInfoScRsp = struct {
    IKGFOEJPJCF: ?JBFIPIJJIDL = null,
    retcode: u32 = 0,
    FCHNNKEKFCL: ArrayList(OHDNCHFGFMA),

    pub const _desc_table = .{
        .IKGFOEJPJCF = fd(12, .{ .SubMessage = {} }),
        .retcode = fd(9, .{ .Varint = .Simple }),
        .FCHNNKEKFCL = fd(8, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MultipleDropInfoNotify = struct {
    FCHNNKEKFCL: ArrayList(OHDNCHFGFMA),
    PONJJNDDKBH: ArrayList(JBFIPIJJIDL),
    LJCPDMNKJIF: ArrayList(ECCNNONKFCA),

    pub const _desc_table = .{
        .FCHNNKEKFCL = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .PONJJNDDKBH = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .LJCPDMNKJIF = fd(4, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OPGJGDOGGNJ = struct {
    pos: KAMLGLMNJGJ = @enumFromInt(0),
    BDJCGCDJOEO: u32 = 0,

    pub const _desc_table = .{
        .pos = fd(10, .{ .Varint = .Simple }),
        .BDJCGCDJOEO = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JMEAOCPFEOL = struct {
    HJJFMDHEAPB: u32 = 0,
    BOJMNAFDJKH: ArrayList(OPGJGDOGGNJ),
    level: u32 = 0,
    CDNNGAGBAAK: u32 = 0,
    HIHLGAGHLNI: u32 = 0,
    area_id: u32 = 0,

    pub const _desc_table = .{
        .HJJFMDHEAPB = fd(14, .{ .Varint = .Simple }),
        .BOJMNAFDJKH = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .level = fd(12, .{ .Varint = .Simple }),
        .CDNNGAGBAAK = fd(6, .{ .Varint = .Simple }),
        .HIHLGAGHLNI = fd(2, .{ .Varint = .Simple }),
        .area_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PANAIJBJMEN = struct {
    BELEODAIINB: u32 = 0,
    is_finish: bool = false,

    pub const _desc_table = .{
        .BELEODAIINB = fd(13, .{ .Varint = .Simple }),
        .is_finish = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DOLGFNLHEAE = struct {
    GGFDDEJHLIF: u32 = 0,
    FNPPHMBLKOA: u32 = 0,
    FILEDDCMDOC: u32 = 0,
    FMBFBGNABOC: ArrayList(PANAIJBJMEN),
    PNGDDNAJCGG: u32 = 0,
    DCEHOGAGKOM: u32 = 0,

    pub const _desc_table = .{
        .GGFDDEJHLIF = fd(13, .{ .Varint = .Simple }),
        .FNPPHMBLKOA = fd(6, .{ .Varint = .Simple }),
        .FILEDDCMDOC = fd(2, .{ .Varint = .Simple }),
        .FMBFBGNABOC = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .PNGDDNAJCGG = fd(15, .{ .Varint = .Simple }),
        .DCEHOGAGKOM = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OLKMLFEEFCJ = struct {
    LGKIIELGHDJ: u32 = 0,
    BDJCGCDJOEO: u32 = 0,

    pub const _desc_table = .{
        .LGKIIELGHDJ = fd(2, .{ .Varint = .Simple }),
        .BDJCGCDJOEO = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BLNEHDIFMOO = struct {
    HAABEFKHAMI: ArrayList(u32),
    DGJBACBIICO: u32 = 0,
    event_id: u32 = 0,
    BMBGKLKECAJ: u32 = 0,
    HCAGLCLEJND: u32 = 0,
    state: AIHADKBHPBM = @enumFromInt(0),
    COGBCPLMNFD: u32 = 0,

    pub const _desc_table = .{
        .HAABEFKHAMI = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .DGJBACBIICO = fd(6, .{ .Varint = .Simple }),
        .event_id = fd(11, .{ .Varint = .Simple }),
        .BMBGKLKECAJ = fd(4, .{ .Varint = .Simple }),
        .HCAGLCLEJND = fd(14, .{ .Varint = .Simple }),
        .state = fd(8, .{ .Varint = .Simple }),
        .COGBCPLMNFD = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JNBCPNCNOHO = struct {
    BJCMPHLPKNF: ArrayList(BLNEHDIFMOO),
    LHNJMBGNDKC: u32 = 0,
    PNJEEPOEMCA: ArrayList(u32),

    pub const _desc_table = .{
        .BJCMPHLPKNF = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .LHNJMBGNDKC = fd(1, .{ .Varint = .Simple }),
        .PNJEEPOEMCA = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMuseumInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetMuseumInfoScRsp = struct {
    KNDJAPNPAPK: ArrayList(u32),
    BOJMNAFDJKH: ArrayList(OLKMLFEEFCJ),
    JBJLDPPDBBC: u32 = 0,
    level: u32 = 0,
    HPNMPDOCJMA: u32 = 0,
    EKKOLCCCNNK: ?JNBCPNCNOHO = null,
    EJNKMKFFCCL: u32 = 0,
    area_list: ArrayList(JMEAOCPFEOL),
    cur_fund: u32 = 0,
    exp: u32 = 0,
    JPIBMBBKGND: ?DOLGFNLHEAE = null,
    EJKGHBEMOOB: u32 = 0,
    retcode: u32 = 0,
    KNDMDPEFADC: ArrayList(u32),

    pub const _desc_table = .{
        .KNDJAPNPAPK = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
        .BOJMNAFDJKH = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .JBJLDPPDBBC = fd(4, .{ .Varint = .Simple }),
        .level = fd(5, .{ .Varint = .Simple }),
        .HPNMPDOCJMA = fd(15, .{ .Varint = .Simple }),
        .EKKOLCCCNNK = fd(2, .{ .SubMessage = {} }),
        .EJNKMKFFCCL = fd(8, .{ .Varint = .Simple }),
        .area_list = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .cur_fund = fd(11, .{ .Varint = .Simple }),
        .exp = fd(10, .{ .Varint = .Simple }),
        .JPIBMBBKGND = fd(7, .{ .SubMessage = {} }),
        .EJKGHBEMOOB = fd(3, .{ .Varint = .Simple }),
        .retcode = fd(14, .{ .Varint = .Simple }),
        .KNDMDPEFADC = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BuyNpcStuffCsReq = struct {
    BDJCGCDJOEO: u32 = 0,

    pub const _desc_table = .{
        .BDJCGCDJOEO = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BuyNpcStuffScRsp = struct {
    retcode: u32 = 0,
    BDJCGCDJOEO: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(4, .{ .Varint = .Simple }),
        .BDJCGCDJOEO = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetStuffToAreaCsReq = struct {
    LGKIIELGHDJ: u32 = 0,
    BDJCGCDJOEO: u32 = 0,
    pos: KAMLGLMNJGJ = @enumFromInt(0),

    pub const _desc_table = .{
        .LGKIIELGHDJ = fd(10, .{ .Varint = .Simple }),
        .BDJCGCDJOEO = fd(15, .{ .Varint = .Simple }),
        .pos = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetStuffToAreaScRsp = struct {
    LGKIIELGHDJ: u32 = 0,
    pos: KAMLGLMNJGJ = @enumFromInt(0),
    BDJCGCDJOEO: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .LGKIIELGHDJ = fd(10, .{ .Varint = .Simple }),
        .pos = fd(8, .{ .Varint = .Simple }),
        .BDJCGCDJOEO = fd(7, .{ .Varint = .Simple }),
        .retcode = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RemoveStuffFromAreaCsReq = struct {
    BDJCGCDJOEO: u32 = 0,

    pub const _desc_table = .{
        .BDJCGCDJOEO = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RemoveStuffFromAreaScRsp = struct {
    retcode: u32 = 0,
    BDJCGCDJOEO: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
        .BDJCGCDJOEO = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetStuffScNotify = struct {
    BDJCGCDJOEO: u32 = 0,
    AOCELKONHOB: KGJJJKPDCFG = @enumFromInt(0),

    pub const _desc_table = .{
        .BDJCGCDJOEO = fd(1, .{ .Varint = .Simple }),
        .AOCELKONHOB = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetExhibitScNotify = struct {
    BCCGCFMABGM: u32 = 0,

    pub const _desc_table = .{
        .BCCGCFMABGM = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishCurTurnCsReq = struct {
    CCIECPFPFJG: u32 = 0,

    pub const _desc_table = .{
        .CCIECPFPFJG = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishCurTurnScRsp = struct {
    retcode: u32 = 0,
    GPOIECCPAMN: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(4, .{ .Varint = .Simple }),
        .GPOIECCPAMN = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpgradeAreaCsReq = struct {
    area_id: u32 = 0,
    level: u32 = 0,

    pub const _desc_table = .{
        .area_id = fd(11, .{ .Varint = .Simple }),
        .level = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpgradeAreaScRsp = struct {
    level: u32 = 0,
    retcode: u32 = 0,
    area_id: u32 = 0,

    pub const _desc_table = .{
        .level = fd(8, .{ .Varint = .Simple }),
        .retcode = fd(7, .{ .Varint = .Simple }),
        .area_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpgradeAreaStatCsReq = struct {
    area_id: u32 = 0,
    level: u32 = 0,
    BOJBPOELFCI: IBBGDGGHEJL = @enumFromInt(0),

    pub const _desc_table = .{
        .area_id = fd(12, .{ .Varint = .Simple }),
        .level = fd(8, .{ .Varint = .Simple }),
        .BOJBPOELFCI = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpgradeAreaStatScRsp = struct {
    BOJBPOELFCI: IBBGDGGHEJL = @enumFromInt(0),
    level: u32 = 0,
    retcode: u32 = 0,
    area_id: u32 = 0,

    pub const _desc_table = .{
        .BOJBPOELFCI = fd(12, .{ .Varint = .Simple }),
        .level = fd(4, .{ .Varint = .Simple }),
        .retcode = fd(15, .{ .Varint = .Simple }),
        .area_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MuseumInfoChangedScNotify = struct {
    exp: u32 = 0,
    cur_fund: u32 = 0,
    EKKOLCCCNNK: ?JNBCPNCNOHO = null,
    EJNKMKFFCCL: u32 = 0,
    JPIBMBBKGND: ?DOLGFNLHEAE = null,
    KNDJAPNPAPK: ArrayList(u32),
    KNDMDPEFADC: ArrayList(u32),
    HPNMPDOCJMA: u32 = 0,
    area_list: ArrayList(JMEAOCPFEOL),
    EJKGHBEMOOB: u32 = 0,
    BOJMNAFDJKH: ArrayList(OLKMLFEEFCJ),
    level: u32 = 0,
    JBJLDPPDBBC: u32 = 0,

    pub const _desc_table = .{
        .exp = fd(12, .{ .Varint = .Simple }),
        .cur_fund = fd(7, .{ .Varint = .Simple }),
        .EKKOLCCCNNK = fd(2, .{ .SubMessage = {} }),
        .EJNKMKFFCCL = fd(4, .{ .Varint = .Simple }),
        .JPIBMBBKGND = fd(3, .{ .SubMessage = {} }),
        .KNDJAPNPAPK = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
        .KNDMDPEFADC = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
        .HPNMPDOCJMA = fd(5, .{ .Varint = .Simple }),
        .area_list = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .EJKGHBEMOOB = fd(10, .{ .Varint = .Simple }),
        .BOJMNAFDJKH = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .level = fd(1, .{ .Varint = .Simple }),
        .JBJLDPPDBBC = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MuseumRandomEventStartScNotify = struct {
    HNDLHICDNPC: ?BLNEHDIFMOO = null,

    pub const _desc_table = .{
        .HNDLHICDNPC = fd(13, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MuseumRandomEventQueryCsReq = struct {
    CEHFIILMJKM: i32 = 0,

    pub const _desc_table = .{
        .CEHFIILMJKM = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MuseumRandomEventQueryScRsp = struct {
    retcode: u32 = 0,
    HNDLHICDNPC: ?JNBCPNCNOHO = null,

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
        .HNDLHICDNPC = fd(10, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MuseumRandomEventSelectCsReq = struct {
    event_id: u32 = 0,
    DGJBACBIICO: u32 = 0,

    pub const _desc_table = .{
        .event_id = fd(15, .{ .Varint = .Simple }),
        .DGJBACBIICO = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MuseumRandomEventSelectScRsp = struct {
    DGJBACBIICO: u32 = 0,
    retcode: u32 = 0,
    event_id: u32 = 0,

    pub const _desc_table = .{
        .DGJBACBIICO = fd(7, .{ .Varint = .Simple }),
        .retcode = fd(3, .{ .Varint = .Simple }),
        .event_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MuseumFundsChangedScNotify = struct {
    cur_fund: u32 = 0,

    pub const _desc_table = .{
        .cur_fund = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MuseumDispatchFinishedScNotify = struct {
    IMBLGCAADFL: u32 = 0,
    BDJCGCDJOEO: u32 = 0,
    cur_fund: u32 = 0,
    MODFABDDNKL: u32 = 0,

    pub const _desc_table = .{
        .IMBLGCAADFL = fd(6, .{ .Varint = .Simple }),
        .BDJCGCDJOEO = fd(4, .{ .Varint = .Simple }),
        .cur_fund = fd(14, .{ .Varint = .Simple }),
        .MODFABDDNKL = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MuseumTargetStartNotify = struct {
    PNGDDNAJCGG: u32 = 0,

    pub const _desc_table = .{
        .PNGDDNAJCGG = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MuseumTargetMissionFinishNotify = struct {
    BELEODAIINB: ArrayList(u32),
    PNGDDNAJCGG: u32 = 0,
    FPBGADBMEAD: bool = false,

    pub const _desc_table = .{
        .BELEODAIINB = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
        .PNGDDNAJCGG = fd(2, .{ .Varint = .Simple }),
        .FPBGADBMEAD = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MuseumTargetRewardNotify = struct {
    item_count: u32 = 0,
    PNGDDNAJCGG: u32 = 0,
    item_id: u32 = 0,

    pub const _desc_table = .{
        .item_count = fd(12, .{ .Varint = .Simple }),
        .PNGDDNAJCGG = fd(6, .{ .Varint = .Simple }),
        .item_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MuseumTakeCollectRewardCsReq = struct {
    item_id: u32 = 0,

    pub const _desc_table = .{
        .item_id = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MuseumTakeCollectRewardScRsp = struct {
    reward: ?ItemList = null,
    item_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .reward = fd(3, .{ .SubMessage = {} }),
        .item_id = fd(11, .{ .Varint = .Simple }),
        .retcode = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MusicRhythmLevel = struct {
    unlock_level: u32 = 0,
    level_id: u32 = 0,
    full_combo: bool = false,

    pub const _desc_table = .{
        .unlock_level = fd(2, .{ .Varint = .Simple }),
        .level_id = fd(15, .{ .Varint = .Simple }),
        .full_combo = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MusicRhythmGroup = struct {
    music_group_id: u32 = 0,
    music_group_phase: u32 = 0,
    NBBOABGLCJC: ArrayList(u32),
    DNKJDJJBCDK: ArrayList(u32),

    pub const _desc_table = .{
        .music_group_id = fd(10, .{ .Varint = .Simple }),
        .music_group_phase = fd(1, .{ .Varint = .Simple }),
        .NBBOABGLCJC = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
        .DNKJDJJBCDK = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MusicRhythmDataCsReq = struct {
    player_data: u32 = 0,

    pub const _desc_table = .{
        .player_data = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MusicRhythmDataScRsp = struct {
    music_level: ArrayList(MusicRhythmLevel),
    retcode: u32 = 0,
    unlock_track_list: ArrayList(u32),
    music_group: ArrayList(MusicRhythmGroup),
    unlock_song_list: ArrayList(u32),
    show_hint: bool = false,
    unlock_phase_list: ArrayList(u32),
    cur_level_id: u32 = 0,
    cur_song_id: u32 = 0,

    pub const _desc_table = .{
        .music_level = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(7, .{ .Varint = .Simple }),
        .unlock_track_list = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
        .music_group = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .unlock_song_list = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
        .show_hint = fd(13, .{ .Varint = .Simple }),
        .unlock_phase_list = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
        .cur_level_id = fd(10, .{ .Varint = .Simple }),
        .cur_song_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MusicRhythmStartLevelCsReq = struct {
    level_id: u32 = 0,

    pub const _desc_table = .{
        .level_id = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MusicRhythmStartLevelScRsp = struct {
    MDLNDGIJNML: ManagedString = .Empty,
    level_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .MDLNDGIJNML = fd(9, .String),
        .level_id = fd(11, .{ .Varint = .Simple }),
        .retcode = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MusicRhythmFinishLevelCsReq = struct {
    MHKHACLNBPM: u32 = 0,
    full_combo: bool = false,
    score_id: u32 = 0,

    pub const _desc_table = .{
        .MHKHACLNBPM = fd(14, .{ .Varint = .Simple }),
        .full_combo = fd(8, .{ .Varint = .Simple }),
        .score_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MusicRhythmFinishLevelScRsp = struct {
    level_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .level_id = fd(15, .{ .Varint = .Simple }),
        .retcode = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MusicRhythmUnlockTrackScNotify = struct {
    JIKJHNEACJB: ArrayList(u32),

    pub const _desc_table = .{
        .JIKJHNEACJB = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MusicRhythmSaveSongConfigDataCsReq = struct {
    CGEDABOABOH: ?MusicRhythmGroup = null,

    pub const _desc_table = .{
        .CGEDABOABOH = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MusicRhythmSaveSongConfigDataScRsp = struct {
    retcode: u32 = 0,
    cur_song_id: u32 = 0,
    MBLDFHLDCPI: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(15, .{ .Varint = .Simple }),
        .cur_song_id = fd(8, .{ .Varint = .Simple }),
        .MBLDFHLDCPI = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MusicRhythmUnlockSongNotify = struct {
    OAFHAOPEJPO: ArrayList(u32),

    pub const _desc_table = .{
        .OAFHAOPEJPO = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MusicRhythmMaxDifficultyLevelsUnlockNotify = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MusicRhythmUnlockSongSfxScNotify = struct {
    OAFHAOPEJPO: ArrayList(u32),

    pub const _desc_table = .{
        .OAFHAOPEJPO = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OfferingInfo = struct {
    offering_state: OfferingState = @enumFromInt(0),
    has_taken_reward_id_list: ArrayList(u32),
    level_exp: u32 = 0,
    offering_id: u32 = 0,
    total_exp: u32 = 0,
    offering_level: u32 = 0,

    pub const _desc_table = .{
        .offering_state = fd(15, .{ .Varint = .Simple }),
        .has_taken_reward_id_list = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
        .level_exp = fd(3, .{ .Varint = .Simple }),
        .offering_id = fd(14, .{ .Varint = .Simple }),
        .total_exp = fd(5, .{ .Varint = .Simple }),
        .offering_level = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetOfferingInfoCsReq = struct {
    offering_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .offering_id_list = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetOfferingInfoScRsp = struct {
    retcode: u32 = 0,
    offering_info_list: ArrayList(OfferingInfo),

    pub const _desc_table = .{
        .retcode = fd(15, .{ .Varint = .Simple }),
        .offering_info_list = fd(4, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SubmitOfferingItemCsReq = struct {
    interacted_prop_entity_id: u32 = 0,
    offering_id: u32 = 0,

    pub const _desc_table = .{
        .interacted_prop_entity_id = fd(12, .{ .Varint = .Simple }),
        .offering_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SubmitOfferingItemScRsp = struct {
    offering_info: ?OfferingInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .offering_info = fd(10, .{ .SubMessage = {} }),
        .retcode = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeOfferingRewardCsReq = struct {
    take_reward_level_list: ArrayList(u32),
    offering_id: u32 = 0,
    interacted_prop_entity_id: u32 = 0,

    pub const _desc_table = .{
        .take_reward_level_list = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .offering_id = fd(15, .{ .Varint = .Simple }),
        .interacted_prop_entity_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeOfferingRewardScRsp = struct {
    reward: ?ItemList = null,
    offering_info: ?OfferingInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .reward = fd(10, .{ .SubMessage = {} }),
        .offering_info = fd(14, .{ .SubMessage = {} }),
        .retcode = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OfferingInfoScNotify = struct {
    offering_info: ?OfferingInfo = null,

    pub const _desc_table = .{
        .offering_info = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AcceptedPamMissionExpireCsReq = struct {
    main_mission_id: u32 = 0,

    pub const _desc_table = .{
        .main_mission_id = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AcceptedPamMissionExpireScRsp = struct {
    retcode: u32 = 0,
    main_mission_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(13, .{ .Varint = .Simple }),
        .main_mission_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncAcceptedPamMissionNotify = struct {
    PAMBJBFNGPO: u64 = 0,
    main_mission_id: u32 = 0,

    pub const _desc_table = .{
        .PAMBJBFNGPO = fd(15, .{ .Varint = .Simple }),
        .main_mission_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPamSkinDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPamSkinDataScRsp = struct {
    retcode: u32 = 0,
    unlock_skin_list: ArrayList(u32),
    cur_skin: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(5, .{ .Varint = .Simple }),
        .unlock_skin_list = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
        .cur_skin = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SelectPamSkinCsReq = struct {
    pam_skin: u32 = 0,

    pub const _desc_table = .{
        .pam_skin = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SelectPamSkinScRsp = struct {
    cur_skin: u32 = 0,
    set_skin: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .cur_skin = fd(1, .{ .Varint = .Simple }),
        .set_skin = fd(13, .{ .Varint = .Simple }),
        .retcode = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UnlockPamSkinScNotify = struct {
    pam_skin: u32 = 0,

    pub const _desc_table = .{
        .pam_skin = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GGDEMGBOFGO = struct {
    KKEHMBPJOOC: bool = false,
    time: u32 = 0,
    level_id: u32 = 0,

    pub const _desc_table = .{
        .KKEHMBPJOOC = fd(14, .{ .Varint = .Simple }),
        .time = fd(6, .{ .Varint = .Simple }),
        .level_id = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ParkourGetDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ParkourGetDataScRsp = struct {
    KCMCMPFONKO: ArrayList(GGDEMGBOFGO),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .KCMCMPFONKO = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DGEFMLBPFMM = struct {
    LPBHOMFCLON: u32 = 0,
    time: u32 = 0,
    id: u32 = 0,

    pub const _desc_table = .{
        .LPBHOMFCLON = fd(11, .{ .Varint = .Simple }),
        .time = fd(3, .{ .Varint = .Simple }),
        .id = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OOFKEBPANLP = struct {
    level_id: u32 = 0,
    DCFHGAAJLNN: ArrayList(DGEFMLBPFMM),

    pub const _desc_table = .{
        .level_id = fd(4, .{ .Varint = .Simple }),
        .DCFHGAAJLNN = fd(7, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ParkourGetRankingInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ParkourGetRankingInfoScRsp = struct {
    retcode: u32 = 0,
    PFENGLDJCMG: ArrayList(OOFKEBPANLP),
    NJGPIKCFJNL: ?OOFKEBPANLP = null,

    pub const _desc_table = .{
        .retcode = fd(8, .{ .Varint = .Simple }),
        .PFENGLDJCMG = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .NJGPIKCFJNL = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ParkourStartLevelCsReq = struct {
    POFMCALHOOC: u32 = 0,
    level_id: u32 = 0,

    pub const _desc_table = .{
        .POFMCALHOOC = fd(7, .{ .Varint = .Simple }),
        .level_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ParkourStartLevelScRsp = struct {
    POFMCALHOOC: u32 = 0,
    retcode: u32 = 0,
    level_id: u32 = 0,

    pub const _desc_table = .{
        .POFMCALHOOC = fd(1, .{ .Varint = .Simple }),
        .retcode = fd(11, .{ .Varint = .Simple }),
        .level_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BFPOLEGCCPJ = struct {
    type: HCFFFEIMCMF = @enumFromInt(0),
    cnt: u32 = 0,

    pub const _desc_table = .{
        .type = fd(11, .{ .Varint = .Simple }),
        .cnt = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DCKPBICNMKK = struct {
    id: u32 = 0,
    cnt: u32 = 0,

    pub const _desc_table = .{
        .id = fd(5, .{ .Varint = .Simple }),
        .cnt = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OOALAODNCPE = struct {
    OIGKBOOHNII: u32 = 0,
    OGGEGAOLPGN: u32 = 0,
    GFDIPLDIFHG: u32 = 0,
    NFPHCJIPIJH: u32 = 0,
    FODEKCOBFFA: u32 = 0,
    NBNEKBDILLK: u32 = 0,
    MMABIMIEJNJ: u32 = 0,
    APNNBDBENLC: ArrayList(DCKPBICNMKK),
    JEHJLJDKBGE: u32 = 0,
    NEEFGJBMCLL: u32 = 0,
    DHDLNDFIBKC: u32 = 0,

    pub const _desc_table = .{
        .OIGKBOOHNII = fd(13, .{ .Varint = .Simple }),
        .OGGEGAOLPGN = fd(6, .{ .Varint = .Simple }),
        .GFDIPLDIFHG = fd(8, .{ .Varint = .Simple }),
        .NFPHCJIPIJH = fd(1, .{ .Varint = .Simple }),
        .FODEKCOBFFA = fd(3, .{ .Varint = .Simple }),
        .NBNEKBDILLK = fd(4, .{ .Varint = .Simple }),
        .MMABIMIEJNJ = fd(5, .{ .Varint = .Simple }),
        .APNNBDBENLC = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .JEHJLJDKBGE = fd(15, .{ .Varint = .Simple }),
        .NEEFGJBMCLL = fd(7, .{ .Varint = .Simple }),
        .DHDLNDFIBKC = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FJJOFEKPDDH = struct {
    HLKDFINCPPM: u32 = 0,
    ADJOPIAIBMG: u32 = 0,
    CNJJHFPMIIP: u32 = 0,
    CHAKNDOKNCB: u32 = 0,

    pub const _desc_table = .{
        .HLKDFINCPPM = fd(2, .{ .Varint = .Simple }),
        .ADJOPIAIBMG = fd(9, .{ .Varint = .Simple }),
        .CNJJHFPMIIP = fd(6, .{ .Varint = .Simple }),
        .CHAKNDOKNCB = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ParkourEndLevelCsReq = struct {
    time: u32 = 0,
    rank: u32 = 0,
    BAABDDJEHMC: u32 = 0,
    level_id: u32 = 0,
    HMBHEIGKDBK: ArrayList(FJJOFEKPDDH),
    end_reason: POAHABDKPKJ = @enumFromInt(0),
    EEFCBBKKFLC: u32 = 0,
    AEDBPADEGFI: ArrayList(BFPOLEGCCPJ),
    POFMCALHOOC: u32 = 0,
    IFENFKGGIEM: ?OOALAODNCPE = null,

    pub const _desc_table = .{
        .time = fd(7, .{ .Varint = .Simple }),
        .rank = fd(6, .{ .Varint = .Simple }),
        .BAABDDJEHMC = fd(3, .{ .Varint = .Simple }),
        .level_id = fd(14, .{ .Varint = .Simple }),
        .HMBHEIGKDBK = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .end_reason = fd(9, .{ .Varint = .Simple }),
        .EEFCBBKKFLC = fd(2, .{ .Varint = .Simple }),
        .AEDBPADEGFI = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .POFMCALHOOC = fd(12, .{ .Varint = .Simple }),
        .IFENFKGGIEM = fd(4, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ParkourEndLevelScRsp = struct {
    KKEHMBPJOOC: bool = false,
    FDGMOEOAJKP: bool = false,
    time: u32 = 0,
    retcode: u32 = 0,
    BLMDKJKOIOH: ?GGDEMGBOFGO = null,
    level_id: u32 = 0,
    end_reason: POAHABDKPKJ = @enumFromInt(0),

    pub const _desc_table = .{
        .KKEHMBPJOOC = fd(2, .{ .Varint = .Simple }),
        .FDGMOEOAJKP = fd(5, .{ .Varint = .Simple }),
        .time = fd(8, .{ .Varint = .Simple }),
        .retcode = fd(4, .{ .Varint = .Simple }),
        .BLMDKJKOIOH = fd(3, .{ .SubMessage = {} }),
        .level_id = fd(14, .{ .Varint = .Simple }),
        .end_reason = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPetDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPetDataScRsp = struct {
    cur_pet_id: u32 = 0,
    unlocked_pet_id: ArrayList(u32),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .cur_pet_id = fd(8, .{ .Varint = .Simple }),
        .unlocked_pet_id = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SummonPetCsReq = struct {
    summoned_pet_id: u32 = 0,

    pub const _desc_table = .{
        .summoned_pet_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SummonPetScRsp = struct {
    cur_pet_id: u32 = 0,
    retcode: u32 = 0,
    select_pet_id: u32 = 0,

    pub const _desc_table = .{
        .cur_pet_id = fd(11, .{ .Varint = .Simple }),
        .retcode = fd(2, .{ .Varint = .Simple }),
        .select_pet_id = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RecallPetCsReq = struct {
    summoned_pet_id: u32 = 0,

    pub const _desc_table = .{
        .summoned_pet_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RecallPetScRsp = struct {
    retcode: u32 = 0,
    cur_pet_id: u32 = 0,
    select_pet_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(13, .{ .Varint = .Simple }),
        .cur_pet_id = fd(10, .{ .Varint = .Simple }),
        .select_pet_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CurPetChangedScNotify = struct {
    cur_pet_id: u32 = 0,

    pub const _desc_table = .{
        .cur_pet_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPhoneDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPhoneDataScRsp = struct {
    owned_chat_bubbles: ArrayList(u32),
    owned_phone_themes: ArrayList(u32),
    cur_phone_theme: u32 = 0,
    owned_phone_cases: ArrayList(u32),
    retcode: u32 = 0,
    cur_phone_case: u32 = 0,
    cur_chat_bubble: u32 = 0,

    pub const _desc_table = .{
        .owned_chat_bubbles = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
        .owned_phone_themes = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .cur_phone_theme = fd(7, .{ .Varint = .Simple }),
        .owned_phone_cases = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(6, .{ .Varint = .Simple }),
        .cur_phone_case = fd(13, .{ .Varint = .Simple }),
        .cur_chat_bubble = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SelectChatBubbleCsReq = struct {
    bubble_id: u32 = 0,

    pub const _desc_table = .{
        .bubble_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SelectChatBubbleScRsp = struct {
    PMDCBFOPCHB: u32 = 0,
    retcode: u32 = 0,
    cur_chat_bubble: u32 = 0,

    pub const _desc_table = .{
        .PMDCBFOPCHB = fd(13, .{ .Varint = .Simple }),
        .retcode = fd(11, .{ .Varint = .Simple }),
        .cur_chat_bubble = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UnlockChatBubbleScNotify = struct {
    bubble_id: u32 = 0,

    pub const _desc_table = .{
        .bubble_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SelectPhoneThemeCsReq = struct {
    theme_id: u32 = 0,

    pub const _desc_table = .{
        .theme_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SelectPhoneThemeScRsp = struct {
    cur_phone_theme: u32 = 0,
    retcode: u32 = 0,
    ACHOPOJLCCE: u32 = 0,

    pub const _desc_table = .{
        .cur_phone_theme = fd(13, .{ .Varint = .Simple }),
        .retcode = fd(3, .{ .Varint = .Simple }),
        .ACHOPOJLCCE = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UnlockPhoneThemeScNotify = struct {
    theme_id: u32 = 0,

    pub const _desc_table = .{
        .theme_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SelectPhoneCaseCsReq = struct {
    phone_case_id: u32 = 0,

    pub const _desc_table = .{
        .phone_case_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SelectPhoneCaseScRsp = struct {
    retcode: u32 = 0,
    cur_phone_case: u32 = 0,
    PDACJDIEOJG: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(14, .{ .Varint = .Simple }),
        .cur_phone_case = fd(13, .{ .Varint = .Simple }),
        .PDACJDIEOJG = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UnlockPhoneCaseScNotify = struct {
    phone_case_id: u32 = 0,

    pub const _desc_table = .{
        .phone_case_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPlanetFesDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPlanetFesDataScRsp = struct {
    KJKBKEGIGHK: ?AFBAMPLGHEH = null,
    level_info: ?GCAMEGPEPOL = null,
    EBGNGDGBOLH: ?JNIPIAADOIP = null,
    retcode: u32 = 0,
    FDHGIKJDLGD: ?KOFOLLACIGO = null,
    LAPCHEIGNMJ: ?DKEJEOEHAGM = null,
    HMFFHBHALGE: ?MIOAEGBPOMA = null,
    HBDLIICPKOB: ?OAINKJLPCDK = null,
    HLJMHNABFMC: ?AJCJCHLJBGF = null,
    ADMJKKOIAGD: ?GJBFGABAAMO = null,
    custom_value_list: ArrayList(KHOCCHABNMN),
    skill_info: ?IACFPGOLFLM = null,
    HEOJNAIMGKC: ?CLKNIBOJLGP = null,

    pub const _desc_table = .{
        .KJKBKEGIGHK = fd(5, .{ .SubMessage = {} }),
        .level_info = fd(4, .{ .SubMessage = {} }),
        .EBGNGDGBOLH = fd(12, .{ .SubMessage = {} }),
        .retcode = fd(10, .{ .Varint = .Simple }),
        .FDHGIKJDLGD = fd(2, .{ .SubMessage = {} }),
        .LAPCHEIGNMJ = fd(8, .{ .SubMessage = {} }),
        .HMFFHBHALGE = fd(7, .{ .SubMessage = {} }),
        .HBDLIICPKOB = fd(6, .{ .SubMessage = {} }),
        .HLJMHNABFMC = fd(9, .{ .SubMessage = {} }),
        .ADMJKKOIAGD = fd(3, .{ .SubMessage = {} }),
        .custom_value_list = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .skill_info = fd(11, .{ .SubMessage = {} }),
        .HEOJNAIMGKC = fd(13, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IIKNGNHDMFI = struct {
    MCNMHBJHMME: ArrayList(u32),

    pub const _desc_table = .{
        .MCNMHBJHMME = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesSyncChangeScNotify = struct {
    LEADMNEIMDP: ArrayList(CCNANLCODDF),

    pub const _desc_table = .{
        .LEADMNEIMDP = fd(3, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OIDFFLEEALL = struct {
    KEJNIMGHOIG: u32 = 0,
    IHELAJNMMBF: u32 = 0,
    IMFCIMKMJPL: u32 = 0,

    pub const _desc_table = .{
        .KEJNIMGHOIG = fd(5, .{ .Varint = .Simple }),
        .IHELAJNMMBF = fd(10, .{ .Varint = .Simple }),
        .IMFCIMKMJPL = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CCNANLCODDF = struct {
    source: ?OIDFFLEEALL = null,
    rogue_action: ?HMBANCKGBII = null,

    pub const _desc_table = .{
        .source = fd(1, .{ .SubMessage = {} }),
        .rogue_action = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OFGBMCKNLDJ = struct {
    BJODEEPGOPC: ?IIKNGNHDMFI = null,
    MFKNHHNFKGI: i64 = 0,
    DGCFLHCPJLN: u32 = 0,
    JCFPLGHKJAA: ?IIKNGNHDMFI = null,

    pub const _desc_table = .{
        .BJODEEPGOPC = fd(13, .{ .SubMessage = {} }),
        .MFKNHHNFKGI = fd(4, .{ .Varint = .Simple }),
        .DGCFLHCPJLN = fd(15, .{ .Varint = .Simple }),
        .JCFPLGHKJAA = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KOFOLLACIGO = struct {
    INLLEKAMNPF: ArrayList(OFGBMCKNLDJ),

    pub const _desc_table = .{
        .INLLEKAMNPF = fd(10, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EOAEGAEFPFH = struct {
    avatar_id: u32 = 0,
    PAEHAMJHNDD: u32 = 0,
    MHKHACLNBPM: u32 = 0,
    level: u32 = 0,

    pub const _desc_table = .{
        .avatar_id = fd(13, .{ .Varint = .Simple }),
        .PAEHAMJHNDD = fd(15, .{ .Varint = .Simple }),
        .MHKHACLNBPM = fd(14, .{ .Varint = .Simple }),
        .level = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DKEJEOEHAGM = struct {
    avatar_list: ArrayList(EOAEGAEFPFH),

    pub const _desc_table = .{
        .avatar_list = fd(7, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CEODDCEIDDL = struct {
    item_id: u32 = 0,
    item_count: u32 = 0,

    pub const _desc_table = .{
        .item_id = fd(11, .{ .Varint = .Simple }),
        .item_count = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AJCJCHLJBGF = struct {
    item_list: ArrayList(CEODDCEIDDL),
    item_value: ?IIKNGNHDMFI = null,
    PCAJNCBMIMM: ?IIKNGNHDMFI = null,

    pub const _desc_table = .{
        .item_list = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .item_value = fd(9, .{ .SubMessage = {} }),
        .PCAJNCBMIMM = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OAINKJLPCDK = struct {
    option_result_info: ArrayList(PPFCJHEKOLG),

    pub const _desc_table = .{
        .option_result_info = fd(7, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PPFCJHEKOLG = struct {
    source: ?OIDFFLEEALL = null,
    config_id: u32 = 0,
    unique_id: u64 = 0,
    DFCFHHLBGDC: ArrayList(FIMACPHLMNO),

    pub const _desc_table = .{
        .source = fd(8, .{ .SubMessage = {} }),
        .config_id = fd(10, .{ .Varint = .Simple }),
        .unique_id = fd(2, .{ .Varint = .Simple }),
        .DFCFHHLBGDC = fd(11, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FIMACPHLMNO = struct {
    KBEFCMIIIIN: i64 = 0,

    pub const _desc_table = .{
        .KBEFCMIIIIN = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ADAFJFOJDEG = struct {
    status: GMFEJEFIBBI = @enumFromInt(0),
    quest_id: u32 = 0,
    progress: u32 = 0,
    MFANNCAGDMP: u32 = 0,
    EHACJJJDPAH: ?EHACJJJDPAH_union,

    pub const _EHACJJJDPAH_case = enum {
        BONAGHBBICF,
        NNHPCOIIKFF,
    };
    pub const EHACJJJDPAH_union = union(_EHACJJJDPAH_case) {
        BONAGHBBICF: u32,
        NNHPCOIIKFF: IIKNGNHDMFI,
        pub const _union_desc = .{
            .BONAGHBBICF = fd(6, .{ .Varint = .Simple }),
            .NNHPCOIIKFF = fd(5, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .status = fd(3, .{ .Varint = .Simple }),
        .quest_id = fd(2, .{ .Varint = .Simple }),
        .progress = fd(14, .{ .Varint = .Simple }),
        .MFANNCAGDMP = fd(8, .{ .Varint = .Simple }),
        .EHACJJJDPAH = fd(null, .{ .OneOf = EHACJJJDPAH_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PCODFCNKHJK = struct {
    DCNPHBDDDIP: u32 = 0,
    EOFELDEAPEO: u32 = 0,

    pub const _desc_table = .{
        .DCNPHBDDDIP = fd(4, .{ .Varint = .Simple }),
        .EOFELDEAPEO = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CLKNIBOJLGP = struct {
    quest_list: ArrayList(ADAFJFOJDEG),
    CMHNLJJODJF: ?PCODFCNKHJK = null,

    pub const _desc_table = .{
        .quest_list = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .CMHNLJJODJF = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GCAMEGPEPOL = struct {
    PJOLEMHLGNL: u32 = 0,
    EHBJBPCNPLG: ?IIKNGNHDMFI = null,

    pub const _desc_table = .{
        .PJOLEMHLGNL = fd(5, .{ .Varint = .Simple }),
        .EHBJBPCNPLG = fd(7, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DHNFBGENLIG = struct {
    progress: u32 = 0,
    BHPCNNFOKEE: u32 = 0,

    pub const _desc_table = .{
        .progress = fd(9, .{ .Varint = .Simple }),
        .BHPCNNFOKEE = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AFBAMPLGHEH = struct {
    IHBJIIHBIBP: ArrayList(u32),
    NCKCMGCBEHK: ArrayList(DHNFBGENLIG),

    pub const _desc_table = .{
        .IHBJIIHBIBP = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
        .NCKCMGCBEHK = fd(9, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HFOCNHOJLAH = struct {
    level: u32 = 0,
    skill_id: u32 = 0,

    pub const _desc_table = .{
        .level = fd(8, .{ .Varint = .Simple }),
        .skill_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IACFPGOLFLM = struct {
    skill_list: ArrayList(HFOCNHOJLAH),

    pub const _desc_table = .{
        .skill_list = fd(9, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GJBFGABAAMO = struct {
    HIGNFPJLFKA: ArrayList(u32),
    EIMGBKNLGNF: u32 = 0,

    pub const _desc_table = .{
        .HIGNFPJLFKA = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
        .EIMGBKNLGNF = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MIOAEGBPOMA = struct {
    FGPACIHLANB: u32 = 0,
    FGIMACCHHDK: ArrayList(u32),
    EPCPDOCDOCB: i64 = 0,

    pub const _desc_table = .{
        .FGPACIHLANB = fd(14, .{ .Varint = .Simple }),
        .FGIMACCHHDK = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
        .EPCPDOCDOCB = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HMBANCKGBII = struct {
    KFELKJLDKEH: ?KFELKJLDKEH_union,

    pub const _KFELKJLDKEH_case = enum {
        LKMLGOEEEKH,
        COHNLGMIFBO,
        PMLOCBHIDDL,
        LEBMNLOAKHC,
        KBNLIGLJENN,
        MMFBENAMBNE,
        GNAIDHHJEBI,
        JBDHLHHFDGE,
        JPLPLFCOOKD,
        MKOFOOCOKBK,
        OLMGNEOAHOP,
        GBFFGPHFMDP,
        DMNMIFJHECL,
        IMFCDMIEOPL,
        PCLLCBMHCBD,
        BIEDMJPAEBD,
        FOICFOGCGIA,
        NCEIDLNKBBG,
        KMMDPEJAKEC,
        GPNLPNEEHDM,
        CNEKLOKHAHL,
        DMFJDAHPIID,
        ILOEKHKEJAJ,
        LAEGJPILNND,
        LCDKLAHGKJI,
        BCADDFDBFNA,
        LIGLEFJMLHM,
        GBNCIDJNLPL,
    };
    pub const KFELKJLDKEH_union = union(_KFELKJLDKEH_case) {
        LKMLGOEEEKH: GIEDCJDLEGE,
        COHNLGMIFBO: GIEDCJDLEGE,
        PMLOCBHIDDL: HPGAGBGJLID,
        LEBMNLOAKHC: HPGAGBGJLID,
        KBNLIGLJENN: OFGBMCKNLDJ,
        MMFBENAMBNE: OFGBMCKNLDJ,
        GNAIDHHJEBI: EOAEGAEFPFH,
        JBDHLHHFDGE: EOAEGAEFPFH,
        JPLPLFCOOKD: PPFCJHEKOLG,
        MKOFOOCOKBK: PPFCJHEKOLG,
        OLMGNEOAHOP: PHFBDNNLINF,
        GBFFGPHFMDP: ADAFJFOJDEG,
        DMNMIFJHECL: ADAFJFOJDEG,
        IMFCDMIEOPL: PCODFCNKHJK,
        PCLLCBMHCBD: OLBOPGJFFPM,
        BIEDMJPAEBD: HFOCNHOJLAH,
        FOICFOGCGIA: PGNDIBBGIJN,
        NCEIDLNKBBG: DJOEEGHMCFJ,
        KMMDPEJAKEC: CBIKMFFDCGI,
        GPNLPNEEHDM: HPCAIMKJDIJ,
        CNEKLOKHAHL: HOHDMMNDKNJ,
        DMFJDAHPIID: FHNGONEFBDE,
        ILOEKHKEJAJ: PPFCJHEKOLG,
        LAEGJPILNND: ILJJBGIFDPE,
        LCDKLAHGKJI: DEINADPEHKE,
        BCADDFDBFNA: BKBILPDKOIL,
        LIGLEFJMLHM: EIKAIIDAEPP,
        GBNCIDJNLPL: GJIPJNGNFEJ,
        pub const _union_desc = .{
            .LKMLGOEEEKH = fd(8, .{ .SubMessage = {} }),
            .COHNLGMIFBO = fd(3, .{ .SubMessage = {} }),
            .PMLOCBHIDDL = fd(4, .{ .SubMessage = {} }),
            .LEBMNLOAKHC = fd(1, .{ .SubMessage = {} }),
            .KBNLIGLJENN = fd(11, .{ .SubMessage = {} }),
            .MMFBENAMBNE = fd(2, .{ .SubMessage = {} }),
            .GNAIDHHJEBI = fd(9, .{ .SubMessage = {} }),
            .JBDHLHHFDGE = fd(10, .{ .SubMessage = {} }),
            .JPLPLFCOOKD = fd(6, .{ .SubMessage = {} }),
            .MKOFOOCOKBK = fd(5, .{ .SubMessage = {} }),
            .OLMGNEOAHOP = fd(7, .{ .SubMessage = {} }),
            .GBFFGPHFMDP = fd(14, .{ .SubMessage = {} }),
            .DMNMIFJHECL = fd(13, .{ .SubMessage = {} }),
            .IMFCDMIEOPL = fd(12, .{ .SubMessage = {} }),
            .PCLLCBMHCBD = fd(15, .{ .SubMessage = {} }),
            .BIEDMJPAEBD = fd(40, .{ .SubMessage = {} }),
            .FOICFOGCGIA = fd(1882, .{ .SubMessage = {} }),
            .NCEIDLNKBBG = fd(649, .{ .SubMessage = {} }),
            .KMMDPEJAKEC = fd(345, .{ .SubMessage = {} }),
            .GPNLPNEEHDM = fd(28, .{ .SubMessage = {} }),
            .CNEKLOKHAHL = fd(1259, .{ .SubMessage = {} }),
            .DMFJDAHPIID = fd(1848, .{ .SubMessage = {} }),
            .ILOEKHKEJAJ = fd(1811, .{ .SubMessage = {} }),
            .LAEGJPILNND = fd(1034, .{ .SubMessage = {} }),
            .LCDKLAHGKJI = fd(624, .{ .SubMessage = {} }),
            .BCADDFDBFNA = fd(1744, .{ .SubMessage = {} }),
            .LIGLEFJMLHM = fd(50, .{ .SubMessage = {} }),
            .GBNCIDJNLPL = fd(312, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .KFELKJLDKEH = fd(null, .{ .OneOf = KFELKJLDKEH_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OLBOPGJFFPM = struct {
    BIINNCNDPCG: bool = false,
    KJKBKEGIGHK: ?DHNFBGENLIG = null,

    pub const _desc_table = .{
        .BIINNCNDPCG = fd(12, .{ .Varint = .Simple }),
        .KJKBKEGIGHK = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PHFBDNNLINF = struct {
    EHBJBPCNPLG: ?IIKNGNHDMFI = null,
    PJOLEMHLGNL: u32 = 0,

    pub const _desc_table = .{
        .EHBJBPCNPLG = fd(3, .{ .SubMessage = {} }),
        .PJOLEMHLGNL = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GIEDCJDLEGE = struct {
    OGJOFMCMFPG: ?IIKNGNHDMFI = null,
    BMALPKEKBEL: ?IIKNGNHDMFI = null,
    BLCABEMFACH: ArrayList(u32),
    MFNAGLKDPNI: ?IIKNGNHDMFI = null,

    pub const _desc_table = .{
        .OGJOFMCMFPG = fd(7, .{ .SubMessage = {} }),
        .BMALPKEKBEL = fd(15, .{ .SubMessage = {} }),
        .BLCABEMFACH = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
        .MFNAGLKDPNI = fd(13, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HPGAGBGJLID = struct {
    BMALPKEKBEL: u32 = 0,
    item_id: u32 = 0,
    OGJOFMCMFPG: u32 = 0,

    pub const _desc_table = .{
        .BMALPKEKBEL = fd(13, .{ .Varint = .Simple }),
        .item_id = fd(8, .{ .Varint = .Simple }),
        .OGJOFMCMFPG = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PGNDIBBGIJN = struct {
    GFJAGHLJJDN: u32 = 0,
    ECILICNOLFN: u32 = 0,

    pub const _desc_table = .{
        .GFJAGHLJJDN = fd(8, .{ .Varint = .Simple }),
        .ECILICNOLFN = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NPAIINEKEFB = struct {
    DMAIMCPPJGH: ?IIKNGNHDMFI = null,
    PEFDLAJLCJB: u32 = 0,
    JLCEEFBLJDC: u32 = 0,
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .DMAIMCPPJGH = fd(1, .{ .SubMessage = {} }),
        .PEFDLAJLCJB = fd(4, .{ .Varint = .Simple }),
        .JLCEEFBLJDC = fd(3, .{ .Varint = .Simple }),
        .avatar_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ILJJBGIFDPE = struct {
    FOFHIEIICPB: ?IIKNGNHDMFI = null,
    NLAOMPDENKK: u32 = 0,
    EAJPDPCDJPK: ?IIKNGNHDMFI = null,
    HDKAFNKHALA: u32 = 0,
    MEMBICNIFLI: u32 = 0,
    OEBAFBIGMBC: ArrayList(NPAIINEKEFB),
    NIJMJBMCFJF: u32 = 0,
    PEHINGJKGCB: ?IIKNGNHDMFI = null,
    BJELCLBGALF: ArrayList(BJELCLBGALFEntry),
    CCIGDJCGAMD: u32 = 0,

    pub const _desc_table = .{
        .FOFHIEIICPB = fd(11, .{ .SubMessage = {} }),
        .NLAOMPDENKK = fd(3, .{ .Varint = .Simple }),
        .EAJPDPCDJPK = fd(6, .{ .SubMessage = {} }),
        .HDKAFNKHALA = fd(7, .{ .Varint = .Simple }),
        .MEMBICNIFLI = fd(4, .{ .Varint = .Simple }),
        .OEBAFBIGMBC = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .NIJMJBMCFJF = fd(14, .{ .Varint = .Simple }),
        .PEHINGJKGCB = fd(12, .{ .SubMessage = {} }),
        .BJELCLBGALF = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .CCIGDJCGAMD = fd(2, .{ .Varint = .Simple }),
    };

    pub const BJELCLBGALFEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DJOEEGHMCFJ = struct {
    AAKDAHHIGIF: ?EGBKGEMFODN = null,

    pub const _desc_table = .{
        .AAKDAHHIGIF = fd(11, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HPCAIMKJDIJ = struct {
    JILAGGDMALL: ?ILMELFJCCMD = null,

    pub const _desc_table = .{
        .JILAGGDMALL = fd(7, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CBIKMFFDCGI = struct {
    HHJOCIPOBCF: ?IIKNGNHDMFI = null,

    pub const _desc_table = .{
        .HHJOCIPOBCF = fd(15, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HOHDMMNDKNJ = struct {
    NFJLFNBPPPG: ?JOFGDAIADBO = null,
    PODGJPEKEEG: DFHEJCIJBEJ = @enumFromInt(0),

    pub const _desc_table = .{
        .NFJLFNBPPPG = fd(10, .{ .SubMessage = {} }),
        .PODGJPEKEEG = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FHNGONEFBDE = struct {
    EIMGBKNLGNF: u32 = 0,

    pub const _desc_table = .{
        .EIMGBKNLGNF = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OHDHPCLIJNH = struct {
    CIOAOGDKFOG: u32 = 0,
    KJBKNGCFBBP: ?IIKNGNHDMFI = null,
    EAFOMFLMOJJ: u32 = 0,
    GINMOIBGLNM: u32 = 0,
    IACPHGOJHMB: u32 = 0,

    pub const _desc_table = .{
        .CIOAOGDKFOG = fd(5, .{ .Varint = .Simple }),
        .KJBKNGCFBBP = fd(2, .{ .SubMessage = {} }),
        .EAFOMFLMOJJ = fd(8, .{ .Varint = .Simple }),
        .GINMOIBGLNM = fd(13, .{ .Varint = .Simple }),
        .IACPHGOJHMB = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DJIAEMANGCG = struct {
    transfer_item_list: ArrayList(OHDHPCLIJNH),
    item_list: ArrayList(CEODDCEIDDL),

    pub const _desc_table = .{
        .transfer_item_list = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .item_list = fd(8, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BFAAEFCEJPA = struct {
    HOCNLIJHJJK: ?CEODDCEIDDL = null,
    PKBBHJPAEKI: ?OHDHPCLIJNH = null,

    pub const _desc_table = .{
        .HOCNLIJHJJK = fd(15, .{ .SubMessage = {} }),
        .PKBBHJPAEKI = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesCollectIncomeCsReq = struct {
    DGCFLHCPJLN: u32 = 0,

    pub const _desc_table = .{
        .DGCFLHCPJLN = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesCollectIncomeScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PFBFIMJFEGI = struct {
    avatar_id: u32 = 0,
    DGCFLHCPJLN: u32 = 0,

    pub const _desc_table = .{
        .avatar_id = fd(14, .{ .Varint = .Simple }),
        .DGCFLHCPJLN = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesSetAvatarWorkCsReq = struct {
    KNGPOFHNFAJ: ArrayList(PFBFIMJFEGI),

    pub const _desc_table = .{
        .KNGPOFHNFAJ = fd(3, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesSetAvatarWorkScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesBuyLandCsReq = struct {
    DGCFLHCPJLN: u32 = 0,

    pub const _desc_table = .{
        .DGCFLHCPJLN = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesBuyLandScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesClientStatusCsReq = struct {
    FJINNLFCBOJ: bool = false,

    pub const _desc_table = .{
        .FJINNLFCBOJ = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesClientStatusScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesCollectAllIncomeCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesCollectAllIncomeScRsp = struct {
    retcode: u32 = 0,
    GNDCAMMILOI: ?IIKNGNHDMFI = null,

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
        .GNDCAMMILOI = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesDoGachaCsReq = struct {
    gacha_count: u32 = 0,
    simulate_magic: u32 = 0,
    gacha_id: u32 = 0,

    pub const _desc_table = .{
        .gacha_count = fd(1, .{ .Varint = .Simple }),
        .simulate_magic = fd(6, .{ .Varint = .Simple }),
        .gacha_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NEIHLDGEBHE = struct {
    avatar_id: u32 = 0,
    FLJPKFJAJFP: u32 = 0,
    JKJNCNCLFLD: u32 = 0,
    LPDEOPGELLE: ?BFAAEFCEJPA = null,

    pub const _desc_table = .{
        .avatar_id = fd(8, .{ .Varint = .Simple }),
        .FLJPKFJAJFP = fd(11, .{ .Varint = .Simple }),
        .JKJNCNCLFLD = fd(1, .{ .Varint = .Simple }),
        .LPDEOPGELLE = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CGOJKBOEOFO = struct {
    GMOFKLBFAPL: ArrayList(BFAAEFCEJPA),
    JCDJCANEHJD: ArrayList(u32),
    DHHAPHNMEDF: ArrayList(NEIHLDGEBHE),
    CABCGKNGAOC: ?IIKNGNHDMFI = null,

    pub const _desc_table = .{
        .GMOFKLBFAPL = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .JCDJCANEHJD = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
        .DHHAPHNMEDF = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .CABCGKNGAOC = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PJCAKIFOOCP = struct {
    JFMAHMOFJPI: ?DJIAEMANGCG = null,
    ECDAMBIIFCI: ArrayList(u32),

    pub const _desc_table = .{
        .JFMAHMOFJPI = fd(3, .{ .SubMessage = {} }),
        .ECDAMBIIFCI = fd(11, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesDoGachaScRsp = struct {
    gacha_id: u32 = 0,
    CIKEPDANGFD: ArrayList(CEODDCEIDDL),
    retcode: u32 = 0,
    MICMCKAHMPL: ?MICMCKAHMPL_union,

    pub const _MICMCKAHMPL_case = enum {
        IDGKLMCEPBO,
        JABDCPFPOKE,
    };
    pub const MICMCKAHMPL_union = union(_MICMCKAHMPL_case) {
        IDGKLMCEPBO: CGOJKBOEOFO,
        JABDCPFPOKE: PJCAKIFOOCP,
        pub const _union_desc = .{
            .IDGKLMCEPBO = fd(14, .{ .SubMessage = {} }),
            .JABDCPFPOKE = fd(11, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .gacha_id = fd(13, .{ .Varint = .Simple }),
        .CIKEPDANGFD = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(9, .{ .Varint = .Simple }),
        .MICMCKAHMPL = fd(null, .{ .OneOf = MICMCKAHMPL_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesAvatarLevelUpCsReq = struct {
    LDNJEACFBJE: u32 = 0,
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .LDNJEACFBJE = fd(2, .{ .Varint = .Simple }),
        .avatar_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesAvatarLevelUpScRsp = struct {
    retcode: u32 = 0,
    avatar_id: u32 = 0,
    reward: ?PlanetFesReward = null,
    BHPFPEJBKEC: u32 = 0,
    LDNJEACFBJE: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(15, .{ .Varint = .Simple }),
        .avatar_id = fd(8, .{ .Varint = .Simple }),
        .reward = fd(11, .{ .SubMessage = {} }),
        .BHPFPEJBKEC = fd(10, .{ .Varint = .Simple }),
        .LDNJEACFBJE = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesTakeQuestRewardCsReq = struct {
    quest_id: u32 = 0,

    pub const _desc_table = .{
        .quest_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesTakeQuestRewardScRsp = struct {
    quest_id: u32 = 0,
    retcode: u32 = 0,
    DNFFKABFOEF: ?DJIAEMANGCG = null,

    pub const _desc_table = .{
        .quest_id = fd(6, .{ .Varint = .Simple }),
        .retcode = fd(11, .{ .Varint = .Simple }),
        .DNFFKABFOEF = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesUpgradeSkillLevelCsReq = struct {
    LDNJEACFBJE: u32 = 0,
    skill_id: u32 = 0,

    pub const _desc_table = .{
        .LDNJEACFBJE = fd(8, .{ .Varint = .Simple }),
        .skill_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesUpgradeSkillLevelScRsp = struct {
    retcode: u32 = 0,
    item_cost: ?CEODDCEIDDL = null,
    skill_level: u32 = 0,
    skill_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(10, .{ .Varint = .Simple }),
        .item_cost = fd(14, .{ .SubMessage = {} }),
        .skill_level = fd(3, .{ .Varint = .Simple }),
        .skill_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesReward = struct {
    item_list: ArrayList(CEODDCEIDDL),
    coin: ?IIKNGNHDMFI = null,
    buff_map: ArrayList(BuffMapEntry),

    pub const _desc_table = .{
        .item_list = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .coin = fd(11, .{ .SubMessage = {} }),
        .buff_map = fd(8, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const BuffMapEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KNOKILFKOHI = struct {
    avatar_id: u32 = 0,
    JOOOEAFOKHK: u32 = 0,
    AOPIKHKKGLM: u32 = 0,

    pub const _desc_table = .{
        .avatar_id = fd(13, .{ .Varint = .Simple }),
        .JOOOEAFOKHK = fd(12, .{ .Varint = .Simple }),
        .AOPIKHKKGLM = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DLLJMIAGHDD = struct {
    FJHGCKENOPF: ArrayList(KNOKILFKOHI),

    pub const _desc_table = .{
        .FJHGCKENOPF = fd(9, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EFHABDOFKDE = struct {
    BPCFOEGHONC: u32 = 0,
    AGMGPPAOMKA: ArrayList(AGMGPPAOMKAEntry),
    NNGOPAKJICC: u32 = 0,
    EPMOOHCJNHO: u32 = 0,

    pub const _desc_table = .{
        .BPCFOEGHONC = fd(11, .{ .Varint = .Simple }),
        .AGMGPPAOMKA = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .NNGOPAKJICC = fd(14, .{ .Varint = .Simple }),
        .EPMOOHCJNHO = fd(6, .{ .Varint = .Simple }),
    };

    pub const AGMGPPAOMKAEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CGOMNLBLJGH = struct {
    OOHNKOJHDHO: u32 = 0,
    rogue_current_info: ?HLDHEMLPJNG = null,
    AFGKFIFJFCL: u32 = 0,

    pub const _desc_table = .{
        .OOHNKOJHDHO = fd(8, .{ .Varint = .Simple }),
        .rogue_current_info = fd(3, .{ .SubMessage = {} }),
        .AFGKFIFJFCL = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const POHNIIFLCGE = struct {
    DGDDJNHLGGJ: u32 = 0,

    pub const _desc_table = .{
        .DGDDJNHLGGJ = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BKODHAEECJH = struct {
    CGDGPGJLKNM: u32 = 0,
    HDDIJNADFDD: u32 = 0,
    DGDDJNHLGGJ: u32 = 0,

    pub const _desc_table = .{
        .CGDGPGJLKNM = fd(15, .{ .Varint = .Simple }),
        .HDDIJNADFDD = fd(8, .{ .Varint = .Simple }),
        .DGDDJNHLGGJ = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CBOEMEJIFFE = struct {
    DGDDJNHLGGJ: u32 = 0,

    pub const _desc_table = .{
        .DGDDJNHLGGJ = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JOFGDAIADBO = struct {
    DAJJJFCHOOJ: u32 = 0,
    BKMAMGAPEGH: u32 = 0,
    CHNLIOKGLBP: bool = false,
    PKLCNHICGIA: bool = false,
    FOMJLFJCKDB: bool = false,
    LJHEOCHHCAB: i64 = 0,
    HOIOKBKGFDN: u32 = 0,
    ECOEKHPGMEA: ?ECOEKHPGMEA_union,

    pub const _ECOEKHPGMEA_case = enum {
        PGMBLLOOBMA,
        GILDJPKDPNN,
        BOLAIPLEFPI,
        GENPKDAEIHC,
        JFNHPIEGMMM,
        JLEFNHIKFOC,
    };
    pub const ECOEKHPGMEA_union = union(_ECOEKHPGMEA_case) {
        PGMBLLOOBMA: DLLJMIAGHDD,
        GILDJPKDPNN: EFHABDOFKDE,
        BOLAIPLEFPI: CGOMNLBLJGH,
        GENPKDAEIHC: POHNIIFLCGE,
        JFNHPIEGMMM: BKODHAEECJH,
        JLEFNHIKFOC: CBOEMEJIFFE,
        pub const _union_desc = .{
            .PGMBLLOOBMA = fd(8, .{ .SubMessage = {} }),
            .GILDJPKDPNN = fd(12, .{ .SubMessage = {} }),
            .BOLAIPLEFPI = fd(10, .{ .SubMessage = {} }),
            .GENPKDAEIHC = fd(7, .{ .SubMessage = {} }),
            .JFNHPIEGMMM = fd(15, .{ .SubMessage = {} }),
            .JLEFNHIKFOC = fd(11, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .DAJJJFCHOOJ = fd(3, .{ .Varint = .Simple }),
        .BKMAMGAPEGH = fd(4, .{ .Varint = .Simple }),
        .CHNLIOKGLBP = fd(9, .{ .Varint = .Simple }),
        .PKLCNHICGIA = fd(14, .{ .Varint = .Simple }),
        .FOMJLFJCKDB = fd(2, .{ .Varint = .Simple }),
        .LJHEOCHHCAB = fd(5, .{ .Varint = .Simple }),
        .HOIOKBKGFDN = fd(13, .{ .Varint = .Simple }),
        .ECOEKHPGMEA = fd(null, .{ .OneOf = ECOEKHPGMEA_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ILMELFJCCMD = struct {
    PEHINGJKGCB: ?IIKNGNHDMFI = null,
    BKMAMGAPEGH: u32 = 0,
    DKHIGCIPEKF: bool = false,
    KMNDEBCFFAD: ArrayList(JOFGDAIADBO),
    BIINNCNDPCG: bool = false,
    COIFHFPEGPH: i64 = 0,
    HIJDDFBEDPO: ArrayList(HIJDDFBEDPOEntry),

    pub const _desc_table = .{
        .PEHINGJKGCB = fd(5, .{ .SubMessage = {} }),
        .BKMAMGAPEGH = fd(12, .{ .Varint = .Simple }),
        .DKHIGCIPEKF = fd(15, .{ .Varint = .Simple }),
        .KMNDEBCFFAD = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .BIINNCNDPCG = fd(8, .{ .Varint = .Simple }),
        .COIFHFPEGPH = fd(1, .{ .Varint = .Simple }),
        .HIJDDFBEDPO = fd(7, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const HIJDDFBEDPOEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FLNIDKIGGBK = struct {
    DKHIGCIPEKF: bool = false,
    BKMAMGAPEGH: u32 = 0,
    KNEINMNLCDI: ?IIKNGNHDMFI = null,
    OEBAFBIGMBC: ArrayList(NPAIINEKEFB),
    PEHINGJKGCB: ?IIKNGNHDMFI = null,
    GJPANOCNGBM: u32 = 0,

    pub const _desc_table = .{
        .DKHIGCIPEKF = fd(13, .{ .Varint = .Simple }),
        .BKMAMGAPEGH = fd(7, .{ .Varint = .Simple }),
        .KNEINMNLCDI = fd(15, .{ .SubMessage = {} }),
        .OEBAFBIGMBC = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .PEHINGJKGCB = fd(4, .{ .SubMessage = {} }),
        .GJPANOCNGBM = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LEAAHDPAIEG = struct {
    AGMAMBDEHLK: bool = false,
    HOIOKBKGFDN: u32 = 0,

    pub const _desc_table = .{
        .AGMAMBDEHLK = fd(15, .{ .Varint = .Simple }),
        .HOIOKBKGFDN = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EGBKGEMFODN = struct {
    DPPIMJNDNDF: ArrayList(FLNIDKIGGBK),
    CCBBDGFFFAG: ArrayList(u32),
    NFIOACFHJNK: ArrayList(LEAAHDPAIEG),
    NCIKKFENHJF: ?ILMELFJCCMD = null,
    HJNOIENGEDL: u32 = 0,
    BLMNEKFPAGH: u32 = 0,

    pub const _desc_table = .{
        .DPPIMJNDNDF = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .CCBBDGFFFAG = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .NFIOACFHJNK = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .NCIKKFENHJF = fd(11, .{ .SubMessage = {} }),
        .HJNOIENGEDL = fd(1, .{ .Varint = .Simple }),
        .BLMNEKFPAGH = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesGetBusinessDayInfoCsReq = struct {
    MKBPDPAFAPK: bool = false,

    pub const _desc_table = .{
        .MKBPDPAFAPK = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesGetBusinessDayInfoScRsp = struct {
    retcode: u32 = 0,
    BCFBFMMENJK: i64 = 0,
    AAKDAHHIGIF: ?EGBKGEMFODN = null,

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
        .BCFBFMMENJK = fd(13, .{ .Varint = .Simple }),
        .AAKDAHHIGIF = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JNIPIAADOIP = struct {
    BIINNCNDPCG: bool = false,
    MLGFJGCHONH: u32 = 0,
    DKHIGCIPEKF: bool = false,
    BLMNEKFPAGH: u32 = 0,
    BCFBFMMENJK: i64 = 0,
    HJNOIENGEDL: u32 = 0,

    pub const _desc_table = .{
        .BIINNCNDPCG = fd(15, .{ .Varint = .Simple }),
        .MLGFJGCHONH = fd(10, .{ .Varint = .Simple }),
        .DKHIGCIPEKF = fd(3, .{ .Varint = .Simple }),
        .BLMNEKFPAGH = fd(8, .{ .Varint = .Simple }),
        .BCFBFMMENJK = fd(6, .{ .Varint = .Simple }),
        .HJNOIENGEDL = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesBusinessDayRefreshEventCsReq = struct {
    HOIOKBKGFDN: u32 = 0,
    BKMAMGAPEGH: u32 = 0,
    KBLPJCFNHLE: bool = false,

    pub const _desc_table = .{
        .HOIOKBKGFDN = fd(1, .{ .Varint = .Simple }),
        .BKMAMGAPEGH = fd(4, .{ .Varint = .Simple }),
        .KBLPJCFNHLE = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesBusinessDayRefreshEventScRsp = struct {
    retcode: u32 = 0,
    NFJLFNBPPPG: ?JOFGDAIADBO = null,

    pub const _desc_table = .{
        .retcode = fd(5, .{ .Varint = .Simple }),
        .NFJLFNBPPPG = fd(4, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesDeliverPamCargoCsReq = struct {
    avatar_id: u32 = 0,
    AOPIKHKKGLM: u32 = 0,

    pub const _desc_table = .{
        .avatar_id = fd(9, .{ .Varint = .Simple }),
        .AOPIKHKKGLM = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesDeliverPamCargoScRsp = struct {
    NFJLFNBPPPG: ?JOFGDAIADBO = null,
    GCBDEDABGKO: ?PlanetFesReward = null,
    retcode: u32 = 0,
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .NFJLFNBPPPG = fd(2, .{ .SubMessage = {} }),
        .GCBDEDABGKO = fd(3, .{ .SubMessage = {} }),
        .retcode = fd(11, .{ .Varint = .Simple }),
        .avatar_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesChooseAvatarEventOptionCsReq = struct {
    NFCAAMBMMMB: u32 = 0,

    pub const _desc_table = .{
        .NFCAAMBMMMB = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesChooseAvatarEventOptionScRsp = struct {
    reward: ?PlanetFesReward = null,
    EPMOOHCJNHO: u32 = 0,
    retcode: u32 = 0,
    OJKJPKHDEPE: u32 = 0,
    NFJLFNBPPPG: ?JOFGDAIADBO = null,
    HAKKGODICFI: u32 = 0,

    pub const _desc_table = .{
        .reward = fd(7, .{ .SubMessage = {} }),
        .EPMOOHCJNHO = fd(15, .{ .Varint = .Simple }),
        .retcode = fd(2, .{ .Varint = .Simple }),
        .OJKJPKHDEPE = fd(1, .{ .Varint = .Simple }),
        .NFJLFNBPPPG = fd(14, .{ .SubMessage = {} }),
        .HAKKGODICFI = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesDealAvatarEventOptionItemCsReq = struct {
    LECDHDDCEIA: bool = false,
    NNGOPAKJICC: u32 = 0,

    pub const _desc_table = .{
        .LECDHDDCEIA = fd(8, .{ .Varint = .Simple }),
        .NNGOPAKJICC = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesDealAvatarEventOptionItemScRsp = struct {
    retcode: u32 = 0,
    reward: ?PlanetFesReward = null,
    OJKJPKHDEPE: u32 = 0,
    HAKKGODICFI: u32 = 0,
    NFJLFNBPPPG: ?JOFGDAIADBO = null,
    LECDHDDCEIA: bool = false,

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
        .reward = fd(2, .{ .SubMessage = {} }),
        .OJKJPKHDEPE = fd(8, .{ .Varint = .Simple }),
        .HAKKGODICFI = fd(10, .{ .Varint = .Simple }),
        .NFJLFNBPPPG = fd(11, .{ .SubMessage = {} }),
        .LECDHDDCEIA = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesTakeRegionPhaseRewardCsReq = struct {
    NDBOJANDNJN: u32 = 0,

    pub const _desc_table = .{
        .NDBOJANDNJN = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesTakeRegionPhaseRewardScRsp = struct {
    retcode: u32 = 0,
    NDBOJANDNJN: u32 = 0,
    reward_list: ?ItemList = null,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
        .NDBOJANDNJN = fd(12, .{ .Varint = .Simple }),
        .reward_list = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CNLMDFFEFJM = struct {
    HFKGGOEPPLE: ArrayList(u32),
    CDLBEHLAMMM: ArrayList(u32),
    ALHANJKLBOO: u32 = 0,
    GPAGHIAJICD: u32 = 0,

    pub const _desc_table = .{
        .HFKGGOEPPLE = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
        .CDLBEHLAMMM = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .ALHANJKLBOO = fd(8, .{ .Varint = .Simple }),
        .GPAGHIAJICD = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HLDHEMLPJNG = struct {
    OOHNKOJHDHO: u32 = 0,
    ACDOPCBMPNL: u32 = 0,
    EJCOLGNJGDC: ?CNLMDFFEFJM = null,

    pub const _desc_table = .{
        .OOHNKOJHDHO = fd(3, .{ .Varint = .Simple }),
        .ACDOPCBMPNL = fd(9, .{ .Varint = .Simple }),
        .EJCOLGNJGDC = fd(5, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FMNHLKNJNAH = struct {
    PKHLGKKIPPA: ArrayList(u32),

    pub const _desc_table = .{
        .PKHLGKKIPPA = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesStartMiniGameCsReq = struct {
    OOHNKOJHDHO: u32 = 0,
    ACDOPCBMPNL: u32 = 0,

    pub const _desc_table = .{
        .OOHNKOJHDHO = fd(15, .{ .Varint = .Simple }),
        .ACDOPCBMPNL = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesStartMiniGameScRsp = struct {
    reward: ?PlanetFesReward = null,
    rogue_current_info: ?HLDHEMLPJNG = null,
    retcode: u32 = 0,
    JFMAHMOFJPI: ?FMNHLKNJNAH = null,

    pub const _desc_table = .{
        .reward = fd(13, .{ .SubMessage = {} }),
        .rogue_current_info = fd(1, .{ .SubMessage = {} }),
        .retcode = fd(15, .{ .Varint = .Simple }),
        .JFMAHMOFJPI = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesUseItemCsReq = struct {
    DIOOKFOCCMO: u32 = 0,
    item_id: u32 = 0,

    pub const _desc_table = .{
        .DIOOKFOCCMO = fd(13, .{ .Varint = .Simple }),
        .item_id = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesUseItemScRsp = struct {
    retcode: u32 = 0,
    reward: ?PlanetFesReward = null,

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
        .reward = fd(15, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesGameBingoFlipCsReq = struct {
    HCFPOFMDGKN: u32 = 0,

    pub const _desc_table = .{
        .HCFPOFMDGKN = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesGameBingoFlipScRsp = struct {
    HCFPOFMDGKN: u32 = 0,
    retcode: u32 = 0,
    reward: ?PlanetFesReward = null,
    NFEADMFNFLK: bool = false,

    pub const _desc_table = .{
        .HCFPOFMDGKN = fd(10, .{ .Varint = .Simple }),
        .retcode = fd(7, .{ .Varint = .Simple }),
        .reward = fd(1, .{ .SubMessage = {} }),
        .NFEADMFNFLK = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesBonusEventInteractCsReq = struct {
    HOIOKBKGFDN: u32 = 0,
    APMODAGOHNA: u32 = 0,

    pub const _desc_table = .{
        .HOIOKBKGFDN = fd(15, .{ .Varint = .Simple }),
        .APMODAGOHNA = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesBonusEventInteractScRsp = struct {
    HOIOKBKGFDN: u32 = 0,
    NFJLFNBPPPG: ?JOFGDAIADBO = null,
    reward: ?PlanetFesReward = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .HOIOKBKGFDN = fd(4, .{ .Varint = .Simple }),
        .NFJLFNBPPPG = fd(9, .{ .SubMessage = {} }),
        .reward = fd(13, .{ .SubMessage = {} }),
        .retcode = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EIKAIIDAEPP = struct {
    BKMAMGAPEGH: u32 = 0,
    HHJOCGOMECO: ?IIKNGNHDMFI = null,
    HDCBEJDENLA: u32 = 0,
    LNJIIHHPMED: u32 = 0,
    DGJDMOCBBII: u32 = 0,
    PJOLEMHLGNL: u32 = 0,
    uid: u32 = 0,

    pub const _desc_table = .{
        .BKMAMGAPEGH = fd(2, .{ .Varint = .Simple }),
        .HHJOCGOMECO = fd(14, .{ .SubMessage = {} }),
        .HDCBEJDENLA = fd(11, .{ .Varint = .Simple }),
        .LNJIIHHPMED = fd(10, .{ .Varint = .Simple }),
        .DGJDMOCBBII = fd(8, .{ .Varint = .Simple }),
        .PJOLEMHLGNL = fd(13, .{ .Varint = .Simple }),
        .uid = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesGetFriendRankingInfoListCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesGetFriendRankingInfoListScRsp = struct {
    ICMGEGEFDLE: ?EIKAIIDAEPP = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .ICMGEGEFDLE = fd(1, .{ .SubMessage = {} }),
        .retcode = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesFriendRankingInfoChangeScNotify = struct {
    CNHEKLKBMHH: ArrayList(EIKAIIDAEPP),

    pub const _desc_table = .{
        .CNHEKLKBMHH = fd(7, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesSetCustomKeyValueCsReq = struct {
    value: u32 = 0,
    key: u32 = 0,

    pub const _desc_table = .{
        .value = fd(2, .{ .Varint = .Simple }),
        .key = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesSetCustomKeyValueScRsp = struct {
    retcode: u32 = 0,
    value: u32 = 0,
    key: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(8, .{ .Varint = .Simple }),
        .value = fd(14, .{ .Varint = .Simple }),
        .key = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesUpgradeFesLevelCsReq = struct {
    LDNJEACFBJE: u32 = 0,

    pub const _desc_table = .{
        .LDNJEACFBJE = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesUpgradeFesLevelScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesGetAvatarStatCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesGetAvatarStatScRsp = struct {
    OEBAFBIGMBC: ArrayList(NPAIINEKEFB),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .OEBAFBIGMBC = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DEINADPEHKE = struct {
    JPACOBGBDBG: ArrayList(u32),
    OFGFHCLDOBG: u32 = 0,
    PNAKHNBDJAE: u32 = 0,
    apply_time: i64 = 0,

    pub const _desc_table = .{
        .JPACOBGBDBG = fd(11, .{ .PackedList = .{ .Varint = .Simple } }),
        .OFGFHCLDOBG = fd(6, .{ .Varint = .Simple }),
        .PNAKHNBDJAE = fd(3, .{ .Varint = .Simple }),
        .apply_time = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BKBILPDKOIL = struct {
    time: i64 = 0,
    JPACOBGBDBG: ArrayList(u32),
    LHJPKMDMNMP: u32 = 0,
    CABEHKOFLPG: bool = false,
    HPJJDCJHHOA: u64 = 0,

    pub const _desc_table = .{
        .time = fd(6, .{ .Varint = .Simple }),
        .JPACOBGBDBG = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
        .LHJPKMDMNMP = fd(12, .{ .Varint = .Simple }),
        .CABEHKOFLPG = fd(5, .{ .Varint = .Simple }),
        .HPJJDCJHHOA = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GJIPJNGNFEJ = struct {
    OFGFHCLDOBG: u32 = 0,
    PNAKHNBDJAE: u32 = 0,
    source: u32 = 0,
    JPACOBGBDBG: ArrayList(u32),
    time: i64 = 0,

    pub const _desc_table = .{
        .OFGFHCLDOBG = fd(13, .{ .Varint = .Simple }),
        .PNAKHNBDJAE = fd(11, .{ .Varint = .Simple }),
        .source = fd(12, .{ .Varint = .Simple }),
        .JPACOBGBDBG = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
        .time = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesGetExtraCardPieceInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FFAPKCNAPID = struct {
    GEDGLNCPGGN: ArrayList(DEINADPEHKE),
    AOAEFEIBBMF: u32 = 0,
    IEMNJHLFGKD: ArrayList(u32),
    AIIEKLILMJC: i64 = 0,
    uid: u32 = 0,
    OBBOCCNFLOL: ArrayList(GJIPJNGNFEJ),
    HLKPNECAMBL: u32 = 0,
    PBFHDNBGMBP: ArrayList(CEODDCEIDDL),

    pub const _desc_table = .{
        .GEDGLNCPGGN = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .AOAEFEIBBMF = fd(7, .{ .Varint = .Simple }),
        .IEMNJHLFGKD = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
        .AIIEKLILMJC = fd(11, .{ .Varint = .Simple }),
        .uid = fd(1, .{ .Varint = .Simple }),
        .OBBOCCNFLOL = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .HLKPNECAMBL = fd(4, .{ .Varint = .Simple }),
        .PBFHDNBGMBP = fd(5, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesGetExtraCardPieceInfoScRsp = struct {
    BAAMHDNNKIA: ?FFAPKCNAPID = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .BAAMHDNNKIA = fd(14, .{ .SubMessage = {} }),
        .retcode = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesGetFriendCardPieceCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesGetFriendCardPieceScRsp = struct {
    retcode: u32 = 0,
    CGDANDNIBGJ: ArrayList(FFAPKCNAPID),

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
        .CGDANDNIBGJ = fd(14, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesChangeCardPieceApplyPermissionCsReq = struct {
    HLKPNECAMBL: u32 = 0,

    pub const _desc_table = .{
        .HLKPNECAMBL = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesChangeCardPieceApplyPermissionScRsp = struct {
    HLKPNECAMBL: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .HLKPNECAMBL = fd(2, .{ .Varint = .Simple }),
        .retcode = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesApplyCardPieceCsReq = struct {
    JPACOBGBDBG: ArrayList(u32),
    CBEGNBKMHCD: u32 = 0,

    pub const _desc_table = .{
        .JPACOBGBDBG = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
        .CBEGNBKMHCD = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesApplyCardPieceScRsp = struct {
    retcode: u32 = 0,
    JPACOBGBDBG: ArrayList(u32),
    MCFFPIEEKNN: bool = false,
    CBEGNBKMHCD: u32 = 0,
    EPCPDOCDOCB: i64 = 0,
    PNAKHNBDJAE: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(5, .{ .Varint = .Simple }),
        .JPACOBGBDBG = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
        .MCFFPIEEKNN = fd(12, .{ .Varint = .Simple }),
        .CBEGNBKMHCD = fd(4, .{ .Varint = .Simple }),
        .EPCPDOCDOCB = fd(1, .{ .Varint = .Simple }),
        .PNAKHNBDJAE = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesHandleCardPieceApplyCsReq = struct {
    DLHBCOKCIDP: ArrayList(u32),
    PNAKHNBDJAE: u32 = 0,
    MDAPCFHELJL: bool = false,
    OFGFHCLDOBG: u32 = 0,

    pub const _desc_table = .{
        .DLHBCOKCIDP = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
        .PNAKHNBDJAE = fd(4, .{ .Varint = .Simple }),
        .MDAPCFHELJL = fd(12, .{ .Varint = .Simple }),
        .OFGFHCLDOBG = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesHandleCardPieceApplyScRsp = struct {
    MDAPCFHELJL: bool = false,
    DLHBCOKCIDP: ArrayList(u32),
    retcode: u32 = 0,
    PPIOLCLPMPL: i64 = 0,
    PNAKHNBDJAE: u32 = 0,

    pub const _desc_table = .{
        .MDAPCFHELJL = fd(15, .{ .Varint = .Simple }),
        .DLHBCOKCIDP = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(3, .{ .Varint = .Simple }),
        .PPIOLCLPMPL = fd(8, .{ .Varint = .Simple }),
        .PNAKHNBDJAE = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesGetOfferedCardPieceCsReq = struct {
    CABEHKOFLPG: bool = false,
    HPJJDCJHHOA: u64 = 0,

    pub const _desc_table = .{
        .CABEHKOFLPG = fd(8, .{ .Varint = .Simple }),
        .HPJJDCJHHOA = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesGetOfferedCardPieceScRsp = struct {
    HPJJDCJHHOA: u64 = 0,
    PBFHDNBGMBP: ArrayList(CEODDCEIDDL),
    ONJGMGHCPEF: ArrayList(BKBILPDKOIL),
    retcode: u32 = 0,
    CABEHKOFLPG: bool = false,
    DLJCKCMADHJ: i64 = 0,

    pub const _desc_table = .{
        .HPJJDCJHHOA = fd(9, .{ .Varint = .Simple }),
        .PBFHDNBGMBP = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .ONJGMGHCPEF = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(15, .{ .Varint = .Simple }),
        .CABEHKOFLPG = fd(14, .{ .Varint = .Simple }),
        .DLJCKCMADHJ = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesGiveCardPieceCsReq = struct {
    CBEGNBKMHCD: u32 = 0,
    DLHBCOKCIDP: ArrayList(u32),

    pub const _desc_table = .{
        .CBEGNBKMHCD = fd(3, .{ .Varint = .Simple }),
        .DLHBCOKCIDP = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesGiveCardPieceScRsp = struct {
    retcode: u32 = 0,
    HPJJDCJHHOA: u64 = 0,
    PPIOLCLPMPL: i64 = 0,
    CBEGNBKMHCD: u32 = 0,
    DLHBCOKCIDP: ArrayList(u32),

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
        .HPJJDCJHHOA = fd(2, .{ .Varint = .Simple }),
        .PPIOLCLPMPL = fd(3, .{ .Varint = .Simple }),
        .CBEGNBKMHCD = fd(13, .{ .Varint = .Simple }),
        .DLHBCOKCIDP = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesLargeBonusInteractCsReq = struct {
    MOPFFBMABCD: u32 = 0,
    OOIOOKGMEHP: u32 = 0,
    IHCILNHKLMC: u32 = 0,

    pub const _desc_table = .{
        .MOPFFBMABCD = fd(14, .{ .Varint = .Simple }),
        .OOIOOKGMEHP = fd(12, .{ .Varint = .Simple }),
        .IHCILNHKLMC = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesLargeBonusInteractScRsp = struct {
    NFJLFNBPPPG: ?JOFGDAIADBO = null,
    retcode: u32 = 0,
    IHCILNHKLMC: u32 = 0,
    GMIDJMMMJKP: ?IIKNGNHDMFI = null,

    pub const _desc_table = .{
        .NFJLFNBPPPG = fd(7, .{ .SubMessage = {} }),
        .retcode = fd(2, .{ .Varint = .Simple }),
        .IHCILNHKLMC = fd(4, .{ .Varint = .Simple }),
        .GMIDJMMMJKP = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesEnterNextBusinessDayCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlanetFesEnterNextBusinessDayScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerLoginCsReq = struct {
    IGNFBLGJIOJ: ManagedString = .Empty,
    signature: ManagedString = .Empty,
    FADPDIBKNBI: LanguageType = @enumFromInt(0),
    client_version: ManagedString = .Empty,
    OEENCFMCAHD: bool = false,
    client_res_version: u32 = 0,
    OEHJLODAHFN: ManagedString = .Empty,
    BNIGPDOOILI: ManagedString = .Empty,
    HJDMJPEBPPM: ManagedString = .Empty,
    KFDJEIEOBBN: ManagedString = .Empty,
    DMPMHCCFBKG: ManagedString = .Empty,
    OCDACJNNJNJ: ManagedString = .Empty,
    PKLICGMEIMB: ?OCCHNEFHGNE = null,
    OHPCKCNAEIK: ManagedString = .Empty,
    MLNABEPINDB: u32 = 0,
    NHBHBALHJML: u32 = 0,
    login_random: u64 = 0,
    AKCEJFCFBAN: ManagedString = .Empty,
    rogue_get_info: ManagedString = .Empty,
    BPCKJKDENCB: ManagedString = .Empty,
    GMALCPNOHBF: ManagedString = .Empty,
    GEHAPNIHCDO: bool = false,
    platform: PlatformType = @enumFromInt(0),
    KIBBNBNGIJD: ManagedString = .Empty,
    HAEHHCPOAPP: u32 = 0,
    JMKHDHAIOIM: u32 = 0,
    MIOHKAOIDNK: ?JGFKICDCFLJ = null,
    BNBOALIAPAE: ManagedString = .Empty,

    pub const _desc_table = .{
        .IGNFBLGJIOJ = fd(1837, .String),
        .signature = fd(5, .String),
        .FADPDIBKNBI = fd(12, .{ .Varint = .Simple }),
        .client_version = fd(9, .String),
        .OEENCFMCAHD = fd(1499, .{ .Varint = .Simple }),
        .client_res_version = fd(10, .{ .Varint = .Simple }),
        .OEHJLODAHFN = fd(15, .String),
        .BNIGPDOOILI = fd(7, .String),
        .HJDMJPEBPPM = fd(4, .String),
        .KFDJEIEOBBN = fd(691, .String),
        .DMPMHCCFBKG = fd(3, .String),
        .OCDACJNNJNJ = fd(13, .String),
        .PKLICGMEIMB = fd(1767, .{ .SubMessage = {} }),
        .OHPCKCNAEIK = fd(822, .String),
        .MLNABEPINDB = fd(1991, .{ .Varint = .Simple }),
        .NHBHBALHJML = fd(2018, .{ .Varint = .Simple }),
        .login_random = fd(14, .{ .Varint = .Simple }),
        .AKCEJFCFBAN = fd(379, .String),
        .rogue_get_info = fd(11, .String),
        .BPCKJKDENCB = fd(1403, .String),
        .GMALCPNOHBF = fd(1579, .String),
        .GEHAPNIHCDO = fd(150, .{ .Varint = .Simple }),
        .platform = fd(2, .{ .Varint = .Simple }),
        .KIBBNBNGIJD = fd(6, .String),
        .HAEHHCPOAPP = fd(320, .{ .Varint = .Simple }),
        .JMKHDHAIOIM = fd(1, .{ .Varint = .Simple }),
        .MIOHKAOIDNK = fd(1553, .{ .SubMessage = {} }),
        .BNBOALIAPAE = fd(8, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerLoginScRsp = struct {
    PDIKPEIFANN: ManagedString = .Empty,
    retcode: u32 = 0,
    cur_timezone: i32 = 0,
    login_random: u64 = 0,
    stamina: u32 = 0,
    JLPKEOBINCP: bool = false,
    server_timestamp_ms: u64 = 0,
    NHMHABJKHOG: ManagedString = .Empty,
    basic_info: ?PlayerBasicInfo = null,
    IGKBEAMLNBJ: bool = false,

    pub const _desc_table = .{
        .PDIKPEIFANN = fd(5, .String),
        .retcode = fd(4, .{ .Varint = .Simple }),
        .cur_timezone = fd(1, .{ .Varint = .Simple }),
        .login_random = fd(13, .{ .Varint = .Simple }),
        .stamina = fd(14, .{ .Varint = .Simple }),
        .JLPKEOBINCP = fd(2, .{ .Varint = .Simple }),
        .server_timestamp_ms = fd(6, .{ .Varint = .Simple }),
        .NHMHABJKHOG = fd(12, .String),
        .basic_info = fd(8, .{ .SubMessage = {} }),
        .IGKBEAMLNBJ = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LMIPMHHPFHN = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerGetTokenCsReq = struct {
    MEMPBKCJJFJ: ManagedString = .Empty,
    account_uid: ManagedString = .Empty,
    platform: u32 = 0,
    uid: u32 = 0,
    HAEHHCPOAPP: u32 = 0,
    ICMFPNPIJJF: u32 = 0,
    token: ManagedString = .Empty,
    FGOJLPAEJEC: u32 = 0,

    pub const _desc_table = .{
        .MEMPBKCJJFJ = fd(12, .String),
        .account_uid = fd(10, .String),
        .platform = fd(15, .{ .Varint = .Simple }),
        .uid = fd(11, .{ .Varint = .Simple }),
        .HAEHHCPOAPP = fd(5, .{ .Varint = .Simple }),
        .ICMFPNPIJJF = fd(3, .{ .Varint = .Simple }),
        .token = fd(6, .String),
        .FGOJLPAEJEC = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerGetTokenScRsp = struct {
    secret_key_seed: u64 = 0,
    black_info: ?BlackInfo = null,
    msg: ManagedString = .Empty,
    retcode: u32 = 0,
    uid: u32 = 0,

    pub const _desc_table = .{
        .secret_key_seed = fd(9, .{ .Varint = .Simple }),
        .black_info = fd(12, .{ .SubMessage = {} }),
        .msg = fd(4, .String),
        .retcode = fd(14, .{ .Varint = .Simple }),
        .uid = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GmTalkScNotify = struct {
    msg: ManagedString = .Empty,

    pub const _desc_table = .{
        .msg = fd(5, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerKickOutScNotify = struct {
    black_info: ?BlackInfo = null,
    kick_type: KickType = @enumFromInt(0),

    pub const _desc_table = .{
        .black_info = fd(7, .{ .SubMessage = {} }),
        .kick_type = fd(9, .{ .Varint = .Simple }),
    };

    pub const KickType = enum(i32) {
        KICK_SQUEEZED = 0,
        KICK_BLACK = 1,
        KICK_CHANGE_PWD = 2,
        KICK_LOGIN_WHITE_TIMEOUT = 3,
        KICK_ACE_ANTI_CHEATER = 4,
        KICK_BY_GM = 5,
        _,
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GmTalkCsReq = struct {
    msg: ManagedString = .Empty,

    pub const _desc_table = .{
        .msg = fd(6, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GmTalkScRsp = struct {
    BJDOJLKEHNA: ManagedString = .Empty,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .BJDOJLKEHNA = fd(5, .String),
        .retcode = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetBasicInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OGFIODPILEL = struct {
    DMKLNJBOABO: bool = false,
    AKHEILMNDHJ: bool = false,
    CACEKELNMIN: u32 = 0,

    pub const _desc_table = .{
        .DMKLNJBOABO = fd(3, .{ .Varint = .Simple }),
        .AKHEILMNDHJ = fd(15, .{ .Varint = .Simple }),
        .CACEKELNMIN = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerSettingInfo = struct {
    APONEIDMPHL: bool = false,
    NKEKIBNJMPA: bool = false,
    PBKBGLHHKPE: bool = false,
    MMMNJCHEMFN: bool = false,
    NJFMILJOFOK: bool = false,
    ILFALCDLAOL: bool = false,
    GMJANOJMKCE: bool = false,
    KAPDIMGJLNF: bool = false,
    GHKCMDNKOPN: ?OGFIODPILEL = null,
    KJNCCKHJFHE: bool = false,
    AICNFAOBCPI: bool = false,

    pub const _desc_table = .{
        .APONEIDMPHL = fd(1, .{ .Varint = .Simple }),
        .NKEKIBNJMPA = fd(9, .{ .Varint = .Simple }),
        .PBKBGLHHKPE = fd(14, .{ .Varint = .Simple }),
        .MMMNJCHEMFN = fd(5, .{ .Varint = .Simple }),
        .NJFMILJOFOK = fd(3, .{ .Varint = .Simple }),
        .ILFALCDLAOL = fd(13, .{ .Varint = .Simple }),
        .GMJANOJMKCE = fd(11, .{ .Varint = .Simple }),
        .KAPDIMGJLNF = fd(6, .{ .Varint = .Simple }),
        .GHKCMDNKOPN = fd(15, .{ .SubMessage = {} }),
        .KJNCCKHJFHE = fd(12, .{ .Varint = .Simple }),
        .AICNFAOBCPI = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetBasicInfoScRsp = struct {
    is_gender_set: bool = false,
    next_recover_time: i64 = 0,
    player_setting_info: ?PlayerSettingInfo = null,
    last_set_nickname_time: i64 = 0,
    exchange_times: u32 = 0,
    gender: u32 = 0,
    gameplay_birthday: u32 = 0,
    week_cocoon_finished_count: u32 = 0,
    cur_day: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .is_gender_set = fd(1, .{ .Varint = .Simple }),
        .next_recover_time = fd(5, .{ .Varint = .Simple }),
        .player_setting_info = fd(9, .{ .SubMessage = {} }),
        .last_set_nickname_time = fd(3, .{ .Varint = .Simple }),
        .exchange_times = fd(10, .{ .Varint = .Simple }),
        .gender = fd(12, .{ .Varint = .Simple }),
        .gameplay_birthday = fd(6, .{ .Varint = .Simple }),
        .week_cocoon_finished_count = fd(11, .{ .Varint = .Simple }),
        .cur_day = fd(14, .{ .Varint = .Simple }),
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeStaminaCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeStaminaScRsp = struct {
    retcode: u32 = 0,
    last_recover_time: i64 = 0,
    exchange_times: u32 = 0,
    item_cost_list: ArrayList(ItemCost),
    stamina_add: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(11, .{ .Varint = .Simple }),
        .last_recover_time = fd(15, .{ .Varint = .Simple }),
        .exchange_times = fd(13, .{ .Varint = .Simple }),
        .item_cost_list = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .stamina_add = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetAuthkeyCsReq = struct {
    authkey_ver: u32 = 0,
    sign_type: u32 = 0,
    auth_appid: ManagedString = .Empty,

    pub const _desc_table = .{
        .authkey_ver = fd(13, .{ .Varint = .Simple }),
        .sign_type = fd(5, .{ .Varint = .Simple }),
        .auth_appid = fd(1, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetAuthkeyScRsp = struct {
    retcode: u32 = 0,
    authkey: ManagedString = .Empty,
    auth_appid: ManagedString = .Empty,
    authkey_ver: u32 = 0,
    sign_type: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(15, .{ .Varint = .Simple }),
        .authkey = fd(13, .String),
        .auth_appid = fd(9, .String),
        .authkey_ver = fd(10, .{ .Varint = .Simple }),
        .sign_type = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RegionStopScNotify = struct {
    stop_begin_time: i64 = 0,
    stop_end_time: i64 = 0,

    pub const _desc_table = .{
        .stop_begin_time = fd(2, .{ .Varint = .Simple }),
        .stop_end_time = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AntiAddictScNotify = struct {
    msg_type: u32 = 0,
    msg: ManagedString = .Empty,
    level: ManagedString = .Empty,

    pub const _desc_table = .{
        .msg_type = fd(5, .{ .Varint = .Simple }),
        .msg = fd(6, .String),
        .level = fd(10, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetNicknameCsReq = struct {
    is_modify: bool = false,
    nickname: ManagedString = .Empty,

    pub const _desc_table = .{
        .is_modify = fd(7, .{ .Varint = .Simple }),
        .nickname = fd(3, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetNicknameScRsp = struct {
    is_modify: bool = false,
    JENDKBOOAIP: i64 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .is_modify = fd(14, .{ .Varint = .Simple }),
        .JENDKBOOAIP = fd(2, .{ .Varint = .Simple }),
        .retcode = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetLevelRewardTakenListCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetLevelRewardTakenListScRsp = struct {
    level_reward_taken_list: ArrayList(u32),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .level_reward_taken_list = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetLevelRewardCsReq = struct {
    level: u32 = 0,
    interacted_prop_entity_id: u32 = 0,

    pub const _desc_table = .{
        .level = fd(3, .{ .Varint = .Simple }),
        .interacted_prop_entity_id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetLevelRewardScRsp = struct {
    retcode: u32 = 0,
    level: u32 = 0,
    reward: ?ItemList = null,

    pub const _desc_table = .{
        .retcode = fd(6, .{ .Varint = .Simple }),
        .level = fd(7, .{ .Varint = .Simple }),
        .reward = fd(15, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetLanguageCsReq = struct {
    FADPDIBKNBI: LanguageType = @enumFromInt(0),

    pub const _desc_table = .{
        .FADPDIBKNBI = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetLanguageScRsp = struct {
    FADPDIBKNBI: LanguageType = @enumFromInt(0),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .FADPDIBKNBI = fd(2, .{ .Varint = .Simple }),
        .retcode = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AnnounceData = struct {
    banner_frequency: u32 = 0,
    emergency_text: ManagedString = .Empty,
    count_down_text: ManagedString = .Empty,
    is_center_system_last_5_every_minutes: bool = false,
    config_id: u32 = 0,
    banner_text: ManagedString = .Empty,
    center_system_frequency: u32 = 0,
    end_time: i64 = 0,
    begin_time: i64 = 0,

    pub const _desc_table = .{
        .banner_frequency = fd(1, .{ .Varint = .Simple }),
        .emergency_text = fd(15, .String),
        .count_down_text = fd(5, .String),
        .is_center_system_last_5_every_minutes = fd(6, .{ .Varint = .Simple }),
        .config_id = fd(11, .{ .Varint = .Simple }),
        .banner_text = fd(4, .String),
        .center_system_frequency = fd(3, .{ .Varint = .Simple }),
        .end_time = fd(8, .{ .Varint = .Simple }),
        .begin_time = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ServerAnnounceNotify = struct {
    announce_data_list: ArrayList(AnnounceData),

    pub const _desc_table = .{
        .announce_data_list = fd(11, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GateServer = struct {
    rogue_tourn_build_ref_h5_url: ManagedString = .Empty,
    DENLMLCJLPG: ManagedString = .Empty,
    login_white_msg: ManagedString = .Empty,
    cloud_game_url: ManagedString = .Empty,
    forbid_recharge: bool = false,
    use_tcp: bool = false,
    third_privacy_in_game_url: ManagedString = .Empty,
    ifix_url: ManagedString = .Empty,
    rogue_tourn_build_ref_api_req_color_header_value: ManagedString = .Empty,
    custom_service_url: ManagedString = .Empty,
    enable_watermark: bool = false,
    enable_cdn_ipv6: u32 = 0,
    POOOLGFKKJL: ManagedString = .Empty,
    CKIOFJNKEMN: ManagedString = .Empty,
    personal_information_in_game_url: ManagedString = .Empty,
    design_data_relogin_desc: ManagedString = .Empty,
    pre_download_url: ManagedString = .Empty,
    MPNJIKPKOHJ: ManagedString = .Empty,
    hot_point_url: ManagedString = .Empty,
    enable_save_replay_file: bool = false,
    asb_relogin_type: u32 = 0,
    ifix_version: ManagedString = .Empty,
    ip: ManagedString = .Empty,
    client_secret_key: ManagedString = .Empty,
    enable_version_update: bool = false,
    privacy_in_game_url: ManagedString = .Empty,
    design_data_relogin_type: u32 = 0,
    asb_relogin_desc: ManagedString = .Empty,
    use_new_networking: bool = false,
    lua_url: ManagedString = .Empty,
    rogue_tourn_notice_id: u32 = 0,
    rogue_tourn_build_ref_static_data_url_prefix: ManagedString = .Empty,
    community_activity_url: ManagedString = .Empty,
    online_replay_upload_url: ManagedString = .Empty,
    enable_android_middle_package: bool = false,
    enable_upload_battle_log: bool = false,
    close_redeem_code: bool = false,
    player_return_questionnaire_a_url: ManagedString = .Empty,
    rogue_tourn_notice_pic_type: u32 = 0,
    LHOOFMAIHPC: ManagedString = .Empty,
    player_return_questionnaire_b_url: ManagedString = .Empty,
    web_tool_url: ManagedString = .Empty,
    player_return_invite_h5_url: ManagedString = .Empty,
    retcode: u32 = 0,
    stop_begin_time: i64 = 0,
    server_description: ManagedString = .Empty,
    msg: ManagedString = .Empty,
    official_community_url: ManagedString = .Empty,
    region_name: ManagedString = .Empty,
    ios_exam: bool = false,
    teenager_privacy_in_game_url: ManagedString = .Empty,
    user_agreement_url: ManagedString = .Empty,
    operation_feedback_url: ManagedString = .Empty,
    EHIMAOFLGIL: ManagedString = .Empty,
    mdk_res_version: ManagedString = .Empty,
    cdkey_recall_url: ManagedString = .Empty,
    network_diagnostic: bool = false,
    game_start_customer_service_url: ManagedString = .Empty,
    port: u32 = 0,
    enable_design_data_version_update: bool = false,
    ECBFEHFPOFJ: bool = false,
    ex_resource_url: ManagedString = .Empty,
    NGCIMHOLJBA: ManagedString = .Empty,
    mtp_switch: bool = false,
    ipv6_address: ManagedString = .Empty,
    MODIBFHPMCP: bool = false,
    rogue_magic_h5_url: ManagedString = .Empty,
    event_tracking_open: bool = false,
    OAOHIECDGCC: ArrayList(ManagedString),
    asset_bundle_url: ManagedString = .Empty,
    rogue_tourn_build_ref_api_req_color_header_key: ManagedString = .Empty,
    stop_end_time: i64 = 0,
    online_replay_download_url: ManagedString = .Empty,
    temporary_maintenance_url: ManagedString = .Empty,

    pub const _desc_table = .{
        .rogue_tourn_build_ref_h5_url = fd(470, .String),
        .DENLMLCJLPG = fd(1643, .String),
        .login_white_msg = fd(927, .String),
        .cloud_game_url = fd(1869, .String),
        .forbid_recharge = fd(174, .{ .Varint = .Simple }),
        .use_tcp = fd(266, .{ .Varint = .Simple }),
        .third_privacy_in_game_url = fd(1724, .String),
        .ifix_url = fd(618, .String),
        .rogue_tourn_build_ref_api_req_color_header_value = fd(409, .String),
        .custom_service_url = fd(1616, .String),
        .enable_watermark = fd(1876, .{ .Varint = .Simple }),
        .enable_cdn_ipv6 = fd(1800, .{ .Varint = .Simple }),
        .POOOLGFKKJL = fd(2000, .String),
        .CKIOFJNKEMN = fd(119, .String),
        .personal_information_in_game_url = fd(790, .String),
        .design_data_relogin_desc = fd(41, .String),
        .pre_download_url = fd(1301, .String),
        .MPNJIKPKOHJ = fd(1631, .String),
        .hot_point_url = fd(1891, .String),
        .enable_save_replay_file = fd(761, .{ .Varint = .Simple }),
        .asb_relogin_type = fd(12, .{ .Varint = .Simple }),
        .ifix_version = fd(1799, .String),
        .ip = fd(3, .String),
        .client_secret_key = fd(732, .String),
        .enable_version_update = fd(2, .{ .Varint = .Simple }),
        .privacy_in_game_url = fd(868, .String),
        .design_data_relogin_type = fd(7, .{ .Varint = .Simple }),
        .asb_relogin_desc = fd(10, .String),
        .use_new_networking = fd(977, .{ .Varint = .Simple }),
        .lua_url = fd(11, .String),
        .rogue_tourn_notice_id = fd(664, .{ .Varint = .Simple }),
        .rogue_tourn_build_ref_static_data_url_prefix = fd(81, .String),
        .community_activity_url = fd(279, .String),
        .online_replay_upload_url = fd(216, .String),
        .enable_android_middle_package = fd(1567, .{ .Varint = .Simple }),
        .enable_upload_battle_log = fd(2011, .{ .Varint = .Simple }),
        .close_redeem_code = fd(721, .{ .Varint = .Simple }),
        .player_return_questionnaire_a_url = fd(620, .String),
        .rogue_tourn_notice_pic_type = fd(1415, .{ .Varint = .Simple }),
        .LHOOFMAIHPC = fd(71, .String),
        .player_return_questionnaire_b_url = fd(147, .String),
        .web_tool_url = fd(429, .String),
        .player_return_invite_h5_url = fd(1344, .String),
        .retcode = fd(4, .{ .Varint = .Simple }),
        .stop_begin_time = fd(9, .{ .Varint = .Simple }),
        .server_description = fd(800, .String),
        .msg = fd(15, .String),
        .official_community_url = fd(1210, .String),
        .region_name = fd(13, .String),
        .ios_exam = fd(330, .{ .Varint = .Simple }),
        .teenager_privacy_in_game_url = fd(1473, .String),
        .user_agreement_url = fd(890, .String),
        .operation_feedback_url = fd(1430, .String),
        .EHIMAOFLGIL = fd(1448, .String),
        .mdk_res_version = fd(609, .String),
        .cdkey_recall_url = fd(1221, .String),
        .network_diagnostic = fd(846, .{ .Varint = .Simple }),
        .game_start_customer_service_url = fd(1517, .String),
        .port = fd(5, .{ .Varint = .Simple }),
        .enable_design_data_version_update = fd(6, .{ .Varint = .Simple }),
        .ECBFEHFPOFJ = fd(722, .{ .Varint = .Simple }),
        .ex_resource_url = fd(14, .String),
        .NGCIMHOLJBA = fd(215, .String),
        .mtp_switch = fd(1921, .{ .Varint = .Simple }),
        .ipv6_address = fd(1728, .String),
        .MODIBFHPMCP = fd(1094, .{ .Varint = .Simple }),
        .rogue_magic_h5_url = fd(340, .String),
        .event_tracking_open = fd(284, .{ .Varint = .Simple }),
        .OAOHIECDGCC = fd(1442, .{ .List = .String }),
        .asset_bundle_url = fd(1, .String),
        .rogue_tourn_build_ref_api_req_color_header_key = fd(1741, .String),
        .stop_end_time = fd(8, .{ .Varint = .Simple }),
        .online_replay_download_url = fd(1526, .String),
        .temporary_maintenance_url = fd(2029, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GateServerScNotify = struct {
    CONNPKCCHJE: ManagedString = .Empty,

    pub const _desc_table = .{
        .CONNPKCCHJE = fd(13, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetAvatarPathCsReq = struct {
    avatar_id: MultiPathAvatarType = @enumFromInt(0),

    pub const _desc_table = .{
        .avatar_id = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetAvatarPathScRsp = struct {
    retcode: u32 = 0,
    avatar_id: MultiPathAvatarType = @enumFromInt(0),

    pub const _desc_table = .{
        .retcode = fd(11, .{ .Varint = .Simple }),
        .avatar_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetMultipleAvatarPathsCsReq = struct {
    avatar_id_list: ArrayList(MultiPathAvatarType),

    pub const _desc_table = .{
        .avatar_id_list = fd(1, .{ .List = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetMultipleAvatarPathsScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UnlockAvatarPathCsReq = struct {
    avatar_id: MultiPathAvatarType = @enumFromInt(0),

    pub const _desc_table = .{
        .avatar_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UnlockAvatarPathScRsp = struct {
    avatar_id: MultiPathAvatarType = @enumFromInt(0),
    retcode: u32 = 0,
    basic_type_id_list: ArrayList(u32),
    reward: ?ItemList = null,

    pub const _desc_table = .{
        .avatar_id = fd(7, .{ .Varint = .Simple }),
        .retcode = fd(8, .{ .Varint = .Simple }),
        .basic_type_id_list = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .reward = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AvatarPathChangedNotify = struct {
    cur_multi_path_avatar_type: MultiPathAvatarType = @enumFromInt(0),
    base_avatar_id: u32 = 0,

    pub const _desc_table = .{
        .cur_multi_path_avatar_type = fd(9, .{ .Varint = .Simple }),
        .base_avatar_id = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetGenderCsReq = struct {
    gender: Gender = @enumFromInt(0),

    pub const _desc_table = .{
        .gender = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetGenderScRsp = struct {
    cur_avatar_path: MultiPathAvatarType = @enumFromInt(0),
    cur_avatar_path_info_list: ArrayList(MultiPathAvatarInfo),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .cur_avatar_path = fd(13, .{ .Varint = .Simple }),
        .cur_avatar_path_info_list = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetPlayerInfoCsReq = struct {
    gender: Gender = @enumFromInt(0),
    is_modify: bool = false,
    nickname: ManagedString = .Empty,

    pub const _desc_table = .{
        .gender = fd(11, .{ .Varint = .Simple }),
        .is_modify = fd(2, .{ .Varint = .Simple }),
        .nickname = fd(13, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetPlayerInfoScRsp = struct {
    JENDKBOOAIP: i64 = 0,
    cur_avatar_path_info_list: ArrayList(MultiPathAvatarInfo),
    retcode: u32 = 0,
    is_modify: bool = false,
    cur_avatar_path: MultiPathAvatarType = @enumFromInt(0),

    pub const _desc_table = .{
        .JENDKBOOAIP = fd(9, .{ .Varint = .Simple }),
        .cur_avatar_path_info_list = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(10, .{ .Varint = .Simple }),
        .is_modify = fd(4, .{ .Varint = .Simple }),
        .cur_avatar_path = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const QueryProductInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Product = struct {
    product_id: ManagedString = .Empty,
    gift_type: ProductGiftType = @enumFromInt(0),
    double_reward: bool = false,
    price_tier: ManagedString = .Empty,
    begin_time: i64 = 0,
    GCBOBAMCALK: u32 = 0,
    IECAEABACDM: u32 = 0,
    end_time: i64 = 0,
    IOGLPEBJMDB: u32 = 0,

    pub const _desc_table = .{
        .product_id = fd(9, .String),
        .gift_type = fd(1, .{ .Varint = .Simple }),
        .double_reward = fd(5, .{ .Varint = .Simple }),
        .price_tier = fd(11, .String),
        .begin_time = fd(2, .{ .Varint = .Simple }),
        .GCBOBAMCALK = fd(12, .{ .Varint = .Simple }),
        .IECAEABACDM = fd(7, .{ .Varint = .Simple }),
        .end_time = fd(14, .{ .Varint = .Simple }),
        .IOGLPEBJMDB = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const QueryProductInfoScRsp = struct {
    retcode: u32 = 0,
    ODNFIAAHKCI: u32 = 0,
    month_card_out_date_time: u64 = 0,
    CMGHDMPEAKO: u32 = 0,
    product_list: ArrayList(Product),

    pub const _desc_table = .{
        .retcode = fd(2, .{ .Varint = .Simple }),
        .ODNFIAAHKCI = fd(1, .{ .Varint = .Simple }),
        .month_card_out_date_time = fd(13, .{ .Varint = .Simple }),
        .CMGHDMPEAKO = fd(12, .{ .Varint = .Simple }),
        .product_list = fd(10, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MonthCardRewardNotify = struct {
    reward: ?ItemList = null,

    pub const _desc_table = .{
        .reward = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ClientDownloadDataScNotify = struct {
    download_data: ?ClientDownloadData = null,

    pub const _desc_table = .{
        .download_data = fd(15, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ClientObjDownloadDataScNotify = struct {
    data: ?ClientObjDownloadData = null,

    pub const _desc_table = .{
        .data = fd(10, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdateFeatureSwitchScNotify = struct {
    switch_info_list: ArrayList(HPIOFDCGMEJ),

    pub const _desc_table = .{
        .switch_info_list = fd(10, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DailyRefreshNotify = struct {
    GMFEBDAFDPJ: u32 = 0,

    pub const _desc_table = .{
        .GMFEBDAFDPJ = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetGameplayBirthdayCsReq = struct {
    birthday: u32 = 0,

    pub const _desc_table = .{
        .birthday = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetGameplayBirthdayScRsp = struct {
    retcode: u32 = 0,
    birthday: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(6, .{ .Varint = .Simple }),
        .birthday = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AceAntiCheaterCsReq = struct {
    DGDLNIEFCPF: ManagedString = .Empty,
    GLNKKFAIPOB: u32 = 0,

    pub const _desc_table = .{
        .DGDLNIEFCPF = fd(15, .String),
        .GLNKKFAIPOB = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AceAntiCheaterScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RetcodeNotify = struct {
    JOJPPODOMAH: ArrayList(u32),
    retcode: Retcode = @enumFromInt(0),

    pub const _desc_table = .{
        .JOJPPODOMAH = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerHeartBeatCsReq = struct {
    client_time_ms: u64 = 0,
    JBPEMOFNEDG: u32 = 0,
    LKJMJGDEBEE: ?ClientUploadData = null,

    pub const _desc_table = .{
        .client_time_ms = fd(9, .{ .Varint = .Simple }),
        .JBPEMOFNEDG = fd(7, .{ .Varint = .Simple }),
        .LKJMJGDEBEE = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerHeartBeatScRsp = struct {
    retcode: u32 = 0,
    server_time_ms: u64 = 0,
    download_data: ?ClientDownloadData = null,
    client_time_ms: u64 = 0,

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
        .server_time_ms = fd(3, .{ .Varint = .Simple }),
        .download_data = fd(15, .{ .SubMessage = {} }),
        .client_time_ms = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FeatureSwitchClosedScNotify = struct {
    KIMNKFPFBDG: FeatureSwitchType = @enumFromInt(0),

    pub const _desc_table = .{
        .KIMNKFPFBDG = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SecretKeyInfo = struct {
    secret_key: ManagedString = .Empty,
    type: SecretKeyType = @enumFromInt(0),

    pub const _desc_table = .{
        .secret_key = fd(14, .String),
        .type = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetSecretKeyInfoCsReq = struct {
    secret_req: ManagedString = .Empty,

    pub const _desc_table = .{
        .secret_req = fd(6, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetSecretKeyInfoScRsp = struct {
    retcode: u32 = 0,
    secret_info: ArrayList(SecretKeyInfo),
    secret_rsp: ManagedString = .Empty,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
        .secret_info = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .secret_rsp = fd(13, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerLoginFinishCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerLoginFinishScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const VideoKeyInfo = struct {
    video_key: u64 = 0,
    id: u32 = 0,

    pub const _desc_table = .{
        .video_key = fd(2, .{ .Varint = .Simple }),
        .id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetVideoVersionKeyCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetVideoVersionKeyScRsp = struct {
    video_key_info_list: ArrayList(VideoKeyInfo),
    activity_video_key_info_list: ArrayList(VideoKeyInfo),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .video_key_info_list = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .activity_video_key_info_list = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NHJGHOKBDPK = struct {
    IIPDEFCEDMC: u32 = 0,
    NCIADBAKMAE: u32 = 0,
    JDAKKOFDGEP: u32 = 0,
    content_id: u32 = 0,

    pub const _desc_table = .{
        .IIPDEFCEDMC = fd(8, .{ .Varint = .Simple }),
        .NCIADBAKMAE = fd(1, .{ .Varint = .Simple }),
        .JDAKKOFDGEP = fd(15, .{ .Varint = .Simple }),
        .content_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetRedPointStatusScNotify = struct {
    JDAKKOFDGEP: u32 = 0,
    uid: u32 = 0,
    IIPDEFCEDMC: u32 = 0,
    NJEHHFFDGHK: ArrayList(NHJGHOKBDPK),
    content_id: u32 = 0,

    pub const _desc_table = .{
        .JDAKKOFDGEP = fd(1, .{ .Varint = .Simple }),
        .uid = fd(15, .{ .Varint = .Simple }),
        .IIPDEFCEDMC = fd(7, .{ .Varint = .Simple }),
        .NJEHHFFDGHK = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .content_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ReserveStaminaExchangeCsReq = struct {
    num: u32 = 0,

    pub const _desc_table = .{
        .num = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ReserveStaminaExchangeScRsp = struct {
    num: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .num = fd(13, .{ .Varint = .Simple }),
        .retcode = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StaminaInfoScNotify = struct {
    reserve_stamina: u32 = 0,
    DPIMHEMJKOE: i64 = 0,
    stamina: u32 = 0,
    next_recover_time: i64 = 0,

    pub const _desc_table = .{
        .reserve_stamina = fd(7, .{ .Varint = .Simple }),
        .DPIMHEMJKOE = fd(11, .{ .Varint = .Simple }),
        .stamina = fd(6, .{ .Varint = .Simple }),
        .next_recover_time = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdatePlayerSetting = struct {
    GCMPPOICPOD: ?GCMPPOICPOD_union,

    pub const _GCMPPOICPOD_case = enum {
        KAPDIMGJLNF,
        MMMNJCHEMFN,
        NKEKIBNJMPA,
        PBKBGLHHKPE,
        NJFMILJOFOK,
        AICNFAOBCPI,
        KJNCCKHJFHE,
        APONEIDMPHL,
        GMJANOJMKCE,
        GHKCMDNKOPN,
        ILFALCDLAOL,
    };
    pub const GCMPPOICPOD_union = union(_GCMPPOICPOD_case) {
        KAPDIMGJLNF: bool,
        MMMNJCHEMFN: bool,
        NKEKIBNJMPA: bool,
        PBKBGLHHKPE: bool,
        NJFMILJOFOK: bool,
        AICNFAOBCPI: bool,
        KJNCCKHJFHE: bool,
        APONEIDMPHL: bool,
        GMJANOJMKCE: bool,
        GHKCMDNKOPN: OGFIODPILEL,
        ILFALCDLAOL: bool,
        pub const _union_desc = .{
            .KAPDIMGJLNF = fd(13, .{ .Varint = .Simple }),
            .MMMNJCHEMFN = fd(5, .{ .Varint = .Simple }),
            .NKEKIBNJMPA = fd(12, .{ .Varint = .Simple }),
            .PBKBGLHHKPE = fd(10, .{ .Varint = .Simple }),
            .NJFMILJOFOK = fd(6, .{ .Varint = .Simple }),
            .AICNFAOBCPI = fd(2, .{ .Varint = .Simple }),
            .KJNCCKHJFHE = fd(11, .{ .Varint = .Simple }),
            .APONEIDMPHL = fd(3, .{ .Varint = .Simple }),
            .GMJANOJMKCE = fd(9, .{ .Varint = .Simple }),
            .GHKCMDNKOPN = fd(15, .{ .SubMessage = {} }),
            .ILFALCDLAOL = fd(1, .{ .Varint = .Simple }),
        };
    };

    pub const _desc_table = .{
        .GCMPPOICPOD = fd(null, .{ .OneOf = GCMPPOICPOD_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdatePlayerSettingCsReq = struct {
    player_setting: ?UpdatePlayerSetting = null,

    pub const _desc_table = .{
        .player_setting = fd(7, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdatePlayerSettingScRsp = struct {
    retcode: u32 = 0,
    player_setting: ?UpdatePlayerSetting = null,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
        .player_setting = fd(13, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ClientObjUploadCsReq = struct {
    modifier_content_type: JIDIECGHKGK = @enumFromInt(0),
    JBPEMOFNEDG: u32 = 0,
    LKJMJGDEBEE: ManagedString = .Empty,

    pub const _desc_table = .{
        .modifier_content_type = fd(1, .{ .Varint = .Simple }),
        .JBPEMOFNEDG = fd(14, .{ .Varint = .Simple }),
        .LKJMJGDEBEE = fd(2, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ClientObjUploadScRsp = struct {
    retcode: u32 = 0,
    data: ?ClientObjDownloadData = null,

    pub const _desc_table = .{
        .retcode = fd(8, .{ .Varint = .Simple }),
        .data = fd(15, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MENPBGGOGMC = struct {
    GKHFBFKNHOB: ArrayList(ManagedString),

    pub const _desc_table = .{
        .GKHFBFKNHOB = fd(4, .{ .List = .String }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NCBIMLPODON = struct {
    black_list: ?MENPBGGOGMC = null,
    IAHOPFNPFLN: bool = false,

    pub const _desc_table = .{
        .black_list = fd(9, .{ .SubMessage = {} }),
        .IAHOPFNPFLN = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CJAKIBDIMMJ = struct {
    PMFBBCEBACD: ?PMFBBCEBACD_union,

    pub const _PMFBBCEBACD_case = enum {
        IAHOPFNPFLN,
        AMALJFOKCBA,
        OECBELGDLFP,
    };
    pub const PMFBBCEBACD_union = union(_PMFBBCEBACD_case) {
        IAHOPFNPFLN: bool,
        AMALJFOKCBA: MENPBGGOGMC,
        OECBELGDLFP: MENPBGGOGMC,
        pub const _union_desc = .{
            .IAHOPFNPFLN = fd(517, .{ .Varint = .Simple }),
            .AMALJFOKCBA = fd(1515, .{ .SubMessage = {} }),
            .OECBELGDLFP = fd(2038, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .PMFBBCEBACD = fd(null, .{ .OneOf = PMFBBCEBACD_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdatePsnSettingsInfoCsReq = struct {
    DFOPIIHEJFM: ?DFOPIIHEJFM_union,

    pub const _DFOPIIHEJFM_case = enum {
        DOOCPLCLDPD,
        INHLDIDJGHA,
    };
    pub const DFOPIIHEJFM_union = union(_DFOPIIHEJFM_case) {
        DOOCPLCLDPD: NCBIMLPODON,
        INHLDIDJGHA: CJAKIBDIMMJ,
        pub const _union_desc = .{
            .DOOCPLCLDPD = fd(521, .{ .SubMessage = {} }),
            .INHLDIDJGHA = fd(1683, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .DFOPIIHEJFM = fd(null, .{ .OneOf = DFOPIIHEJFM_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdatePsnSettingsInfoScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetGameStateServiceConfigCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetGameStateServiceConfigScRsp = struct {
    retcode: u32 = 0,
    FIBIJGMKDPP: ArrayList(ManagedString),
    KAOJCOBEEON: ArrayList(ManagedString),
    LEDKMDOLLBB: ArrayList(ManagedString),

    pub const _desc_table = .{
        .retcode = fd(5, .{ .Varint = .Simple }),
        .FIBIJGMKDPP = fd(2, .{ .List = .String }),
        .KAOJCOBEEON = fd(9, .{ .List = .String }),
        .LEDKMDOLLBB = fd(6, .{ .List = .String }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HeadIconData = struct {
    id: u32 = 0,

    pub const _desc_table = .{
        .id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DisplayAvatarData = struct {
    avatar_id: u32 = 0,
    pos: u32 = 0,

    pub const _desc_table = .{
        .avatar_id = fd(2, .{ .Varint = .Simple }),
        .pos = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DisplayAvatarVec = struct {
    is_display: bool = false,
    display_avatar_list: ArrayList(DisplayAvatarData),

    pub const _desc_table = .{
        .is_display = fd(8, .{ .Varint = .Simple }),
        .display_avatar_list = fd(15, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPlayerBoardDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPlayerBoardDataScRsp = struct {
    unlocked_head_icon_list: ArrayList(HeadIconData),
    assist_avatar_id_list: ArrayList(u32),
    OLDMJONBJOM: u32 = 0,
    retcode: u32 = 0,
    signature: ManagedString = .Empty,
    current_head_icon_id: u32 = 0,
    KKNJHENMGPK: ArrayList(u32),
    display_avatar_vec: ?DisplayAvatarVec = null,

    pub const _desc_table = .{
        .unlocked_head_icon_list = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .assist_avatar_id_list = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .OLDMJONBJOM = fd(3, .{ .Varint = .Simple }),
        .retcode = fd(11, .{ .Varint = .Simple }),
        .signature = fd(12, .String),
        .current_head_icon_id = fd(9, .{ .Varint = .Simple }),
        .KKNJHENMGPK = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .display_avatar_vec = fd(15, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetHeadIconCsReq = struct {
    id: u32 = 0,

    pub const _desc_table = .{
        .id = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetHeadIconScRsp = struct {
    retcode: u32 = 0,
    current_head_icon_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
        .current_head_icon_id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetPersonalCardCsReq = struct {
    id: u32 = 0,

    pub const _desc_table = .{
        .id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetPersonalCardScRsp = struct {
    retcode: u32 = 0,
    OLDMJONBJOM: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(11, .{ .Varint = .Simple }),
        .OLDMJONBJOM = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetDisplayAvatarCsReq = struct {
    display_avatar_list: ArrayList(DisplayAvatarData),

    pub const _desc_table = .{
        .display_avatar_list = fd(8, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetDisplayAvatarScRsp = struct {
    display_avatar_list: ArrayList(DisplayAvatarData),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .display_avatar_list = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetIsDisplayAvatarInfoCsReq = struct {
    is_display: bool = false,

    pub const _desc_table = .{
        .is_display = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetIsDisplayAvatarInfoScRsp = struct {
    is_display: bool = false,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .is_display = fd(3, .{ .Varint = .Simple }),
        .retcode = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetSignatureCsReq = struct {
    signature: ManagedString = .Empty,

    pub const _desc_table = .{
        .signature = fd(13, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetSignatureScRsp = struct {
    signature: ManagedString = .Empty,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .signature = fd(11, .String),
        .retcode = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetAssistAvatarCsReq = struct {
    avatar_id: u32 = 0,
    avatar_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .avatar_id = fd(15, .{ .Varint = .Simple }),
        .avatar_id_list = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetAssistAvatarScRsp = struct {
    avatar_id_list: ArrayList(u32),
    avatar_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .avatar_id_list = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
        .avatar_id = fd(10, .{ .Varint = .Simple }),
        .retcode = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerReturnStartScNotify = struct {
    NCHIEKEDHCE: u32 = 0,

    pub const _desc_table = .{
        .NCHIEKEDHCE = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerReturnSignCsReq = struct {
    OPEEDJIHJOP: u32 = 0,
    NMKLEGOMEPJ: ArrayList(u32),

    pub const _desc_table = .{
        .OPEEDJIHJOP = fd(12, .{ .Varint = .Simple }),
        .NMKLEGOMEPJ = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerReturnSignScRsp = struct {
    retcode: u32 = 0,
    NMKLEGOMEPJ: ArrayList(u32),
    OPEEDJIHJOP: u32 = 0,
    IPFLHCJIEBM: ArrayList(ItemList),

    pub const _desc_table = .{
        .retcode = fd(3, .{ .Varint = .Simple }),
        .NMKLEGOMEPJ = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
        .OPEEDJIHJOP = fd(11, .{ .Varint = .Simple }),
        .IPFLHCJIEBM = fd(6, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerReturnPointChangeScNotify = struct {
    MAMHOJMFJOF: u32 = 0,

    pub const _desc_table = .{
        .MAMHOJMFJOF = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerReturnTakePointRewardCsReq = struct {
    CPNIMLJNMMF: u32 = 0,
    IIFOMGOFMDL: u32 = 0,

    pub const _desc_table = .{
        .CPNIMLJNMMF = fd(6, .{ .Varint = .Simple }),
        .IIFOMGOFMDL = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerReturnTakePointRewardScRsp = struct {
    retcode: u32 = 0,
    CPNIMLJNMMF: u32 = 0,
    CFIDBMMIJHG: ?ItemList = null,
    IIFOMGOFMDL: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(10, .{ .Varint = .Simple }),
        .CPNIMLJNMMF = fd(7, .{ .Varint = .Simple }),
        .CFIDBMMIJHG = fd(1, .{ .SubMessage = {} }),
        .IIFOMGOFMDL = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerReturnTakeRewardCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerReturnTakeRewardScRsp = struct {
    IPFLHCJIEBM: ?ItemList = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .IPFLHCJIEBM = fd(1, .{ .SubMessage = {} }),
        .retcode = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerReturnInfoQueryCsReq = struct {
    CEHFIILMJKM: u32 = 0,

    pub const _desc_table = .{
        .CEHFIILMJKM = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AFBNEIBIJND = struct {
    status: NOBPMMNFENJ = @enumFromInt(0),
    ILCFOJCDNHI: u32 = 0,
    COIFHFPEGPH: i64 = 0,
    finish_time: i64 = 0,
    world_level: u32 = 0,
    AHNFMDNEJNL: u32 = 0,
    is_taken_reward: bool = false,
    NMKLEGOMEPJ: ArrayList(u32),
    BGAFGHIPOJE: u32 = 0,
    FJNDPCFNFLO: bool = false,
    CAIMHCAACFG: ArrayList(u32),
    MAMHOJMFJOF: u32 = 0,

    pub const _desc_table = .{
        .status = fd(13, .{ .Varint = .Simple }),
        .ILCFOJCDNHI = fd(5, .{ .Varint = .Simple }),
        .COIFHFPEGPH = fd(14, .{ .Varint = .Simple }),
        .finish_time = fd(9, .{ .Varint = .Simple }),
        .world_level = fd(2, .{ .Varint = .Simple }),
        .AHNFMDNEJNL = fd(8, .{ .Varint = .Simple }),
        .is_taken_reward = fd(12, .{ .Varint = .Simple }),
        .NMKLEGOMEPJ = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
        .BGAFGHIPOJE = fd(1, .{ .Varint = .Simple }),
        .FJNDPCFNFLO = fd(7, .{ .Varint = .Simple }),
        .CAIMHCAACFG = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .MAMHOJMFJOF = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerReturnInfoQueryScRsp = struct {
    PFEIDPOLOKM: ?AFBNEIBIJND = null,
    retcode: u32 = 0,
    GMFIDNOHGCO: u32 = 0,

    pub const _desc_table = .{
        .PFEIDPOLOKM = fd(5, .{ .SubMessage = {} }),
        .retcode = fd(3, .{ .Varint = .Simple }),
        .GMFIDNOHGCO = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerReturnForceFinishScNotify = struct {
    PFEIDPOLOKM: ?AFBNEIBIJND = null,

    pub const _desc_table = .{
        .PFEIDPOLOKM = fd(11, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerReturnTakeRelicCsReq = struct {
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .avatar_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerReturnTakeRelicScRsp = struct {
    item_list: ?ItemList = null,
    avatar_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .item_list = fd(10, .{ .SubMessage = {} }),
        .avatar_id = fd(9, .{ .Varint = .Simple }),
        .retcode = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishPlotCsReq = struct {
    CLDAJDJHOII: u32 = 0,

    pub const _desc_table = .{
        .CLDAJDJHOII = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishPlotScRsp = struct {
    CLDAJDJHOII: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .CLDAJDJHOII = fd(5, .{ .Varint = .Simple }),
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KAOAHKAOHFI = struct {
    DHLPKMIHDNM: ?PunkLordBattleRecordList = null,
    COJKEIFJNEK: u32 = 0,
    EKKJLAOKIJI: PunkLordAttackerStatus = @enumFromInt(0),
    basic_info: ?PunkLordMonsterBasicInfo = null,

    pub const _desc_table = .{
        .DHLPKMIHDNM = fd(5, .{ .SubMessage = {} }),
        .COJKEIFJNEK = fd(4, .{ .Varint = .Simple }),
        .EKKJLAOKIJI = fd(1, .{ .Varint = .Simple }),
        .basic_info = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPunkLordMonsterDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPunkLordMonsterDataScRsp = struct {
    retcode: u32 = 0,
    FIJNJGFABJD: ArrayList(KAOAHKAOHFI),

    pub const _desc_table = .{
        .retcode = fd(2, .{ .Varint = .Simple }),
        .FIJNJGFABJD = fd(4, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartPunkLordRaidCsReq = struct {
    monster_id: u32 = 0,
    uid: u32 = 0,
    CLOMMFKJPMM: bool = false,

    pub const _desc_table = .{
        .monster_id = fd(8, .{ .Varint = .Simple }),
        .uid = fd(7, .{ .Varint = .Simple }),
        .CLOMMFKJPMM = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartPunkLordRaidScRsp = struct {
    CLOMMFKJPMM: bool = false,
    DMILCFHLIHP: ArrayList(u32),
    retcode: u32 = 0,
    AGEGDMGNPDK: i64 = 0,
    DPMKAMMIOLB: ?KAOAHKAOHFI = null,
    scene: ?FNLGPLNCPCL = null,

    pub const _desc_table = .{
        .CLOMMFKJPMM = fd(5, .{ .Varint = .Simple }),
        .DMILCFHLIHP = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(3, .{ .Varint = .Simple }),
        .AGEGDMGNPDK = fd(13, .{ .Varint = .Simple }),
        .DPMKAMMIOLB = fd(11, .{ .SubMessage = {} }),
        .scene = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SharePunkLordMonsterCsReq = struct {
    monster_id: u32 = 0,
    share_type: PunkLordShareType = @enumFromInt(0),
    uid: u32 = 0,

    pub const _desc_table = .{
        .monster_id = fd(12, .{ .Varint = .Simple }),
        .share_type = fd(5, .{ .Varint = .Simple }),
        .uid = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SharePunkLordMonsterScRsp = struct {
    retcode: u32 = 0,
    monster_id: u32 = 0,
    share_type: PunkLordShareType = @enumFromInt(0),
    uid: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(10, .{ .Varint = .Simple }),
        .monster_id = fd(9, .{ .Varint = .Simple }),
        .share_type = fd(4, .{ .Varint = .Simple }),
        .uid = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SummonPunkLordMonsterCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SummonPunkLordMonsterScRsp = struct {
    retcode: u32 = 0,
    DPMKAMMIOLB: ?KAOAHKAOHFI = null,

    pub const _desc_table = .{
        .retcode = fd(14, .{ .Varint = .Simple }),
        .DPMKAMMIOLB = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakePunkLordPointRewardCsReq = struct {
    level: u32 = 0,
    MDHJKKBNMCF: bool = false,

    pub const _desc_table = .{
        .level = fd(12, .{ .Varint = .Simple }),
        .MDHJKKBNMCF = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakePunkLordPointRewardScRsp = struct {
    level: u32 = 0,
    MDHJKKBNMCF: bool = false,
    reward: ?ItemList = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .level = fd(8, .{ .Varint = .Simple }),
        .MDHJKKBNMCF = fd(9, .{ .Varint = .Simple }),
        .reward = fd(12, .{ .SubMessage = {} }),
        .retcode = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PunkLordMonsterInfoScNotify = struct {
    basic_info: ?PunkLordMonsterBasicInfo = null,
    DMILCFHLIHP: ArrayList(u32),
    reason: PunkLordMonsterInfoNotifyReason = @enumFromInt(0),
    DHLPKMIHDNM: ?AHKANKEPADJ = null,

    pub const _desc_table = .{
        .basic_info = fd(4, .{ .SubMessage = {} }),
        .DMILCFHLIHP = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
        .reason = fd(5, .{ .Varint = .Simple }),
        .DHLPKMIHDNM = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPunkLordDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPunkLordDataScRsp = struct {
    IADCOHODGJN: u32 = 0,
    BEDJDEANCOJ: i64 = 0,
    retcode: u32 = 0,
    PPNKPNBIIEN: u32 = 0,
    GNLMKKHAEKM: u32 = 0,
    BDPBDGBKDOO: u32 = 0,
    GBJODJCOLGA: u32 = 0,
    EAHBIKFALLF: ArrayList(u32),

    pub const _desc_table = .{
        .IADCOHODGJN = fd(6, .{ .Varint = .Simple }),
        .BEDJDEANCOJ = fd(1, .{ .Varint = .Simple }),
        .retcode = fd(2, .{ .Varint = .Simple }),
        .PPNKPNBIIEN = fd(3, .{ .Varint = .Simple }),
        .GNLMKKHAEKM = fd(8, .{ .Varint = .Simple }),
        .BDPBDGBKDOO = fd(14, .{ .Varint = .Simple }),
        .GBJODJCOLGA = fd(7, .{ .Varint = .Simple }),
        .EAHBIKFALLF = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PunkLordRaidTimeOutScNotify = struct {
    DPMKAMMIOLB: ?PunkLordMonsterBasicInfo = null,

    pub const _desc_table = .{
        .DPMKAMMIOLB = fd(9, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PunkLordBattleResultScNotify = struct {
    PGOFPNLAPOE: u32 = 0,
    NCACOCCJNLD: u32 = 0,
    DPMKAMMIOLB: ?PunkLordMonsterBasicInfo = null,
    DHLPKMIHDNM: ?AHKANKEPADJ = null,
    AHJFPNGDBDO: u32 = 0,

    pub const _desc_table = .{
        .PGOFPNLAPOE = fd(12, .{ .Varint = .Simple }),
        .NCACOCCJNLD = fd(7, .{ .Varint = .Simple }),
        .DPMKAMMIOLB = fd(14, .{ .SubMessage = {} }),
        .DHLPKMIHDNM = fd(4, .{ .SubMessage = {} }),
        .AHJFPNGDBDO = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MDJGOOCKCMJ = struct {
    LKKJEILKPNI: u32 = 0,
    create_time: i64 = 0,
    world_level: u32 = 0,
    config_id: u32 = 0,
    PPBOCECKCAH: bool = false,
    monster_id: u32 = 0,

    pub const _desc_table = .{
        .LKKJEILKPNI = fd(4, .{ .Varint = .Simple }),
        .create_time = fd(9, .{ .Varint = .Simple }),
        .world_level = fd(10, .{ .Varint = .Simple }),
        .config_id = fd(6, .{ .Varint = .Simple }),
        .PPBOCECKCAH = fd(7, .{ .Varint = .Simple }),
        .monster_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetKilledPunkLordMonsterDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetKilledPunkLordMonsterDataScRsp = struct {
    DDCEMDGEDIO: ArrayList(MDJGOOCKCMJ),
    OAKKCCGAEKK: ArrayList(PunkLordMonsterKey),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .DDCEMDGEDIO = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .OAKKCCGAEKK = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PunkLordMonsterKilledNotify = struct {
    AIECOBKEIGB: ?MDJGOOCKCMJ = null,

    pub const _desc_table = .{
        .AIECOBKEIGB = fd(7, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeKilledPunkLordMonsterScoreCsReq = struct {
    PKCPJJNOALN: ?PunkLordMonsterKey = null,
    KFEJGFNONIP: bool = false,

    pub const _desc_table = .{
        .PKCPJJNOALN = fd(3, .{ .SubMessage = {} }),
        .KFEJGFNONIP = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeKilledPunkLordMonsterScoreScRsp = struct {
    JEAHDCGKBBB: ArrayList(PunkLordMonsterKey),
    retcode: u32 = 0,
    KFEJGFNONIP: bool = false,
    score_id: u32 = 0,

    pub const _desc_table = .{
        .JEAHDCGKBBB = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(15, .{ .Varint = .Simple }),
        .KFEJGFNONIP = fd(8, .{ .Varint = .Simple }),
        .score_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PunkLordDataChangeNotify = struct {
    BDPBDGBKDOO: u32 = 0,
    GBJODJCOLGA: u32 = 0,
    IADCOHODGJN: u32 = 0,

    pub const _desc_table = .{
        .BDPBDGBKDOO = fd(5, .{ .Varint = .Simple }),
        .GBJODJCOLGA = fd(10, .{ .Varint = .Simple }),
        .IADCOHODGJN = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPunkLordBattleRecordCsReq = struct {
    PKCPJJNOALN: ?PunkLordMonsterKey = null,

    pub const _desc_table = .{
        .PKCPJJNOALN = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPunkLordBattleRecordScRsp = struct {
    retcode: u32 = 0,
    PKCPJJNOALN: ?PunkLordMonsterKey = null,
    battle_record_list: ArrayList(AHKANKEPADJ),
    OKOBGJHJJOA: ArrayList(CEMEDOEHBGE),

    pub const _desc_table = .{
        .retcode = fd(5, .{ .Varint = .Simple }),
        .PKCPJJNOALN = fd(12, .{ .SubMessage = {} }),
        .battle_record_list = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .OKOBGJHJJOA = fd(15, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetQuestDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Quest = struct {
    id: u32 = 0,
    status: QuestStatus = @enumFromInt(0),
    PGJNGNAJHPP: ArrayList(u32),
    finish_time: i64 = 0,
    progress: u32 = 0,

    pub const _desc_table = .{
        .id = fd(11, .{ .Varint = .Simple }),
        .status = fd(2, .{ .Varint = .Simple }),
        .PGJNGNAJHPP = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
        .finish_time = fd(4, .{ .Varint = .Simple }),
        .progress = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetQuestDataScRsp = struct {
    retcode: u32 = 0,
    quest_list: ArrayList(Quest),
    total_achievement_exp: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
        .quest_list = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .total_achievement_exp = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeQuestRewardCsReq = struct {
    succ_quest_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .succ_quest_id_list = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeQuestRewardScRsp = struct {
    reward: ?ItemList = null,
    NODOEMDNBCJ: ArrayList(u32),
    retcode: u32 = 0,
    succ_quest_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .reward = fd(7, .{ .SubMessage = {} }),
        .NODOEMDNBCJ = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(10, .{ .Varint = .Simple }),
        .succ_quest_id_list = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeQuestOptionalRewardCsReq = struct {
    optional_reward_id: u32 = 0,
    quest_id: u32 = 0,

    pub const _desc_table = .{
        .optional_reward_id = fd(2, .{ .Varint = .Simple }),
        .quest_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeQuestOptionalRewardScRsp = struct {
    reward: ?ItemList = null,
    retcode: u32 = 0,
    quest_id: u32 = 0,

    pub const _desc_table = .{
        .reward = fd(9, .{ .SubMessage = {} }),
        .retcode = fd(10, .{ .Varint = .Simple }),
        .quest_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetQuestRecordCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EPJDFBAOFDF = struct {
    IJFIHGCKNHG: u32 = 0,
    progress: u32 = 0,

    pub const _desc_table = .{
        .IJFIHGCKNHG = fd(7, .{ .Varint = .Simple }),
        .progress = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetQuestRecordScRsp = struct {
    retcode: u32 = 0,
    OBEMGACMGNH: ArrayList(EPJDFBAOFDF),

    pub const _desc_table = .{
        .retcode = fd(6, .{ .Varint = .Simple }),
        .OBEMGACMGNH = fd(8, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const QuestRecordScNotify = struct {
    FEAOCOKKGBM: ?EPJDFBAOFDF = null,

    pub const _desc_table = .{
        .FEAOCOKKGBM = fd(9, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishQuestCsReq = struct {
    group_id: u32 = 0,
    prop_id: u32 = 0,
    quest_id: u32 = 0,

    pub const _desc_table = .{
        .group_id = fd(11, .{ .Varint = .Simple }),
        .prop_id = fd(13, .{ .Varint = .Simple }),
        .quest_id = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishQuestScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BatchGetQuestDataCsReq = struct {
    quest_list: ArrayList(u32),

    pub const _desc_table = .{
        .quest_list = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BatchGetQuestDataScRsp = struct {
    quest_list: ArrayList(Quest),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .quest_list = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FNLGPLNCPCL = struct {
    world_level: u32 = 0,
    GHEDLCLNHIJ: ?SceneInfo = null,
    raid_id: u32 = 0,
    lineup: ?LineupInfo = null,

    pub const _desc_table = .{
        .world_level = fd(5, .{ .Varint = .Simple }),
        .GHEDLCLNHIJ = fd(4, .{ .SubMessage = {} }),
        .raid_id = fd(2, .{ .Varint = .Simple }),
        .lineup = fd(11, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartRaidCsReq = struct {
    avatar_list: ArrayList(u32),
    world_level: u32 = 0,
    is_save: u32 = 0,
    raid_id: u32 = 0,
    prop_entity_id: u32 = 0,

    pub const _desc_table = .{
        .avatar_list = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        .world_level = fd(11, .{ .Varint = .Simple }),
        .is_save = fd(4, .{ .Varint = .Simple }),
        .raid_id = fd(8, .{ .Varint = .Simple }),
        .prop_entity_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartRaidScRsp = struct {
    retcode: u32 = 0,
    scene: ?FNLGPLNCPCL = null,

    pub const _desc_table = .{
        .retcode = fd(2, .{ .Varint = .Simple }),
        .scene = fd(4, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LeaveRaidCsReq = struct {
    raid_id: u32 = 0,
    is_save: bool = false,

    pub const _desc_table = .{
        .raid_id = fd(4, .{ .Varint = .Simple }),
        .is_save = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LeaveRaidScRsp = struct {
    raid_id: u32 = 0,
    world_level: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .raid_id = fd(4, .{ .Varint = .Simple }),
        .world_level = fd(1, .{ .Varint = .Simple }),
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RaidTargetInfo = struct {
    HFALJIHKECN: u32 = 0,
    MDDOFMCJJHH: FOCHDFJANPC = @enumFromInt(0),
    DLPPDPBJIIM: u32 = 0,

    pub const _desc_table = .{
        .HFALJIHKECN = fd(3, .{ .Varint = .Simple }),
        .MDDOFMCJJHH = fd(8, .{ .Varint = .Simple }),
        .DLPPDPBJIIM = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RaidInfoNotify = struct {
    raid_finish_time: u64 = 0,
    raid_id: u32 = 0,
    world_level: u32 = 0,
    status: RaidStatus = @enumFromInt(0),
    raid_target_info: ArrayList(RaidTargetInfo),
    item_list: ?ItemList = null,

    pub const _desc_table = .{
        .raid_finish_time = fd(2, .{ .Varint = .Simple }),
        .raid_id = fd(15, .{ .Varint = .Simple }),
        .world_level = fd(5, .{ .Varint = .Simple }),
        .status = fd(14, .{ .Varint = .Simple }),
        .raid_target_info = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .item_list = fd(7, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AMDKBOHCFIA = struct {
    raid_id: u32 = 0,
    max_score: u32 = 0,

    pub const _desc_table = .{
        .raid_id = fd(5, .{ .Varint = .Simple }),
        .max_score = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishedRaidInfo = struct {
    world_level: u32 = 0,
    raid_id: u32 = 0,
    KNIBANIILDE: ArrayList(u32),

    pub const _desc_table = .{
        .world_level = fd(11, .{ .Varint = .Simple }),
        .raid_id = fd(1, .{ .Varint = .Simple }),
        .KNIBANIILDE = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRaidInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRaidInfoScRsp = struct {
    retcode: u32 = 0,
    challenge_raid_list: ArrayList(AMDKBOHCFIA),
    challenge_taken_reward_id_list: ArrayList(u32),
    finished_raid_info_list: ArrayList(FinishedRaidInfo),

    pub const _desc_table = .{
        .retcode = fd(4, .{ .Varint = .Simple }),
        .challenge_raid_list = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .challenge_taken_reward_id_list = fd(11, .{ .PackedList = .{ .Varint = .Simple } }),
        .finished_raid_info_list = fd(8, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetChallengeRaidInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetChallengeRaidInfoScRsp = struct {
    taken_reward_id_list: ArrayList(u32),
    retcode: u32 = 0,
    MJGFFCLJGFN: ArrayList(AMDKBOHCFIA),

    pub const _desc_table = .{
        .taken_reward_id_list = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(1, .{ .Varint = .Simple }),
        .MJGFFCLJGFN = fd(6, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeChallengeRaidRewardCsReq = struct {
    OEHKJOAFPBA: u32 = 0,

    pub const _desc_table = .{
        .OEHKJOAFPBA = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeChallengeRaidRewardScRsp = struct {
    reward: ?ItemList = null,
    OEHKJOAFPBA: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .reward = fd(11, .{ .SubMessage = {} }),
        .OEHKJOAFPBA = fd(12, .{ .Varint = .Simple }),
        .retcode = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChallengeRaidNotify = struct {
    EHMILJFIJKH: ?AMDKBOHCFIA = null,

    pub const _desc_table = .{
        .EHMILJFIJKH = fd(11, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetClientRaidTargetCountCsReq = struct {
    DMMPPKMJPMM: u32 = 0,
    progress: u32 = 0,

    pub const _desc_table = .{
        .DMMPPKMJPMM = fd(8, .{ .Varint = .Simple }),
        .progress = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetClientRaidTargetCountScRsp = struct {
    retcode: u32 = 0,
    progress: u32 = 0,
    DMMPPKMJPMM: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
        .progress = fd(4, .{ .Varint = .Simple }),
        .DMMPPKMJPMM = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetSaveRaidCsReq = struct {
    world_level: u32 = 0,
    raid_id: u32 = 0,

    pub const _desc_table = .{
        .world_level = fd(13, .{ .Varint = .Simple }),
        .raid_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetSaveRaidScRsp = struct {
    is_save: bool = false,
    world_level: u32 = 0,
    raid_id: u32 = 0,
    raid_target_info: ArrayList(RaidTargetInfo),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .is_save = fd(12, .{ .Varint = .Simple }),
        .world_level = fd(11, .{ .Varint = .Simple }),
        .raid_id = fd(8, .{ .Varint = .Simple }),
        .raid_target_info = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RaidData = struct {
    raid_target_info: ArrayList(RaidTargetInfo),
    world_level: u32 = 0,
    raid_id: u32 = 0,

    pub const _desc_table = .{
        .raid_target_info = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .world_level = fd(3, .{ .Varint = .Simple }),
        .raid_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetAllSaveRaidCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetAllSaveRaidScRsp = struct {
    raid_data_list: ArrayList(RaidData),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .raid_data_list = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DelSaveRaidScNotify = struct {
    world_level: u32 = 0,
    raid_id: u32 = 0,

    pub const _desc_table = .{
        .world_level = fd(7, .{ .Varint = .Simple }),
        .raid_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RaidKickByServerScNotify = struct {
    raid_id: u32 = 0,
    reason: EGKFNDOOPNN = @enumFromInt(0),
    lineup: ?LineupInfo = null,
    scene: ?SceneInfo = null,
    world_level: u32 = 0,

    pub const _desc_table = .{
        .raid_id = fd(5, .{ .Varint = .Simple }),
        .reason = fd(7, .{ .Varint = .Simple }),
        .lineup = fd(3, .{ .SubMessage = {} }),
        .scene = fd(8, .{ .SubMessage = {} }),
        .world_level = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ACONLFJEJOK = struct {
    JJDMKHBKPLM: u32 = 0,

    pub const _desc_table = .{
        .JJDMKHBKPLM = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RaidCollectionDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RaidCollectionDataScRsp = struct {
    challenge_list: ArrayList(ACONLFJEJOK),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .challenge_list = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RaidCollectionDataScNotify = struct {
    collection_info: ?ACONLFJEJOK = null,

    pub const _desc_table = .{
        .collection_info = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RaidCollectionEnterNextRaidCsReq = struct {
    world_level: u32 = 0,
    is_save: u32 = 0,
    avatar_list: ArrayList(u32),
    raid_id: u32 = 0,

    pub const _desc_table = .{
        .world_level = fd(5, .{ .Varint = .Simple }),
        .is_save = fd(11, .{ .Varint = .Simple }),
        .avatar_list = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .raid_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RaidCollectionEnterNextRaidScRsp = struct {
    retcode: u32 = 0,
    scene: ?FNLGPLNCPCL = null,

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
        .scene = fd(5, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRechargeGiftInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OIOPBDBJHIE = struct {
    status: OIOPBDBJHIE.LIGLFGKHLHG.IPKPKDCEBKI = @enumFromInt(0),
    index: u32 = 0,

    pub const _desc_table = .{
        .status = fd(14, .{ .Varint = .Simple }),
        .index = fd(11, .{ .Varint = .Simple }),
    };

    pub const LIGLFGKHLHG = struct {
        pub const _desc_table = .{};

        pub const IPKPKDCEBKI = enum(i32) {
            NotReach = 0,
            Received = 1,
            CanReceive = 2,
            _,
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FPNJLDDAMGH = struct {
    end_time: i64 = 0,
    MIGFMPJBELG: ArrayList(OIOPBDBJHIE),
    COIFHFPEGPH: i64 = 0,
    gift_type: u32 = 0,

    pub const _desc_table = .{
        .end_time = fd(7, .{ .Varint = .Simple }),
        .MIGFMPJBELG = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .COIFHFPEGPH = fd(1, .{ .Varint = .Simple }),
        .gift_type = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRechargeGiftInfoScRsp = struct {
    MMGLCJMGGIH: ArrayList(FPNJLDDAMGH),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .MMGLCJMGGIH = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeRechargeGiftRewardCsReq = struct {
    gift_type: u32 = 0,

    pub const _desc_table = .{
        .gift_type = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeRechargeGiftRewardScRsp = struct {
    HNKGCNDOCAK: ?FPNJLDDAMGH = null,
    reward: ?ItemList = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .HNKGCNDOCAK = fd(14, .{ .SubMessage = {} }),
        .reward = fd(1, .{ .SubMessage = {} }),
        .retcode = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRechargeBenefitInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JMHOJKKGNIF = struct {
    id: u32 = 0,
    progress: u32 = 0,
    JCLOBIAPKEG: ArrayList(u32),
    panel_id: u32 = 0,

    pub const _desc_table = .{
        .id = fd(2, .{ .Varint = .Simple }),
        .progress = fd(8, .{ .Varint = .Simple }),
        .JCLOBIAPKEG = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
        .panel_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRechargeBenefitInfoScRsp = struct {
    EHNDMLFFMHI: ArrayList(JMHOJKKGNIF),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .EHNDMLFFMHI = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncRechargeBenefitInfoScNotify = struct {
    AMEFPPFCFJI: ?JMHOJKKGNIF = null,

    pub const _desc_table = .{
        .AMEFPPFCFJI = fd(5, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeRechargeBenefitRewardCsReq = struct {
    id: u32 = 0,

    pub const _desc_table = .{
        .id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeRechargeBenefitRewardScRsp = struct {
    AMEFPPFCFJI: ?JMHOJKKGNIF = null,
    reward: ?ItemList = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .AMEFPPFCFJI = fd(2, .{ .SubMessage = {} }),
        .reward = fd(9, .{ .SubMessage = {} }),
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetChallengeRecommendLineupListCsReq = struct {
    challenge_id: u32 = 0,

    pub const _desc_table = .{
        .challenge_id = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChallengeRecommendLineup = struct {
    DCHOLKBFBGI: u32 = 0,
    CEIFDIKPDAM: u32 = 0,
    first_lineup: ArrayList(u32),
    second_lineup: ArrayList(u32),

    pub const _desc_table = .{
        .DCHOLKBFBGI = fd(12, .{ .Varint = .Simple }),
        .CEIFDIKPDAM = fd(7, .{ .Varint = .Simple }),
        .first_lineup = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        .second_lineup = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetChallengeRecommendLineupListScRsp = struct {
    challenge_id: u32 = 0,
    retcode: u32 = 0,
    challenge_recommend_list: ArrayList(ChallengeRecommendLineup),

    pub const _desc_table = .{
        .challenge_id = fd(7, .{ .Varint = .Simple }),
        .retcode = fd(5, .{ .Varint = .Simple }),
        .challenge_recommend_list = fd(2, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EquipmentRecommendInfo = struct {
    LGIIAHIDLMG: u32 = 0,
    MDMGKHLHIIN: u32 = 0,

    pub const _desc_table = .{
        .LGIIAHIDLMG = fd(3, .{ .Varint = .Simple }),
        .MDMGKHLHIIN = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EquipmentRecommend = struct {
    equipment_list: ArrayList(EquipmentRecommendInfo),

    pub const _desc_table = .{
        .equipment_list = fd(13, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RelicRecommendInfo = struct {
    EHCEEPMBDDI: u32 = 0,
    FIKKGBIBCJK: u32 = 0,
    PDMGJKODFOP: u32 = 0,

    pub const _desc_table = .{
        .EHCEEPMBDDI = fd(8, .{ .Varint = .Simple }),
        .FIKKGBIBCJK = fd(15, .{ .Varint = .Simple }),
        .PDMGJKODFOP = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RelicRecommend = struct {
    recommend_relic_list: ArrayList(RelicRecommendInfo),

    pub const _desc_table = .{
        .recommend_relic_list = fd(3, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CAGFLKCLGCH = struct {
    DBGNCIOMIEP: ArrayList(u32),

    pub const _desc_table = .{
        .DBGNCIOMIEP = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GPCPGBHOFCF = struct {
    challenge_recommend_list: ArrayList(CAGFLKCLGCH),

    pub const _desc_table = .{
        .challenge_recommend_list = fd(12, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetBigDataRecommendCsReq = struct {
    big_data_recommend_type: BigDataRecommendType = @enumFromInt(0),
    equip_avatar: u32 = 0,

    pub const _desc_table = .{
        .big_data_recommend_type = fd(7, .{ .Varint = .Simple }),
        .equip_avatar = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetBigDataRecommendScRsp = struct {
    big_data_recommend_type: BigDataRecommendType = @enumFromInt(0),
    equip_avatar: u32 = 0,
    has_recommand: bool = false,
    retcode: u32 = 0,
    FCDDBOIEOIP: ?FCDDBOIEOIP_union,

    pub const _FCDDBOIEOIP_case = enum {
        equipment_recommend,
        relic_recommend,
        KGHLFCEOBKK,
    };
    pub const FCDDBOIEOIP_union = union(_FCDDBOIEOIP_case) {
        equipment_recommend: EquipmentRecommend,
        relic_recommend: RelicRecommend,
        KGHLFCEOBKK: GPCPGBHOFCF,
        pub const _union_desc = .{
            .equipment_recommend = fd(10, .{ .SubMessage = {} }),
            .relic_recommend = fd(1, .{ .SubMessage = {} }),
            .KGHLFCEOBKK = fd(11, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .big_data_recommend_type = fd(8, .{ .Varint = .Simple }),
        .equip_avatar = fd(5, .{ .Varint = .Simple }),
        .has_recommand = fd(4, .{ .Varint = .Simple }),
        .retcode = fd(9, .{ .Varint = .Simple }),
        .FCDDBOIEOIP = fd(null, .{ .OneOf = FCDDBOIEOIP_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KNNFPFKCABE = struct {
    CFIPHFHOJFP: u32 = 0,
    DHJHIBCDNBA: u32 = 0,
    avatar_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .CFIPHFHOJFP = fd(2, .{ .Varint = .Simple }),
        .DHJHIBCDNBA = fd(15, .{ .Varint = .Simple }),
        .avatar_id_list = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PIIIPHEFDJO = struct {
    APFECOOPNKN: ArrayList(KNNFPFKCABE),

    pub const _desc_table = .{
        .APFECOOPNKN = fd(7, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NKGHHAFANHN = struct {
    FLEEFJLNLCH: u32 = 0,
    KICOBNPCKAE: u32 = 0,
    IIKGCJFJADF: u32 = 0,

    pub const _desc_table = .{
        .FLEEFJLNLCH = fd(15, .{ .Varint = .Simple }),
        .KICOBNPCKAE = fd(6, .{ .Varint = .Simple }),
        .IIKGCJFJADF = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GHLEDKFIIJH = struct {
    JICDFLIMHHD: u32 = 0,
    KICOBNPCKAE: u32 = 0,

    pub const _desc_table = .{
        .JICDFLIMHHD = fd(8, .{ .Varint = .Simple }),
        .KICOBNPCKAE = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OFNGPLJKLOJ = struct {
    MPMFAHLKEOB: ArrayList(GHLEDKFIIJH),
    LGEJJAJPEDK: ArrayList(GHLEDKFIIJH),
    avatar_id: u32 = 0,
    NOBONCCPENG: ArrayList(NKGHHAFANHN),
    FBBAJBINGLB: ArrayList(GHLEDKFIIJH),
    KKCMFGMHIMO: ArrayList(GHLEDKFIIJH),
    PDBHNHPCNNJ: ArrayList(NKGHHAFANHN),

    pub const _desc_table = .{
        .MPMFAHLKEOB = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .LGEJJAJPEDK = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .avatar_id = fd(9, .{ .Varint = .Simple }),
        .NOBONCCPENG = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .FBBAJBINGLB = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .KKCMFGMHIMO = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .PDBHNHPCNNJ = fd(5, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MKJALMKMPGL = struct {
    BFDMGINBOIB: ArrayList(OFNGPLJKLOJ),

    pub const _desc_table = .{
        .BFDMGINBOIB = fd(14, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetBigDataAllRecommendCsReq = struct {
    big_data_recommend_type: BigDataRecommendType = @enumFromInt(0),

    pub const _desc_table = .{
        .big_data_recommend_type = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetBigDataAllRecommendScRsp = struct {
    retcode: u32 = 0,
    big_data_recommend_type: BigDataRecommendType = @enumFromInt(0),
    FCDDBOIEOIP: ?FCDDBOIEOIP_union,

    pub const _FCDDBOIEOIP_case = enum {
        DKLBNBDPMPO,
        PFOPJPJKKLK,
    };
    pub const FCDDBOIEOIP_union = union(_FCDDBOIEOIP_case) {
        DKLBNBDPMPO: PIIIPHEFDJO,
        PFOPJPJKKLK: MKJALMKMPGL,
        pub const _union_desc = .{
            .DKLBNBDPMPO = fd(4, .{ .SubMessage = {} }),
            .PFOPJPJKKLK = fd(15, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .retcode = fd(8, .{ .Varint = .Simple }),
        .big_data_recommend_type = fd(3, .{ .Varint = .Simple }),
        .FCDDBOIEOIP = fd(null, .{ .OneOf = FCDDBOIEOIP_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EJBIOKMOLAF = struct {
    FFBEEBKOGPN: ArrayList(u32),

    pub const _desc_table = .{
        .FFBEEBKOGPN = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KNCHLMGILJC = struct {
    MBGIJNJFHGE: ArrayList(MBGIJNJFHGEEntry),
    panel_id: u32 = 0,
    NOPDKLDEKKF: u32 = 0,

    pub const _desc_table = .{
        .MBGIJNJFHGE = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .panel_id = fd(1, .{ .Varint = .Simple }),
        .NOPDKLDEKKF = fd(7, .{ .Varint = .Simple }),
    };

    pub const MBGIJNJFHGEEntry = struct {
        key: u32 = 0,
        value: ?EJBIOKMOLAF = null,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetAllRedDotDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetAllRedDotDataScRsp = struct {
    retcode: u32 = 0,
    IAGIBDAICHI: ArrayList(KNCHLMGILJC),

    pub const _desc_table = .{
        .retcode = fd(11, .{ .Varint = .Simple }),
        .IAGIBDAICHI = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdateRedDotDataCsReq = struct {
    panel_id: u32 = 0,
    group_id: u32 = 0,
    NOPDKLDEKKF: u32 = 0,
    HONEMGCFBGI: OJLJHFNFDKP = @enumFromInt(0),
    switch_list: ArrayList(u32),

    pub const _desc_table = .{
        .panel_id = fd(11, .{ .Varint = .Simple }),
        .group_id = fd(9, .{ .Varint = .Simple }),
        .NOPDKLDEKKF = fd(4, .{ .Varint = .Simple }),
        .HONEMGCFBGI = fd(15, .{ .Varint = .Simple }),
        .switch_list = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdateRedDotDataScRsp = struct {
    retcode: u32 = 0,
    NOPDKLDEKKF: u32 = 0,
    group_id: u32 = 0,
    panel_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
        .NOPDKLDEKKF = fd(1, .{ .Varint = .Simple }),
        .group_id = fd(4, .{ .Varint = .Simple }),
        .panel_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetSingleRedDotParamGroupCsReq = struct {
    group_id: u32 = 0,
    NOPDKLDEKKF: u32 = 0,
    panel_id: u32 = 0,

    pub const _desc_table = .{
        .group_id = fd(4, .{ .Varint = .Simple }),
        .NOPDKLDEKKF = fd(6, .{ .Varint = .Simple }),
        .panel_id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetSingleRedDotParamGroupScRsp = struct {
    group_id: u32 = 0,
    CHPJJKLGOKM: ?EJBIOKMOLAF = null,
    NOPDKLDEKKF: u32 = 0,
    panel_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .group_id = fd(14, .{ .Varint = .Simple }),
        .CHPJJKLGOKM = fd(13, .{ .SubMessage = {} }),
        .NOPDKLDEKKF = fd(8, .{ .Varint = .Simple }),
        .panel_id = fd(6, .{ .Varint = .Simple }),
        .retcode = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RelicSmartWearPlan = struct {
    outside_relic_list: ArrayList(u32),
    unique_id: u32 = 0,
    inside_relic_list: ArrayList(u32),
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .outside_relic_list = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
        .unique_id = fd(3, .{ .Varint = .Simple }),
        .inside_relic_list = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .avatar_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RelicSmartWearGetPlanCsReq = struct {
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .avatar_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RelicSmartWearGetPlanScRsp = struct {
    retcode: u32 = 0,
    relic_plan_list: ArrayList(RelicSmartWearPlan),
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(14, .{ .Varint = .Simple }),
        .relic_plan_list = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .avatar_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RelicSmartWearAddPlanCsReq = struct {
    relic_plan: ?RelicSmartWearPlan = null,

    pub const _desc_table = .{
        .relic_plan = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RelicSmartWearAddPlanScRsp = struct {
    relic_plan: ?RelicSmartWearPlan = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .relic_plan = fd(15, .{ .SubMessage = {} }),
        .retcode = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RelicSmartWearUpdatePlanCsReq = struct {
    relic_plan: ?RelicSmartWearPlan = null,

    pub const _desc_table = .{
        .relic_plan = fd(10, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RelicSmartWearUpdatePlanScRsp = struct {
    retcode: u32 = 0,
    relic_plan: ?RelicSmartWearPlan = null,

    pub const _desc_table = .{
        .retcode = fd(4, .{ .Varint = .Simple }),
        .relic_plan = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RelicSmartWearDeletePlanCsReq = struct {
    unique_id: u32 = 0,

    pub const _desc_table = .{
        .unique_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RelicSmartWearDeletePlanScRsp = struct {
    unique_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .unique_id = fd(15, .{ .Varint = .Simple }),
        .retcode = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PMDJBOJKDNK = struct {
    inside_relic_list: ArrayList(u32),
    JCCFEACHMBP: ANCCGLMMDJJ = @enumFromInt(0),
    outside_relic_list: ArrayList(u32),

    pub const _desc_table = .{
        .inside_relic_list = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .JCCFEACHMBP = fd(13, .{ .Varint = .Simple }),
        .outside_relic_list = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HAMMFOJBJHF = struct {
    avatar_id: u32 = 0,
    relic_ids: ArrayList(u32),
    OODINCNJPHB: ?PMDJBOJKDNK = null,

    pub const _desc_table = .{
        .avatar_id = fd(9, .{ .Varint = .Simple }),
        .relic_ids = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .OODINCNJPHB = fd(10, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RelicSmartWearGetPinRelicCsReq = struct {
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .avatar_id = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RelicSmartWearGetPinRelicScRsp = struct {
    retcode: u32 = 0,
    FAJBODIGLEF: ArrayList(HAMMFOJBJHF),
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(13, .{ .Varint = .Simple }),
        .FAJBODIGLEF = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .avatar_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RelicSmartWearUpdatePinRelicScNotify = struct {
    relic_unique_id: u32 = 0,
    NONCKFAOGJE: ArrayList(HAMMFOJBJHF),
    EODJILEFGFB: ArrayList(HAMMFOJBJHF),

    pub const _desc_table = .{
        .relic_unique_id = fd(9, .{ .Varint = .Simple }),
        .NONCKFAOGJE = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .EODJILEFGFB = fd(8, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RelicSmartWearUpdatePinRelicCsReq = struct {
    IBFNKOACMCP: ?HAMMFOJBJHF = null,

    pub const _desc_table = .{
        .IBFNKOACMCP = fd(11, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RelicSmartWearUpdatePinRelicScRsp = struct {
    IBFNKOACMCP: ?HAMMFOJBJHF = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .IBFNKOACMCP = fd(7, .{ .SubMessage = {} }),
        .retcode = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RelicSmartWearDeletePinRelicCsReq = struct {
    NFNOJDCHONJ: bool = false,
    avatar_id: u32 = 0,
    BDGJPHFDCAH: ArrayList(PMDJBOJKDNK),

    pub const _desc_table = .{
        .NFNOJDCHONJ = fd(5, .{ .Varint = .Simple }),
        .avatar_id = fd(15, .{ .Varint = .Simple }),
        .BDGJPHFDCAH = fd(13, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RelicSmartWearDeletePinRelicScRsp = struct {
    BDGJPHFDCAH: ArrayList(PMDJBOJKDNK),
    avatar_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .BDGJPHFDCAH = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .avatar_id = fd(3, .{ .Varint = .Simple }),
        .retcode = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetReplayTokenCsReq = struct {
    AFEHLMFIBMD: u32 = 0,
    KIHBIGPFKKN: ManagedString = .Empty,
    stage_id: u32 = 0,
    BBEMIDHMNLM: ManagedString = .Empty,
    CMPBKBBKAOA: u32 = 0,
    replay_type: ReplayType = @enumFromInt(0),

    pub const _desc_table = .{
        .AFEHLMFIBMD = fd(9, .{ .Varint = .Simple }),
        .KIHBIGPFKKN = fd(11, .String),
        .stage_id = fd(12, .{ .Varint = .Simple }),
        .BBEMIDHMNLM = fd(10, .String),
        .CMPBKBBKAOA = fd(6, .{ .Varint = .Simple }),
        .replay_type = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetReplayTokenScRsp = struct {
    KIHBIGPFKKN: ManagedString = .Empty,
    retcode: u32 = 0,
    stage_id: u32 = 0,
    replay_type: ReplayType = @enumFromInt(0),
    token: ManagedString = .Empty,

    pub const _desc_table = .{
        .KIHBIGPFKKN = fd(15, .String),
        .retcode = fd(11, .{ .Varint = .Simple }),
        .stage_id = fd(12, .{ .Varint = .Simple }),
        .replay_type = fd(9, .{ .Varint = .Simple }),
        .token = fd(14, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPlayerReplayInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetPlayerReplayInfoScRsp = struct {
    KGCFEALANKO: ArrayList(ReplayInfo),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .KGCFEALANKO = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRndOptionCsReq = struct {
    id: u32 = 0,

    pub const _desc_table = .{
        .id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRndOptionScRsp = struct {
    EEGEGGBDHDG: ArrayList(u32),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .EEGEGGBDHDG = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DailyFirstMeetPamCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DailyFirstMeetPamScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueBuff = struct {
    buff_id: u32 = 0,
    level: u32 = 0,

    pub const _desc_table = .{
        .buff_id = fd(8, .{ .Varint = .Simple }),
        .level = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueBuffList = struct {
    buff_list: ArrayList(RogueBuff),

    pub const _desc_table = .{
        .buff_list = fd(12, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueRoom = struct {
    site_id: u32 = 0,
    BEEEBOIOJIF: RogueRoomStatus = @enumFromInt(0),
    room_id: u32 = 0,
    cur_status: RogueRoomStatus = @enumFromInt(0),
    IMIMGFAAGHM: u32 = 0,

    pub const _desc_table = .{
        .site_id = fd(13, .{ .Varint = .Simple }),
        .BEEEBOIOJIF = fd(11, .{ .Varint = .Simple }),
        .room_id = fd(9, .{ .Varint = .Simple }),
        .cur_status = fd(7, .{ .Varint = .Simple }),
        .IMIMGFAAGHM = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMapInfo = struct {
    room_list: ArrayList(RogueRoom),
    cur_room_id: u32 = 0,
    cur_site_id: u32 = 0,
    map_id: u32 = 0,
    area_id: u32 = 0,

    pub const _desc_table = .{
        .room_list = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .cur_room_id = fd(12, .{ .Varint = .Simple }),
        .cur_site_id = fd(11, .{ .Varint = .Simple }),
        .map_id = fd(1, .{ .Varint = .Simple }),
        .area_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueArea = struct {
    MKEGBHJLJNH: RogueStatus = @enumFromInt(0),
    area_status: RogueAreaStatus = @enumFromInt(0),
    GMPIIAEGGEK: u32 = 0,
    map_id: u32 = 0,
    has_taken_reward: bool = false,
    area_id: u32 = 0,

    pub const _desc_table = .{
        .MKEGBHJLJNH = fd(2, .{ .Varint = .Simple }),
        .area_status = fd(6, .{ .Varint = .Simple }),
        .GMPIIAEGGEK = fd(11, .{ .Varint = .Simple }),
        .map_id = fd(4, .{ .Varint = .Simple }),
        .has_taken_reward = fd(7, .{ .Varint = .Simple }),
        .area_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OMOGAIEOFAH = struct {
    SourceType: u32 = 0,
    HandbookUnlockBuffIdList: u32 = 0,
    SelectBuffList: u32 = 0,
    RollBuffMaxCount: u32 = 0,
    CanRolls: ArrayList(u32),
    can_roll: bool = false,
    modifier_source_type: RogueCommonBuffSelectSourceType = @enumFromInt(0),
    IPODNBLJPOL: u32 = 0,
    FirstBuffTypeList: u32 = 0,
    SourceCurCount: u32 = 0,
    SourceTotalCount: ?ItemCostData = null,
    maze_buff_list: ArrayList(RogueBuff),
    SourceHintId: u32 = 0,

    pub const _desc_table = .{
        .SourceType = fd(5, .{ .Varint = .Simple }),
        .HandbookUnlockBuffIdList = fd(11, .{ .Varint = .Simple }),
        .SelectBuffList = fd(8, .{ .Varint = .Simple }),
        .RollBuffMaxCount = fd(14, .{ .Varint = .Simple }),
        .CanRolls = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
        .can_roll = fd(12, .{ .Varint = .Simple }),
        .modifier_source_type = fd(3, .{ .Varint = .Simple }),
        .IPODNBLJPOL = fd(1, .{ .Varint = .Simple }),
        .FirstBuffTypeList = fd(6, .{ .Varint = .Simple }),
        .SourceCurCount = fd(2, .{ .Varint = .Simple }),
        .SourceTotalCount = fd(4, .{ .SubMessage = {} }),
        .maze_buff_list = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .SourceHintId = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KFEJFBBGIAD = struct {
    KMPMDLDHABN: ArrayList(RogueBuff),
    get_buff_list: ?RogueBuff = null,

    pub const _desc_table = .{
        .KMPMDLDHABN = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .get_buff_list = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IGJENCIKLOF = struct {
    select_hint_id: u32 = 0,
    IHGMPJNNMKI: ArrayList(RogueBuff),
    CLPLEFHHAFB: ArrayList(RogueBuff),

    pub const _desc_table = .{
        .select_hint_id = fd(6, .{ .Varint = .Simple }),
        .IHGMPJNNMKI = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .CLPLEFHHAFB = fd(8, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueBuffEnhanceInfo = struct {
    buff_id: u32 = 0,
    FAMCMAGFKCL: f32 = 0,
    cost_data: ?ItemCostData = null,

    pub const _desc_table = .{
        .buff_id = fd(8, .{ .Varint = .Simple }),
        .FAMCMAGFKCL = fd(13, .{ .FixedInt = .I32 }),
        .cost_data = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueBuffEnhanceInfoList = struct {
    enhance_info_list: ArrayList(RogueBuffEnhanceInfo),

    pub const _desc_table = .{
        .enhance_info_list = fd(15, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMiracle = struct {
    cur_times: u32 = 0,
    miracle_id: u32 = 0,
    durability: u32 = 0,
    GMAFEJEJBHO: ArrayList(GMAFEJEJBHOEntry),
    max_times: u32 = 0,

    pub const _desc_table = .{
        .cur_times = fd(5, .{ .Varint = .Simple }),
        .miracle_id = fd(11, .{ .Varint = .Simple }),
        .durability = fd(12, .{ .Varint = .Simple }),
        .GMAFEJEJBHO = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .max_times = fd(14, .{ .Varint = .Simple }),
    };

    pub const GMAFEJEJBHOEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OLFPCKAGKAK = struct {
    miracle_list: ArrayList(RogueMiracle),

    pub const _desc_table = .{
        .miracle_list = fd(2, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BFLJDBHBMNP = struct {
    game_miracle_info: ?OLFPCKAGKAK = null,
    miracle_handbook_list: ArrayList(u32),

    pub const _desc_table = .{
        .game_miracle_info = fd(7, .{ .SubMessage = {} }),
        .miracle_handbook_list = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KEIONFFFLCO = struct {
    CMAGGNFDKAG: ArrayList(u32),

    pub const _desc_table = .{
        .CMAGGNFDKAG = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FLECFLLDNFP = struct {
    bonus_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .bonus_id_list = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NGFFCEICACD = struct {
    EBNPOCIDPKE: u32 = 0,
    MICMCKAHMPL: ?MICMCKAHMPL_union,

    pub const _MICMCKAHMPL_case = enum {
        JDIJKEGCIBP,
        CNDGJJLJDOF,
    };
    pub const MICMCKAHMPL_union = union(_MICMCKAHMPL_case) {
        JDIJKEGCIBP: ItemList,
        CNDGJJLJDOF: RogueBuffList,
        pub const _union_desc = .{
            .JDIJKEGCIBP = fd(14, .{ .SubMessage = {} }),
            .CNDGJJLJDOF = fd(8, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .EBNPOCIDPKE = fd(12, .{ .Varint = .Simple }),
        .MICMCKAHMPL = fd(null, .{ .OneOf = MICMCKAHMPL_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueReviveInfo = struct {
    rogue_revive_cost: ?ItemCostData = null,

    pub const _desc_table = .{
        .rogue_revive_cost = fd(15, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JHEELOAGMIG = struct {
    NIDFLBKPOEB: u32 = 0,

    pub const _desc_table = .{
        .NIDFLBKPOEB = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PBEKDHCLBFB = struct {
    GFDBGCOLKCP: u32 = 0,
    IPODNBLJPOL: u32 = 0,
    HGBLOMELBLE: u32 = 0,
    JKJMCFAGOCF: u32 = 0,

    pub const _desc_table = .{
        .GFDBGCOLKCP = fd(7, .{ .Varint = .Simple }),
        .IPODNBLJPOL = fd(15, .{ .Varint = .Simple }),
        .HGBLOMELBLE = fd(9, .{ .Varint = .Simple }),
        .JKJMCFAGOCF = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueInfo = struct {
    rogue_current_info: ?RogueCurrentInfo = null,
    rogue_get_info: ?RogueGetInfo = null,

    pub const _desc_table = .{
        .rogue_current_info = fd(285, .{ .SubMessage = {} }),
        .rogue_get_info = fd(1559, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueGetInfo = struct {
    rogue_area_info: ?RogueAreaInfo = null,
    rogue_aeon_info: ?RogueAeonInfo = null,
    rogue_score_reward_info: ?RogueScoreRewardInfo = null,
    rogue_season_info: ?RogueSeasonInfo = null,
    rogue_virtual_item_info: ?RogueGetVirtualItemInfo = null,

    pub const _desc_table = .{
        .rogue_area_info = fd(13, .{ .SubMessage = {} }),
        .rogue_aeon_info = fd(14, .{ .SubMessage = {} }),
        .rogue_score_reward_info = fd(10, .{ .SubMessage = {} }),
        .rogue_season_info = fd(7, .{ .SubMessage = {} }),
        .rogue_virtual_item_info = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueCurrentInfo = struct {
    is_explore_win: bool = false,
    module_info: ?RogueModuleInfo = null,
    pending_action: ?RogueCommonPendingAction = null,
    rogue_aeon_info: ?GameAeonInfo = null,
    game_miracle_info: ?GameMiracleInfo = null,
    rogue_buff_info: ?RogueBuffInfo = null,
    virtual_item_info: ?RogueVirtualItem = null,
    rogue_lineup_info: ?RogueLineupInfo = null,
    status: RogueStatus = @enumFromInt(0),
    rogue_map: ?RogueMapInfo = null,

    pub const _desc_table = .{
        .is_explore_win = fd(1, .{ .Varint = .Simple }),
        .module_info = fd(4, .{ .SubMessage = {} }),
        .pending_action = fd(15, .{ .SubMessage = {} }),
        .rogue_aeon_info = fd(7, .{ .SubMessage = {} }),
        .game_miracle_info = fd(11, .{ .SubMessage = {} }),
        .rogue_buff_info = fd(2, .{ .SubMessage = {} }),
        .virtual_item_info = fd(14, .{ .SubMessage = {} }),
        .rogue_lineup_info = fd(5, .{ .SubMessage = {} }),
        .status = fd(13, .{ .Varint = .Simple }),
        .rogue_map = fd(10, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueSeasonInfo = struct {
    end_time: i64 = 0,
    begin_time: i64 = 0,
    season: u32 = 0,

    pub const _desc_table = .{
        .end_time = fd(11, .{ .Varint = .Simple }),
        .begin_time = fd(12, .{ .Varint = .Simple }),
        .season = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueAreaInfo = struct {
    rogue_area_list: ArrayList(RogueArea),

    pub const _desc_table = .{
        .rogue_area_list = fd(12, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueAeonInfo = struct {
    is_unlocked: bool = false,
    unlocked_aeon_enhance_num: u32 = 0,
    unlocked_aeon_num: u32 = 0,
    aeon_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .is_unlocked = fd(14, .{ .Varint = .Simple }),
        .unlocked_aeon_enhance_num = fd(3, .{ .Varint = .Simple }),
        .unlocked_aeon_num = fd(8, .{ .Varint = .Simple }),
        .aeon_id_list = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueGetVirtualItemInfo = struct {
    IFEHBIMEMEC: u32 = 0,
    BILEOOPHJEF: u32 = 0,

    pub const _desc_table = .{
        .IFEHBIMEMEC = fd(1, .{ .Varint = .Simple }),
        .BILEOOPHJEF = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueBuffInfo = struct {
    maze_buff_list: ArrayList(RogueBuff),

    pub const _desc_table = .{
        .maze_buff_list = fd(5, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GameMiracleInfo = struct {
    game_miracle_info: ?OLFPCKAGKAK = null,

    pub const _desc_table = .{
        .game_miracle_info = fd(13, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueLineupInfo = struct {
    base_avatar_id_list: ArrayList(u32),
    MANKKFPBFCB: ArrayList(u32),
    revive_info: ?RogueReviveInfo = null,
    trial_avatar_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .base_avatar_id_list = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
        .MANKKFPBFCB = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .revive_info = fd(7, .{ .SubMessage = {} }),
        .trial_avatar_id_list = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HDJFLBMLLDP = struct {
    bonus_select_info: ?FLECFLLDNFP = null,

    pub const _desc_table = .{
        .bonus_select_info = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GameAeonInfo = struct {
    is_unlocked: bool = false,
    game_aeon_id: u32 = 0,
    unlocked_aeon_enhance_num: u32 = 0,

    pub const _desc_table = .{
        .is_unlocked = fd(4, .{ .Varint = .Simple }),
        .game_aeon_id = fd(9, .{ .Varint = .Simple }),
        .unlocked_aeon_enhance_num = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueModuleInfo = struct {
    module_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .module_id_list = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NIKKCCAKNNP = struct {
    is_unlocked: bool = false,
    game_aeon_id: u32 = 0,
    unlocked_aeon_enhance_num: u32 = 0,
    aeon_id_list: ArrayList(u32),
    unlocked_aeon_num: u32 = 0,

    pub const _desc_table = .{
        .is_unlocked = fd(8, .{ .Varint = .Simple }),
        .game_aeon_id = fd(7, .{ .Varint = .Simple }),
        .unlocked_aeon_enhance_num = fd(12, .{ .Varint = .Simple }),
        .aeon_id_list = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
        .unlocked_aeon_num = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MNCDPEPCFGC = struct {
    KOBFCOMHGCE: u32 = 0,
    score_id: u32 = 0,
    FJJDFPKGOPC: u32 = 0,

    pub const _desc_table = .{
        .KOBFCOMHGCE = fd(4, .{ .Varint = .Simple }),
        .score_id = fd(9, .{ .Varint = .Simple }),
        .FJJDFPKGOPC = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AOJOFBBNEPA = struct {
    DPFBDJMNCEO: f32 = 0,
    DCMHGOKCINF: ArrayList(MNCDPEPCFGC),
    NPJEECEDPOK: u32 = 0,

    pub const _desc_table = .{
        .DPFBDJMNCEO = fd(6, .{ .FixedInt = .I32 }),
        .DCMHGOKCINF = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .NPJEECEDPOK = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FGKCAMBIAHB = struct {
    avatar_type: AvatarType = @enumFromInt(0),
    level: u32 = 0,
    id: u32 = 0,
    slot: u32 = 0,

    pub const _desc_table = .{
        .avatar_type = fd(9, .{ .Varint = .Simple }),
        .level = fd(15, .{ .Varint = .Simple }),
        .id = fd(11, .{ .Varint = .Simple }),
        .slot = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GKJFBBHHLAC = struct {
    buff_list: ArrayList(RogueBuff),
    miracle_list: ArrayList(u32),
    avatar_list: ArrayList(FGKCAMBIAHB),

    pub const _desc_table = .{
        .buff_list = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .miracle_list = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
        .avatar_list = fd(3, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueFinishInfo = struct {
    MNBIEBOLCCN: u32 = 0,
    LMMEANJPEND: u32 = 0,
    BIMDLGHKAOI: u32 = 0,
    IFEHBIMEMEC: u32 = 0,
    score_id: u32 = 0,
    DEDLGFJAEAM: u32 = 0,
    is_win: bool = false,
    record_info: ?GKJFBBHHLAC = null,
    AGPPEPMGFMF: ?RogueScoreRewardInfo = null,
    area_id: u32 = 0,
    HLOBJOOEBOD: ?ItemList = null,

    pub const _desc_table = .{
        .MNBIEBOLCCN = fd(5, .{ .Varint = .Simple }),
        .LMMEANJPEND = fd(321, .{ .Varint = .Simple }),
        .BIMDLGHKAOI = fd(8, .{ .Varint = .Simple }),
        .IFEHBIMEMEC = fd(14, .{ .Varint = .Simple }),
        .score_id = fd(13, .{ .Varint = .Simple }),
        .DEDLGFJAEAM = fd(9, .{ .Varint = .Simple }),
        .is_win = fd(7, .{ .Varint = .Simple }),
        .record_info = fd(3, .{ .SubMessage = {} }),
        .AGPPEPMGFMF = fd(2, .{ .SubMessage = {} }),
        .area_id = fd(1286, .{ .Varint = .Simple }),
        .HLOBJOOEBOD = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueScoreRewardInfo = struct {
    CILNJIDIDHL: ArrayList(u32),
    PJHLOCDBAEH: bool = false,
    HDLADIBHBHH: u32 = 0,
    JOMNPADAGGK: bool = false,
    HOEPOJNNFCI: i64 = 0,
    CIGBOGHAFOF: i64 = 0,
    HHJPBLEKAPN: u32 = 0,

    pub const _desc_table = .{
        .CILNJIDIDHL = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .PJHLOCDBAEH = fd(10, .{ .Varint = .Simple }),
        .HDLADIBHBHH = fd(7, .{ .Varint = .Simple }),
        .JOMNPADAGGK = fd(14, .{ .Varint = .Simple }),
        .HOEPOJNNFCI = fd(15, .{ .Varint = .Simple }),
        .CIGBOGHAFOF = fd(5, .{ .Varint = .Simple }),
        .HHJPBLEKAPN = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EACOFHBFMLB = struct {
    aeon_id: u32 = 0,
    exp: u32 = 0,
    JGMIPMDPPIJ: u32 = 0,
    level: u32 = 0,

    pub const _desc_table = .{
        .aeon_id = fd(9, .{ .Varint = .Simple }),
        .exp = fd(12, .{ .Varint = .Simple }),
        .JGMIPMDPPIJ = fd(10, .{ .Varint = .Simple }),
        .level = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LLOCDPPMJNN = struct {
    arg_id: u32 = 0,
    is_valid: bool = false,
    rogue_dialogue_event_id: u32 = 0,
    ACDOPCBMPNL: f32 = 0,
    display_int_value: i32 = 0,

    pub const _desc_table = .{
        .arg_id = fd(7, .{ .Varint = .Simple }),
        .is_valid = fd(8, .{ .Varint = .Simple }),
        .rogue_dialogue_event_id = fd(13, .{ .Varint = .Simple }),
        .ACDOPCBMPNL = fd(10, .{ .FixedInt = .I32 }),
        .display_int_value = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LANLCCOBDNE = struct {
    game_mode_type: u32 = 0,
    talk_dialogue_id: u32 = 0,
    dialogue_event_param_list: ArrayList(LLOCDPPMJNN),
    aeon_talk_id: u32 = 0,
    event_unique_id: u32 = 0,
    EOHEEIGOBKD: ArrayList(u32),

    pub const _desc_table = .{
        .game_mode_type = fd(7, .{ .Varint = .Simple }),
        .talk_dialogue_id = fd(15, .{ .Varint = .Simple }),
        .dialogue_event_param_list = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .aeon_talk_id = fd(2, .{ .Varint = .Simple }),
        .event_unique_id = fd(4, .{ .Varint = .Simple }),
        .EOHEEIGOBKD = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GGHFIJKPFLN = struct {
    JJEALOEMMKK: ArrayList(u32),
    BPLMPMEFEAM: RogueDialogueResult = @enumFromInt(0),
    JDIJKEGCIBP: ?ItemList = null,

    pub const _desc_table = .{
        .JJEALOEMMKK = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .BPLMPMEFEAM = fd(3, .{ .Varint = .Simple }),
        .JDIJKEGCIBP = fd(15, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueInfoScRsp = struct {
    rogue_game_info: ?RogueInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .rogue_game_info = fd(7, .{ .SubMessage = {} }),
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartRogueCsReq = struct {
    aeon_id: u32 = 0,
    base_avatar_id_list: ArrayList(u32),
    trial_avatar_id_list: ArrayList(u32),
    area_id: u32 = 0,
    HJGNDHLMMIB: ArrayList(u32),

    pub const _desc_table = .{
        .aeon_id = fd(7, .{ .Varint = .Simple }),
        .base_avatar_id_list = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
        .trial_avatar_id_list = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .area_id = fd(9, .{ .Varint = .Simple }),
        .HJGNDHLMMIB = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartRogueScRsp = struct {
    rotate_info: ?RogueMapRotateInfo = null,
    rogue_game_info: ?RogueInfo = null,
    scene: ?SceneInfo = null,
    retcode: u32 = 0,
    lineup: ?LineupInfo = null,

    pub const _desc_table = .{
        .rotate_info = fd(7, .{ .SubMessage = {} }),
        .rogue_game_info = fd(1, .{ .SubMessage = {} }),
        .scene = fd(6, .{ .SubMessage = {} }),
        .retcode = fd(5, .{ .Varint = .Simple }),
        .lineup = fd(15, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterRogueCsReq = struct {
    area_id: u32 = 0,

    pub const _desc_table = .{
        .area_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterRogueScRsp = struct {
    rotate_info: ?RogueMapRotateInfo = null,
    scene: ?SceneInfo = null,
    lineup: ?LineupInfo = null,
    retcode: u32 = 0,
    rogue_game_info: ?RogueInfo = null,

    pub const _desc_table = .{
        .rotate_info = fd(7, .{ .SubMessage = {} }),
        .scene = fd(5, .{ .SubMessage = {} }),
        .lineup = fd(6, .{ .SubMessage = {} }),
        .retcode = fd(1, .{ .Varint = .Simple }),
        .rogue_game_info = fd(15, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LeaveRogueCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LeaveRogueScRsp = struct {
    scene: ?SceneInfo = null,
    retcode: u32 = 0,
    rotate_info: ?RogueMapRotateInfo = null,
    rogue_game_info: ?RogueInfo = null,
    lineup: ?LineupInfo = null,

    pub const _desc_table = .{
        .scene = fd(7, .{ .SubMessage = {} }),
        .retcode = fd(8, .{ .Varint = .Simple }),
        .rotate_info = fd(14, .{ .SubMessage = {} }),
        .rogue_game_info = fd(11, .{ .SubMessage = {} }),
        .lineup = fd(5, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncRogueFinishScNotify = struct {
    rogue_finish_info: ?RogueFinishInfo = null,

    pub const _desc_table = .{
        .rogue_finish_info = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PickRogueAvatarCsReq = struct {
    trial_avatar_id_list: ArrayList(u32),
    base_avatar_id_list: ArrayList(u32),
    prop_entity_id: u32 = 0,

    pub const _desc_table = .{
        .trial_avatar_id_list = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
        .base_avatar_id_list = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        .prop_entity_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PickRogueAvatarScRsp = struct {
    trial_avatar_id_list: ArrayList(u32),
    base_avatar_id_list: ArrayList(u32),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .trial_avatar_id_list = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .base_avatar_id_list = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ReviveRogueAvatarCsReq = struct {
    trial_avatar_id_list: ArrayList(u32),
    interacted_prop_entity_id: u32 = 0,
    base_avatar_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .trial_avatar_id_list = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .interacted_prop_entity_id = fd(7, .{ .Varint = .Simple }),
        .base_avatar_id_list = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ReviveRogueAvatarScRsp = struct {
    retcode: u32 = 0,
    trial_avatar_id_list: ArrayList(u32),
    revive_info: ?RogueReviveInfo = null,
    base_avatar_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
        .trial_avatar_id_list = fd(11, .{ .PackedList = .{ .Varint = .Simple } }),
        .revive_info = fd(1, .{ .SubMessage = {} }),
        .base_avatar_id_list = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncRogueReviveInfoScNotify = struct {
    revive_info: ?RogueReviveInfo = null,

    pub const _desc_table = .{
        .revive_info = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueBuffEnhanceInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueBuffEnhanceInfoScRsp = struct {
    retcode: u32 = 0,
    FHLOMGDANJM: ?RogueBuffEnhanceInfoList = null,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
        .FHLOMGDANJM = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnhanceRogueBuffCsReq = struct {
    maze_buff_id: u32 = 0,

    pub const _desc_table = .{
        .maze_buff_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnhanceRogueBuffScRsp = struct {
    retcode: u32 = 0,
    ANAGCODDMOM: ?RogueBuff = null,
    FGEFCEFKHMH: bool = false,

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
        .ANAGCODDMOM = fd(15, .{ .SubMessage = {} }),
        .FGEFCEFKHMH = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const QuitRogueCsReq = struct {
    area_id: u32 = 0,

    pub const _desc_table = .{
        .area_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const QuitRogueScRsp = struct {
    retcode: u32 = 0,
    rogue_game_info: ?RogueInfo = null,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
        .rogue_game_info = fd(11, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncRogueExploreWinScNotify = struct {
    is_explore_win: bool = false,

    pub const _desc_table = .{
        .is_explore_win = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncRogueSeasonFinishScNotify = struct {
    rogue_finish_info: ?RogueFinishInfo = null,
    rogue_score_reward_info: ?RogueScoreRewardInfo = null,
    lineup: ?LineupInfo = null,
    scene: ?SceneInfo = null,
    NIOLDFFFELN: bool = false,

    pub const _desc_table = .{
        .rogue_finish_info = fd(13, .{ .SubMessage = {} }),
        .rogue_score_reward_info = fd(1, .{ .SubMessage = {} }),
        .lineup = fd(2, .{ .SubMessage = {} }),
        .scene = fd(9, .{ .SubMessage = {} }),
        .NIOLDFFFELN = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterRogueMapRoomCsReq = struct {
    site_id: u32 = 0,
    room_id: u32 = 0,

    pub const _desc_table = .{
        .site_id = fd(13, .{ .Varint = .Simple }),
        .room_id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterRogueMapRoomScRsp = struct {
    cur_site_id: u32 = 0,
    rotate_info: ?RogueMapRotateInfo = null,
    lineup: ?LineupInfo = null,
    retcode: u32 = 0,
    scene: ?SceneInfo = null,

    pub const _desc_table = .{
        .cur_site_id = fd(6, .{ .Varint = .Simple }),
        .rotate_info = fd(10, .{ .SubMessage = {} }),
        .lineup = fd(3, .{ .SubMessage = {} }),
        .retcode = fd(1, .{ .Varint = .Simple }),
        .scene = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncRogueMapRoomScNotify = struct {
    KPEKCLBEPGB: ?RogueRoom = null,
    map_id: u32 = 0,

    pub const _desc_table = .{
        .KPEKCLBEPGB = fd(11, .{ .SubMessage = {} }),
        .map_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OpenRogueChestCsReq = struct {
    interacted_prop_entity_id: u32 = 0,
    EIDDMGHLPBP: bool = false,

    pub const _desc_table = .{
        .interacted_prop_entity_id = fd(6, .{ .Varint = .Simple }),
        .EIDDMGHLPBP = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OpenRogueChestScRsp = struct {
    reward: ?ItemList = null,
    retcode: u32 = 0,
    drop_data: ?ItemList = null,
    KJCHGEHDLNO: ?MBKOCMMICPG = null,

    pub const _desc_table = .{
        .reward = fd(12, .{ .SubMessage = {} }),
        .retcode = fd(3, .{ .Varint = .Simple }),
        .drop_data = fd(4, .{ .SubMessage = {} }),
        .KJCHGEHDLNO = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeRogueRewardKeyCsReq = struct {
    count: u32 = 0,

    pub const _desc_table = .{
        .count = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExchangeRogueRewardKeyScRsp = struct {
    count: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .count = fd(8, .{ .Varint = .Simple }),
        .retcode = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncRogueAreaUnlockScNotify = struct {
    area_id: u32 = 0,

    pub const _desc_table = .{
        .area_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncRogueGetItemScNotify = struct {
    IODFGFOMGOD: ?ItemList = null,
    get_item_list: ?ItemList = null,

    pub const _desc_table = .{
        .IODFGFOMGOD = fd(13, .{ .SubMessage = {} }),
        .get_item_list = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeRogueAeonLevelRewardCsReq = struct {
    level: u32 = 0,
    aeon_id: u32 = 0,

    pub const _desc_table = .{
        .level = fd(13, .{ .Varint = .Simple }),
        .aeon_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeRogueAeonLevelRewardScRsp = struct {
    level: u32 = 0,
    retcode: u32 = 0,
    reward: ?ItemList = null,
    aeon_id: u32 = 0,

    pub const _desc_table = .{
        .level = fd(5, .{ .Varint = .Simple }),
        .retcode = fd(3, .{ .Varint = .Simple }),
        .reward = fd(9, .{ .SubMessage = {} }),
        .aeon_id = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncRogueAeonLevelUpRewardScNotify = struct {
    reward: ?ItemList = null,
    aeon_id: u32 = 0,
    level: u32 = 0,

    pub const _desc_table = .{
        .reward = fd(5, .{ .SubMessage = {} }),
        .aeon_id = fd(13, .{ .Varint = .Simple }),
        .level = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueScoreRewardInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueScoreRewardInfoScRsp = struct {
    retcode: u32 = 0,
    HNDLHICDNPC: ?RogueScoreRewardInfo = null,

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
        .HNDLHICDNPC = fd(10, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeRogueScoreRewardCsReq = struct {
    HHJPBLEKAPN: u32 = 0,
    LMMFPCOKHEE: ArrayList(u32),

    pub const _desc_table = .{
        .HHJPBLEKAPN = fd(1, .{ .Varint = .Simple }),
        .LMMFPCOKHEE = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeRogueScoreRewardScRsp = struct {
    HHJPBLEKAPN: u32 = 0,
    rogue_score_reward_info: ?RogueScoreRewardInfo = null,
    retcode: u32 = 0,
    reward: ?ItemList = null,

    pub const _desc_table = .{
        .HHJPBLEKAPN = fd(11, .{ .Varint = .Simple }),
        .rogue_score_reward_info = fd(5, .{ .SubMessage = {} }),
        .retcode = fd(9, .{ .Varint = .Simple }),
        .reward = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueInitialScoreCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueInitialScoreScRsp = struct {
    rogue_score_reward_info: ?RogueScoreRewardInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .rogue_score_reward_info = fd(1, .{ .SubMessage = {} }),
        .retcode = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueAeonInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueAeonInfoScRsp = struct {
    retcode: u32 = 0,
    BELOFMFHFDK: ArrayList(EACOFHBFMLB),

    pub const _desc_table = .{
        .retcode = fd(15, .{ .Varint = .Simple }),
        .BELOFMFHFDK = fd(2, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishAeonDialogueGroupCsReq = struct {
    aeon_id: u32 = 0,

    pub const _desc_table = .{
        .aeon_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishAeonDialogueGroupScRsp = struct {
    retcode: u32 = 0,
    reward: ?ItemList = null,
    rogue_aeon_info: ?EACOFHBFMLB = null,

    pub const _desc_table = .{
        .retcode = fd(14, .{ .Varint = .Simple }),
        .reward = fd(1, .{ .SubMessage = {} }),
        .rogue_aeon_info = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueTalentInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueTalentInfoScRsp = struct {
    talent_info_list: ?RogueTalentInfoList = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .talent_info_list = fd(14, .{ .SubMessage = {} }),
        .retcode = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnableRogueTalentCsReq = struct {
    talent_id: u32 = 0,

    pub const _desc_table = .{
        .talent_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnableRogueTalentScRsp = struct {
    retcode: u32 = 0,
    talent_info_list: ?RogueTalentInfoList = null,

    pub const _desc_table = .{
        .retcode = fd(2, .{ .Varint = .Simple }),
        .talent_info_list = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncRogueVirtualItemInfoScNotify = struct {
    rogue_virtual_item_info: ?PBEKDHCLBFB = null,

    pub const _desc_table = .{
        .rogue_virtual_item_info = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncRogueStatusScNotify = struct {
    JIENHHAHFGI: bool = false,
    status: RogueStatus = @enumFromInt(0),

    pub const _desc_table = .{
        .JIENHHAHFGI = fd(15, .{ .Varint = .Simple }),
        .status = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncRogueRewardInfoScNotify = struct {
    rogue_score_reward_info: ?RogueScoreRewardInfo = null,

    pub const _desc_table = .{
        .rogue_score_reward_info = fd(13, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncRoguePickAvatarInfoScNotify = struct {
    trial_avatar_id_list: ArrayList(u32),
    base_avatar_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .trial_avatar_id_list = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        .base_avatar_id_list = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncRogueAeonScNotify = struct {
    GCJOGFLGBBH: ?NIKKCCAKNNP = null,

    pub const _desc_table = .{
        .GCJOGFLGBBH = fd(9, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LLPNBNEJKII = struct {
    rotate_info: ?RogueMapRotateInfo = null,
    lineup: ?LineupInfo = null,
    scene: ?SceneInfo = null,

    pub const _desc_table = .{
        .rotate_info = fd(6, .{ .SubMessage = {} }),
        .lineup = fd(1, .{ .SubMessage = {} }),
        .scene = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueArcadeStartCsReq = struct {
    base_avatar_id_list: ArrayList(u32),
    room_id: u32 = 0,

    pub const _desc_table = .{
        .base_avatar_id_list = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
        .room_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueArcadeStartScRsp = struct {
    rogue_tourn_cur_scene_info: ?LLPNBNEJKII = null,
    room_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .rogue_tourn_cur_scene_info = fd(3, .{ .SubMessage = {} }),
        .room_id = fd(5, .{ .Varint = .Simple }),
        .retcode = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueArcadeLeaveCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueArcadeLeaveScRsp = struct {
    rogue_tourn_cur_scene_info: ?LLPNBNEJKII = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .rogue_tourn_cur_scene_info = fd(8, .{ .SubMessage = {} }),
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueArcadeRestartCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueArcadeRestartScRsp = struct {
    retcode: u32 = 0,
    rogue_tourn_cur_scene_info: ?LLPNBNEJKII = null,

    pub const _desc_table = .{
        .retcode = fd(8, .{ .Varint = .Simple }),
        .rogue_tourn_cur_scene_info = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueArcadeGetInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueArcadeGetInfoScRsp = struct {
    retcode: u32 = 0,
    room_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(11, .{ .Varint = .Simple }),
        .room_id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueCommonBuff = struct {
    buff_level: u32 = 0,
    buff_id: u32 = 0,

    pub const _desc_table = .{
        .buff_level = fd(8, .{ .Varint = .Simple }),
        .buff_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueBuff = struct {
    buff_list: ArrayList(RogueCommonBuff),

    pub const _desc_table = .{
        .buff_list = fd(14, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueCommonBuffSelectInfo = struct {
    CertainSelectBuffId: ArrayList(u32),
    SourceType: u32 = 0,
    HandbookUnlockBuffIdList: u32 = 0,
    SourceTotalCount: ?ItemCostData = null,
    FirstBuffTypeList: u32 = 0,
    CanRolls: ArrayList(u32),
    SourceHintId: u32 = 0,
    can_roll: bool = false,
    SourceCurCount: u32 = 0,
    SelectBuffList: u32 = 0,
    RollBuffMaxCount: u32 = 0,
    RollBuffCostData: ArrayList(RogueCommonBuff),
    modifier_source_type: RogueCommonBuffSelectSourceType = @enumFromInt(0),

    pub const _desc_table = .{
        .CertainSelectBuffId = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .SourceType = fd(5, .{ .Varint = .Simple }),
        .HandbookUnlockBuffIdList = fd(1, .{ .Varint = .Simple }),
        .SourceTotalCount = fd(4, .{ .SubMessage = {} }),
        .FirstBuffTypeList = fd(8, .{ .Varint = .Simple }),
        .CanRolls = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .SourceHintId = fd(7, .{ .Varint = .Simple }),
        .can_roll = fd(13, .{ .Varint = .Simple }),
        .SourceCurCount = fd(3, .{ .Varint = .Simple }),
        .SelectBuffList = fd(12, .{ .Varint = .Simple }),
        .RollBuffMaxCount = fd(15, .{ .Varint = .Simple }),
        .RollBuffCostData = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .modifier_source_type = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueBuffSelectResult = struct {
    buff_select_id: u32 = 0,

    pub const _desc_table = .{
        .buff_select_id = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueBuffSelectCallback = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueBuffRerollResult = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueBuffRerollCallback = struct {
    buff_select_info: ?RogueCommonBuffSelectInfo = null,

    pub const _desc_table = .{
        .buff_select_info = fd(7, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueBuffEnhanceInfo = struct {
    buff_id: u32 = 0,
    cost_data: ?ItemCostData = null,

    pub const _desc_table = .{
        .buff_id = fd(11, .{ .Varint = .Simple }),
        .cost_data = fd(13, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueBuffEnhanceList = struct {
    enhance_info_list: ArrayList(ChessRogueBuffEnhanceInfo),

    pub const _desc_table = .{
        .enhance_info_list = fd(8, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const INEMPCAKNNC = struct {
    select_hint_id: u32 = 0,
    IHGMPJNNMKI: ArrayList(RogueCommonBuff),
    CLPLEFHHAFB: ArrayList(RogueCommonBuff),

    pub const _desc_table = .{
        .select_hint_id = fd(6, .{ .Varint = .Simple }),
        .IHGMPJNNMKI = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .CLPLEFHHAFB = fd(14, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LEFCOMGMPCL = struct {
    IHGMPJNNMKI: ArrayList(RogueCommonBuff),
    select_hint_id: u32 = 0,

    pub const _desc_table = .{
        .IHGMPJNNMKI = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .select_hint_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PBMAKLNJEKO = struct {
    LJEJKCCBCHA: u32 = 0,

    pub const _desc_table = .{
        .LJEJKCCBCHA = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FKDBIHNPCHE = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IPGKAGFFBHF = struct {
    DLFMGKPGMHL: ArrayList(RogueCommonBuff),
    select_hint_id: u32 = 0,

    pub const _desc_table = .{
        .DLFMGKPGMHL = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .select_hint_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OKEFIDDNLKG = struct {
    buff_select_id: u32 = 0,

    pub const _desc_table = .{
        .buff_select_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DLHPDALGDEH = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueCommonBuffReforgeSelectInfo = struct {
    select_hint_id: u32 = 0,
    RollBuffCostData: ArrayList(RogueCommonBuff),

    pub const _desc_table = .{
        .select_hint_id = fd(11, .{ .Varint = .Simple }),
        .RollBuffCostData = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueBuffReforgeSelectResult = struct {
    buff_select_id: u32 = 0,

    pub const _desc_table = .{
        .buff_select_id = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueBuffReforgeSelectCallback = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueBuffInfo = struct {
    chess_rogue_buff_info: ?ChessRogueBuff = null,

    pub const _desc_table = .{
        .chess_rogue_buff_info = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GameRogueMiracle = struct {
    durability: u32 = 0,
    cur_times: u32 = 0,
    GMAFEJEJBHO: ArrayList(GMAFEJEJBHOEntry),
    miracle_id: u32 = 0,

    pub const _desc_table = .{
        .durability = fd(4, .{ .Varint = .Simple }),
        .cur_times = fd(5, .{ .Varint = .Simple }),
        .GMAFEJEJBHO = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .miracle_id = fd(10, .{ .Varint = .Simple }),
    };

    pub const GMAFEJEJBHOEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LAJBHGHNBAC = struct {
    BEMCEEDABFD: u32 = 0,
    JALAMOPLDHO: ?GameRogueMiracle = null,
    GANHKLNPAPI: bool = false,

    pub const _desc_table = .{
        .BEMCEEDABFD = fd(6, .{ .Varint = .Simple }),
        .JALAMOPLDHO = fd(9, .{ .SubMessage = {} }),
        .GANHKLNPAPI = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueCommonMiracle = struct {
    miracle_info: ?GameRogueMiracle = null,

    pub const _desc_table = .{
        .miracle_info = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueCommonRemoveMiracle = struct {
    miracle_id: u32 = 0,

    pub const _desc_table = .{
        .miracle_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IBIBPOOPDEN = struct {
    LGJFNAIAGLD: u32 = 0,
    miracle_info: ?GameRogueMiracle = null,
    FKPIHAAHHBI: u32 = 0,

    pub const _desc_table = .{
        .LGJFNAIAGLD = fd(15, .{ .Varint = .Simple }),
        .miracle_info = fd(2, .{ .SubMessage = {} }),
        .FKPIHAAHHBI = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MAAAAGPJJFE = struct {
    miracle_info: ?GameRogueMiracle = null,

    pub const _desc_table = .{
        .miracle_info = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PBALOEJCGFN = struct {
    BEMCEEDABFD: u32 = 0,
    JALAMOPLDHO: ?GameRogueMiracle = null,

    pub const _desc_table = .{
        .BEMCEEDABFD = fd(4, .{ .Varint = .Simple }),
        .JALAMOPLDHO = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HBLNHGANBAB = struct {
    miracle_info: ?GameRogueMiracle = null,

    pub const _desc_table = .{
        .miracle_info = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueMiracle = struct {
    miracle_list: ArrayList(GameRogueMiracle),

    pub const _desc_table = .{
        .miracle_list = fd(12, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMiracleSelectInfo = struct {
    select_hint_id: u32 = 0,
    select_miracle_list: ArrayList(u32),
    APIKLEGGDHM: bool = false,
    miracle_handbook_list: ArrayList(u32),
    BMFCBCMCLAF: u32 = 0,
    OOOECPAACCK: u32 = 0,

    pub const _desc_table = .{
        .select_hint_id = fd(7, .{ .Varint = .Simple }),
        .select_miracle_list = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
        .APIKLEGGDHM = fd(9, .{ .Varint = .Simple }),
        .miracle_handbook_list = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .BMFCBCMCLAF = fd(15, .{ .Varint = .Simple }),
        .OOOECPAACCK = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MPPHHNAEEDK = struct {
    CGHLHFNLADN: u32 = 0,

    pub const _desc_table = .{
        .CGHLHFNLADN = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CFFOCCHBAMH = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JFPFDJPPOAG = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HONKBMJPJAA = struct {
    miracle_select_info: ?RogueMiracleSelectInfo = null,

    pub const _desc_table = .{
        .miracle_select_info = fd(7, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ANMCAIMELCA = struct {
    CMAGGNFDKAG: ArrayList(u32),

    pub const _desc_table = .{
        .CMAGGNFDKAG = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GABBEHOIPJC = struct {
    select_hint_id: u32 = 0,
    DCJEGGJPCDF: ArrayList(u32),

    pub const _desc_table = .{
        .select_hint_id = fd(14, .{ .Varint = .Simple }),
        .DCJEGGJPCDF = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NALELIGHDAA = struct {
    ABMAMCFPCCI: u32 = 0,

    pub const _desc_table = .{
        .ABMAMCFPCCI = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PAOCONGELJK = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MLKICCAELKE = struct {
    ANBPNIHMKAH: ArrayList(u32),
    select_hint_id: u32 = 0,

    pub const _desc_table = .{
        .ANBPNIHMKAH = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .select_hint_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PKODMMPHIBC = struct {
    JIBHLJNEICM: u32 = 0,

    pub const _desc_table = .{
        .JIBHLJNEICM = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BLFJBKBHJIL = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EAKECFAPPKD = struct {
    FIKENBEONDJ: ArrayList(u32),
    select_hint_id: u32 = 0,

    pub const _desc_table = .{
        .FIKENBEONDJ = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .select_hint_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NHCKHPLKLIO = struct {
    IBEMOJGALLK: u32 = 0,

    pub const _desc_table = .{
        .IBEMOJGALLK = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OMJFMBJMFMC = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ELDAFCNMFBF = struct {
    select_hint_id: u32 = 0,
    MDPDADOOOBN: ArrayList(u32),

    pub const _desc_table = .{
        .select_hint_id = fd(1, .{ .Varint = .Simple }),
        .MDPDADOOOBN = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LHJPIKEKPGH = struct {
    GAKJOLGDBBD: u32 = 0,

    pub const _desc_table = .{
        .GAKJOLGDBBD = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MOIKNHHCABH = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueComposeMiracleSelectInfo = struct {
    JLHFOJODOKG: ArrayList(u32),
    select_hint_id: u32 = 0,

    pub const _desc_table = .{
        .JLHFOJODOKG = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
        .select_hint_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IMCBIIGOKPM = struct {
    CGHLHFNLADN: u32 = 0,

    pub const _desc_table = .{
        .CGHLHFNLADN = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FHIKPLAIOEI = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueHexAvatarSelectInfo = struct {
    select_hint_id: u32 = 0,
    JLHFOJODOKG: ArrayList(u32),

    pub const _desc_table = .{
        .select_hint_id = fd(15, .{ .Varint = .Simple }),
        .JLHFOJODOKG = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LKMKHACMAPC = struct {
    CGHLHFNLADN: u32 = 0,

    pub const _desc_table = .{
        .CGHLHFNLADN = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NOCOCFHOAJC = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IMLBIBJKPDB = struct {
    EIDNIGDDOHP: u32 = 0,

    pub const _desc_table = .{
        .EIDNIGDDOHP = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JCAHMIOOLDB = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueMiracleInfo = struct {
    chess_rogue_miracle_info: ?ChessRogueMiracle = null,

    pub const _desc_table = .{
        .chess_rogue_miracle_info = fd(11, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueBonusSelectInfo = struct {
    bonus_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .bonus_id_list = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueVirtualItem = struct {
    AMNKMBMHKDF: u32 = 0,
    BPJOAPFAFKK: u32 = 0,
    DAFALAOAOOI: u32 = 0,
    rogue_money: u32 = 0,

    pub const _desc_table = .{
        .AMNKMBMHKDF = fd(3, .{ .Varint = .Simple }),
        .BPJOAPFAFKK = fd(13, .{ .Varint = .Simple }),
        .DAFALAOAOOI = fd(14, .{ .Varint = .Simple }),
        .rogue_money = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueCommonMoney = struct {
    display_type: u32 = 0,
    num: u32 = 0,

    pub const _desc_table = .{
        .display_type = fd(3, .{ .Varint = .Simple }),
        .num = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MDGJIKLJDDE = struct {
    avatar_type: AvatarType = @enumFromInt(0),
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .avatar_type = fd(4, .{ .Varint = .Simple }),
        .avatar_id = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DDJHDEHMHCF = struct {
    content_modifier_effect_id: u32 = 0,
    GEEFHDJKOKG: u32 = 0,

    pub const _desc_table = .{
        .content_modifier_effect_id = fd(15, .{ .Varint = .Simple }),
        .GEEFHDJKOKG = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CFELLCPMONH = struct {
    item_list: ?ItemList = null,

    pub const _desc_table = .{
        .item_list = fd(4, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OIAOLBGOAAG = struct {
    HHPHLEGCLDM: ?CFELLCPMONH = null,
    NOAEDNNIBAF: ?DDJHDEHMHCF = null,

    pub const _desc_table = .{
        .HHPHLEGCLDM = fd(12, .{ .SubMessage = {} }),
        .NOAEDNNIBAF = fd(10, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueAdventureRoomTargetNone = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueAdventureRoomTargetCoin = struct {
    count: i32 = 0,

    pub const _desc_table = .{
        .count = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueAdventureRoomTargetMiracle = struct {
    miracle_id: u32 = 0,

    pub const _desc_table = .{
        .miracle_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueAdventureRoomTargetRuanmei = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueAdventureRoomGameplayWolfGunTarget = struct {
    target_impl: ?target_impl_union,

    pub const _target_impl_case = enum {
        target_none,
        target_coin,
        target_miracle,
        target_ruanmei,
    };
    pub const target_impl_union = union(_target_impl_case) {
        target_none: RogueAdventureRoomTargetNone,
        target_coin: RogueAdventureRoomTargetCoin,
        target_miracle: RogueAdventureRoomTargetMiracle,
        target_ruanmei: RogueAdventureRoomTargetRuanmei,
        pub const _union_desc = .{
            .target_none = fd(8, .{ .SubMessage = {} }),
            .target_coin = fd(12, .{ .SubMessage = {} }),
            .target_miracle = fd(15, .{ .SubMessage = {} }),
            .target_ruanmei = fd(14, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .target_impl = fd(null, .{ .OneOf = target_impl_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueAdventureRoomGameplayWolfGunGameInfo = struct {
    battle_target_list: ArrayList(RogueAdventureRoomGameplayWolfGunTarget),
    game_target_num: u32 = 0,

    pub const _desc_table = .{
        .battle_target_list = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .game_target_num = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueAdventureRoomGameplayWolfGunInfo = struct {
    game_info: ?RogueAdventureRoomGameplayWolfGunGameInfo = null,

    pub const _desc_table = .{
        .game_info = fd(11, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AdventureRoomInfo = struct {
    sus: f64 = 0,
    score_id: u32 = 0,
    query_info: ?RogueAdventureRoomGameplayWolfGunInfo = null,
    remain_monster_num: u32 = 0,
    status: u32 = 0,
    caught_monster_num: u32 = 0,

    pub const _desc_table = .{
        .sus = fd(12, .{ .FixedInt = .I64 }),
        .score_id = fd(1, .{ .Varint = .Simple }),
        .query_info = fd(9, .{ .SubMessage = {} }),
        .remain_monster_num = fd(15, .{ .Varint = .Simple }),
        .status = fd(8, .{ .Varint = .Simple }),
        .caught_monster_num = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncRogueAdventureRoomInfoScNotify = struct {
    adventure_room_info: ?AdventureRoomInfo = null,

    pub const _desc_table = .{
        .adventure_room_info = fd(9, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PrepareRogueAdventureRoomCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PrepareRogueAdventureRoomScRsp = struct {
    retcode: u32 = 0,
    adventure_room_info: ?AdventureRoomInfo = null,

    pub const _desc_table = .{
        .retcode = fd(2, .{ .Varint = .Simple }),
        .adventure_room_info = fd(5, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StopRogueAdventureRoomCsReq = struct {
    MMHMDHIHCAB: u32 = 0,
    IPOGACCFMOL: ArrayList(u32),

    pub const _desc_table = .{
        .MMHMDHIHCAB = fd(8, .{ .Varint = .Simple }),
        .IPOGACCFMOL = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StopRogueAdventureRoomScRsp = struct {
    adventure_room_info: ?AdventureRoomInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .adventure_room_info = fd(7, .{ .SubMessage = {} }),
        .retcode = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueAdventureRoomInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueAdventureRoomInfoScRsp = struct {
    adventure_room_info: ?AdventureRoomInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .adventure_room_info = fd(7, .{ .SubMessage = {} }),
        .retcode = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdateRogueAdventureRoomScoreCsReq = struct {
    score_id: u32 = 0,
    HMFFHGBKOGL: u32 = 0,

    pub const _desc_table = .{
        .score_id = fd(12, .{ .Varint = .Simple }),
        .HMFFHGBKOGL = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdateRogueAdventureRoomScoreScRsp = struct {
    retcode: u32 = 0,
    adventure_room_info: ?AdventureRoomInfo = null,

    pub const _desc_table = .{
        .retcode = fd(6, .{ .Varint = .Simple }),
        .adventure_room_info = fd(7, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AHCLNMJPMIJ = struct {
    POAPEGKPFOB: bool = false,
    cost_data: ?ItemCostData = null,
    NBLFFDIPBHI: ?ItemCostData = null,
    BPHCBOHKHMD: bool = false,
    miracle_id: u32 = 0,

    pub const _desc_table = .{
        .POAPEGKPFOB = fd(8, .{ .Varint = .Simple }),
        .cost_data = fd(9, .{ .SubMessage = {} }),
        .NBLFFDIPBHI = fd(2, .{ .SubMessage = {} }),
        .BPHCBOHKHMD = fd(11, .{ .Varint = .Simple }),
        .miracle_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MGKFKECFHHM = struct {
    buff_id: u32 = 0,
    cost_data: ?ItemCostData = null,
    NBLFFDIPBHI: ?ItemCostData = null,
    POAPEGKPFOB: bool = false,
    LEAAEBAFCHP: u32 = 0,
    BPHCBOHKHMD: bool = false,

    pub const _desc_table = .{
        .buff_id = fd(14, .{ .Varint = .Simple }),
        .cost_data = fd(15, .{ .SubMessage = {} }),
        .NBLFFDIPBHI = fd(1, .{ .SubMessage = {} }),
        .POAPEGKPFOB = fd(12, .{ .Varint = .Simple }),
        .LEAAEBAFCHP = fd(7, .{ .Varint = .Simple }),
        .BPHCBOHKHMD = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IILHOAKJDNH = struct {
    cost_data: ?ItemCostData = null,
    NBLFFDIPBHI: ?ItemCostData = null,
    formula_id: u32 = 0,
    BPHCBOHKHMD: bool = false,
    POAPEGKPFOB: bool = false,

    pub const _desc_table = .{
        .cost_data = fd(1, .{ .SubMessage = {} }),
        .NBLFFDIPBHI = fd(3, .{ .SubMessage = {} }),
        .formula_id = fd(5, .{ .Varint = .Simple }),
        .BPHCBOHKHMD = fd(15, .{ .Varint = .Simple }),
        .POAPEGKPFOB = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NNJOLKJLPJG = struct {
    miracle_list: ArrayList(AHCLNMJPMIJ),

    pub const _desc_table = .{
        .miracle_list = fd(12, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ANJDKFJOEEI = struct {
    buff_list: ArrayList(MGKFKECFHHM),

    pub const _desc_table = .{
        .buff_list = fd(14, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GLPPDLECCLI = struct {
    game_formula_info: ArrayList(IILHOAKJDNH),

    pub const _desc_table = .{
        .game_formula_info = fd(10, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueShopBuffInfoCsReq = struct {
    interacted_prop_entity_id: u32 = 0,
    HMILGHCPEDE: bool = false,

    pub const _desc_table = .{
        .interacted_prop_entity_id = fd(6, .{ .Varint = .Simple }),
        .HMILGHCPEDE = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueShopBuffInfoScRsp = struct {
    EFOJOCFGIDJ: i32 = 0,
    retcode: u32 = 0,
    rogue_buff_info: ?ANJDKFJOEEI = null,
    IHJHCCFMIFD: ?ItemCostData = null,
    AEFHKANBFNC: i32 = 0,

    pub const _desc_table = .{
        .EFOJOCFGIDJ = fd(3, .{ .Varint = .Simple }),
        .retcode = fd(15, .{ .Varint = .Simple }),
        .rogue_buff_info = fd(6, .{ .SubMessage = {} }),
        .IHJHCCFMIFD = fd(4, .{ .SubMessage = {} }),
        .AEFHKANBFNC = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueShopMiracleInfoCsReq = struct {
    interacted_prop_entity_id: u32 = 0,
    HMILGHCPEDE: bool = false,

    pub const _desc_table = .{
        .interacted_prop_entity_id = fd(6, .{ .Varint = .Simple }),
        .HMILGHCPEDE = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueShopMiracleInfoScRsp = struct {
    retcode: u32 = 0,
    AEFHKANBFNC: i32 = 0,
    game_miracle_info: ?NNJOLKJLPJG = null,
    IHJHCCFMIFD: ?ItemCostData = null,
    EFOJOCFGIDJ: i32 = 0,

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
        .AEFHKANBFNC = fd(15, .{ .Varint = .Simple }),
        .game_miracle_info = fd(11, .{ .SubMessage = {} }),
        .IHJHCCFMIFD = fd(12, .{ .SubMessage = {} }),
        .EFOJOCFGIDJ = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueShopFormulaInfoCsReq = struct {
    HMILGHCPEDE: bool = false,
    interacted_prop_entity_id: u32 = 0,

    pub const _desc_table = .{
        .HMILGHCPEDE = fd(14, .{ .Varint = .Simple }),
        .interacted_prop_entity_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueShopFormulaInfoScRsp = struct {
    CKAANMDDKCJ: ?GLPPDLECCLI = null,
    retcode: u32 = 0,
    AEFHKANBFNC: i32 = 0,
    IHJHCCFMIFD: ?ItemCostData = null,
    EFOJOCFGIDJ: i32 = 0,

    pub const _desc_table = .{
        .CKAANMDDKCJ = fd(4, .{ .SubMessage = {} }),
        .retcode = fd(5, .{ .Varint = .Simple }),
        .AEFHKANBFNC = fd(7, .{ .Varint = .Simple }),
        .IHJHCCFMIFD = fd(14, .{ .SubMessage = {} }),
        .EFOJOCFGIDJ = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BuyRogueShopFormulaCsReq = struct {
    miracle_id: u32 = 0,
    interacted_prop_entity_id: u32 = 0,

    pub const _desc_table = .{
        .miracle_id = fd(6, .{ .Varint = .Simple }),
        .interacted_prop_entity_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BuyRogueShopBuffCsReq = struct {
    interacted_prop_entity_id: u32 = 0,
    buff_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .interacted_prop_entity_id = fd(10, .{ .Varint = .Simple }),
        .buff_id_list = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BuyRogueShopMiracleCsReq = struct {
    interacted_prop_entity_id: u32 = 0,
    AOIIHCFMFPH: ArrayList(u32),

    pub const _desc_table = .{
        .interacted_prop_entity_id = fd(6, .{ .Varint = .Simple }),
        .AOIIHCFMFPH = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BuyRogueShopMiracleScRsp = struct {
    retcode: u32 = 0,
    game_miracle_info: ?NNJOLKJLPJG = null,

    pub const _desc_table = .{
        .retcode = fd(14, .{ .Varint = .Simple }),
        .game_miracle_info = fd(13, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BuyRogueShopBuffScRsp = struct {
    retcode: u32 = 0,
    rogue_buff_info: ?ANJDKFJOEEI = null,

    pub const _desc_table = .{
        .retcode = fd(4, .{ .Varint = .Simple }),
        .rogue_buff_info = fd(5, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BuyRogueShopFormulaScRsp = struct {
    CKAANMDDKCJ: ?GLPPDLECCLI = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .CKAANMDDKCJ = fd(5, .{ .SubMessage = {} }),
        .retcode = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueNpcDisappearCsReq = struct {
    ICINGGKOEMG: u32 = 0,

    pub const _desc_table = .{
        .ICINGGKOEMG = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueNpcDisappearScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueShopBeginBattleCsReq = struct {
    interacted_prop_entity_id: u32 = 0,

    pub const _desc_table = .{
        .interacted_prop_entity_id = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueShopBeginBattleScRsp = struct {
    NOPHEEHJHEK: ?SceneBattleInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .NOPHEEHJHEK = fd(9, .{ .SubMessage = {} }),
        .retcode = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncRogueCommonActionResultScNotify = struct {
    action_result_list: ArrayList(RogueCommonActionResult),
    display_type: RogueCommonActionResultDisplayType = @enumFromInt(0),
    rogue_sub_mode: u32 = 0,

    pub const _desc_table = .{
        .action_result_list = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .display_type = fd(15, .{ .Varint = .Simple }),
        .rogue_sub_mode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueCommonActionResult = struct {
    rogue_action: ?RogueCommonActionResultData = null,
    source: RogueCommonActionResultSourceType = @enumFromInt(0),

    pub const _desc_table = .{
        .rogue_action = fd(4, .{ .SubMessage = {} }),
        .source = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FormulaBuffTypeInfo = struct {
    formula_buff_num: i32 = 0,
    key: u32 = 0,

    pub const _desc_table = .{
        .formula_buff_num = fd(11, .{ .Varint = .Simple }),
        .key = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MLPKNLLAOIF = struct {
    EEGCBBHOPHG: i32 = 0,
    JPNFBFKHPGD: u32 = 0,
    CFCLOGFJPBD: i32 = 0,

    pub const _desc_table = .{
        .EEGCBBHOPHG = fd(5, .{ .Varint = .Simple }),
        .JPNFBFKHPGD = fd(8, .{ .Varint = .Simple }),
        .CFCLOGFJPBD = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FormulaInfo = struct {
    formula_id: u32 = 0,
    formula_buff_type_list: ArrayList(FormulaBuffTypeInfo),
    is_expand: bool = false,

    pub const _desc_table = .{
        .formula_id = fd(1, .{ .Varint = .Simple }),
        .formula_buff_type_list = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .is_expand = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FormulaTypeValue = struct {
    NADOCCEPHJO: ArrayList(NADOCCEPHJOEntry),

    pub const _desc_table = .{
        .NADOCCEPHJO = fd(6, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const NADOCCEPHJOEntry = struct {
        key: u32 = 0,
        value: i32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueCommonFormula = struct {
    formula_info: ?FormulaInfo = null,

    pub const _desc_table = .{
        .formula_info = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueCommonRemoveFormula = struct {
    formula_info: ?FormulaInfo = null,

    pub const _desc_table = .{
        .formula_info = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueCommonExpandedFormula = struct {
    formula_info: ?FormulaInfo = null,

    pub const _desc_table = .{
        .formula_info = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueCommonContractFormula = struct {
    formula_info: ?FormulaInfo = null,

    pub const _desc_table = .{
        .formula_info = fd(13, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FIPFPHBPHLH = struct {
    ILBKMNAJGMO: ArrayList(MLPKNLLAOIF),

    pub const _desc_table = .{
        .ILBKMNAJGMO = fd(6, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueCommonPathBuff = struct {
    value: ?FormulaTypeValue = null,

    pub const _desc_table = .{
        .value = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournFormulaInfo = struct {
    formula_type_value: ?FormulaTypeValue = null,
    ILBKMNAJGMO: ArrayList(MLPKNLLAOIF),
    game_formula_info: ArrayList(FormulaInfo),

    pub const _desc_table = .{
        .formula_type_value = fd(2, .{ .SubMessage = {} }),
        .ILBKMNAJGMO = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .game_formula_info = fd(9, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueCommonKeyword = struct {
    keyword_id: u32 = 0,

    pub const _desc_table = .{
        .keyword_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueCommonRemoveKeyword = struct {
    keyword_id: u32 = 0,

    pub const _desc_table = .{
        .keyword_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KeywordUnlockValue = struct {
    NFNMBGBOCCL: ArrayList(NFNMBGBOCCLEntry),

    pub const _desc_table = .{
        .NFNMBGBOCCL = fd(5, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const NFNMBGBOCCLEntry = struct {
        key: u32 = 0,
        value: bool = false,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueCommonActionResultData = struct {
    KFELKJLDKEH: ?KFELKJLDKEH_union,

    pub const _KFELKJLDKEH_case = enum {
        get_item_list,
        remove_item_list,
        get_buff_list,
        remove_buff_list,
        get_miracle_list,
        remove_miracle_list,
        APFMFBBDCJK,
        BMDJOPGHLCA,
        OMPBJJOHPOO,
        IOMJMEAOMFI,
        BBLGEEMHIIM,
        get_formula_list,
        remove_formula_list,
        expand_formula_list,
        contract_formula_list,
        DMKGEBHPIPJ,
        path_buff_list,
        get_keyword_list,
        remove_keyword_list,
        dress_scepter_list,
        get_scepter_list,
        KAAILMGCHOK,
        get_magic_unit_list,
        remove_magic_unit_list,
        JGDAEBNEFKA,
        AOIBHCMANFK,
        MIBOBJIDCAD,
        EDBPEHABHBI,
        CJOHMIPJHNM,
    };
    pub const KFELKJLDKEH_union = union(_KFELKJLDKEH_case) {
        get_item_list: RogueCommonMoney,
        remove_item_list: RogueCommonMoney,
        get_buff_list: RogueCommonBuff,
        remove_buff_list: RogueCommonBuff,
        get_miracle_list: RogueCommonMiracle,
        remove_miracle_list: RogueCommonRemoveMiracle,
        APFMFBBDCJK: IBIBPOOPDEN,
        BMDJOPGHLCA: MAAAAGPJJFE,
        OMPBJJOHPOO: PBALOEJCGFN,
        IOMJMEAOMFI: HBLNHGANBAB,
        BBLGEEMHIIM: MDGJIKLJDDE,
        get_formula_list: RogueCommonFormula,
        remove_formula_list: RogueCommonRemoveFormula,
        expand_formula_list: RogueCommonExpandedFormula,
        contract_formula_list: RogueCommonContractFormula,
        DMKGEBHPIPJ: FIPFPHBPHLH,
        path_buff_list: RogueCommonPathBuff,
        get_keyword_list: RogueCommonKeyword,
        remove_keyword_list: RogueCommonRemoveKeyword,
        dress_scepter_list: RogueCommonDressScepter,
        get_scepter_list: RogueCommonGetScepter,
        KAAILMGCHOK: AEFFJLGFAMH,
        get_magic_unit_list: RogueMagicGameUnitInfo,
        remove_magic_unit_list: RogueMagicGameUnitInfo,
        JGDAEBNEFKA: RogueMagicGameUnitInfo,
        AOIBHCMANFK: RogueMagicGameScepterInfo,
        MIBOBJIDCAD: HOBKEOICBMI,
        EDBPEHABHBI: LNAMGOMHGJB,
        CJOHMIPJHNM: LNAMGOMHGJB,
        pub const _union_desc = .{
            .get_item_list = fd(3, .{ .SubMessage = {} }),
            .remove_item_list = fd(7, .{ .SubMessage = {} }),
            .get_buff_list = fd(1987, .{ .SubMessage = {} }),
            .remove_buff_list = fd(241, .{ .SubMessage = {} }),
            .get_miracle_list = fd(1521, .{ .SubMessage = {} }),
            .remove_miracle_list = fd(55, .{ .SubMessage = {} }),
            .APFMFBBDCJK = fd(104, .{ .SubMessage = {} }),
            .BMDJOPGHLCA = fd(1700, .{ .SubMessage = {} }),
            .OMPBJJOHPOO = fd(1918, .{ .SubMessage = {} }),
            .IOMJMEAOMFI = fd(1443, .{ .SubMessage = {} }),
            .BBLGEEMHIIM = fd(1398, .{ .SubMessage = {} }),
            .get_formula_list = fd(240, .{ .SubMessage = {} }),
            .remove_formula_list = fd(744, .{ .SubMessage = {} }),
            .expand_formula_list = fd(1055, .{ .SubMessage = {} }),
            .contract_formula_list = fd(775, .{ .SubMessage = {} }),
            .DMKGEBHPIPJ = fd(227, .{ .SubMessage = {} }),
            .path_buff_list = fd(1115, .{ .SubMessage = {} }),
            .get_keyword_list = fd(1246, .{ .SubMessage = {} }),
            .remove_keyword_list = fd(1748, .{ .SubMessage = {} }),
            .dress_scepter_list = fd(341, .{ .SubMessage = {} }),
            .get_scepter_list = fd(1304, .{ .SubMessage = {} }),
            .KAAILMGCHOK = fd(751, .{ .SubMessage = {} }),
            .get_magic_unit_list = fd(1268, .{ .SubMessage = {} }),
            .remove_magic_unit_list = fd(960, .{ .SubMessage = {} }),
            .JGDAEBNEFKA = fd(1979, .{ .SubMessage = {} }),
            .AOIBHCMANFK = fd(1424, .{ .SubMessage = {} }),
            .MIBOBJIDCAD = fd(1745, .{ .SubMessage = {} }),
            .EDBPEHABHBI = fd(1202, .{ .SubMessage = {} }),
            .CJOHMIPJHNM = fd(845, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .KFELKJLDKEH = fd(null, .{ .OneOf = KFELKJLDKEH_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueFormulaSelectInfo = struct {
    HintId: u32 = 0,
    can_roll: bool = false,
    select_hint_id: u32 = 0,
    RollFormulaMaxCount: u32 = 0,
    RollFormulaCostData: ?ItemCostData = null,
    SelectFormulaIdList: ArrayList(u32),
    RollFormulaFreeCount: u32 = 0,
    HandbookUnlockFormulaIdList: ArrayList(u32),

    pub const _desc_table = .{
        .HintId = fd(12, .{ .Varint = .Simple }),
        .can_roll = fd(6, .{ .Varint = .Simple }),
        .select_hint_id = fd(8, .{ .Varint = .Simple }),
        .RollFormulaMaxCount = fd(11, .{ .Varint = .Simple }),
        .RollFormulaCostData = fd(14, .{ .SubMessage = {} }),
        .SelectFormulaIdList = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .RollFormulaFreeCount = fd(10, .{ .Varint = .Simple }),
        .HandbookUnlockFormulaIdList = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournFormulaResult = struct {
    tourn_formula_id: u32 = 0,

    pub const _desc_table = .{
        .tourn_formula_id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournFormulaCallback = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FHMAIANENPO = struct {
    LALDACMCHFI: ArrayList(u32),
    select_hint_id: u32 = 0,

    pub const _desc_table = .{
        .LALDACMCHFI = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
        .select_hint_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ONOOFHDEIDD = struct {
    tourn_formula_id: u32 = 0,

    pub const _desc_table = .{
        .tourn_formula_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HKJEGONGJNP = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KHGCDEIMLHN = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EHEFOMMBNAF = struct {
    rogue_formula_select_info: ?RogueFormulaSelectInfo = null,

    pub const _desc_table = .{
        .rogue_formula_select_info = fd(9, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BPDDOBAHPNA = struct {
    rogue_formula_select_info: ?RogueFormulaSelectInfo = null,

    pub const _desc_table = .{
        .rogue_formula_select_info = fd(7, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EKMAHAFGNGJ = struct {
    tourn_formula_id: u32 = 0,

    pub const _desc_table = .{
        .tourn_formula_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HBIBLKKEOAC = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LGCMEEPJMHA = struct {
    IDIGNADNDNF: u32 = 0,

    pub const _desc_table = .{
        .IDIGNADNDNF = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicScepterDressInfo = struct {
    slot: u32 = 0,
    type: u32 = 0,
    dress_magic_unit_unique_id: u32 = 0,

    pub const _desc_table = .{
        .slot = fd(15, .{ .Varint = .Simple }),
        .type = fd(7, .{ .Varint = .Simple }),
        .dress_magic_unit_unique_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicScepter = struct {
    level: u32 = 0,
    scepter_id: u32 = 0,

    pub const _desc_table = .{
        .level = fd(14, .{ .Varint = .Simple }),
        .scepter_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicGameScepterInfo = struct {
    EEPOJGNFLPA: ArrayList(EEPOJGNFLPAEntry),
    locked_magic_unit_list: ArrayList(RogueMagicGameUnit),
    modifier_content: ?RogueMagicScepter = null,
    scepter_dress_info: ArrayList(RogueMagicScepterDressInfo),

    pub const _desc_table = .{
        .EEPOJGNFLPA = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .locked_magic_unit_list = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .modifier_content = fd(1, .{ .SubMessage = {} }),
        .scepter_dress_info = fd(4, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const EEPOJGNFLPAEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicGameUnit = struct {
    level: u32 = 0,
    magic_unit_id: u32 = 0,

    pub const _desc_table = .{
        .level = fd(4, .{ .Varint = .Simple }),
        .magic_unit_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicGameUnitInfo = struct {
    unique_id: u32 = 0,
    game_magic_unit: ?RogueMagicGameUnit = null,

    pub const _desc_table = .{
        .unique_id = fd(10, .{ .Varint = .Simple }),
        .game_magic_unit = fd(7, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueCommonDressScepter = struct {
    update_scepter_info: ?RogueMagicGameScepterInfo = null,

    pub const _desc_table = .{
        .update_scepter_info = fd(15, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueCommonGetScepter = struct {
    update_scepter_info: ?RogueMagicGameScepterInfo = null,

    pub const _desc_table = .{
        .update_scepter_info = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AEFFJLGFAMH = struct {
    update_scepter_info: ?RogueMagicGameScepterInfo = null,

    pub const _desc_table = .{
        .update_scepter_info = fd(9, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OKECOPGKLEE = struct {
    PMGJICCHHDL: ?RogueMagicGameUnitInfo = null,

    pub const _desc_table = .{
        .PMGJICCHHDL = fd(13, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PGAKDEJBOHF = struct {
    JFPJBBJLIFK: ?RogueMagicGameUnitInfo = null,

    pub const _desc_table = .{
        .JFPJBBJLIFK = fd(13, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicUnitSelectInfo = struct {
    FGDJAMHOKIF: ?RogueMagicGameUnit = null,
    select_magic_units: ArrayList(RogueMagicGameUnit),
    select_hint_id: u32 = 0,
    SourceType: u32 = 0,
    FirstBuffTypeList: u32 = 0,

    pub const _desc_table = .{
        .FGDJAMHOKIF = fd(1, .{ .SubMessage = {} }),
        .select_magic_units = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .select_hint_id = fd(3, .{ .Varint = .Simple }),
        .SourceType = fd(7, .{ .Varint = .Simple }),
        .FirstBuffTypeList = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KKAGNMEMKOG = struct {
    select_magic_units: ArrayList(RogueMagicGameUnitInfo),
    select_hint_id: u32 = 0,

    pub const _desc_table = .{
        .select_magic_units = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .select_hint_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicUnitSelectResult = struct {
    select_magic_unit: ?RogueMagicGameUnit = null,

    pub const _desc_table = .{
        .select_magic_unit = fd(11, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IIPEGHDKHGD = struct {
    select_magic_unit: ?RogueMagicGameUnitInfo = null,

    pub const _desc_table = .{
        .select_magic_unit = fd(11, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicUnitSelectCallback = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ABPNCPOIJCI = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IMNNNJGGPAG = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IMDHPDBHEBC = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HOBKEOICBMI = struct {
    EOCIPKGJFOP: ?RogueMagicGameUnitInfo = null,
    HKKLPLDNPKD: ArrayList(u32),

    pub const _desc_table = .{
        .EOCIPKGJFOP = fd(7, .{ .SubMessage = {} }),
        .HKKLPLDNPKD = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicScepterSelectInfo = struct {
    select_scepters: ArrayList(RogueMagicScepter),
    select_hint_id: u32 = 0,

    pub const _desc_table = .{
        .select_scepters = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .select_hint_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicScepterSelectResult = struct {
    ABBMHPKGAIK: bool = false,
    select_scepter: ?RogueMagicScepter = null,

    pub const _desc_table = .{
        .ABBMHPKGAIK = fd(15, .{ .Varint = .Simple }),
        .select_scepter = fd(13, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicScepterSelectCallback = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IKCNDLJLAPP = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JKHKEBMOBEJ = struct {
    JBJGGNBJKDJ: ?RogueMagicScepter = null,

    pub const _desc_table = .{
        .JBJGGNBJKDJ = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JCDLJBPHOMD = struct {
    GHELBOBFPAM: ?RogueMagicScepter = null,
    BLCILJENELO: bool = false,

    pub const _desc_table = .{
        .GHELBOBFPAM = fd(10, .{ .SubMessage = {} }),
        .BLCILJENELO = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LGPGCJDOIBK = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LNAMGOMHGJB = struct {
    IBOEKJBOMOG: u32 = 0,

    pub const _desc_table = .{
        .IBOEKJBOMOG = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CGJNHNMAMDH = struct {
    LDFGIFDFPCF: u32 = 0,
    KDAOIMPPPKI: ArrayList(u32),
    JMCEMBEHCOJ: i32 = 0,

    pub const _desc_table = .{
        .LDFGIFDFPCF = fd(1, .{ .Varint = .Simple }),
        .KDAOIMPPPKI = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
        .JMCEMBEHCOJ = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CGGBPJICHGF = struct {
    select_hint_id: u32 = 0,
    NCLAEHAIJJB: u32 = 0,
    GMILNGGHEDC: u32 = 0,
    OFBMPOJPDOJ: u32 = 0,
    GBOOALMIKOB: ArrayList(u32),
    OBIEDGMEBDL: NDKLJJIIMGM = @enumFromInt(0),

    pub const _desc_table = .{
        .select_hint_id = fd(1, .{ .Varint = .Simple }),
        .NCLAEHAIJJB = fd(14, .{ .Varint = .Simple }),
        .GMILNGGHEDC = fd(9, .{ .Varint = .Simple }),
        .OFBMPOJPDOJ = fd(8, .{ .Varint = .Simple }),
        .GBOOALMIKOB = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
        .OBIEDGMEBDL = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HAOJLHGNFPM = struct {
    JMEHMHKBJAH: u32 = 0,

    pub const _desc_table = .{
        .JMEHMHKBJAH = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BLJOGGMJBMD = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OOPINHFMECE = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ONPNBIOMMGB = struct {
    NIFJFLDKIKK: ?CGGBPJICHGF = null,

    pub const _desc_table = .{
        .NIFJFLDKIKK = fd(15, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PIGFBKOJNHG = struct {
    event_unique_id: u32 = 0,

    pub const _desc_table = .{
        .event_unique_id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AJNAJINFJIC = struct {
    is_win: bool = false,
    battle_event_id: u32 = 0,

    pub const _desc_table = .{
        .is_win = fd(11, .{ .Varint = .Simple }),
        .battle_event_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MNMLOAPBHNF = struct {
    event_unique_id: u32 = 0,

    pub const _desc_table = .{
        .event_unique_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncRogueCommonPendingActionScNotify = struct {
    rogue_sub_mode: u32 = 0,
    action: ?RogueCommonPendingAction = null,

    pub const _desc_table = .{
        .rogue_sub_mode = fd(4, .{ .Varint = .Simple }),
        .action = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueCommonPendingAction = struct {
    queue_position: u32 = 0,
    rogue_action: ?RogueAction = null,

    pub const _desc_table = .{
        .queue_position = fd(4, .{ .Varint = .Simple }),
        .rogue_action = fd(15, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueAction = struct {
    KFELKJLDKEH: ?KFELKJLDKEH_union,

    pub const _KFELKJLDKEH_case = enum {
        buff_select_info,
        FPHHHIOBFAI,
        AJDDFANCEJN,
        buff_reforge_select_info,
        miracle_select_info,
        BICJEMPPLAM,
        AELPPPIEFAB,
        BEDIACHLCII,
        LADGCOOMNKA,
        CGKFOMNCNAK,
        compose_miracle_select_info,
        hex_avatar_select_info,
        bonus_select_info,
        rogue_formula_select_info,
        JBKPIKAJPEB,
        HCCHFJEFANJ,
        OIOMHOPNIMF,
        IFCLAAFPKHC,
        HFJECHFANNF,
        LDJOMIOJEPF,
        LMNONCMBIOO,
        CNLMCOBNCAI,
        FHOKDLLICJL,
        PHDEMDBGOIB,
        KLJJIBPJGFF,
        DLFALFGFDHE,
        NPCDBPNDGOP,
    };
    pub const KFELKJLDKEH_union = union(_KFELKJLDKEH_case) {
        buff_select_info: RogueCommonBuffSelectInfo,
        FPHHHIOBFAI: LEFCOMGMPCL,
        AJDDFANCEJN: IPGKAGFFBHF,
        buff_reforge_select_info: RogueCommonBuffReforgeSelectInfo,
        miracle_select_info: RogueMiracleSelectInfo,
        BICJEMPPLAM: ANMCAIMELCA,
        AELPPPIEFAB: GABBEHOIPJC,
        BEDIACHLCII: MLKICCAELKE,
        LADGCOOMNKA: EAKECFAPPKD,
        CGKFOMNCNAK: ELDAFCNMFBF,
        compose_miracle_select_info: RogueComposeMiracleSelectInfo,
        hex_avatar_select_info: RogueHexAvatarSelectInfo,
        bonus_select_info: RogueBonusSelectInfo,
        rogue_formula_select_info: RogueFormulaSelectInfo,
        JBKPIKAJPEB: FHMAIANENPO,
        HCCHFJEFANJ: BPDDOBAHPNA,
        OIOMHOPNIMF: RogueMagicUnitSelectInfo,
        IFCLAAFPKHC: RogueMagicScepterSelectInfo,
        HFJECHFANNF: JKHKEBMOBEJ,
        LDJOMIOJEPF: RogueMagicUnitSelectInfo,
        LMNONCMBIOO: RogueMagicUnitSelectInfo,
        CNLMCOBNCAI: RogueMagicUnitSelectInfo,
        FHOKDLLICJL: KKAGNMEMKOG,
        PHDEMDBGOIB: KKAGNMEMKOG,
        KLJJIBPJGFF: KKAGNMEMKOG,
        DLFALFGFDHE: PIGFBKOJNHG,
        NPCDBPNDGOP: CGGBPJICHGF,
        pub const _union_desc = .{
            .buff_select_info = fd(2030, .{ .SubMessage = {} }),
            .FPHHHIOBFAI = fd(1743, .{ .SubMessage = {} }),
            .AJDDFANCEJN = fd(880, .{ .SubMessage = {} }),
            .buff_reforge_select_info = fd(1272, .{ .SubMessage = {} }),
            .miracle_select_info = fd(315, .{ .SubMessage = {} }),
            .BICJEMPPLAM = fd(747, .{ .SubMessage = {} }),
            .AELPPPIEFAB = fd(1992, .{ .SubMessage = {} }),
            .BEDIACHLCII = fd(1829, .{ .SubMessage = {} }),
            .LADGCOOMNKA = fd(2044, .{ .SubMessage = {} }),
            .CGKFOMNCNAK = fd(1373, .{ .SubMessage = {} }),
            .compose_miracle_select_info = fd(1195, .{ .SubMessage = {} }),
            .hex_avatar_select_info = fd(88, .{ .SubMessage = {} }),
            .bonus_select_info = fd(1153, .{ .SubMessage = {} }),
            .rogue_formula_select_info = fd(500, .{ .SubMessage = {} }),
            .JBKPIKAJPEB = fd(523, .{ .SubMessage = {} }),
            .HCCHFJEFANJ = fd(1071, .{ .SubMessage = {} }),
            .OIOMHOPNIMF = fd(1665, .{ .SubMessage = {} }),
            .IFCLAAFPKHC = fd(1470, .{ .SubMessage = {} }),
            .HFJECHFANNF = fd(836, .{ .SubMessage = {} }),
            .LDJOMIOJEPF = fd(1003, .{ .SubMessage = {} }),
            .LMNONCMBIOO = fd(469, .{ .SubMessage = {} }),
            .CNLMCOBNCAI = fd(1991, .{ .SubMessage = {} }),
            .FHOKDLLICJL = fd(1379, .{ .SubMessage = {} }),
            .PHDEMDBGOIB = fd(2001, .{ .SubMessage = {} }),
            .KLJJIBPJGFF = fd(532, .{ .SubMessage = {} }),
            .DLFALFGFDHE = fd(296, .{ .SubMessage = {} }),
            .NPCDBPNDGOP = fd(53, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .KFELKJLDKEH = fd(null, .{ .OneOf = KFELKJLDKEH_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HandleRogueCommonPendingActionCsReq = struct {
    IFDKLLHFPJB: u32 = 0,
    KFELKJLDKEH: ?KFELKJLDKEH_union,

    pub const _KFELKJLDKEH_case = enum {
        JKHBBDLCHID,
        KBNEGOLPLFC,
        GDKGIBEKGPF,
        ONCNGIILENF,
        GLEJCDPDJNE,
        OOAGPGDPJOA,
        IDBALJBNBKE,
        GNEBJEPPKEJ,
        KJLAFILAPJF,
        FLFPCPHLAGO,
        EPOAKMFMFLM,
        FKPFOKHBPKK,
        EODCLAIPCAE,
        AOCODAOBKHM,
        EGGGGGGLFHO,
        LNPLOEOFCCJ,
        IEABOHKEAPA,
        NEDIIBJHGFO,
        JGPCBCJKONH,
        HKNJIPJHOCG,
        LDAGLIMNMAN,
        AFLHEIKJNBN,
        PHKBFLNPEFI,
        GOCMNDKFOAB,
        CHONECOLIHA,
        MOAOGACBOIJ,
        KILHFPPBBFM,
        BLHDFAJHCJA,
        LPJBAIMJAIK,
        HDHDPGGMEPB,
        ECEGPEJCPBL,
        FKPDKFEMKEC,
        LLNMCJCFBMJ,
    };
    pub const KFELKJLDKEH_union = union(_KFELKJLDKEH_case) {
        JKHBBDLCHID: RogueBuffSelectResult,
        KBNEGOLPLFC: PBMAKLNJEKO,
        GDKGIBEKGPF: OKEFIDDNLKG,
        ONCNGIILENF: RogueBuffRerollResult,
        GLEJCDPDJNE: RogueBuffReforgeSelectResult,
        OOAGPGDPJOA: MPPHHNAEEDK,
        IDBALJBNBKE: JFPFDJPPOAG,
        GNEBJEPPKEJ: NALELIGHDAA,
        KJLAFILAPJF: PKODMMPHIBC,
        FLFPCPHLAGO: NHCKHPLKLIO,
        EPOAKMFMFLM: LHJPIKEKPGH,
        FKPFOKHBPKK: IMCBIIGOKPM,
        EODCLAIPCAE: LKMKHACMAPC,
        AOCODAOBKHM: IMLBIBJKPDB,
        EGGGGGGLFHO: RogueTournFormulaResult,
        LNPLOEOFCCJ: KHGCDEIMLHN,
        IEABOHKEAPA: ONOOFHDEIDD,
        NEDIIBJHGFO: EKMAHAFGNGJ,
        JGPCBCJKONH: RogueMagicUnitSelectResult,
        HKNJIPJHOCG: RogueMagicScepterSelectResult,
        LDAGLIMNMAN: JCDLJBPHOMD,
        AFLHEIKJNBN: RogueMagicUnitSelectResult,
        PHKBFLNPEFI: RogueMagicUnitSelectResult,
        GOCMNDKFOAB: RogueMagicUnitSelectResult,
        CHONECOLIHA: IIPEGHDKHGD,
        MOAOGACBOIJ: IIPEGHDKHGD,
        KILHFPPBBFM: IIPEGHDKHGD,
        BLHDFAJHCJA: HAOJLHGNFPM,
        LPJBAIMJAIK: HAOJLHGNFPM,
        HDHDPGGMEPB: OOPINHFMECE,
        ECEGPEJCPBL: LGCMEEPJMHA,
        FKPDKFEMKEC: AJNAJINFJIC,
        LLNMCJCFBMJ: MNMLOAPBHNF,
        pub const _union_desc = .{
            .JKHBBDLCHID = fd(909, .{ .SubMessage = {} }),
            .KBNEGOLPLFC = fd(1691, .{ .SubMessage = {} }),
            .GDKGIBEKGPF = fd(317, .{ .SubMessage = {} }),
            .ONCNGIILENF = fd(1195, .{ .SubMessage = {} }),
            .GLEJCDPDJNE = fd(669, .{ .SubMessage = {} }),
            .OOAGPGDPJOA = fd(379, .{ .SubMessage = {} }),
            .IDBALJBNBKE = fd(1110, .{ .SubMessage = {} }),
            .GNEBJEPPKEJ = fd(788, .{ .SubMessage = {} }),
            .KJLAFILAPJF = fd(1085, .{ .SubMessage = {} }),
            .FLFPCPHLAGO = fd(812, .{ .SubMessage = {} }),
            .EPOAKMFMFLM = fd(1501, .{ .SubMessage = {} }),
            .FKPFOKHBPKK = fd(1952, .{ .SubMessage = {} }),
            .EODCLAIPCAE = fd(1375, .{ .SubMessage = {} }),
            .AOCODAOBKHM = fd(220, .{ .SubMessage = {} }),
            .EGGGGGGLFHO = fd(1376, .{ .SubMessage = {} }),
            .LNPLOEOFCCJ = fd(1336, .{ .SubMessage = {} }),
            .IEABOHKEAPA = fd(1531, .{ .SubMessage = {} }),
            .NEDIIBJHGFO = fd(755, .{ .SubMessage = {} }),
            .JGPCBCJKONH = fd(987, .{ .SubMessage = {} }),
            .HKNJIPJHOCG = fd(874, .{ .SubMessage = {} }),
            .LDAGLIMNMAN = fd(535, .{ .SubMessage = {} }),
            .AFLHEIKJNBN = fd(1643, .{ .SubMessage = {} }),
            .PHKBFLNPEFI = fd(1306, .{ .SubMessage = {} }),
            .GOCMNDKFOAB = fd(545, .{ .SubMessage = {} }),
            .CHONECOLIHA = fd(1887, .{ .SubMessage = {} }),
            .MOAOGACBOIJ = fd(361, .{ .SubMessage = {} }),
            .KILHFPPBBFM = fd(1273, .{ .SubMessage = {} }),
            .BLHDFAJHCJA = fd(1548, .{ .SubMessage = {} }),
            .LPJBAIMJAIK = fd(1453, .{ .SubMessage = {} }),
            .HDHDPGGMEPB = fd(1001, .{ .SubMessage = {} }),
            .ECEGPEJCPBL = fd(103, .{ .SubMessage = {} }),
            .FKPDKFEMKEC = fd(131883, .{ .SubMessage = {} }),
            .LLNMCJCFBMJ = fd(198324, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .IFDKLLHFPJB = fd(4, .{ .Varint = .Simple }),
        .KFELKJLDKEH = fd(null, .{ .OneOf = KFELKJLDKEH_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HandleRogueCommonPendingActionScRsp = struct {
    IFDKLLHFPJB: u32 = 0,
    queue_position: u32 = 0,
    retcode: u32 = 0,
    KFELKJLDKEH: ?KFELKJLDKEH_union,

    pub const _KFELKJLDKEH_case = enum {
        PNADBJEJBOF,
        KKIANGABFNJ,
        CLDBPLNIAEN,
        GOOMOPMALOL,
        KBFLNJPMOAH,
        JKJOFMHJGIB,
        DDDENAPJBKA,
        DMCEPJKOOGC,
        FDPPGKDDPGC,
        MAPBDBMFIMD,
        OIHJEKIMPPD,
        OKPCJLPMBAD,
        DPGBCAFKDPM,
        HMOBEFJKDPD,
        JAPIIIJMPGE,
        CPOPCHNDDFM,
        NDJBGFHEICI,
        COBEIBNLGJF,
        BLEFMEHONOO,
        IHBODKMFPNF,
        LBOJLIIABAP,
        ILHBHPHDEDL,
        DICGEADECPK,
        GABICMFAKPD,
        DKMMOIMOJDM,
        HCFOPGMLENO,
        GDMGOELOMFK,
        CDDNKGJAEFI,
    };
    pub const KFELKJLDKEH_union = union(_KFELKJLDKEH_case) {
        PNADBJEJBOF: RogueBuffSelectCallback,
        KKIANGABFNJ: FKDBIHNPCHE,
        CLDBPLNIAEN: DLHPDALGDEH,
        GOOMOPMALOL: RogueBuffRerollCallback,
        KBFLNJPMOAH: RogueBuffReforgeSelectCallback,
        JKJOFMHJGIB: CFFOCCHBAMH,
        DDDENAPJBKA: HONKBMJPJAA,
        DMCEPJKOOGC: PAOCONGELJK,
        FDPPGKDDPGC: BLFJBKBHJIL,
        MAPBDBMFIMD: OMJFMBJMFMC,
        OIHJEKIMPPD: MOIKNHHCABH,
        OKPCJLPMBAD: FHIKPLAIOEI,
        DPGBCAFKDPM: NOCOCFHOAJC,
        HMOBEFJKDPD: JCAHMIOOLDB,
        JAPIIIJMPGE: RogueTournFormulaCallback,
        CPOPCHNDDFM: EHEFOMMBNAF,
        NDJBGFHEICI: HKJEGONGJNP,
        COBEIBNLGJF: HBIBLKKEOAC,
        BLEFMEHONOO: RogueMagicUnitSelectCallback,
        IHBODKMFPNF: RogueMagicScepterSelectCallback,
        LBOJLIIABAP: LGPGCJDOIBK,
        ILHBHPHDEDL: ABPNCPOIJCI,
        DICGEADECPK: IMNNNJGGPAG,
        GABICMFAKPD: IMDHPDBHEBC,
        DKMMOIMOJDM: IKCNDLJLAPP,
        HCFOPGMLENO: BLJOGGMJBMD,
        GDMGOELOMFK: BLJOGGMJBMD,
        CDDNKGJAEFI: ONPNBIOMMGB,
        pub const _union_desc = .{
            .PNADBJEJBOF = fd(1449, .{ .SubMessage = {} }),
            .KKIANGABFNJ = fd(1425, .{ .SubMessage = {} }),
            .CLDBPLNIAEN = fd(1166, .{ .SubMessage = {} }),
            .GOOMOPMALOL = fd(1394, .{ .SubMessage = {} }),
            .KBFLNJPMOAH = fd(1701, .{ .SubMessage = {} }),
            .JKJOFMHJGIB = fd(351, .{ .SubMessage = {} }),
            .DDDENAPJBKA = fd(130, .{ .SubMessage = {} }),
            .DMCEPJKOOGC = fd(250, .{ .SubMessage = {} }),
            .FDPPGKDDPGC = fd(443, .{ .SubMessage = {} }),
            .MAPBDBMFIMD = fd(343, .{ .SubMessage = {} }),
            .OIHJEKIMPPD = fd(1679, .{ .SubMessage = {} }),
            .OKPCJLPMBAD = fd(188, .{ .SubMessage = {} }),
            .DPGBCAFKDPM = fd(1304, .{ .SubMessage = {} }),
            .HMOBEFJKDPD = fd(506, .{ .SubMessage = {} }),
            .JAPIIIJMPGE = fd(1590, .{ .SubMessage = {} }),
            .CPOPCHNDDFM = fd(110, .{ .SubMessage = {} }),
            .NDJBGFHEICI = fd(1890, .{ .SubMessage = {} }),
            .COBEIBNLGJF = fd(123, .{ .SubMessage = {} }),
            .BLEFMEHONOO = fd(1252, .{ .SubMessage = {} }),
            .IHBODKMFPNF = fd(1704, .{ .SubMessage = {} }),
            .LBOJLIIABAP = fd(1000, .{ .SubMessage = {} }),
            .ILHBHPHDEDL = fd(1613, .{ .SubMessage = {} }),
            .DICGEADECPK = fd(1386, .{ .SubMessage = {} }),
            .GABICMFAKPD = fd(167, .{ .SubMessage = {} }),
            .DKMMOIMOJDM = fd(674, .{ .SubMessage = {} }),
            .HCFOPGMLENO = fd(873, .{ .SubMessage = {} }),
            .GDMGOELOMFK = fd(864, .{ .SubMessage = {} }),
            .CDDNKGJAEFI = fd(235, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .IFDKLLHFPJB = fd(9, .{ .Varint = .Simple }),
        .queue_position = fd(6, .{ .Varint = .Simple }),
        .retcode = fd(10, .{ .Varint = .Simple }),
        .KFELKJLDKEH = fd(null, .{ .OneOf = KFELKJLDKEH_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FCPMBJHFBNJ = struct {
    maze_buff_id: u32 = 0,

    pub const _desc_table = .{
        .maze_buff_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GIADLHEEPHD = struct {
    has_taken_reward: bool = false,
    FHHGDPCECEE: u32 = 0,

    pub const _desc_table = .{
        .has_taken_reward = fd(13, .{ .Varint = .Simple }),
        .FHHGDPCECEE = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LOGNKEKHBAI = struct {
    has_taken_reward: bool = false,
    AJBEPAHCGIK: u32 = 0,

    pub const _desc_table = .{
        .has_taken_reward = fd(11, .{ .Varint = .Simple }),
        .AJBEPAHCGIK = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KNIJHGNJIJM = struct {
    level: u32 = 0,
    exp: u32 = 0,
    aeon_id: u32 = 0,
    DPMIBDHKDAE: ArrayList(u32),
    JGMIPMDPPIJ: u32 = 0,
    DDGCFJDBOOH: ArrayList(u32),

    pub const _desc_table = .{
        .level = fd(9, .{ .Varint = .Simple }),
        .exp = fd(4, .{ .Varint = .Simple }),
        .aeon_id = fd(6, .{ .Varint = .Simple }),
        .DPMIBDHKDAE = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
        .JGMIPMDPPIJ = fd(1, .{ .Varint = .Simple }),
        .DDGCFJDBOOH = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OOCEOILKCFI = struct {
    magic_item: ?RogueMagicScepter = null,

    pub const _desc_table = .{
        .magic_item = fd(4, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicUnitInfo = struct {
    magic_unit_id: u32 = 0,
    PPMIOGCFOOC: u32 = 0,

    pub const _desc_table = .{
        .magic_unit_id = fd(3, .{ .Varint = .Simple }),
        .PPMIOGCFOOC = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AEKNFLOMLJH = struct {
    buff_list: ArrayList(FCPMBJHFBNJ),
    BELOFMFHFDK: ArrayList(KNIJHGNJIJM),
    miracle_list: ArrayList(GIADLHEEPHD),
    BJCMPHLPKNF: ArrayList(LOGNKEKHBAI),

    pub const _desc_table = .{
        .buff_list = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .BELOFMFHFDK = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .miracle_list = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .BJCMPHLPKNF = fd(5, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueHandbookDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueHandbookDataScRsp = struct {
    rogue_tourn_handbook: ?AEKNFLOMLJH = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .rogue_tourn_handbook = fd(13, .{ .SubMessage = {} }),
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncRogueHandbookDataUpdateScNotify = struct {
    ABIBOBFDKLD: ArrayList(FCPMBJHFBNJ),
    HAEBAAMBNBB: ArrayList(LOGNKEKHBAI),
    BJKPKFBFDFF: ArrayList(OOCEOILKCFI),
    MMHCHHCOFPB: ArrayList(RogueMagicUnitInfo),
    IDDDCJONPFN: ArrayList(GIADLHEEPHD),

    pub const _desc_table = .{
        .ABIBOBFDKLD = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .HAEBAAMBNBB = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .BJKPKFBFDFF = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .MMHCHHCOFPB = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .IDDDCJONPFN = fd(5, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeRogueMiracleHandbookRewardCsReq = struct {
    AFHDDNGGNBF: ArrayList(u32),

    pub const _desc_table = .{
        .AFHDDNGGNBF = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeRogueMiracleHandbookRewardScRsp = struct {
    retcode: u32 = 0,
    reward: ?ItemList = null,
    FEIFJADCDFL: ArrayList(u32),

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
        .reward = fd(11, .{ .SubMessage = {} }),
        .FEIFJADCDFL = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeRogueEventHandbookRewardCsReq = struct {
    handbook_buff_list: ArrayList(u32),

    pub const _desc_table = .{
        .handbook_buff_list = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeRogueEventHandbookRewardScRsp = struct {
    reward: ?ItemList = null,
    retcode: u32 = 0,
    DPJHILHGOKE: ArrayList(u32),

    pub const _desc_table = .{
        .reward = fd(12, .{ .SubMessage = {} }),
        .retcode = fd(7, .{ .Varint = .Simple }),
        .DPJHILHGOKE = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueGameItemValue = struct {
    GLAPHHABOHP: ArrayList(GLAPHHABOHPEntry),

    pub const _desc_table = .{
        .GLAPHHABOHP = fd(14, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const GLAPHHABOHPEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueGameAeonInfo = struct {
    BOHDMINEJNO: ?EENDHPKPFLP = null,
    ICJABPGMACJ: i32 = 0,
    game_aeon_id: u32 = 0,

    pub const _desc_table = .{
        .BOHDMINEJNO = fd(9, .{ .SubMessage = {} }),
        .ICJABPGMACJ = fd(12, .{ .Varint = .Simple }),
        .game_aeon_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueDifficultyLevelInfo = struct {
    difficulty_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .difficulty_id_list = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournLineupInfo = struct {
    rogue_revive_cost: ?ItemCostData = null,
    avatar_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .rogue_revive_cost = fd(9, .{ .SubMessage = {} }),
        .avatar_id_list = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueGameInfo = struct {
    JPBHEOJAKGE: ?JPBHEOJAKGE_union,

    pub const _JPBHEOJAKGE_case = enum {
        rogue_buff_info,
        game_miracle_info,
        FFFCCEJIFDK,
        rogue_aeon_info,
        rogue_difficulty_info,
        CKAANMDDKCJ,
        NBDACDNBJIK,
        rogue_lineup_info,
    };
    pub const JPBHEOJAKGE_union = union(_JPBHEOJAKGE_case) {
        rogue_buff_info: ChessRogueBuffInfo,
        game_miracle_info: ChessRogueMiracleInfo,
        FFFCCEJIFDK: RogueGameItemValue,
        rogue_aeon_info: ChessRogueGameAeonInfo,
        rogue_difficulty_info: RogueDifficultyLevelInfo,
        CKAANMDDKCJ: RogueTournFormulaInfo,
        NBDACDNBJIK: KeywordUnlockValue,
        rogue_lineup_info: RogueTournLineupInfo,
        pub const _union_desc = .{
            .rogue_buff_info = fd(12, .{ .SubMessage = {} }),
            .game_miracle_info = fd(13, .{ .SubMessage = {} }),
            .FFFCCEJIFDK = fd(8, .{ .SubMessage = {} }),
            .rogue_aeon_info = fd(1, .{ .SubMessage = {} }),
            .rogue_difficulty_info = fd(7, .{ .SubMessage = {} }),
            .CKAANMDDKCJ = fd(11, .{ .SubMessage = {} }),
            .NBDACDNBJIK = fd(15, .{ .SubMessage = {} }),
            .rogue_lineup_info = fd(3, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .JPBHEOJAKGE = fd(null, .{ .OneOf = JPBHEOJAKGE_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PMJGKHPKHCM = struct {
    sub_area_id: u32 = 0,
    AGEBAMBKKBC: u32 = 0,
    rogue_sub_mode: u32 = 0,
    rogue_current_game_info: ArrayList(RogueGameInfo),
    rogue_magic_battle_const: u32 = 0,

    pub const _desc_table = .{
        .sub_area_id = fd(15, .{ .Varint = .Simple }),
        .AGEBAMBKKBC = fd(5, .{ .Varint = .Simple }),
        .rogue_sub_mode = fd(10, .{ .Varint = .Simple }),
        .rogue_current_game_info = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .rogue_magic_battle_const = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KLAAHJHNLCJ = struct {
    CDIAJKEJDHA: bool = false,
    BHPCNNFOKEE: u32 = 0,
    progress: u32 = 0,

    pub const _desc_table = .{
        .CDIAJKEJDHA = fd(6, .{ .Varint = .Simple }),
        .BHPCNNFOKEE = fd(3, .{ .Varint = .Simple }),
        .progress = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTalentInfo = struct {
    status: RogueTalentStatus = @enumFromInt(0),
    rogue_unlock_progress_list: ArrayList(KLAAHJHNLCJ),
    talent_id: u32 = 0,

    pub const _desc_table = .{
        .status = fd(6, .{ .Varint = .Simple }),
        .rogue_unlock_progress_list = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .talent_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTalentInfoList = struct {
    talent_info: ArrayList(RogueTalentInfo),

    pub const _desc_table = .{
        .talent_info = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueCommonVirtualItemInfo = struct {
    virtual_item_num: u32 = 0,
    virtual_item_id: u32 = 0,

    pub const _desc_table = .{
        .virtual_item_num = fd(1, .{ .Varint = .Simple }),
        .virtual_item_id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncRogueCommonVirtualItemInfoScNotify = struct {
    common_item_info: ArrayList(RogueCommonVirtualItemInfo),

    pub const _desc_table = .{
        .common_item_info = fd(9, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MAPOMOILGEH = struct {
    MBKFININNEK: u32 = 0,
    GEDJNIAEFHO: u32 = 0,
    BDCFFOBGKOA: u32 = 0,

    pub const _desc_table = .{
        .MBKFININNEK = fd(15, .{ .Varint = .Simple }),
        .GEDJNIAEFHO = fd(13, .{ .Varint = .Simple }),
        .BDCFFOBGKOA = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PLGDCFIPEAA = struct {
    JPGCDJDGDBI: ArrayList(RogueUnlockFunctionType),

    pub const _desc_table = .{
        .JPGCDJDGDBI = fd(8, .{ .List = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ILAEKJCNEMF = struct {
    AFEDJKMFODP: ArrayList(u32),

    pub const _desc_table = .{
        .AFEDJKMFODP = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LGJMDNNMPPE = struct {
    NOLHGNHAEMA: ?ILAEKJCNEMF = null,
    ONGPJOGKKJN: ?MAPOMOILGEH = null,
    KJKBKEGIGHK: ?PLGDCFIPEAA = null,

    pub const _desc_table = .{
        .NOLHGNHAEMA = fd(3, .{ .SubMessage = {} }),
        .ONGPJOGKKJN = fd(15, .{ .SubMessage = {} }),
        .KJKBKEGIGHK = fd(5, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CommonRogueQueryCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CommonRogueQueryScRsp = struct {
    FHHBJLHAJFJ: u32 = 0,
    rogue_get_info: ?LGJMDNNMPPE = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .FHHBJLHAJFJ = fd(10, .{ .Varint = .Simple }),
        .rogue_get_info = fd(12, .{ .SubMessage = {} }),
        .retcode = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CommonRogueUpdateScNotify = struct {
    DGIKIFJODBM: ?DGIKIFJODBM_union,

    pub const _DGIKIFJODBM_case = enum {
        ONGPJOGKKJN,
        KJKBKEGIGHK,
        NOLHGNHAEMA,
    };
    pub const DGIKIFJODBM_union = union(_DGIKIFJODBM_case) {
        ONGPJOGKKJN: MAPOMOILGEH,
        KJKBKEGIGHK: PLGDCFIPEAA,
        NOLHGNHAEMA: ILAEKJCNEMF,
        pub const _union_desc = .{
            .ONGPJOGKKJN = fd(6, .{ .SubMessage = {} }),
            .KJKBKEGIGHK = fd(10, .{ .SubMessage = {} }),
            .NOLHGNHAEMA = fd(15, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .DGIKIFJODBM = fd(null, .{ .OneOf = DGIKIFJODBM_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueCommonDialogueBasicInfo = struct {
    aeon_talk_id: u32 = 0,
    talk_dialogue_id: u32 = 0,

    pub const _desc_table = .{
        .aeon_talk_id = fd(12, .{ .Varint = .Simple }),
        .talk_dialogue_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GNJAPOMLLHE = struct {
    BGLEHMKMAPG: u32 = 0,

    pub const _desc_table = .{
        .BGLEHMKMAPG = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CNHHPDHBMDC = struct {
    BGLEHMKMAPG: u32 = 0,

    pub const _desc_table = .{
        .BGLEHMKMAPG = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JIEAAFJENLK = struct {
    formula_id: u32 = 0,

    pub const _desc_table = .{
        .formula_id = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HPJLAFHHGJG = struct {
    BGLEHMKMAPG: u32 = 0,

    pub const _desc_table = .{
        .BGLEHMKMAPG = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AFCCAOACNAK = struct {
    dialogue_id: u32 = 0,

    pub const _desc_table = .{
        .dialogue_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueCommonDialogueInfo = struct {
    ACDOBBPLDBG: ?ACDOBBPLDBG_union,

    pub const _ACDOBBPLDBG_case = enum {
        dialogue_basic_info,
        ADMAHLAALNH,
        ODDGCBPOPLF,
        GMAKHONAEPH,
        CACGEKAANKL,
        AGGBLHGKPFJ,
    };
    pub const ACDOBBPLDBG_union = union(_ACDOBBPLDBG_case) {
        dialogue_basic_info: RogueCommonDialogueBasicInfo,
        ADMAHLAALNH: GNJAPOMLLHE,
        ODDGCBPOPLF: CNHHPDHBMDC,
        GMAKHONAEPH: JIEAAFJENLK,
        CACGEKAANKL: HPJLAFHHGJG,
        AGGBLHGKPFJ: AFCCAOACNAK,
        pub const _union_desc = .{
            .dialogue_basic_info = fd(3, .{ .SubMessage = {} }),
            .ADMAHLAALNH = fd(10, .{ .SubMessage = {} }),
            .ODDGCBPOPLF = fd(2, .{ .SubMessage = {} }),
            .GMAKHONAEPH = fd(11, .{ .SubMessage = {} }),
            .CACGEKAANKL = fd(9, .{ .SubMessage = {} }),
            .AGGBLHGKPFJ = fd(7, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .ACDOBBPLDBG = fd(null, .{ .OneOf = ACDOBBPLDBG_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueCommonDialogueOptionDisplayInfo = struct {
    display_int_value: i32 = 0,
    display_float_value: f32 = 0,

    pub const _desc_table = .{
        .display_int_value = fd(7, .{ .Varint = .Simple }),
        .display_float_value = fd(3, .{ .FixedInt = .I32 }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueCommonDialogueOptionBattleResultInfo = struct {
    battle_event_id: u32 = 0,

    pub const _desc_table = .{
        .battle_event_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NEBPGHDDEPC = struct {
    JEFIOIHHCLG: i32 = 0,

    pub const _desc_table = .{
        .JEFIOIHHCLG = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueCommonDialogueOptionResultInfo = struct {
    DCOECLCEDOB: ?DCOECLCEDOB_union,

    pub const _DCOECLCEDOB_case = enum {
        battle_result_info,
        HMLCEHIKFFK,
    };
    pub const DCOECLCEDOB_union = union(_DCOECLCEDOB_case) {
        battle_result_info: RogueCommonDialogueOptionBattleResultInfo,
        HMLCEHIKFFK: NEBPGHDDEPC,
        pub const _union_desc = .{
            .battle_result_info = fd(10, .{ .SubMessage = {} }),
            .HMLCEHIKFFK = fd(3, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .DCOECLCEDOB = fd(null, .{ .OneOf = DCOECLCEDOB_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueCommonDialogueOptionInfo = struct {
    confirm: bool = false,
    is_valid: bool = false,
    display_value: ?RogueCommonDialogueOptionDisplayInfo = null,
    arg_id: u32 = 0,
    option_result_info: ArrayList(RogueCommonDialogueOptionResultInfo),
    option_id: u32 = 0,

    pub const _desc_table = .{
        .confirm = fd(6, .{ .Varint = .Simple }),
        .is_valid = fd(13, .{ .Varint = .Simple }),
        .display_value = fd(4, .{ .SubMessage = {} }),
        .arg_id = fd(1, .{ .Varint = .Simple }),
        .option_result_info = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .option_id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueCommonDialogueDataInfo = struct {
    event_unique_id: u32 = 0,
    option_list: ArrayList(RogueCommonDialogueOptionInfo),
    dialogue_info: ?RogueCommonDialogueInfo = null,

    pub const _desc_table = .{
        .event_unique_id = fd(4, .{ .Varint = .Simple }),
        .option_list = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .dialogue_info = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueCommonDialogueDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueCommonDialogueDataScRsp = struct {
    dialogue_data_list: ArrayList(RogueCommonDialogueDataInfo),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .dialogue_data_list = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SelectRogueCommonDialogueOptionCsReq = struct {
    option_id: u32 = 0,
    event_unique_id: u32 = 0,

    pub const _desc_table = .{
        .option_id = fd(7, .{ .Varint = .Simple }),
        .event_unique_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SelectRogueCommonDialogueOptionScRsp = struct {
    dialogue_data: ?RogueCommonDialogueDataInfo = null,
    option_id: u32 = 0,
    effect_event_id_list: ArrayList(u32),
    retcode: u32 = 0,
    event_has_effect: bool = false,
    event_unique_id: u32 = 0,

    pub const _desc_table = .{
        .dialogue_data = fd(3, .{ .SubMessage = {} }),
        .option_id = fd(8, .{ .Varint = .Simple }),
        .effect_event_id_list = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(11, .{ .Varint = .Simple }),
        .event_has_effect = fd(10, .{ .Varint = .Simple }),
        .event_unique_id = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishRogueCommonDialogueCsReq = struct {
    event_unique_id: u32 = 0,

    pub const _desc_table = .{
        .event_unique_id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishRogueCommonDialogueScRsp = struct {
    event_unique_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .event_unique_id = fd(9, .{ .Varint = .Simple }),
        .retcode = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncRogueCommonDialogueDataScNotify = struct {
    dialogue_data_list: ArrayList(RogueCommonDialogueDataInfo),

    pub const _desc_table = .{
        .dialogue_data_list = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncRogueCommonDialogueOptionFinishScNotify = struct {
    DGNCFMDPPBF: ?RogueCommonDialogueOptionInfo = null,
    dialogue_data: ?RogueCommonDialogueDataInfo = null,
    event_unique_id: u32 = 0,
    option_id: u32 = 0,

    pub const _desc_table = .{
        .DGNCFMDPPBF = fd(8, .{ .SubMessage = {} }),
        .dialogue_data = fd(15, .{ .SubMessage = {} }),
        .event_unique_id = fd(3, .{ .Varint = .Simple }),
        .option_id = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournCurAreaInfo = struct {
    pending_action: ?RogueCommonPendingAction = null,
    rogue_magic_battle_const: u32 = 0,
    MDLNDGIJNML: ManagedString = .Empty,
    rogue_sub_mode: u32 = 0,
    sub_area_id: u32 = 0,
    AGEBAMBKKBC: u32 = 0,

    pub const _desc_table = .{
        .pending_action = fd(9, .{ .SubMessage = {} }),
        .rogue_magic_battle_const = fd(11, .{ .Varint = .Simple }),
        .MDLNDGIJNML = fd(14, .String),
        .rogue_sub_mode = fd(6, .{ .Varint = .Simple }),
        .sub_area_id = fd(3, .{ .Varint = .Simple }),
        .AGEBAMBKKBC = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueWorkbenchGetInfoCsReq = struct {
    prop_entity_id: u32 = 0,

    pub const _desc_table = .{
        .prop_entity_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueWorkbenchGetInfoScRsp = struct {
    GAJPNNGMHNK: ArrayList(GAJPNNGMHNKEntry),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .GAJPNNGMHNK = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(9, .{ .Varint = .Simple }),
    };

    pub const GAJPNNGMHNKEntry = struct {
        key: u32 = 0,
        value: ?WorkbenchFuncInfo = null,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const WorkbenchFuncInfo = struct {
    PNECCABBLHB: ?PNECCABBLHB_union,

    pub const _PNECCABBLHB_case = enum {
        reforge_buff_func,
        reforge_formula_func,
        enhance_buff_func,
        compose_miracle_func,
        reforge_hex_avatar_func,
        magic_item,
        game_magic_unit,
        CEAJNLIOFHF,
        PGPAAPOPDOC,
        PMKEHGBPCNG,
    };
    pub const PNECCABBLHB_union = union(_PNECCABBLHB_case) {
        reforge_buff_func: WorkbenchReforgeBuffFuncInfo,
        reforge_formula_func: WorkbenchReforgeFormulaFuncInfo,
        enhance_buff_func: WorkbenchEnhanceBuffFuncInfo,
        compose_miracle_func: WorkbenchComposeMiracleFunc,
        reforge_hex_avatar_func: WorkbenchReforgeHexAvatarFunc,
        magic_item: KHCBGNLNPEL,
        game_magic_unit: KMHIBNGAFEO,
        CEAJNLIOFHF: DMKPFGEBILH,
        PGPAAPOPDOC: LFGGPNGKBCH,
        PMKEHGBPCNG: DHMFCIDJBFD,
        pub const _union_desc = .{
            .reforge_buff_func = fd(3, .{ .SubMessage = {} }),
            .reforge_formula_func = fd(1, .{ .SubMessage = {} }),
            .enhance_buff_func = fd(15, .{ .SubMessage = {} }),
            .compose_miracle_func = fd(8, .{ .SubMessage = {} }),
            .reforge_hex_avatar_func = fd(11, .{ .SubMessage = {} }),
            .magic_item = fd(13, .{ .SubMessage = {} }),
            .game_magic_unit = fd(4, .{ .SubMessage = {} }),
            .CEAJNLIOFHF = fd(5, .{ .SubMessage = {} }),
            .PGPAAPOPDOC = fd(7, .{ .SubMessage = {} }),
            .PMKEHGBPCNG = fd(9, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .PNECCABBLHB = fd(null, .{ .OneOf = PNECCABBLHB_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const WorkbenchReforgeBuffFuncInfo = struct {
    free_reforge_num: u32 = 0,
    uint_reforge_num_value: u32 = 0,
    cost_data: ?ItemCostData = null,
    int_reforge_num_value: i32 = 0,
    can_free_reforge: bool = false,

    pub const _desc_table = .{
        .free_reforge_num = fd(13, .{ .Varint = .Simple }),
        .uint_reforge_num_value = fd(4, .{ .Varint = .Simple }),
        .cost_data = fd(2, .{ .SubMessage = {} }),
        .int_reforge_num_value = fd(1, .{ .Varint = .Simple }),
        .can_free_reforge = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const WorkbenchReforgeFormulaFuncInfo = struct {
    uint_reforge_num_value: u32 = 0,
    free_reforge_num: u32 = 0,
    int_reforge_num_value: i32 = 0,
    cost_data: ?ItemCostData = null,
    can_free_reforge: bool = false,

    pub const _desc_table = .{
        .uint_reforge_num_value = fd(7, .{ .Varint = .Simple }),
        .free_reforge_num = fd(11, .{ .Varint = .Simple }),
        .int_reforge_num_value = fd(8, .{ .Varint = .Simple }),
        .cost_data = fd(6, .{ .SubMessage = {} }),
        .can_free_reforge = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const WorkbenchEnhanceBuffFuncInfo = struct {
    cur_num: u32 = 0,
    HCPACBHCMHN: ArrayList(HCPACBHCMHNEntry),
    max_num: u32 = 0,

    pub const _desc_table = .{
        .cur_num = fd(14, .{ .Varint = .Simple }),
        .HCPACBHCMHN = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .max_num = fd(6, .{ .Varint = .Simple }),
    };

    pub const HCPACBHCMHNEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const WorkbenchComposeMiracleFunc = struct {
    free_reforge_num: u32 = 0,
    int_reforge_num_value: i32 = 0,
    cost_data: ?ItemCostData = null,
    NFNICIPMJII: ArrayList(NFNICIPMJIIEntry),

    pub const _desc_table = .{
        .free_reforge_num = fd(6, .{ .Varint = .Simple }),
        .int_reforge_num_value = fd(7, .{ .Varint = .Simple }),
        .cost_data = fd(8, .{ .SubMessage = {} }),
        .NFNICIPMJII = fd(12, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const NFNICIPMJIIEntry = struct {
        key: u32 = 0,
        value: bool = false,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const WorkbenchReforgeHexAvatarFunc = struct {
    free_reforge_num: u32 = 0,
    int_reforge_num_value: i32 = 0,
    cost_data: ?ItemCostData = null,

    pub const _desc_table = .{
        .free_reforge_num = fd(2, .{ .Varint = .Simple }),
        .int_reforge_num_value = fd(3, .{ .Varint = .Simple }),
        .cost_data = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const COAHGFLONAN = struct {
    cost_data: ?ItemCostData = null,
    magic_item: ?RogueMagicScepter = null,
    HBPBLGLLIEN: ?ItemCostData = null,
    NGKJPCEHMBA: bool = false,

    pub const _desc_table = .{
        .cost_data = fd(13, .{ .SubMessage = {} }),
        .magic_item = fd(4, .{ .SubMessage = {} }),
        .HBPBLGLLIEN = fd(2, .{ .SubMessage = {} }),
        .NGKJPCEHMBA = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KHCBGNLNPEL = struct {
    rogue_magic_scepter_info_list: ArrayList(COAHGFLONAN),

    pub const _desc_table = .{
        .rogue_magic_scepter_info_list = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AOGIIMKCJDJ = struct {
    PPMIOGCFOOC: u32 = 0,
    magic_unit_id: u32 = 0,
    HBPBLGLLIEN: ?ItemCostData = null,
    cost_data: ?ItemCostData = null,
    NGKJPCEHMBA: bool = false,

    pub const _desc_table = .{
        .PPMIOGCFOOC = fd(13, .{ .Varint = .Simple }),
        .magic_unit_id = fd(2, .{ .Varint = .Simple }),
        .HBPBLGLLIEN = fd(10, .{ .SubMessage = {} }),
        .cost_data = fd(12, .{ .SubMessage = {} }),
        .NGKJPCEHMBA = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KMHIBNGAFEO = struct {
    rogue_magic_unit_info_list: ArrayList(AOGIIMKCJDJ),

    pub const _desc_table = .{
        .rogue_magic_unit_info_list = fd(9, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DMKPFGEBILH = struct {
    cost_data: ?ItemCostData = null,
    free_reforge_num: u32 = 0,
    int_reforge_num_value: i32 = 0,

    pub const _desc_table = .{
        .cost_data = fd(11, .{ .SubMessage = {} }),
        .free_reforge_num = fd(15, .{ .Varint = .Simple }),
        .int_reforge_num_value = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LFGGPNGKBCH = struct {
    int_reforge_num_value: i32 = 0,
    free_reforge_num: u32 = 0,
    IAKHMMELMFD: ArrayList(IAKHMMELMFDEntry),
    FAIDIBODMCH: ?ItemCostData = null,

    pub const _desc_table = .{
        .int_reforge_num_value = fd(6, .{ .Varint = .Simple }),
        .free_reforge_num = fd(7, .{ .Varint = .Simple }),
        .IAKHMMELMFD = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .FAIDIBODMCH = fd(5, .{ .SubMessage = {} }),
    };

    pub const IAKHMMELMFDEntry = struct {
        key: u32 = 0,
        value: ?ItemCostData = null,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KIFILCJOLCH = struct {
    scepter_id: u32 = 0,
    cost_data: ?ItemCostData = null,

    pub const _desc_table = .{
        .scepter_id = fd(2, .{ .Varint = .Simple }),
        .cost_data = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DHMFCIDJBFD = struct {
    magic_scepter_info_list: ArrayList(KIFILCJOLCH),

    pub const _desc_table = .{
        .magic_scepter_info_list = fd(8, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueWorkbenchHandleFuncCsReq = struct {
    func_id: u32 = 0,
    prop_entity_id: u32 = 0,
    workbench_content: ?RogueWorkbenchContentInfo = null,

    pub const _desc_table = .{
        .func_id = fd(6, .{ .Varint = .Simple }),
        .prop_entity_id = fd(7, .{ .Varint = .Simple }),
        .workbench_content = fd(10, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueWorkbenchHandleFuncScRsp = struct {
    retcode: u32 = 0,
    func_id: u32 = 0,
    target_func_info: ?WorkbenchFuncInfo = null,

    pub const _desc_table = .{
        .retcode = fd(6, .{ .Varint = .Simple }),
        .func_id = fd(14, .{ .Varint = .Simple }),
        .target_func_info = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueWorkbenchContentInfo = struct {
    ECOEKHPGMEA: ?ECOEKHPGMEA_union,

    pub const _ECOEKHPGMEA_case = enum {
        reforge_buff_func,
        reforge_formula_func,
        enhance_buff_func,
        compose_miracle_func,
        reforge_hex_avatar_func,
        magic_item,
        game_magic_unit,
        CEAJNLIOFHF,
        PGPAAPOPDOC,
        PMKEHGBPCNG,
    };
    pub const ECOEKHPGMEA_union = union(_ECOEKHPGMEA_case) {
        reforge_buff_func: WorkbenchReforgeBuffTargetInfo,
        reforge_formula_func: WorkbenchReforgeFormulaTargetInfo,
        enhance_buff_func: WorkbenchEnhanceBuffTargetInfo,
        compose_miracle_func: WorkbenchComposeMiracleTargetInfo,
        reforge_hex_avatar_func: WorkbenchReforgeHexAvatarTargetInfo,
        magic_item: JDOOIDBKCIM,
        game_magic_unit: GJBBLCIPBHD,
        CEAJNLIOFHF: LEHGLCELJMF,
        PGPAAPOPDOC: FHJGLOPMFNC,
        PMKEHGBPCNG: JBNCDFFPDOP,
        pub const _union_desc = .{
            .reforge_buff_func = fd(15, .{ .SubMessage = {} }),
            .reforge_formula_func = fd(10, .{ .SubMessage = {} }),
            .enhance_buff_func = fd(11, .{ .SubMessage = {} }),
            .compose_miracle_func = fd(3, .{ .SubMessage = {} }),
            .reforge_hex_avatar_func = fd(5, .{ .SubMessage = {} }),
            .magic_item = fd(7, .{ .SubMessage = {} }),
            .game_magic_unit = fd(8, .{ .SubMessage = {} }),
            .CEAJNLIOFHF = fd(2, .{ .SubMessage = {} }),
            .PGPAAPOPDOC = fd(13, .{ .SubMessage = {} }),
            .PMKEHGBPCNG = fd(14, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .ECOEKHPGMEA = fd(null, .{ .OneOf = ECOEKHPGMEA_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const WorkbenchReforgeBuffTargetInfo = struct {
    target_reforge_buff_id: u32 = 0,

    pub const _desc_table = .{
        .target_reforge_buff_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const WorkbenchReforgeFormulaTargetInfo = struct {
    target_reforge_formula_id: u32 = 0,

    pub const _desc_table = .{
        .target_reforge_formula_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const WorkbenchEnhanceBuffTargetInfo = struct {
    target_buff_id: u32 = 0,

    pub const _desc_table = .{
        .target_buff_id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const WorkbenchComposeMiracleTargetInfo = struct {
    target_compose_miracle_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .target_compose_miracle_id_list = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const WorkbenchReforgeHexAvatarTargetInfo = struct {
    target_reforge_hex_id: u32 = 0,

    pub const _desc_table = .{
        .target_reforge_hex_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JDOOIDBKCIM = struct {
    FPLJOAACDGD: u32 = 0,

    pub const _desc_table = .{
        .FPLJOAACDGD = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GJBBLCIPBHD = struct {
    CLOPKOBKHMA: ArrayList(u32),

    pub const _desc_table = .{
        .CLOPKOBKHMA = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LEHGLCELJMF = struct {
    DNKCCIBPFGK: ArrayList(u32),

    pub const _desc_table = .{
        .DNKCCIBPFGK = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FHJGLOPMFNC = struct {
    magic_unit_id: u32 = 0,

    pub const _desc_table = .{
        .magic_unit_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JBNCDFFPDOP = struct {
    scepter_id: u32 = 0,

    pub const _desc_table = .{
        .scepter_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FKBFOOEFPAE = struct {
    INFBHPGDLND: u32 = 0,
    status: RogueCollectionStatus = @enumFromInt(0),

    pub const _desc_table = .{
        .INFBHPGDLND = fd(5, .{ .Varint = .Simple }),
        .status = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AJAKDCDDAMO = struct {
    EONLMDCBNME: u32 = 0,
    status: RogueBoothStatus = @enumFromInt(0),
    INFBHPGDLND: u32 = 0,

    pub const _desc_table = .{
        .EONLMDCBNME = fd(8, .{ .Varint = .Simple }),
        .status = fd(15, .{ .Varint = .Simple }),
        .INFBHPGDLND = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueCollectionCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueCollectionScRsp = struct {
    PCPEDFLNBGA: ArrayList(FKBFOOEFPAE),
    PAHPDBIACHA: ArrayList(AJAKDCDDAMO),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .PCPEDFLNBGA = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .PAHPDBIACHA = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetRogueCollectionCsReq = struct {
    FPIPMKCAGPD: ArrayList(u32),
    LGHPHFPPJEN: ArrayList(RogueCollectionExhibitionOperateType),
    OPKMCIFFCCH: ArrayList(u32),

    pub const _desc_table = .{
        .FPIPMKCAGPD = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .LGHPHFPPJEN = fd(6, .{ .List = .{ .Varint = .Simple } }),
        .OPKMCIFFCCH = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetRogueCollectionScRsp = struct {
    retcode: u32 = 0,
    PAHPDBIACHA: ArrayList(AJAKDCDDAMO),
    PCPEDFLNBGA: ArrayList(FKBFOOEFPAE),

    pub const _desc_table = .{
        .retcode = fd(14, .{ .Varint = .Simple }),
        .PAHPDBIACHA = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .PCPEDFLNBGA = fd(12, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GBPFLAGFAIJ = struct {
    status: RogueExhibitionStatus = @enumFromInt(0),
    KBDFBGINNBJ: u32 = 0,

    pub const _desc_table = .{
        .status = fd(6, .{ .Varint = .Simple }),
        .KBDFBGINNBJ = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DMODINLGCCB = struct {
    KBDFBGINNBJ: u32 = 0,
    EONLMDCBNME: u32 = 0,
    status: RogueBoothStatus = @enumFromInt(0),

    pub const _desc_table = .{
        .KBDFBGINNBJ = fd(8, .{ .Varint = .Simple }),
        .EONLMDCBNME = fd(6, .{ .Varint = .Simple }),
        .status = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueExhibitionCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueExhibitionScRsp = struct {
    PJPJOKKFNIM: ArrayList(DMODINLGCCB),
    retcode: u32 = 0,
    MKCEFANCAIG: ArrayList(GBPFLAGFAIJ),

    pub const _desc_table = .{
        .PJPJOKKFNIM = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(10, .{ .Varint = .Simple }),
        .MKCEFANCAIG = fd(3, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetRogueExhibitionCsReq = struct {
    LDIFBJDGFFE: ArrayList(u32),
    ANEKPINLKFJ: ArrayList(RogueCollectionExhibitionOperateType),
    HEEPOEOLILO: ArrayList(u32),

    pub const _desc_table = .{
        .LDIFBJDGFFE = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
        .ANEKPINLKFJ = fd(7, .{ .List = .{ .Varint = .Simple } }),
        .HEEPOEOLILO = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetRogueExhibitionScRsp = struct {
    retcode: u32 = 0,
    MKCEFANCAIG: ArrayList(GBPFLAGFAIJ),
    PJPJOKKFNIM: ArrayList(DMODINLGCCB),

    pub const _desc_table = .{
        .retcode = fd(2, .{ .Varint = .Simple }),
        .MKCEFANCAIG = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .PJPJOKKFNIM = fd(3, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EHKEGMCGCMH = struct {
    miracle_id: u32 = 0,

    pub const _desc_table = .{
        .miracle_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PNDNJBBDHDP = struct {
    BIMBFJGNPFB: u32 = 0,
    level: u32 = 0,

    pub const _desc_table = .{
        .BIMBFJGNPFB = fd(2, .{ .Varint = .Simple }),
        .level = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DOPJLBMMPHB = struct {
    BIMBFJGNPFB: u32 = 0,
    KDGBJGOPEHI: bool = false,
    FHDABDHIJJB: ?FHDABDHIJJB_union,

    pub const _FHDABDHIJJB_case = enum {
        DJNABIOEENF,
        IMCAJAOGCLG,
    };
    pub const FHDABDHIJJB_union = union(_FHDABDHIJJB_case) {
        DJNABIOEENF: EHKEGMCGCMH,
        IMCAJAOGCLG: PNDNJBBDHDP,
        pub const _union_desc = .{
            .DJNABIOEENF = fd(13, .{ .SubMessage = {} }),
            .IMCAJAOGCLG = fd(12, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .BIMBFJGNPFB = fd(7, .{ .Varint = .Simple }),
        .KDGBJGOPEHI = fd(9, .{ .Varint = .Simple }),
        .FHDABDHIJJB = fd(null, .{ .OneOf = FHDABDHIJJB_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LOPJEJMOFBG = struct {
    ENBIJBFBNEC: bool = false,
    BBPAPDDENHB: ArrayList(DOPJLBMMPHB),
    group_id: u32 = 0,

    pub const _desc_table = .{
        .ENBIJBFBNEC = fd(11, .{ .Varint = .Simple }),
        .BBPAPDDENHB = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .group_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueGambleInfo = struct {
    LOFFEOHFPFL: bool = false,
    AKKONOBBJNK: u32 = 0,
    cur_times: u32 = 0,
    KEDCOHKKNAK: ?ItemCostData = null,
    HFBKBHJIEGD: u32 = 0,
    DDJDDBKNPFF: u32 = 0,
    maze_group_list: ArrayList(LOPJEJMOFBG),

    pub const _desc_table = .{
        .LOFFEOHFPFL = fd(7, .{ .Varint = .Simple }),
        .AKKONOBBJNK = fd(13, .{ .Varint = .Simple }),
        .cur_times = fd(12, .{ .Varint = .Simple }),
        .KEDCOHKKNAK = fd(4, .{ .SubMessage = {} }),
        .HFBKBHJIEGD = fd(11, .{ .Varint = .Simple }),
        .DDJDDBKNPFF = fd(2, .{ .Varint = .Simple }),
        .maze_group_list = fd(15, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueGetGambleInfoCsReq = struct {
    prop_entity_id: u32 = 0,

    pub const _desc_table = .{
        .prop_entity_id = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueGetGambleInfoScRsp = struct {
    gamble_info: ?RogueGambleInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .gamble_info = fd(14, .{ .SubMessage = {} }),
        .retcode = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueDoGambleCsReq = struct {
    prop_entity_id: u32 = 0,

    pub const _desc_table = .{
        .prop_entity_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueDoGambleScRsp = struct {
    retcode: u32 = 0,
    gamble_info: ?RogueGambleInfo = null,
    CFBGLFOJODA: u32 = 0,
    JPKLMPPOGDH: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(4, .{ .Varint = .Simple }),
        .gamble_info = fd(5, .{ .SubMessage = {} }),
        .CFBGLFOJODA = fd(9, .{ .Varint = .Simple }),
        .JPKLMPPOGDH = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueDebugReplaySaveScNotify = struct {
    uid: u32 = 0,
    DFPFALBJHJH: ManagedString = .Empty,
    JDEDCKKACGO: ManagedString = .Empty,
    NEPGEEJCLAH: ManagedString = .Empty,
    KFAMACKFHPM: ManagedString = .Empty,
    IJPPKNKNLNL: ManagedString = .Empty,
    JHJGFDMKIHG: ManagedString = .Empty,

    pub const _desc_table = .{
        .uid = fd(6, .{ .Varint = .Simple }),
        .DFPFALBJHJH = fd(15, .String),
        .JDEDCKKACGO = fd(2, .String),
        .NEPGEEJCLAH = fd(9, .String),
        .KFAMACKFHPM = fd(3, .String),
        .IJPPKNKNLNL = fd(10, .String),
        .JHJGFDMKIHG = fd(1, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JNFELCKIOCM = struct {
    trial_avatar_id_list: ArrayList(u32),
    FFKPEGNBHOD: u32 = 0,
    chess_rogue_buff_info: ?ChessRogueBuff = null,
    map_id: u32 = 0,
    base_avatar_id_list: ArrayList(u32),
    status: RogueStatus = @enumFromInt(0),
    chess_rogue_miracle_info: ?ChessRogueMiracle = null,
    GMPIIAEGGEK: u32 = 0,
    KJGIMHFKGBN: u32 = 0,

    pub const _desc_table = .{
        .trial_avatar_id_list = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .FFKPEGNBHOD = fd(2, .{ .Varint = .Simple }),
        .chess_rogue_buff_info = fd(9, .{ .SubMessage = {} }),
        .map_id = fd(12, .{ .Varint = .Simple }),
        .base_avatar_id_list = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .status = fd(14, .{ .Varint = .Simple }),
        .chess_rogue_miracle_info = fd(13, .{ .SubMessage = {} }),
        .GMPIIAEGGEK = fd(3, .{ .Varint = .Simple }),
        .KJGIMHFKGBN = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OENDAFIAECG = struct {
    HDLLMDNLOKP: u32 = 0,
    KKPKALJMAMF: u32 = 0,
    JPKJKIMNIGG: u32 = 0,
    HDJCJBBKNAF: u32 = 0,
    BPEKCEJPOFE: u32 = 0,
    AEIEOJGCMMO: u32 = 0,
    battle_id: u32 = 0,
    is_rotate: bool = false,

    pub const _desc_table = .{
        .HDLLMDNLOKP = fd(13, .{ .Varint = .Simple }),
        .KKPKALJMAMF = fd(14, .{ .Varint = .Simple }),
        .JPKJKIMNIGG = fd(11, .{ .Varint = .Simple }),
        .HDJCJBBKNAF = fd(2, .{ .Varint = .Simple }),
        .BPEKCEJPOFE = fd(5, .{ .Varint = .Simple }),
        .AEIEOJGCMMO = fd(8, .{ .Varint = .Simple }),
        .battle_id = fd(9, .{ .Varint = .Simple }),
        .is_rotate = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PEODOCNCLNP = struct {
    panel_id: u32 = 0,
    AELOIPGFODB: ?JNFELCKIOCM = null,
    BOPAANGKOGH: ?OENDAFIAECG = null,
    area_id: u32 = 0,

    pub const _desc_table = .{
        .panel_id = fd(6, .{ .Varint = .Simple }),
        .AELOIPGFODB = fd(15, .{ .SubMessage = {} }),
        .BOPAANGKOGH = fd(12, .{ .SubMessage = {} }),
        .area_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueEndlessActivityDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRogueEndlessActivityDataScRsp = struct {
    retcode: u32 = 0,
    ANAMEOBFKGN: u32 = 0,
    JCHCHLMDPEN: u32 = 0,
    EAHBIKFALLF: ArrayList(u32),
    data: ArrayList(PEODOCNCLNP),

    pub const _desc_table = .{
        .retcode = fd(14, .{ .Varint = .Simple }),
        .ANAMEOBFKGN = fd(1, .{ .Varint = .Simple }),
        .JCHCHLMDPEN = fd(8, .{ .Varint = .Simple }),
        .EAHBIKFALLF = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
        .data = fd(4, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BBNHEMCKDIN = struct {
    avatar_type: AvatarType = @enumFromInt(0),
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .avatar_type = fd(8, .{ .Varint = .Simple }),
        .avatar_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterRogueEndlessActivityStageCsReq = struct {
    avatar_list: ArrayList(BBNHEMCKDIN),
    MGIGDCMLEOG: u32 = 0,

    pub const _desc_table = .{
        .avatar_list = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .MGIGDCMLEOG = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterRogueEndlessActivityStageScRsp = struct {
    BOPAANGKOGH: ?OENDAFIAECG = null,
    battle_info: ?SceneBattleInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .BOPAANGKOGH = fd(7, .{ .SubMessage = {} }),
        .battle_info = fd(4, .{ .SubMessage = {} }),
        .retcode = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueEndlessActivityBattleEndScNotify = struct {
    BOPAANGKOGH: ?OENDAFIAECG = null,

    pub const _desc_table = .{
        .BOPAANGKOGH = fd(4, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeRogueEndlessActivityPointRewardCsReq = struct {
    MDHJKKBNMCF: bool = false,
    level: u32 = 0,

    pub const _desc_table = .{
        .MDHJKKBNMCF = fd(9, .{ .Varint = .Simple }),
        .level = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeRogueEndlessActivityPointRewardScRsp = struct {
    MDHJKKBNMCF: bool = false,
    JCHCHLMDPEN: u32 = 0,
    retcode: u32 = 0,
    level: u32 = 0,
    reward: ?ItemList = null,
    EAHBIKFALLF: ArrayList(u32),

    pub const _desc_table = .{
        .MDHJKKBNMCF = fd(8, .{ .Varint = .Simple }),
        .JCHCHLMDPEN = fd(4, .{ .Varint = .Simple }),
        .retcode = fd(14, .{ .Varint = .Simple }),
        .level = fd(10, .{ .Varint = .Simple }),
        .reward = fd(12, .{ .SubMessage = {} }),
        .EAHBIKFALLF = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeRogueEndlessActivityAllBonusRewardCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeRogueEndlessActivityAllBonusRewardScRsp = struct {
    reward: ?ItemList = null,
    retcode: u32 = 0,
    EAHBIKFALLF: ArrayList(u32),
    JCHCHLMDPEN: u32 = 0,

    pub const _desc_table = .{
        .reward = fd(11, .{ .SubMessage = {} }),
        .retcode = fd(3, .{ .Varint = .Simple }),
        .EAHBIKFALLF = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
        .JCHCHLMDPEN = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicCurSceneInfo = struct {
    rotate_info: ?RogueMapRotateInfo = null,
    scene: ?SceneInfo = null,
    lineup: ?LineupInfo = null,

    pub const _desc_table = .{
        .rotate_info = fd(6, .{ .SubMessage = {} }),
        .scene = fd(4, .{ .SubMessage = {} }),
        .lineup = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicLayerInfo = struct {
    tourn_room_list: ArrayList(RogueMagicRoomInfo),
    level_index: u32 = 0,
    status: RogueMagicLayerStatus = @enumFromInt(0),
    cur_room_index: u32 = 0,
    layer_id: u32 = 0,

    pub const _desc_table = .{
        .tourn_room_list = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .level_index = fd(13, .{ .Varint = .Simple }),
        .status = fd(6, .{ .Varint = .Simple }),
        .cur_room_index = fd(10, .{ .Varint = .Simple }),
        .layer_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicRoomInfo = struct {
    room_index: u32 = 0,
    EIPNNEJNNKJ: u32 = 0,
    status: RogueMagicRoomStatus = @enumFromInt(0),
    room_id: u32 = 0,

    pub const _desc_table = .{
        .room_index = fd(14, .{ .Varint = .Simple }),
        .EIPNNEJNNKJ = fd(9, .{ .Varint = .Simple }),
        .status = fd(11, .{ .Varint = .Simple }),
        .room_id = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicGameLevelInfo = struct {
    reason: RogueMagicSettleReason = @enumFromInt(0),
    cur_level_index: u32 = 0,
    level_info_list: ArrayList(RogueMagicLayerInfo),
    ACGBELAIGBO: u32 = 0,
    extra_round_limit: u32 = 0,
    status: RogueMagicLevelStatus = @enumFromInt(0),

    pub const _desc_table = .{
        .reason = fd(10, .{ .Varint = .Simple }),
        .cur_level_index = fd(14, .{ .Varint = .Simple }),
        .level_info_list = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .ACGBELAIGBO = fd(9, .{ .Varint = .Simple }),
        .extra_round_limit = fd(4, .{ .Varint = .Simple }),
        .status = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicGameItemInfo = struct {
    magic_scepter_info_list: ArrayList(RogueMagicGameScepterInfo),
    rogue_magic_unit_info_list: ArrayList(RogueMagicGameUnitInfo),
    game_style_type: u32 = 0,
    JFCNAJMIHCI: bool = false,

    pub const _desc_table = .{
        .magic_scepter_info_list = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .rogue_magic_unit_info_list = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .game_style_type = fd(5, .{ .Varint = .Simple }),
        .JFCNAJMIHCI = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicGameDifficultyInfo = struct {
    difficulty_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .difficulty_id_list = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KLOHNFGBNPH = struct {
    LAEEJIIKMPI: u32 = 0,

    pub const _desc_table = .{
        .LAEEJIIKMPI = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicStartCsReq = struct {
    base_avatar_id_list: ArrayList(u32),
    area_id: u32 = 0,
    select_style_type: u32 = 0,
    start_difficulty_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .base_avatar_id_list = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
        .area_id = fd(13, .{ .Varint = .Simple }),
        .select_style_type = fd(10, .{ .Varint = .Simple }),
        .start_difficulty_id_list = fd(11, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicCurInfo = struct {
    lineup: ?RogueTournLineupInfo = null,
    miracle_info: ?ChessRogueMiracleInfo = null,
    item_value: ?RogueGameItemValue = null,
    CACGEKAANKL: ?KLOHNFGBNPH = null,
    game_difficulty_info: ?RogueMagicGameDifficultyInfo = null,
    level: ?RogueMagicGameLevelInfo = null,
    basic_info: ?RogueTournCurAreaInfo = null,
    magic_item: ?RogueMagicGameItemInfo = null,

    pub const _desc_table = .{
        .lineup = fd(6, .{ .SubMessage = {} }),
        .miracle_info = fd(7, .{ .SubMessage = {} }),
        .item_value = fd(11, .{ .SubMessage = {} }),
        .CACGEKAANKL = fd(8, .{ .SubMessage = {} }),
        .game_difficulty_info = fd(4, .{ .SubMessage = {} }),
        .level = fd(2, .{ .SubMessage = {} }),
        .basic_info = fd(1, .{ .SubMessage = {} }),
        .magic_item = fd(9, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicStartScRsp = struct {
    retcode: u32 = 0,
    rogue_tourn_cur_info: ?RogueMagicCurInfo = null,
    rogue_tourn_cur_scene_info: ?RogueMagicCurSceneInfo = null,

    pub const _desc_table = .{
        .retcode = fd(2, .{ .Varint = .Simple }),
        .rogue_tourn_cur_info = fd(12, .{ .SubMessage = {} }),
        .rogue_tourn_cur_scene_info = fd(5, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicEnterCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicEnterScRsp = struct {
    rogue_tourn_cur_scene_info: ?RogueMagicCurSceneInfo = null,
    retcode: u32 = 0,
    rogue_tourn_cur_info: ?RogueMagicCurInfo = null,

    pub const _desc_table = .{
        .rogue_tourn_cur_scene_info = fd(15, .{ .SubMessage = {} }),
        .retcode = fd(13, .{ .Varint = .Simple }),
        .rogue_tourn_cur_info = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicLeaveCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicLeaveScRsp = struct {
    retcode: u32 = 0,
    rogue_tourn_cur_scene_info: ?RogueMagicCurSceneInfo = null,

    pub const _desc_table = .{
        .retcode = fd(3, .{ .Varint = .Simple }),
        .rogue_tourn_cur_scene_info = fd(7, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicEnterRoomCsReq = struct {
    cur_room_index: u32 = 0,
    FLLABLFBEIK: u32 = 0,

    pub const _desc_table = .{
        .cur_room_index = fd(10, .{ .Varint = .Simple }),
        .FLLABLFBEIK = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicEnterRoomScRsp = struct {
    retcode: u32 = 0,
    rogue_tourn_cur_scene_info: ?RogueMagicCurSceneInfo = null,

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
        .rogue_tourn_cur_scene_info = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicEnterLayerCsReq = struct {
    cur_level_index: u32 = 0,
    FLLABLFBEIK: u32 = 0,

    pub const _desc_table = .{
        .cur_level_index = fd(3, .{ .Varint = .Simple }),
        .FLLABLFBEIK = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicEnterLayerScRsp = struct {
    rogue_tourn_cur_scene_info: ?RogueMagicCurSceneInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .rogue_tourn_cur_scene_info = fd(13, .{ .SubMessage = {} }),
        .retcode = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicLevelInfoUpdateScNotify = struct {
    level_info_list: ArrayList(RogueMagicLayerInfo),
    status: RogueMagicLevelStatus = @enumFromInt(0),
    reason: RogueMagicSettleReason = @enumFromInt(0),
    ACGBELAIGBO: u32 = 0,
    cur_level_index: u32 = 0,
    extra_round_limit: u32 = 0,

    pub const _desc_table = .{
        .level_info_list = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .status = fd(10, .{ .Varint = .Simple }),
        .reason = fd(2, .{ .Varint = .Simple }),
        .ACGBELAIGBO = fd(13, .{ .Varint = .Simple }),
        .cur_level_index = fd(7, .{ .Varint = .Simple }),
        .extra_round_limit = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicAreaUpdateScNotify = struct {
    rogue_tourn_area_info: ArrayList(RogueMagicAreaInfo),

    pub const _desc_table = .{
        .rogue_tourn_area_info = fd(8, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CACLANLOOLK = struct {
    FBJHGPDKBGM: bool = false,
    EFKEGDOAJBH: u32 = 0,

    pub const _desc_table = .{
        .FBJHGPDKBGM = fd(14, .{ .Varint = .Simple }),
        .EFKEGDOAJBH = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FJJDKDNDFDJ = struct {
    KKNGHGBHCGG: u32 = 0,
    FBJHGPDKBGM: bool = false,

    pub const _desc_table = .{
        .KKNGHGBHCGG = fd(13, .{ .Varint = .Simple }),
        .FBJHGPDKBGM = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OGNBIGKHHBM = struct {
    BJLEMFMCODD: ?FJJDKDNDFDJ = null,
    rogue_tourn_cur_info: ?RogueMagicCurInfo = null,
    GCGLNKFDKKN: ?CACLANLOOLK = null,
    rogue_lineup_info: ?LineupInfo = null,

    pub const _desc_table = .{
        .BJLEMFMCODD = fd(12, .{ .SubMessage = {} }),
        .rogue_tourn_cur_info = fd(15, .{ .SubMessage = {} }),
        .GCGLNKFDKKN = fd(4, .{ .SubMessage = {} }),
        .rogue_lineup_info = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HCJGPMDGBJO = struct {
    EPCKCOOKCLJ: ArrayList(RogueMagicGameUnit),
    KLMGAEBEAGK: ArrayList(RogueMagicScepter),
    MNKCJFELCNG: ArrayList(u32),
    BLBFDCGCEDA: ArrayList(u32),

    pub const _desc_table = .{
        .EPCKCOOKCLJ = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .KLMGAEBEAGK = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .MNKCJFELCNG = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        .BLBFDCGCEDA = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicBattleFailSettleInfoScNotify = struct {
    rogue_tourn_cur_scene_info: ?RogueMagicCurSceneInfo = null,
    tourn_finish_info: ?OGNBIGKHHBM = null,

    pub const _desc_table = .{
        .rogue_tourn_cur_scene_info = fd(1, .{ .SubMessage = {} }),
        .tourn_finish_info = fd(10, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicSettleCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicSettleScRsp = struct {
    rogue_tourn_cur_scene_info: ?RogueMagicCurSceneInfo = null,
    tourn_finish_info: ?OGNBIGKHHBM = null,
    MGCFOGLKMCH: ?HCJGPMDGBJO = null,
    GFONFDBFBNA: ?ItemList = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .rogue_tourn_cur_scene_info = fd(12, .{ .SubMessage = {} }),
        .tourn_finish_info = fd(8, .{ .SubMessage = {} }),
        .MGCFOGLKMCH = fd(10, .{ .SubMessage = {} }),
        .GFONFDBFBNA = fd(13, .{ .SubMessage = {} }),
        .retcode = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicReviveCostUpdateScNotify = struct {
    rogue_revive_cost: ?ItemCostData = null,

    pub const _desc_table = .{
        .rogue_revive_cost = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicReviveAvatarCsReq = struct {
    base_avatar_id_list: ArrayList(u32),
    interacted_prop_entity_id: u32 = 0,

    pub const _desc_table = .{
        .base_avatar_id_list = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .interacted_prop_entity_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicReviveAvatarScRsp = struct {
    rogue_revive_cost: ?ItemCostData = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .rogue_revive_cost = fd(4, .{ .SubMessage = {} }),
        .retcode = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicQueryCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OLFGBAMEFJI = struct {
    OFBIAHGOPCM: u32 = 0,
    NNNKJKCLBLO: u32 = 0,
    HMKGBMIDGOP: u32 = 0,
    NJIEMPGEEOG: u32 = 0,
    rogue_magic_unit_info_list: ArrayList(RogueMagicGameUnitInfo),
    BLFDFMCFFIM: u32 = 0,
    magic_scepter_info_list: ArrayList(RogueMagicGameScepterInfo),
    IPODNBLJPOL: u32 = 0,
    FONNGHLGJFA: u32 = 0,
    extra_round_limit: u32 = 0,
    JLHFOJODOKG: ArrayList(u32),
    avatar_id_list: ArrayList(u32),
    game_style_type: u32 = 0,

    pub const _desc_table = .{
        .OFBIAHGOPCM = fd(13, .{ .Varint = .Simple }),
        .NNNKJKCLBLO = fd(14, .{ .Varint = .Simple }),
        .HMKGBMIDGOP = fd(5, .{ .Varint = .Simple }),
        .NJIEMPGEEOG = fd(9, .{ .Varint = .Simple }),
        .rogue_magic_unit_info_list = fd(1233, .{ .List = .{ .SubMessage = {} } }),
        .BLFDFMCFFIM = fd(2, .{ .Varint = .Simple }),
        .magic_scepter_info_list = fd(1106, .{ .List = .{ .SubMessage = {} } }),
        .IPODNBLJPOL = fd(11, .{ .Varint = .Simple }),
        .FONNGHLGJFA = fd(12, .{ .Varint = .Simple }),
        .extra_round_limit = fd(8, .{ .Varint = .Simple }),
        .JLHFOJODOKG = fd(816, .{ .PackedList = .{ .Varint = .Simple } }),
        .avatar_id_list = fd(1688, .{ .PackedList = .{ .Varint = .Simple } }),
        .game_style_type = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KOIICMIEAEF = struct {
    DPPLCDDHBGE: ArrayList(u32),

    pub const _desc_table = .{
        .DPPLCDDHBGE = fd(1520, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicAreaInfo = struct {
    completed: bool = false,
    is_unlocked: bool = false,
    NPBNMMKHKOP: ArrayList(u32),
    IFPOILOPFAG: u32 = 0,
    is_taken_reward: bool = false,
    record_info: ?OLFGBAMEFJI = null,
    CGAIJCCLKBH: ?KOIICMIEAEF = null,
    area_id: u32 = 0,

    pub const _desc_table = .{
        .completed = fd(2, .{ .Varint = .Simple }),
        .is_unlocked = fd(11, .{ .Varint = .Simple }),
        .NPBNMMKHKOP = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
        .IFPOILOPFAG = fd(7, .{ .Varint = .Simple }),
        .is_taken_reward = fd(3, .{ .Varint = .Simple }),
        .record_info = fd(6, .{ .SubMessage = {} }),
        .CGAIJCCLKBH = fd(14, .{ .SubMessage = {} }),
        .area_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicDifficultyInfo = struct {
    difficulty_id: u32 = 0,
    is_unlocked: bool = false,

    pub const _desc_table = .{
        .difficulty_id = fd(12, .{ .Varint = .Simple }),
        .is_unlocked = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicStoryInfo = struct {
    finished_magic_story_list: ArrayList(u32),

    pub const _desc_table = .{
        .finished_magic_story_list = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicGetInfo = struct {
    story_info: ?RogueMagicStoryInfo = null,
    rogue_magic_scepter_info_list: ArrayList(OOCEOILKCFI),
    rogue_tourn_area_info: ArrayList(RogueMagicAreaInfo),
    rogue_tourn_difficulty_info: ArrayList(RogueMagicDifficultyInfo),
    rogue_magic_unit_info_list: ArrayList(RogueMagicUnitInfo),
    KGLBNDEAPHF: ArrayList(u32),
    rogue_magic_talent_info: ?RogueMagicTalentInfo = null,

    pub const _desc_table = .{
        .story_info = fd(1, .{ .SubMessage = {} }),
        .rogue_magic_scepter_info_list = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .rogue_tourn_area_info = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .rogue_tourn_difficulty_info = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .rogue_magic_unit_info_list = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .KGLBNDEAPHF = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        .rogue_magic_talent_info = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicQueryScRsp = struct {
    rogue_tourn_cur_info: ?RogueMagicCurInfo = null,
    retcode: u32 = 0,
    rogue_get_info: ?RogueMagicGetInfo = null,

    pub const _desc_table = .{
        .rogue_tourn_cur_info = fd(5, .{ .SubMessage = {} }),
        .retcode = fd(14, .{ .Varint = .Simple }),
        .rogue_get_info = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicScepterDressInUnitCsReq = struct {
    scepter_id: u32 = 0,
    dress_magic_unit_unique_id: u32 = 0,
    dice_slot_id: u32 = 0,

    pub const _desc_table = .{
        .scepter_id = fd(1, .{ .Varint = .Simple }),
        .dress_magic_unit_unique_id = fd(5, .{ .Varint = .Simple }),
        .dice_slot_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicScepterDressInUnitScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicAutoDressInUnitCsReq = struct {
    BHKANKFPDCP: ArrayList(u32),

    pub const _desc_table = .{
        .BHKANKFPDCP = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicAutoDressInUnitScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicSetAutoDressInMagicUnitCsReq = struct {
    KHDHAHNNALM: bool = false,

    pub const _desc_table = .{
        .KHDHAHNNALM = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicSetAutoDressInMagicUnitScRsp = struct {
    KHDHAHNNALM: bool = false,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .KHDHAHNNALM = fd(7, .{ .Varint = .Simple }),
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicAutoDressInMagicUnitChangeScNotify = struct {
    KHDHAHNNALM: bool = false,

    pub const _desc_table = .{
        .KHDHAHNNALM = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicScepterTakeOffUnitCsReq = struct {
    scepter_id: u32 = 0,
    BHKANKFPDCP: ArrayList(u32),

    pub const _desc_table = .{
        .scepter_id = fd(3, .{ .Varint = .Simple }),
        .BHKANKFPDCP = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicScepterTakeOffUnitScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicUnitComposeCsReq = struct {
    BHKANKFPDCP: ArrayList(u32),

    pub const _desc_table = .{
        .BHKANKFPDCP = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicUnitComposeScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicUnitReforgeCsReq = struct {
    BHKANKFPDCP: ArrayList(u32),

    pub const _desc_table = .{
        .BHKANKFPDCP = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicUnitReforgeScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicTalentInfo = struct {
    CMADMLIALJL: u32 = 0,
    talent_info_list: ?RogueTalentInfoList = null,

    pub const _desc_table = .{
        .CMADMLIALJL = fd(9, .{ .Varint = .Simple }),
        .talent_info_list = fd(11, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicGetTalentInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicGetTalentInfoScRsp = struct {
    retcode: u32 = 0,
    rogue_magic_talent_info: ?RogueMagicTalentInfo = null,

    pub const _desc_table = .{
        .retcode = fd(2, .{ .Varint = .Simple }),
        .rogue_magic_talent_info = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicEnableTalentCsReq = struct {
    talent_id: u32 = 0,

    pub const _desc_table = .{
        .talent_id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicEnableTalentScRsp = struct {
    retcode: u32 = 0,
    rogue_magic_talent_info: ?RogueMagicTalentInfo = null,

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
        .rogue_magic_talent_info = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicGetMiscRealTimeDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicGetMiscRealTimeDataScRsp = struct {
    retcode: u32 = 0,
    BJLEMFMCODD: ?FJJDKDNDFDJ = null,
    GCGLNKFDKKN: ?CACLANLOOLK = null,

    pub const _desc_table = .{
        .retcode = fd(2, .{ .Varint = .Simple }),
        .BJLEMFMCODD = fd(6, .{ .SubMessage = {} }),
        .GCGLNKFDKKN = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicStoryInfoUpdateScNotify = struct {
    MNBCCBABCHA: u32 = 0,

    pub const _desc_table = .{
        .MNBCCBABCHA = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EDDHMIGFDJI = struct {
    select_cell_id: u32 = 0,
    MBGKCKLDHIB: u32 = 0,
    confirm: bool = false,

    pub const _desc_table = .{
        .select_cell_id = fd(1, .{ .Varint = .Simple }),
        .MBGKCKLDHIB = fd(5, .{ .Varint = .Simple }),
        .confirm = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FOIACPFKDHK = struct {
    ONNJGDJNFLG: ArrayList(u32),
    MBGKCKLDHIB: u32 = 0,
    confirm: bool = false,
    select_cell_id: u32 = 0,

    pub const _desc_table = .{
        .ONNJGDJNFLG = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
        .MBGKCKLDHIB = fd(5, .{ .Varint = .Simple }),
        .confirm = fd(10, .{ .Varint = .Simple }),
        .select_cell_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const POGCNJMNGPI = struct {
    select_cell_id: u32 = 0,
    confirm: bool = false,
    ONNJGDJNFLG: ArrayList(u32),

    pub const _desc_table = .{
        .select_cell_id = fd(3, .{ .Varint = .Simple }),
        .confirm = fd(15, .{ .Varint = .Simple }),
        .ONNJGDJNFLG = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AINBLBBFDBJ = struct {
    select_cell_id: u32 = 0,
    NHGOJDODGMA: ArrayList(u32),
    NIJAGOAJPEM: u32 = 0,
    confirm: bool = false,

    pub const _desc_table = .{
        .select_cell_id = fd(14, .{ .Varint = .Simple }),
        .NHGOJDODGMA = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
        .NIJAGOAJPEM = fd(12, .{ .Varint = .Simple }),
        .confirm = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AJEEIAKEMIP = struct {
    CEHFIILMJKM: u32 = 0,

    pub const _desc_table = .{
        .CEHFIILMJKM = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KHMJBJLOBPG = struct {
    CPOCNGEKIIB: u32 = 0,

    pub const _desc_table = .{
        .CPOCNGEKIIB = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GFGDODHMBPK = struct {
    KOKPCEAMABC: u32 = 0,

    pub const _desc_table = .{
        .KOKPCEAMABC = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NPDIPKHDCNF = struct {
    NHGOJDODGMA: ArrayList(u32),
    select_cell_id: u32 = 0,
    confirm: bool = false,
    block_type: u32 = 0,

    pub const _desc_table = .{
        .NHGOJDODGMA = fd(11, .{ .PackedList = .{ .Varint = .Simple } }),
        .select_cell_id = fd(13, .{ .Varint = .Simple }),
        .confirm = fd(3, .{ .Varint = .Simple }),
        .block_type = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EGALAGNAEFB = struct {
    OLGLJHECDOF: u32 = 0,
    GPDEIIIOIPN: u32 = 0,
    GCLEBGDDIIP: u32 = 0,

    pub const _desc_table = .{
        .OLGLJHECDOF = fd(3, .{ .Varint = .Simple }),
        .GPDEIIIOIPN = fd(11, .{ .Varint = .Simple }),
        .GCLEBGDDIIP = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NDGLJKNKEFK = struct {
    maze_buff_id: u32 = 0,

    pub const _desc_table = .{
        .maze_buff_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EGFDAJDIHNJ = struct {
    item_id: u32 = 0,
    item_count: u32 = 0,

    pub const _desc_table = .{
        .item_id = fd(3, .{ .Varint = .Simple }),
        .item_count = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PNIKOFBIMJL = struct {
    num: u32 = 0,
    EOAEFBKNFFE: u32 = 0,
    NEJDMEGNFGK: u32 = 0,

    pub const _desc_table = .{
        .num = fd(11, .{ .Varint = .Simple }),
        .EOAEFBKNFFE = fd(13, .{ .Varint = .Simple }),
        .NEJDMEGNFGK = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JJDKOEEHBJO = struct {
    num: u32 = 0,
    OOOFGDBLDCE: u32 = 0,

    pub const _desc_table = .{
        .num = fd(3, .{ .Varint = .Simple }),
        .OOOFGDBLDCE = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OKGMDMJHCMK = struct {
    CEHFIILMJKM: u32 = 0,

    pub const _desc_table = .{
        .CEHFIILMJKM = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CFKBHPNBCNB = struct {
    MBGKCKLDHIB: u32 = 0,

    pub const _desc_table = .{
        .MBGKCKLDHIB = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BBBEOEOIFJK = struct {
    confirm: bool = false,
    select_cell_id: u32 = 0,
    ONNJGDJNFLG: ArrayList(u32),

    pub const _desc_table = .{
        .confirm = fd(11, .{ .Varint = .Simple }),
        .select_cell_id = fd(15, .{ .Varint = .Simple }),
        .ONNJGDJNFLG = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AHPNAPGPJEG = struct {
    maze_buff_id: u32 = 0,
    AMOJFMFEOGE: u32 = 0,

    pub const _desc_table = .{
        .maze_buff_id = fd(9, .{ .Varint = .Simple }),
        .AMOJFMFEOGE = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueModifierContent = struct {
    content_modifier_effect_id: u32 = 0,
    AFFJHMJDIBN: u32 = 0,
    modifier_content_type: RogueModifierContentType = @enumFromInt(0),

    pub const _desc_table = .{
        .content_modifier_effect_id = fd(5, .{ .Varint = .Simple }),
        .AFFJHMJDIBN = fd(7, .{ .Varint = .Simple }),
        .modifier_content_type = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChessRogueModifierInfo = struct {
    confirm: bool = false,
    select_cell_id: u32 = 0,
    modifier_effect_cell_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .confirm = fd(5, .{ .Varint = .Simple }),
        .select_cell_id = fd(10, .{ .Varint = .Simple }),
        .modifier_effect_cell_id_list = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MDBJBIEKKEE = struct {
    LIPAPOMHMCE: u32 = 0,

    pub const _desc_table = .{
        .LIPAPOMHMCE = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BLCPNBIKCLP = struct {
    count: u32 = 0,

    pub const _desc_table = .{
        .count = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueModifier = struct {
    modifier_content: ?RogueModifierContent = null,
    modifier_id: u64 = 0,
    modifier_source_type: RogueModifierSourceType = @enumFromInt(0),
    modifier_info: ?ChessRogueModifierInfo = null,

    pub const _desc_table = .{
        .modifier_content = fd(7, .{ .SubMessage = {} }),
        .modifier_id = fd(14, .{ .Varint = .Simple }),
        .modifier_source_type = fd(3, .{ .Varint = .Simple }),
        .modifier_info = fd(1772, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EENDHPKPFLP = struct {
    MEBJCLENPIO: ArrayList(RogueModifier),

    pub const _desc_table = .{
        .MEBJCLENPIO = fd(15, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueModifierAddNotify = struct {
    modifier: ?RogueModifier = null,

    pub const _desc_table = .{
        .modifier = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueModifierSelectCellCsReq = struct {
    cell_id: u32 = 0,

    pub const _desc_table = .{
        .cell_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueModifierSelectCellScRsp = struct {
    retcode: u32 = 0,
    cell_id: u32 = 0,
    JDIJKEGCIBP: ?ItemList = null,

    pub const _desc_table = .{
        .retcode = fd(3, .{ .Varint = .Simple }),
        .cell_id = fd(9, .{ .Varint = .Simple }),
        .JDIJKEGCIBP = fd(7, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueModifierUpdateNotify = struct {
    modifier: ?RogueModifier = null,

    pub const _desc_table = .{
        .modifier = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueModifierDelNotify = struct {
    modifier_id: u64 = 0,

    pub const _desc_table = .{
        .modifier_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueModifierStageStartNotify = struct {
    modifier_source_type: RogueModifierSourceType = @enumFromInt(0),

    pub const _desc_table = .{
        .modifier_source_type = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournCurSceneInfo = struct {
    scene: ?SceneInfo = null,
    rotate_info: ?RogueMapRotateInfo = null,
    lineup: ?LineupInfo = null,

    pub const _desc_table = .{
        .scene = fd(3, .{ .SubMessage = {} }),
        .rotate_info = fd(6, .{ .SubMessage = {} }),
        .lineup = fd(15, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournCurInfo = struct {
    IKOBKINKHCF: ?RogueTournCurAreaInfo = null,
    rogue_tourn_cur_game_info: ?RogueTournCurGameInfo = null,

    pub const _desc_table = .{
        .IKOBKINKHCF = fd(1, .{ .SubMessage = {} }),
        .rogue_tourn_cur_game_info = fd(184, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NKPKIAAMODG = struct {
    LDFEHKDCNEL: u32 = 0,
    JDBAHPEBFJC: u32 = 0,
    MNNKJPLIILJ: u32 = 0,
    FBJHGPDKBGM: bool = false,

    pub const _desc_table = .{
        .LDFEHKDCNEL = fd(8, .{ .Varint = .Simple }),
        .JDBAHPEBFJC = fd(1, .{ .Varint = .Simple }),
        .MNNKJPLIILJ = fd(6, .{ .Varint = .Simple }),
        .FBJHGPDKBGM = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NNIJCDKHPKL = struct {
    CDINHFHBMOG: u32 = 0,
    FBJHGPDKBGM: bool = false,
    AIPLFLIBPKJ: u32 = 0,
    JEDJBEDKCJI: u32 = 0,

    pub const _desc_table = .{
        .CDINHFHBMOG = fd(1, .{ .Varint = .Simple }),
        .FBJHGPDKBGM = fd(13, .{ .Varint = .Simple }),
        .AIPLFLIBPKJ = fd(6, .{ .Varint = .Simple }),
        .JEDJBEDKCJI = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GPNJMEHNDMN = struct {
    HIPJHPJOLBE: u32 = 0,
    FBJHGPDKBGM: bool = false,
    JAPDCMJPIEJ: u32 = 0,

    pub const _desc_table = .{
        .HIPJHPJOLBE = fd(5, .{ .Varint = .Simple }),
        .FBJHGPDKBGM = fd(8, .{ .Varint = .Simple }),
        .JAPDCMJPIEJ = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FBHNFJCNHML = struct {
    FBJHGPDKBGM: bool = false,
    JAPDCMJPIEJ: u32 = 0,

    pub const _desc_table = .{
        .FBJHGPDKBGM = fd(7, .{ .Varint = .Simple }),
        .JAPDCMJPIEJ = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournModuleInfo = struct {
    allow_food: bool = false,

    pub const _desc_table = .{
        .allow_food = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournCurGameInfo = struct {
    tourn_formula_info: ?RogueTournFormulaInfo = null,
    unlock_value: ?KeywordUnlockValue = null,
    tourn_module_info: ?RogueTournModuleInfo = null,
    miracle_info: ?ChessRogueMiracleInfo = null,
    game_difficulty_info: ?RogueTournGameDifficultyInfo = null,
    rogue_tourn_game_area_info: ?RogueTournGameAreaInfo = null,
    lineup: ?RogueTournLineupInfo = null,
    item_value: ?RogueGameItemValue = null,
    level: ?RogueTournLevelInfo = null,
    buff: ?ChessRogueBuffInfo = null,
    JMIDLLDKJBI: ?CGJNHNMAMDH = null,

    pub const _desc_table = .{
        .tourn_formula_info = fd(5, .{ .SubMessage = {} }),
        .unlock_value = fd(4, .{ .SubMessage = {} }),
        .tourn_module_info = fd(9, .{ .SubMessage = {} }),
        .miracle_info = fd(8, .{ .SubMessage = {} }),
        .game_difficulty_info = fd(10, .{ .SubMessage = {} }),
        .rogue_tourn_game_area_info = fd(1, .{ .SubMessage = {} }),
        .lineup = fd(2, .{ .SubMessage = {} }),
        .item_value = fd(11, .{ .SubMessage = {} }),
        .level = fd(7, .{ .SubMessage = {} }),
        .buff = fd(15, .{ .SubMessage = {} }),
        .JMIDLLDKJBI = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournLevelInfo = struct {
    EJOIJGCLCJO: bool = false,
    LGBOHDICFPK: bool = false,
    cur_level_index: u32 = 0,
    level_info_list: ArrayList(RogueTournLevel),
    reason: RogueTournSettleReason = @enumFromInt(0),
    status: RogueTournLevelStatus = @enumFromInt(0),

    pub const _desc_table = .{
        .EJOIJGCLCJO = fd(7, .{ .Varint = .Simple }),
        .LGBOHDICFPK = fd(13, .{ .Varint = .Simple }),
        .cur_level_index = fd(14, .{ .Varint = .Simple }),
        .level_info_list = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .reason = fd(3, .{ .Varint = .Simple }),
        .status = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournGameAreaInfo = struct {
    game_area_id: u32 = 0,
    game_week: u32 = 0,

    pub const _desc_table = .{
        .game_area_id = fd(1, .{ .Varint = .Simple }),
        .game_week = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournGameDifficultyInfo = struct {
    difficulty_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .difficulty_id_list = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournLevel = struct {
    cur_room_index: u32 = 0,
    tourn_room_list: ArrayList(RogueTournRoomList),
    layer_id: u32 = 0,
    level_index: u32 = 0,
    status: RogueTournLayerStatus = @enumFromInt(0),

    pub const _desc_table = .{
        .cur_room_index = fd(2, .{ .Varint = .Simple }),
        .tourn_room_list = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .layer_id = fd(11, .{ .Varint = .Simple }),
        .level_index = fd(6, .{ .Varint = .Simple }),
        .status = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournRoomList = struct {
    room_index: u32 = 0,
    room_id: u32 = 0,
    EIPNNEJNNKJ: u32 = 0,
    status: RogueTournRoomStatus = @enumFromInt(0),

    pub const _desc_table = .{
        .room_index = fd(6, .{ .Varint = .Simple }),
        .room_id = fd(13, .{ .Varint = .Simple }),
        .EIPNNEJNNKJ = fd(2, .{ .Varint = .Simple }),
        .status = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournStartCsReq = struct {
    base_avatar_id_list: ArrayList(u32),
    area_id: u32 = 0,
    LGBOHDICFPK: bool = false,
    EJOIJGCLCJO: bool = false,

    pub const _desc_table = .{
        .base_avatar_id_list = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
        .area_id = fd(10, .{ .Varint = .Simple }),
        .LGBOHDICFPK = fd(15, .{ .Varint = .Simple }),
        .EJOIJGCLCJO = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournStartScRsp = struct {
    week: u32 = 0,
    rogue_tourn_cur_scene_info: ?RogueTournCurSceneInfo = null,
    retcode: u32 = 0,
    rogue_tourn_cur_info: ?RogueTournCurInfo = null,

    pub const _desc_table = .{
        .week = fd(11, .{ .Varint = .Simple }),
        .rogue_tourn_cur_scene_info = fd(15, .{ .SubMessage = {} }),
        .retcode = fd(7, .{ .Varint = .Simple }),
        .rogue_tourn_cur_info = fd(13, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournEnterCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournEnterScRsp = struct {
    rogue_tourn_cur_scene_info: ?RogueTournCurSceneInfo = null,
    rogue_tourn_cur_info: ?RogueTournCurInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .rogue_tourn_cur_scene_info = fd(9, .{ .SubMessage = {} }),
        .rogue_tourn_cur_info = fd(13, .{ .SubMessage = {} }),
        .retcode = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournLeaveCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournLeaveScRsp = struct {
    retcode: u32 = 0,
    rogue_tourn_cur_scene_info: ?RogueTournCurSceneInfo = null,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
        .rogue_tourn_cur_scene_info = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournSettleCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournFinishInfo = struct {
    CJCOJAMLEEL: ?NKPKIAAMODG = null,
    GCGLNKFDKKN: ?NNIJCDKHPKL = null,
    rogue_lineup_info: ?LineupInfo = null,
    PFOEPFPHFNJ: ?FBHNFJCNHML = null,
    KGCIAIAFIBE: ?GPNJMEHNDMN = null,
    CLKHPONDDDO: ?KCLCHJMNPGL = null,
    rogue_tourn_cur_info: ?RogueTournCurInfo = null,

    pub const _desc_table = .{
        .CJCOJAMLEEL = fd(3, .{ .SubMessage = {} }),
        .GCGLNKFDKKN = fd(5, .{ .SubMessage = {} }),
        .rogue_lineup_info = fd(8, .{ .SubMessage = {} }),
        .PFOEPFPHFNJ = fd(9, .{ .SubMessage = {} }),
        .KGCIAIAFIBE = fd(12, .{ .SubMessage = {} }),
        .CLKHPONDDDO = fd(4, .{ .SubMessage = {} }),
        .rogue_tourn_cur_info = fd(10, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournSettleScRsp = struct {
    rogue_tourn_cur_scene_info: ?RogueTournCurSceneInfo = null,
    tourn_finish_info: ?RogueTournFinishInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .rogue_tourn_cur_scene_info = fd(10, .{ .SubMessage = {} }),
        .tourn_finish_info = fd(2, .{ .SubMessage = {} }),
        .retcode = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournEnterRoomCsReq = struct {
    cur_room_index: u32 = 0,
    FLLABLFBEIK: u32 = 0,

    pub const _desc_table = .{
        .cur_room_index = fd(7, .{ .Varint = .Simple }),
        .FLLABLFBEIK = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournEnterRoomScRsp = struct {
    rogue_tourn_cur_scene_info: ?RogueTournCurSceneInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .rogue_tourn_cur_scene_info = fd(12, .{ .SubMessage = {} }),
        .retcode = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournEnterLayerCsReq = struct {
    FLLABLFBEIK: u32 = 0,
    cur_level_index: u32 = 0,

    pub const _desc_table = .{
        .FLLABLFBEIK = fd(8, .{ .Varint = .Simple }),
        .cur_level_index = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournEnterLayerScRsp = struct {
    retcode: u32 = 0,
    rogue_tourn_cur_scene_info: ?RogueTournCurSceneInfo = null,

    pub const _desc_table = .{
        .retcode = fd(4, .{ .Varint = .Simple }),
        .rogue_tourn_cur_scene_info = fd(5, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournLevelInfoUpdateScNotify = struct {
    status: RogueTournLevelStatus = @enumFromInt(0),
    level_info_list: ArrayList(RogueTournLevel),
    cur_level_index: u32 = 0,
    reason: RogueTournSettleReason = @enumFromInt(0),

    pub const _desc_table = .{
        .status = fd(13, .{ .Varint = .Simple }),
        .level_info_list = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .cur_level_index = fd(8, .{ .Varint = .Simple }),
        .reason = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournTakeExpRewardCsReq = struct {
    LOPMHJFBHIM: ArrayList(u32),
    sub_tourn_id: u32 = 0,

    pub const _desc_table = .{
        .LOPMHJFBHIM = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
        .sub_tourn_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournTakeExpRewardScRsp = struct {
    reward: ?ItemList = null,
    retcode: u32 = 0,
    exp: u32 = 0,
    taken_level_rewards: ArrayList(u32),

    pub const _desc_table = .{
        .reward = fd(15, .{ .SubMessage = {} }),
        .retcode = fd(14, .{ .Varint = .Simple }),
        .exp = fd(4, .{ .Varint = .Simple }),
        .taken_level_rewards = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournExpNotify = struct {
    exp: u32 = 0,

    pub const _desc_table = .{
        .exp = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournQueryCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournAreaInfo = struct {
    is_taken_reward: bool = false,
    GMOPLJJGBPO: bool = false,
    unlocked_tourn_difficulty_list: ArrayList(u32),
    completed: bool = false,
    is_unlocked: bool = false,
    area_id: u32 = 0,

    pub const _desc_table = .{
        .is_taken_reward = fd(2, .{ .Varint = .Simple }),
        .GMOPLJJGBPO = fd(12, .{ .Varint = .Simple }),
        .unlocked_tourn_difficulty_list = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .completed = fd(8, .{ .Varint = .Simple }),
        .is_unlocked = fd(10, .{ .Varint = .Simple }),
        .area_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ExtraScoreInfo = struct {
    week: u32 = 0,
    LFPCCPOLJPC: u32 = 0,
    end_time: i64 = 0,
    GPODHHAOHNP: bool = false,

    pub const _desc_table = .{
        .week = fd(12, .{ .Varint = .Simple }),
        .LFPCCPOLJPC = fd(3, .{ .Varint = .Simple }),
        .end_time = fd(11, .{ .Varint = .Simple }),
        .GPODHHAOHNP = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournExpInfo = struct {
    taken_level_rewards: ArrayList(u32),
    exp: u32 = 0,

    pub const _desc_table = .{
        .taken_level_rewards = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
        .exp = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournPermanentTalentInfo = struct {
    talent_info_list: ?RogueTalentInfoList = null,
    tourn_talent_coin_num: u32 = 0,

    pub const _desc_table = .{
        .talent_info_list = fd(12, .{ .SubMessage = {} }),
        .tourn_talent_coin_num = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournDifficultyInfo = struct {
    difficulty_id: u32 = 0,
    is_unlocked: bool = false,

    pub const _desc_table = .{
        .difficulty_id = fd(6, .{ .Varint = .Simple }),
        .is_unlocked = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournSeasonInfo = struct {
    sub_tourn_id: u32 = 0,
    main_tourn_id: u32 = 0,

    pub const _desc_table = .{
        .sub_tourn_id = fd(7, .{ .Varint = .Simple }),
        .main_tourn_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournHandbookInfo = struct {
    NFFBJBBCDMG: ArrayList(u32),
    BKGJPCCLIDN: ArrayList(u32),
    handbook_buff_list: ArrayList(u32),
    FAJCNMEKKNN: ArrayList(u32),
    PPCONKKPIPM: ArrayList(u32),
    rogue_tourn_handbook_const: u32 = 0,
    KCDLMNINCGE: ArrayList(u32),

    pub const _desc_table = .{
        .NFFBJBBCDMG = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
        .BKGJPCCLIDN = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .handbook_buff_list = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        .FAJCNMEKKNN = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
        .PPCONKKPIPM = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
        .rogue_tourn_handbook_const = fd(1, .{ .Varint = .Simple }),
        .KCDLMNINCGE = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KCLCHJMNPGL = struct {
    OFGBJCCCIKE: u32 = 0,
    NGIAMBEIHPI: u32 = 0,

    pub const _desc_table = .{
        .OFGBJCCCIKE = fd(2, .{ .Varint = .Simple }),
        .NGIAMBEIHPI = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournInfo = struct {
    rogue_tourn_area_info: ArrayList(RogueTournAreaInfo),
    rogue_tourn_handbook: ?RogueTournHandbookInfo = null,
    rogue_tourn_difficulty_info: ArrayList(RogueTournDifficultyInfo),
    permanent_info: ?RogueTournPermanentTalentInfo = null,
    LKCEFCLJCBM: ?KCLCHJMNPGL = null,
    rogue_tourn_save_list: ArrayList(RogueTournSaveList),
    rogue_season_info: ?RogueTournSeasonInfo = null,
    LLAOOGCHHDK: ?GIGPOFFBIEO = null,
    extra_score_info: ?ExtraScoreInfo = null,
    rogue_tourn_exp_info: ?RogueTournExpInfo = null,

    pub const _desc_table = .{
        .rogue_tourn_area_info = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .rogue_tourn_handbook = fd(2, .{ .SubMessage = {} }),
        .rogue_tourn_difficulty_info = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .permanent_info = fd(9, .{ .SubMessage = {} }),
        .LKCEFCLJCBM = fd(7, .{ .SubMessage = {} }),
        .rogue_tourn_save_list = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .rogue_season_info = fd(8, .{ .SubMessage = {} }),
        .LLAOOGCHHDK = fd(15, .{ .SubMessage = {} }),
        .extra_score_info = fd(6, .{ .SubMessage = {} }),
        .rogue_tourn_exp_info = fd(4, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournQueryScRsp = struct {
    rogue_tourn_cur_info: ?RogueTournCurInfo = null,
    retcode: u32 = 0,
    rogue_get_info: ?RogueTournInfo = null,

    pub const _desc_table = .{
        .rogue_tourn_cur_info = fd(7, .{ .SubMessage = {} }),
        .retcode = fd(14, .{ .Varint = .Simple }),
        .rogue_get_info = fd(11, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournAreaUpdateScNotify = struct {
    rogue_tourn_area_info: ArrayList(RogueTournAreaInfo),

    pub const _desc_table = .{
        .rogue_tourn_area_info = fd(5, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournSaveList = struct {
    data: ?BKFFNNAIODC = null,
    rogue_tourn_cur_info: ?RogueTournCurInfo = null,
    time: i64 = 0,
    name: ManagedString = .Empty,
    max_times: u32 = 0,
    end_time: i64 = 0,
    rogue_season_info: ?RogueTournSeasonInfo = null,

    pub const _desc_table = .{
        .data = fd(1, .{ .SubMessage = {} }),
        .rogue_tourn_cur_info = fd(8, .{ .SubMessage = {} }),
        .time = fd(15, .{ .Varint = .Simple }),
        .name = fd(10, .String),
        .max_times = fd(3, .{ .Varint = .Simple }),
        .end_time = fd(12, .{ .Varint = .Simple }),
        .rogue_season_info = fd(13, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BKFFNNAIODC = struct {
    miracle_list: ArrayList(GameRogueMiracle),
    item_value: u32 = 0,
    buff_list: ArrayList(RogueCommonBuff),

    pub const _desc_table = .{
        .miracle_list = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .item_value = fd(3, .{ .Varint = .Simple }),
        .buff_list = fd(14, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournGetAllArchiveCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournGetAllArchiveScRsp = struct {
    retcode: u32 = 0,
    EDJPODPNMED: ArrayList(RogueTournSaveList),

    pub const _desc_table = .{
        .retcode = fd(5, .{ .Varint = .Simple }),
        .EDJPODPNMED = fd(11, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournDeleteArchiveCsReq = struct {
    max_times: u32 = 0,

    pub const _desc_table = .{
        .max_times = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournDeleteArchiveScRsp = struct {
    max_times: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .max_times = fd(4, .{ .Varint = .Simple }),
        .retcode = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournRenameArchiveCsReq = struct {
    max_times: u32 = 0,
    name: ManagedString = .Empty,

    pub const _desc_table = .{
        .max_times = fd(15, .{ .Varint = .Simple }),
        .name = fd(6, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournRenameArchiveScRsp = struct {
    retcode: u32 = 0,
    max_times: u32 = 0,
    name: ManagedString = .Empty,

    pub const _desc_table = .{
        .retcode = fd(4, .{ .Varint = .Simple }),
        .max_times = fd(11, .{ .Varint = .Simple }),
        .name = fd(6, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournClearArchiveNameScNotify = struct {
    max_times: u32 = 0,

    pub const _desc_table = .{
        .max_times = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OOMGHIBBCBN = struct {
    HMJFCDLCIFD: ArrayList(u32),
    HGCGILABNDL: ArrayList(BMPCJDEAIIH),
    sub_tourn_id: u32 = 0,
    MKAIFJIBJIK: ArrayList(u32),
    main_tourn_id: u32 = 0,
    AMLDAILBMBO: ArrayList(u32),
    JNCBPDHCAHI: ArrayList(u32),

    pub const _desc_table = .{
        .HMJFCDLCIFD = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .HGCGILABNDL = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .sub_tourn_id = fd(11, .{ .Varint = .Simple }),
        .MKAIFJIBJIK = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
        .main_tourn_id = fd(4, .{ .Varint = .Simple }),
        .AMLDAILBMBO = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
        .JNCBPDHCAHI = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BMPCJDEAIIH = struct {
    OFIKKOGKLGO: u32 = 0,
    BIJGJECJMHM: ArrayList(u32),
    avatar_id: u32 = 0,
    FCLOLOBFPAL: u32 = 0,
    max_times: u32 = 0,

    pub const _desc_table = .{
        .OFIKKOGKLGO = fd(9, .{ .Varint = .Simple }),
        .BIJGJECJMHM = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
        .avatar_id = fd(4, .{ .Varint = .Simple }),
        .FCLOLOBFPAL = fd(15, .{ .Varint = .Simple }),
        .max_times = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ABDABIIKOJC = struct {
    time: i64 = 0,
    GNDIODGOGPI: ?OOMGHIBBCBN = null,
    max_times: u32 = 0,
    name: ManagedString = .Empty,

    pub const _desc_table = .{
        .time = fd(12, .{ .Varint = .Simple }),
        .GNDIODGOGPI = fd(4, .{ .SubMessage = {} }),
        .max_times = fd(13, .{ .Varint = .Simple }),
        .name = fd(3, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournGetAllBuildRefCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournGetAllBuildRefScRsp = struct {
    IICCNGOKKLF: ArrayList(ABDABIIKOJC),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .IICCNGOKKLF = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournDeleteBuildRefCsReq = struct {
    NDOBMAJMLNK: ArrayList(u32),

    pub const _desc_table = .{
        .NDOBMAJMLNK = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournDeleteBuildRefScRsp = struct {
    retcode: u32 = 0,
    NDOBMAJMLNK: ArrayList(u32),

    pub const _desc_table = .{
        .retcode = fd(11, .{ .Varint = .Simple }),
        .NDOBMAJMLNK = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournSaveBuildRefCsReq = struct {
    max_times: u32 = 0,
    GNDIODGOGPI: ?OOMGHIBBCBN = null,
    name: ManagedString = .Empty,

    pub const _desc_table = .{
        .max_times = fd(4, .{ .Varint = .Simple }),
        .GNDIODGOGPI = fd(5, .{ .SubMessage = {} }),
        .name = fd(2, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournSaveBuildRefScRsp = struct {
    retcode: u32 = 0,
    name: ManagedString = .Empty,
    max_times: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(10, .{ .Varint = .Simple }),
        .name = fd(11, .String),
        .max_times = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournRenameBuildRefCsReq = struct {
    name: ManagedString = .Empty,
    max_times: u32 = 0,

    pub const _desc_table = .{
        .name = fd(11, .String),
        .max_times = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournRenameBuildRefScRsp = struct {
    max_times: u32 = 0,
    name: ManagedString = .Empty,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .max_times = fd(4, .{ .Varint = .Simple }),
        .name = fd(10, .String),
        .retcode = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournGetPermanentTalentInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournGetPermanentTalentInfoScRsp = struct {
    retcode: u32 = 0,
    permanent_info: ?RogueTournPermanentTalentInfo = null,

    pub const _desc_table = .{
        .retcode = fd(3, .{ .Varint = .Simple }),
        .permanent_info = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournEnablePermanentTalentCsReq = struct {
    talent_id: u32 = 0,

    pub const _desc_table = .{
        .talent_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournEnablePermanentTalentScRsp = struct {
    permanent_info: ?RogueTournPermanentTalentInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .permanent_info = fd(12, .{ .SubMessage = {} }),
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournResetPermanentTalentCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournResetPermanentTalentScRsp = struct {
    permanent_info: ?RogueTournPermanentTalentInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .permanent_info = fd(6, .{ .SubMessage = {} }),
        .retcode = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournEnterRogueCocoonSceneCsReq = struct {
    avatar_list: ArrayList(PHHKOMBGPPK),
    difficulty_level: u32 = 0,
    EIDDMGHLPBP: bool = false,
    IBGNLBOEBCG: u32 = 0,
    PILMKHCKMED: u32 = 0,

    pub const _desc_table = .{
        .avatar_list = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .difficulty_level = fd(2, .{ .Varint = .Simple }),
        .EIDDMGHLPBP = fd(1, .{ .Varint = .Simple }),
        .IBGNLBOEBCG = fd(10, .{ .Varint = .Simple }),
        .PILMKHCKMED = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournEnterRogueCocoonSceneScRsp = struct {
    retcode: u32 = 0,
    rogue_tourn_cur_scene_info: ?RogueTournCurSceneInfo = null,

    pub const _desc_table = .{
        .retcode = fd(2, .{ .Varint = .Simple }),
        .rogue_tourn_cur_scene_info = fd(4, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournLeaveRogueCocoonSceneCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournLeaveRogueCocoonSceneScRsp = struct {
    rogue_tourn_cur_scene_info: ?RogueTournCurSceneInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .rogue_tourn_cur_scene_info = fd(4, .{ .SubMessage = {} }),
        .retcode = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournReEnterRogueCocoonStageCsReq = struct {
    EIDDMGHLPBP: bool = false,

    pub const _desc_table = .{
        .EIDDMGHLPBP = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournReEnterRogueCocoonStageScRsp = struct {
    battle_info: ?SceneBattleInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .battle_info = fd(8, .{ .SubMessage = {} }),
        .retcode = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournGetCurRogueCocoonInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournGetCurRogueCocoonInfoScRsp = struct {
    PILMKHCKMED: u32 = 0,
    IBGNLBOEBCG: u32 = 0,
    retcode: u32 = 0,
    difficulty_level: u32 = 0,

    pub const _desc_table = .{
        .PILMKHCKMED = fd(8, .{ .Varint = .Simple }),
        .IBGNLBOEBCG = fd(14, .{ .Varint = .Simple }),
        .retcode = fd(13, .{ .Varint = .Simple }),
        .difficulty_level = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournDifficultyCompNotify = struct {
    GGGFIGCPKLF: ArrayList(u32),

    pub const _desc_table = .{
        .GGGFIGCPKLF = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JNIAOGIIOGB = struct {
    miracle_id: u32 = 0,

    pub const _desc_table = .{
        .miracle_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JCCCACNFDJG = struct {
    miracle_id: u32 = 0,

    pub const _desc_table = .{
        .miracle_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JFIHGDPOIID = struct {
    buff_id: u32 = 0,

    pub const _desc_table = .{
        .buff_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ECGOCHPMCPD = struct {
    event_id: u32 = 0,

    pub const _desc_table = .{
        .event_id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const APFJLOFINFJ = struct {
    formula_id: u32 = 0,

    pub const _desc_table = .{
        .formula_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FIDFNNCJAJE = struct {
    IJPPKNKNLNL: u32 = 0,
    level: u32 = 0,
    IBOEKJBOMOG: u32 = 0,
    DCHPOGOBDKO: u32 = 0,

    pub const _desc_table = .{
        .IJPPKNKNLNL = fd(10, .{ .Varint = .Simple }),
        .level = fd(14, .{ .Varint = .Simple }),
        .IBOEKJBOMOG = fd(7, .{ .Varint = .Simple }),
        .DCHPOGOBDKO = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournHandBookNotify = struct {
    KFELKJLDKEH: ?KFELKJLDKEH_union,

    pub const _KFELKJLDKEH_case = enum {
        IIHOPMEEAJA,
        GPOLBDGOOOD,
        buff,
        NFLDODIABCL,
        tourn_formula_info,
        JMIDLLDKJBI,
    };
    pub const KFELKJLDKEH_union = union(_KFELKJLDKEH_case) {
        IIHOPMEEAJA: JNIAOGIIOGB,
        GPOLBDGOOOD: JCCCACNFDJG,
        buff: JFIHGDPOIID,
        NFLDODIABCL: ECGOCHPMCPD,
        tourn_formula_info: APFJLOFINFJ,
        JMIDLLDKJBI: FIDFNNCJAJE,
        pub const _union_desc = .{
            .IIHOPMEEAJA = fd(10, .{ .SubMessage = {} }),
            .GPOLBDGOOOD = fd(15, .{ .SubMessage = {} }),
            .buff = fd(12, .{ .SubMessage = {} }),
            .NFLDODIABCL = fd(8, .{ .SubMessage = {} }),
            .tourn_formula_info = fd(9, .{ .SubMessage = {} }),
            .JMIDLLDKJBI = fd(3, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .KFELKJLDKEH = fd(null, .{ .OneOf = KFELKJLDKEH_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournGetSettleInfoCsReq = struct {
    area_id: u32 = 0,

    pub const _desc_table = .{
        .area_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournGetSettleInfoScRsp = struct {
    retcode: u32 = 0,
    tourn_finish_info: ?RogueTournFinishInfo = null,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
        .tourn_finish_info = fd(10, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournConfirmSettleCsReq = struct {
    max_times: u32 = 0,
    area_id: u32 = 0,
    name: ManagedString = .Empty,

    pub const _desc_table = .{
        .max_times = fd(15, .{ .Varint = .Simple }),
        .area_id = fd(8, .{ .Varint = .Simple }),
        .name = fd(13, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournConfirmSettleScRsp = struct {
    JPLAAPJCCBH: ?ItemList = null,
    rogue_tourn_cur_scene_info: ?RogueTournCurSceneInfo = null,
    retcode: u32 = 0,
    GFONFDBFBNA: ?ItemList = null,
    OHHJKGFOFHB: ?RogueTournSaveList = null,

    pub const _desc_table = .{
        .JPLAAPJCCBH = fd(2, .{ .SubMessage = {} }),
        .rogue_tourn_cur_scene_info = fd(6, .{ .SubMessage = {} }),
        .retcode = fd(4, .{ .Varint = .Simple }),
        .GFONFDBFBNA = fd(8, .{ .SubMessage = {} }),
        .OHHJKGFOFHB = fd(5, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournWeekChallengeUpdateScNotify = struct {
    extra_score_info: ?ExtraScoreInfo = null,

    pub const _desc_table = .{
        .extra_score_info = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournGetMiscRealTimeDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournGetMiscRealTimeDataScRsp = struct {
    retcode: u32 = 0,
    GCGLNKFDKKN: ?NNIJCDKHPKL = null,
    CLKHPONDDDO: ?KCLCHJMNPGL = null,
    KGCIAIAFIBE: ?GPNJMEHNDMN = null,
    PFOEPFPHFNJ: ?FBHNFJCNHML = null,
    CJCOJAMLEEL: ?NKPKIAAMODG = null,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
        .GCGLNKFDKKN = fd(7, .{ .SubMessage = {} }),
        .CLKHPONDDDO = fd(2, .{ .SubMessage = {} }),
        .KGCIAIAFIBE = fd(4, .{ .SubMessage = {} }),
        .PFOEPFPHFNJ = fd(5, .{ .SubMessage = {} }),
        .CJCOJAMLEEL = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournGetArchiveRepositoryCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournGetArchiveRepositoryScRsp = struct {
    LNEJMJBFLLH: ArrayList(u32),
    HKDOCLOPKOH: ArrayList(u32),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .LNEJMJBFLLH = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
        .HKDOCLOPKOH = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournReviveCostUpdateScNotify = struct {
    rogue_revive_cost: ?ItemCostData = null,

    pub const _desc_table = .{
        .rogue_revive_cost = fd(4, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournReviveAvatarCsReq = struct {
    base_avatar_id_list: ArrayList(u32),
    interacted_prop_entity_id: u32 = 0,

    pub const _desc_table = .{
        .base_avatar_id_list = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
        .interacted_prop_entity_id = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournReviveAvatarScRsp = struct {
    rogue_revive_cost: ?ItemCostData = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .rogue_revive_cost = fd(2, .{ .SubMessage = {} }),
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournBattleFailSettleInfoScNotify = struct {
    rogue_tourn_cur_scene_info: ?RogueTournCurSceneInfo = null,
    tourn_finish_info: ?RogueTournFinishInfo = null,

    pub const _desc_table = .{
        .rogue_tourn_cur_scene_info = fd(5, .{ .SubMessage = {} }),
        .tourn_finish_info = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GIGPOFFBIEO = struct {
    CMOGHIANDFL: u32 = 0,
    talent_info_list: ?RogueTalentInfoList = null,

    pub const _desc_table = .{
        .CMOGHIANDFL = fd(3, .{ .Varint = .Simple }),
        .talent_info_list = fd(9, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournGetSeasonTalentInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournGetSeasonTalentInfoScRsp = struct {
    retcode: u32 = 0,
    LLAOOGCHHDK: ?GIGPOFFBIEO = null,

    pub const _desc_table = .{
        .retcode = fd(15, .{ .Varint = .Simple }),
        .LLAOOGCHHDK = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournEnableSeasonTalentCsReq = struct {
    talent_id: u32 = 0,

    pub const _desc_table = .{
        .talent_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournEnableSeasonTalentScRsp = struct {
    retcode: u32 = 0,
    LLAOOGCHHDK: ?GIGPOFFBIEO = null,

    pub const _desc_table = .{
        .retcode = fd(14, .{ .Varint = .Simple }),
        .LLAOOGCHHDK = fd(10, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournTitanUpdateTitanBlessProgressScNotify = struct {
    LDFGIFDFPCF: u32 = 0,

    pub const _desc_table = .{
        .LDFGIFDFPCF = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRollShopInfoCsReq = struct {
    roll_shop_id: u32 = 0,

    pub const _desc_table = .{
        .roll_shop_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetRollShopInfoScRsp = struct {
    roll_shop_id: u32 = 0,
    gacha_random: u32 = 0,
    shop_group_id_list: ArrayList(u32),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .roll_shop_id = fd(8, .{ .Varint = .Simple }),
        .gacha_random = fd(5, .{ .Varint = .Simple }),
        .shop_group_id_list = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DoGachaInRollShopCsReq = struct {
    roll_shop_id: u32 = 0,
    gacha_count: u32 = 0,
    gacha_random: u32 = 0,

    pub const _desc_table = .{
        .roll_shop_id = fd(7, .{ .Varint = .Simple }),
        .gacha_count = fd(12, .{ .Varint = .Simple }),
        .gacha_random = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DoGachaInRollShopScRsp = struct {
    reward: ?ItemList = null,
    PENILHGLHHM: u32 = 0,
    reward_display_type: u32 = 0,
    roll_shop_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .reward = fd(15, .{ .SubMessage = {} }),
        .PENILHGLHHM = fd(10, .{ .Varint = .Simple }),
        .reward_display_type = fd(12, .{ .Varint = .Simple }),
        .roll_shop_id = fd(4, .{ .Varint = .Simple }),
        .retcode = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeRollShopRewardCsReq = struct {
    roll_shop_id: u32 = 0,

    pub const _desc_table = .{
        .roll_shop_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeRollShopRewardScRsp = struct {
    retcode: u32 = 0,
    group_type: u32 = 0,
    roll_shop_id: u32 = 0,
    reward: ?ItemList = null,

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
        .group_type = fd(1, .{ .Varint = .Simple }),
        .roll_shop_id = fd(4, .{ .Varint = .Simple }),
        .reward = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneActorInfo = struct {
    uid: u32 = 0,
    base_avatar_id: u32 = 0,
    avatar_type: AvatarType = @enumFromInt(0),
    map_layer: u32 = 0,

    pub const _desc_table = .{
        .uid = fd(14, .{ .Varint = .Simple }),
        .base_avatar_id = fd(11, .{ .Varint = .Simple }),
        .avatar_type = fd(1, .{ .Varint = .Simple }),
        .map_layer = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NpcMonsterRogueInfo = struct {
    elite_group: u32 = 0,
    DNEAMPLLFME: u32 = 0,
    level: u32 = 0,
    rogue_monster_id: u32 = 0,
    hard_level_group: u32 = 0,

    pub const _desc_table = .{
        .elite_group = fd(8, .{ .Varint = .Simple }),
        .DNEAMPLLFME = fd(13, .{ .Varint = .Simple }),
        .level = fd(7, .{ .Varint = .Simple }),
        .rogue_monster_id = fd(2, .{ .Varint = .Simple }),
        .hard_level_group = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NpcMonsterExtraInfo = struct {
    rogue_game_info: ?NpcMonsterRogueInfo = null,

    pub const _desc_table = .{
        .rogue_game_info = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OEPANDOKEJD = struct {
    IFOEDPLJKOA: ArrayList(u32),
    stage_id: u32 = 0,

    pub const _desc_table = .{
        .IFOEDPLJKOA = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
        .stage_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneNpcMonsterInfo = struct {
    monster_id: u32 = 0,
    MPFEDFBKKDF: bool = false,
    event_id: u32 = 0,
    IDPJIDNLEHH: bool = false,
    world_level: u32 = 0,
    GEIFPDHBKBF: ?OEPANDOKEJD = null,
    extra_info: ?NpcMonsterExtraInfo = null,

    pub const _desc_table = .{
        .monster_id = fd(3, .{ .Varint = .Simple }),
        .MPFEDFBKKDF = fd(12, .{ .Varint = .Simple }),
        .event_id = fd(7, .{ .Varint = .Simple }),
        .IDPJIDNLEHH = fd(4, .{ .Varint = .Simple }),
        .world_level = fd(1, .{ .Varint = .Simple }),
        .GEIFPDHBKBF = fd(14, .{ .SubMessage = {} }),
        .extra_info = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NpcDialogueEventParam = struct {
    rogue_dialogue_event_id: u32 = 0,
    arg_id: u32 = 0,

    pub const _desc_table = .{
        .rogue_dialogue_event_id = fd(8, .{ .Varint = .Simple }),
        .arg_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NpcRogueGameInfo = struct {
    event_unique_id: u32 = 0,
    KJCBNEINDHL: ArrayList(KJCBNEINDHLEntry),
    aeon_talk_id: u32 = 0,
    finish_dialogue: bool = false,
    JENFHOMBKKE: bool = false,
    talk_dialogue_id: u32 = 0,
    LOMILOMCAOM: bool = false,

    pub const _desc_table = .{
        .event_unique_id = fd(14, .{ .Varint = .Simple }),
        .KJCBNEINDHL = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .aeon_talk_id = fd(7, .{ .Varint = .Simple }),
        .finish_dialogue = fd(3, .{ .Varint = .Simple }),
        .JENFHOMBKKE = fd(9, .{ .Varint = .Simple }),
        .talk_dialogue_id = fd(13, .{ .Varint = .Simple }),
        .LOMILOMCAOM = fd(1, .{ .Varint = .Simple }),
    };

    pub const KJCBNEINDHLEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KKFKKPPLDAI = struct {
    is_meet: bool = false,
    AMLKPOHDELN: u32 = 0,
    visitor_id: u32 = 0,

    pub const _desc_table = .{
        .is_meet = fd(14, .{ .Varint = .Simple }),
        .AMLKPOHDELN = fd(6, .{ .Varint = .Simple }),
        .visitor_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CLFACBCGIFL = struct {
    KLFCNOAGGPC: u32 = 0,
    INCAGNLDJMN: u32 = 0,

    pub const _desc_table = .{
        .KLFCNOAGGPC = fd(15, .{ .Varint = .Simple }),
        .INCAGNLDJMN = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NpcExtraInfo = struct {
    KFELKJLDKEH: ?KFELKJLDKEH_union,

    pub const _KFELKJLDKEH_case = enum {
        rogue_game_info,
        JKJOPMEFCBO,
        PNBJJBJNMGL,
    };
    pub const KFELKJLDKEH_union = union(_KFELKJLDKEH_case) {
        rogue_game_info: NpcRogueGameInfo,
        JKJOPMEFCBO: KKFKKPPLDAI,
        PNBJJBJNMGL: CLFACBCGIFL,
        pub const _union_desc = .{
            .rogue_game_info = fd(15, .{ .SubMessage = {} }),
            .JKJOPMEFCBO = fd(10, .{ .SubMessage = {} }),
            .PNBJJBJNMGL = fd(6, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .KFELKJLDKEH = fd(null, .{ .OneOf = KFELKJLDKEH_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneNpcInfo = struct {
    extra_info: ?NpcExtraInfo = null,
    npc_id: u32 = 0,

    pub const _desc_table = .{
        .extra_info = fd(14, .{ .SubMessage = {} }),
        .npc_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PropRogueInfo = struct {
    room_id: u32 = 0,
    BBNFIIFMGAK: u32 = 0,
    CCDEPAPJNKO: u32 = 0,
    site_id: u32 = 0,

    pub const _desc_table = .{
        .room_id = fd(5, .{ .Varint = .Simple }),
        .BBNFIIFMGAK = fd(2, .{ .Varint = .Simple }),
        .CCDEPAPJNKO = fd(4, .{ .Varint = .Simple }),
        .site_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PPLBHACNEGO = struct {
    POIJKBLCJLA: u32 = 0,
    aeon_id: u32 = 0,
    KAPMKJGHIEI: u32 = 0,

    pub const _desc_table = .{
        .POIJKBLCJLA = fd(2, .{ .Varint = .Simple }),
        .aeon_id = fd(5, .{ .Varint = .Simple }),
        .KAPMKJGHIEI = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PropChessRogueInfo = struct {
    enter_next_cell: bool = false,
    AKCGHBFGBCC: bool = false,

    pub const _desc_table = .{
        .enter_next_cell = fd(13, .{ .Varint = .Simple }),
        .AKCGHBFGBCC = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournDoorInfo = struct {
    rogue_door_next_room_type: u32 = 0,
    enter_next_layer: bool = false,
    EIPNNEJNNKJ: u32 = 0,

    pub const _desc_table = .{
        .rogue_door_next_room_type = fd(14, .{ .Varint = .Simple }),
        .enter_next_layer = fd(13, .{ .Varint = .Simple }),
        .EIPNNEJNNKJ = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueMagicDoorInfo = struct {
    EIPNNEJNNKJ: u32 = 0,
    enter_next_layer: bool = false,
    rogue_door_next_room_type: u32 = 0,

    pub const _desc_table = .{
        .EIPNNEJNNKJ = fd(1, .{ .Varint = .Simple }),
        .enter_next_layer = fd(11, .{ .Varint = .Simple }),
        .rogue_door_next_room_type = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const WorkbenchFuncIdInfo = struct {
    is_valid: bool = false,
    func_id: u32 = 0,

    pub const _desc_table = .{
        .is_valid = fd(13, .{ .Varint = .Simple }),
        .func_id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueTournWorkbenchInfo = struct {
    workbench_id: u32 = 0,
    workbench_func_list: ArrayList(WorkbenchFuncIdInfo),

    pub const _desc_table = .{
        .workbench_id = fd(5, .{ .Varint = .Simple }),
        .workbench_func_list = fd(8, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueGambleMachineInfo = struct {
    MGDMHLGJHOC: u32 = 0,
    gamble_info: ?RogueGambleInfo = null,

    pub const _desc_table = .{
        .MGDMHLGJHOC = fd(13, .{ .Varint = .Simple }),
        .gamble_info = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RogueCurseChestInfo = struct {
    chest_id: u32 = 0,

    pub const _desc_table = .{
        .chest_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PropTimelineInfo = struct {
    timeline_bool_value: bool = false,
    timeline_byte_value: ManagedString = .Empty,

    pub const _desc_table = .{
        .timeline_bool_value = fd(1, .{ .Varint = .Simple }),
        .timeline_byte_value = fd(7, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PropExtraInfo = struct {
    timeline_info: ?PropTimelineInfo = null,
    KFELKJLDKEH: ?KFELKJLDKEH_union,

    pub const _KFELKJLDKEH_case = enum {
        rogue_game_info,
        rogue_aeon_info,
        JJFKKDKPCPO,
        HAKIPLKCOKD,
        MABCFPOCLOL,
        OIDCBKGGNDG,
        DDCKMELBCDJ,
        OMEKFJEPFLE,
    };
    pub const KFELKJLDKEH_union = union(_KFELKJLDKEH_case) {
        rogue_game_info: PropRogueInfo,
        rogue_aeon_info: PPLBHACNEGO,
        JJFKKDKPCPO: PropChessRogueInfo,
        HAKIPLKCOKD: RogueTournDoorInfo,
        MABCFPOCLOL: RogueTournWorkbenchInfo,
        OIDCBKGGNDG: RogueGambleMachineInfo,
        DDCKMELBCDJ: RogueCurseChestInfo,
        OMEKFJEPFLE: RogueMagicDoorInfo,
        pub const _union_desc = .{
            .rogue_game_info = fd(2, .{ .SubMessage = {} }),
            .rogue_aeon_info = fd(11, .{ .SubMessage = {} }),
            .JJFKKDKPCPO = fd(7, .{ .SubMessage = {} }),
            .HAKIPLKCOKD = fd(14, .{ .SubMessage = {} }),
            .MABCFPOCLOL = fd(12, .{ .SubMessage = {} }),
            .OIDCBKGGNDG = fd(3, .{ .SubMessage = {} }),
            .DDCKMELBCDJ = fd(6, .{ .SubMessage = {} }),
            .OMEKFJEPFLE = fd(5, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .timeline_info = fd(13, .{ .SubMessage = {} }),
        .KFELKJLDKEH = fd(null, .{ .OneOf = KFELKJLDKEH_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ScenePropInfo = struct {
    create_time_ms: u64 = 0,
    extra_info: ?PropExtraInfo = null,
    life_time_ms: u32 = 0,
    prop_id: u32 = 0,
    trigger_name_list: ArrayList(ManagedString),
    prop_state: u32 = 0,

    pub const _desc_table = .{
        .create_time_ms = fd(9, .{ .Varint = .Simple }),
        .extra_info = fd(11, .{ .SubMessage = {} }),
        .life_time_ms = fd(7, .{ .Varint = .Simple }),
        .prop_id = fd(15, .{ .Varint = .Simple }),
        .trigger_name_list = fd(13, .{ .List = .String }),
        .prop_state = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneSummonUnitInfo = struct {
    summon_unit_id: u32 = 0,
    trigger_name_list: ArrayList(ManagedString),
    attach_entity_id: u32 = 0,
    life_time_ms: i32 = 0,
    caster_entity_id: u32 = 0,
    create_time_ms: u64 = 0,

    pub const _desc_table = .{
        .summon_unit_id = fd(11, .{ .Varint = .Simple }),
        .trigger_name_list = fd(2, .{ .List = .String }),
        .attach_entity_id = fd(6, .{ .Varint = .Simple }),
        .life_time_ms = fd(14, .{ .Varint = .Simple }),
        .caster_entity_id = fd(15, .{ .Varint = .Simple }),
        .create_time_ms = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneEntityInfo = struct {
    inst_id: u32 = 0,
    group_id: u32 = 0,
    motion: ?MotionInfo = null,
    entity_id: u32 = 0,
    entity: ?entity_union,

    pub const _entity_case = enum {
        actor,
        npc_monster,
        npc,
        prop,
        summon_unit,
    };
    pub const entity_union = union(_entity_case) {
        actor: SceneActorInfo,
        npc_monster: SceneNpcMonsterInfo,
        npc: SceneNpcInfo,
        prop: ScenePropInfo,
        summon_unit: SceneSummonUnitInfo,
        pub const _union_desc = .{
            .actor = fd(13, .{ .SubMessage = {} }),
            .npc_monster = fd(14, .{ .SubMessage = {} }),
            .npc = fd(2, .{ .SubMessage = {} }),
            .prop = fd(8, .{ .SubMessage = {} }),
            .summon_unit = fd(15, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .inst_id = fd(1, .{ .Varint = .Simple }),
        .group_id = fd(7, .{ .Varint = .Simple }),
        .motion = fd(4, .{ .SubMessage = {} }),
        .entity_id = fd(3, .{ .Varint = .Simple }),
        .entity = fd(null, .{ .OneOf = entity_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BuffInfo = struct {
    dynamic_values: ArrayList(DynamicValuesEntry),
    buff_id: u32 = 0,
    add_time_ms: u64 = 0,
    base_avatar_id: u32 = 0,
    life_time: f32 = 0,
    buff_summon_entity_id: u32 = 0,
    level: u32 = 0,
    count: u32 = 0,

    pub const _desc_table = .{
        .dynamic_values = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .buff_id = fd(13, .{ .Varint = .Simple }),
        .add_time_ms = fd(2, .{ .Varint = .Simple }),
        .base_avatar_id = fd(3, .{ .Varint = .Simple }),
        .life_time = fd(6, .{ .FixedInt = .I32 }),
        .buff_summon_entity_id = fd(7, .{ .Varint = .Simple }),
        .level = fd(10, .{ .Varint = .Simple }),
        .count = fd(1, .{ .Varint = .Simple }),
    };

    pub const DynamicValuesEntry = struct {
        key: ManagedString = .Empty,
        value: f32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .String),
            .value = fd(2, .{ .FixedInt = .I32 }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EntityBuffInfo = struct {
    entity_id: u32 = 0,
    buff_list: ArrayList(BuffInfo),

    pub const _desc_table = .{
        .entity_id = fd(4, .{ .Varint = .Simple }),
        .buff_list = fd(8, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MechanismBarInfo = struct {
    value: u32 = 0,
    OHDEOIGHIEM: u32 = 0,

    pub const _desc_table = .{
        .value = fd(4, .{ .Varint = .Simple }),
        .OHDEOIGHIEM = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CustomSaveData = struct {
    save_data: ManagedString = .Empty,
    group_id: u32 = 0,

    pub const _desc_table = .{
        .save_data = fd(10, .String),
        .group_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KEGMIHDFPMM = struct {
    CPPDJFKIIHK: u32 = 0,
    BLOGJDCKAHM: u32 = 0,

    pub const _desc_table = .{
        .CPPDJFKIIHK = fd(1, .{ .Varint = .Simple }),
        .BLOGJDCKAHM = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneEntityGroupInfo = struct {
    entity_list: ArrayList(SceneEntityInfo),
    state: u32 = 0,
    HEJAMOOJBCJ: ArrayList(HEJAMOOJBCJEntry),
    group_id: u32 = 0,

    pub const _desc_table = .{
        .entity_list = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .state = fd(10, .{ .Varint = .Simple }),
        .HEJAMOOJBCJ = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .group_id = fd(3, .{ .Varint = .Simple }),
    };

    pub const HEJAMOOJBCJEntry = struct {
        key: ManagedString = .Empty,
        value: i32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .String),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneGroupState = struct {
    state: u32 = 0,
    group_id: u32 = 0,
    is_default: bool = false,

    pub const _desc_table = .{
        .state = fd(2, .{ .Varint = .Simple }),
        .group_id = fd(5, .{ .Varint = .Simple }),
        .is_default = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MissionStatusBySceneInfo = struct {
    finished_main_mission_id_list: ArrayList(u32),
    unfinished_main_mission_id_list: ArrayList(u32),
    sub_mission_status_list: ArrayList(Mission),
    disabled_main_mission_id_list: ArrayList(u32),
    BIGEHKDPGPN: ArrayList(MainMissionCustomValue),

    pub const _desc_table = .{
        .finished_main_mission_id_list = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
        .unfinished_main_mission_id_list = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
        .sub_mission_status_list = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .disabled_main_mission_id_list = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
        .BIGEHKDPGPN = fd(4, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneInfo = struct {
    client_pos_version: u32 = 0,
    game_story_line_id: u32 = 0,
    leader_entity_id: u32 = 0,
    MPEHIBKEOBE: ArrayList(MPEHIBKEOBEEntry),
    scene_buff_info_list: ArrayList(BuffInfo),
    DJBIBIJMEBH: ArrayList(u32),
    content_id: u32 = 0,
    group_state_list: ArrayList(SceneGroupState),
    world_id: u32 = 0,
    entity_buff_info_list: ArrayList(EntityBuffInfo),
    entry_id: u32 = 0,
    floor_id: u32 = 0,
    entity_group_list: ArrayList(SceneEntityGroupInfo),
    dimension_id: u32 = 0,
    entity_list: ArrayList(SceneEntityInfo),
    scene_mission_info: ?MissionStatusBySceneInfo = null,
    lighten_section_list: ArrayList(u32),
    floor_saved_data: ArrayList(FloorSavedDataEntry),
    plane_id: u32 = 0,
    custom_data_list: ArrayList(CustomSaveData),
    game_mode_type: u32 = 0,

    pub const _desc_table = .{
        .client_pos_version = fd(7, .{ .Varint = .Simple }),
        .game_story_line_id = fd(1187, .{ .Varint = .Simple }),
        .leader_entity_id = fd(8, .{ .Varint = .Simple }),
        .MPEHIBKEOBE = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .scene_buff_info_list = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .DJBIBIJMEBH = fd(538, .{ .PackedList = .{ .Varint = .Simple } }),
        .content_id = fd(1557, .{ .Varint = .Simple }),
        .group_state_list = fd(468, .{ .List = .{ .SubMessage = {} } }),
        .world_id = fd(15, .{ .Varint = .Simple }),
        .entity_buff_info_list = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .entry_id = fd(13, .{ .Varint = .Simple }),
        .floor_id = fd(9, .{ .Varint = .Simple }),
        .entity_group_list = fd(937, .{ .List = .{ .SubMessage = {} } }),
        .dimension_id = fd(1652, .{ .Varint = .Simple }),
        .entity_list = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .scene_mission_info = fd(1403, .{ .SubMessage = {} }),
        .lighten_section_list = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .floor_saved_data = fd(788, .{ .List = .{ .SubMessage = {} } }),
        .plane_id = fd(1, .{ .Varint = .Simple }),
        .custom_data_list = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .game_mode_type = fd(14, .{ .Varint = .Simple }),
    };

    pub const MPEHIBKEOBEEntry = struct {
        key: u32 = 0,
        value: ?KEGMIHDFPMM = null,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const FloorSavedDataEntry = struct {
        key: ManagedString = .Empty,
        value: i32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .String),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EntityMotion = struct {
    map_layer: u32 = 0,
    NFOPIKDKPGG: bool = false,
    entity_id: u32 = 0,
    motion: ?MotionInfo = null,

    pub const _desc_table = .{
        .map_layer = fd(5, .{ .Varint = .Simple }),
        .NFOPIKDKPGG = fd(1, .{ .Varint = .Simple }),
        .entity_id = fd(6, .{ .Varint = .Simple }),
        .motion = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneEntityMoveCsReq = struct {
    entry_id: u32 = 0,
    entity_motion_list: ArrayList(EntityMotion),
    PEMLEJJBAJE: u64 = 0,

    pub const _desc_table = .{
        .entry_id = fd(9, .{ .Varint = .Simple }),
        .entity_motion_list = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .PEMLEJJBAJE = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneEntityMoveScRsp = struct {
    retcode: u32 = 0,
    entity_motion_list: ArrayList(EntityMotion),
    download_data: ?ClientDownloadData = null,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
        .entity_motion_list = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .download_data = fd(9, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneEntityMoveScNotify = struct {
    motion: ?MotionInfo = null,
    client_pos_version: u32 = 0,
    entry_id: u32 = 0,
    entity_id: u32 = 0,

    pub const _desc_table = .{
        .motion = fd(2, .{ .SubMessage = {} }),
        .client_pos_version = fd(9, .{ .Varint = .Simple }),
        .entry_id = fd(11, .{ .Varint = .Simple }),
        .entity_id = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneUpdatePositionVersionNotify = struct {
    pos_version: u32 = 0,

    pub const _desc_table = .{
        .pos_version = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const InteractPropCsReq = struct {
    prop_entity_id: u32 = 0,
    interact_id: u32 = 0,

    pub const _desc_table = .{
        .prop_entity_id = fd(5, .{ .Varint = .Simple }),
        .interact_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const InteractPropScRsp = struct {
    retcode: u32 = 0,
    prop_entity_id: u32 = 0,
    prop_state: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(2, .{ .Varint = .Simple }),
        .prop_entity_id = fd(7, .{ .Varint = .Simple }),
        .prop_state = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChangePropTimelineInfoCsReq = struct {
    prop_entity_id: u32 = 0,
    timeline_info: ?PropTimelineInfo = null,
    uuid: u64 = 0,
    is_close_map: bool = false,

    pub const _desc_table = .{
        .prop_entity_id = fd(9, .{ .Varint = .Simple }),
        .timeline_info = fd(10, .{ .SubMessage = {} }),
        .uuid = fd(3, .{ .Varint = .Simple }),
        .is_close_map = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChangePropTimelineInfoScRsp = struct {
    prop_entity_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .prop_entity_id = fd(11, .{ .Varint = .Simple }),
        .retcode = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HitMonsterBattleInfo = struct {
    target_monster_entity_id: u32 = 0,
    monster_battle_type: MonsterBattleType = @enumFromInt(0),

    pub const _desc_table = .{
        .target_monster_entity_id = fd(13, .{ .Varint = .Simple }),
        .monster_battle_type = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DynamicValues = struct {
    key: ManagedString = .Empty,
    value: f32 = 0,

    pub const _desc_table = .{
        .key = fd(1, .String),
        .value = fd(14, .{ .FixedInt = .I32 }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AssistMonsterEntityInfo = struct {
    entity_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .entity_id_list = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneCastSkillCsReq = struct {
    maze_ability_str: ManagedString = .Empty,
    hit_target_entity_id_list: ArrayList(u32),
    target_motion: ?MotionInfo = null,
    attacked_by_entity_id: u32 = 0,
    skill_extra_tags: ArrayList(SkillExtraTag),
    HCHDHLJCIJE: u32 = 0,
    assist_monster_entity_info: ArrayList(AssistMonsterEntityInfo),
    cast_entity_id: u32 = 0,
    dynamic_values: ArrayList(DynamicValues),
    skill_index: u32 = 0,
    assist_monster_entity_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .maze_ability_str = fd(1, .String),
        .hit_target_entity_id_list = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
        .target_motion = fd(8, .{ .SubMessage = {} }),
        .attacked_by_entity_id = fd(10, .{ .Varint = .Simple }),
        .skill_extra_tags = fd(3, .{ .List = .{ .Varint = .Simple } }),
        .HCHDHLJCIJE = fd(15, .{ .Varint = .Simple }),
        .assist_monster_entity_info = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .cast_entity_id = fd(12, .{ .Varint = .Simple }),
        .dynamic_values = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .skill_index = fd(13, .{ .Varint = .Simple }),
        .assist_monster_entity_id_list = fd(11, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneCastSkillScRsp = struct {
    retcode: u32 = 0,
    battle_info: ?SceneBattleInfo = null,
    cast_entity_id: u32 = 0,
    monster_battle_info: ArrayList(HitMonsterBattleInfo),

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
        .battle_info = fd(13, .{ .SubMessage = {} }),
        .cast_entity_id = fd(11, .{ .Varint = .Simple }),
        .monster_battle_info = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneCastSkillCostMpCsReq = struct {
    attacked_by_entity_id: u32 = 0,
    cast_entity_id: u32 = 0,
    skill_index: u32 = 0,

    pub const _desc_table = .{
        .attacked_by_entity_id = fd(9, .{ .Varint = .Simple }),
        .cast_entity_id = fd(11, .{ .Varint = .Simple }),
        .skill_index = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneCastSkillCostMpScRsp = struct {
    retcode: u32 = 0,
    cast_entity_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(8, .{ .Varint = .Simple }),
        .cast_entity_id = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneCastSkillMpUpdateScNotify = struct {
    mp: u32 = 0,
    cast_entity_id: u32 = 0,

    pub const _desc_table = .{
        .mp = fd(5, .{ .Varint = .Simple }),
        .cast_entity_id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneEnterStageCsReq = struct {
    rebattle_type: RebattleType = @enumFromInt(0),
    event_id: u32 = 0,
    PMJAHILBLFL: bool = false,

    pub const _desc_table = .{
        .rebattle_type = fd(8, .{ .Varint = .Simple }),
        .event_id = fd(13, .{ .Varint = .Simple }),
        .PMJAHILBLFL = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneEnterStageScRsp = struct {
    retcode: u32 = 0,
    battle_info: ?SceneBattleInfo = null,

    pub const _desc_table = .{
        .retcode = fd(2, .{ .Varint = .Simple }),
        .battle_info = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneReviveAfterRebattleCsReq = struct {
    rebattle_type: RebattleType = @enumFromInt(0),

    pub const _desc_table = .{
        .rebattle_type = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneReviveAfterRebattleScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetCurSceneInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetCurSceneInfoScRsp = struct {
    scene: ?SceneInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .scene = fd(15, .{ .SubMessage = {} }),
        .retcode = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EntityBuffChangeInfo = struct {
    entity_id: u32 = 0,
    cast_entity_id: u32 = 0,
    reason: SceneEntityBuffChangeType = @enumFromInt(0),
    KFELKJLDKEH: ?KFELKJLDKEH_union,

    pub const _KFELKJLDKEH_case = enum {
        buff_change_info,
        remove_buff_id,
    };
    pub const KFELKJLDKEH_union = union(_KFELKJLDKEH_case) {
        buff_change_info: BuffInfo,
        remove_buff_id: u32,
        pub const _union_desc = .{
            .buff_change_info = fd(7, .{ .SubMessage = {} }),
            .remove_buff_id = fd(12, .{ .Varint = .Simple }),
        };
    };

    pub const _desc_table = .{
        .entity_id = fd(3, .{ .Varint = .Simple }),
        .cast_entity_id = fd(6, .{ .Varint = .Simple }),
        .reason = fd(5, .{ .Varint = .Simple }),
        .KFELKJLDKEH = fd(null, .{ .OneOf = KFELKJLDKEH_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncEntityBuffChangeListScNotify = struct {
    entity_buff_change_list: ArrayList(EntityBuffChangeInfo),

    pub const _desc_table = .{
        .entity_buff_change_list = fd(15, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SpringRefreshCsReq = struct {
    floor_id: u32 = 0,
    plane_id: u32 = 0,
    prop_entity_id: u32 = 0,

    pub const _desc_table = .{
        .floor_id = fd(11, .{ .Varint = .Simple }),
        .plane_id = fd(12, .{ .Varint = .Simple }),
        .prop_entity_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SpringRefreshScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LastSpringRefreshTimeNotify = struct {
    JBICINDPIGM: i64 = 0,

    pub const _desc_table = .{
        .JBICINDPIGM = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ReturnLastTownCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ReturnLastTownScRsp = struct {
    retcode: u32 = 0,
    scene: ?SceneInfo = null,

    pub const _desc_table = .{
        .retcode = fd(14, .{ .Varint = .Simple }),
        .scene = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterSectionCsReq = struct {
    section_id: u32 = 0,

    pub const _desc_table = .{
        .section_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterSectionScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetCurInteractEntityCsReq = struct {
    entity_id: u32 = 0,

    pub const _desc_table = .{
        .entity_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetCurInteractEntityScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RecoverAllLineupCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RecoverAllLineupScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SavePointsInfoNotify = struct {
    refresh_time: i64 = 0,
    valid_times: u32 = 0,

    pub const _desc_table = .{
        .refresh_time = fd(12, .{ .Varint = .Simple }),
        .valid_times = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartCocoonStageCsReq = struct {
    world_level: u32 = 0,
    wave: u32 = 0,
    cocoon_id: u32 = 0,
    prop_entity_id: u32 = 0,

    pub const _desc_table = .{
        .world_level = fd(6, .{ .Varint = .Simple }),
        .wave = fd(9, .{ .Varint = .Simple }),
        .cocoon_id = fd(10, .{ .Varint = .Simple }),
        .prop_entity_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartCocoonStageScRsp = struct {
    prop_entity_id: u32 = 0,
    retcode: u32 = 0,
    wave: u32 = 0,
    battle_info: ?SceneBattleInfo = null,
    cocoon_id: u32 = 0,

    pub const _desc_table = .{
        .prop_entity_id = fd(6, .{ .Varint = .Simple }),
        .retcode = fd(7, .{ .Varint = .Simple }),
        .wave = fd(9, .{ .Varint = .Simple }),
        .battle_info = fd(14, .{ .SubMessage = {} }),
        .cocoon_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EntityBindPropCsReq = struct {
    MJJMPIFLMKF: bool = false,
    motion: ?MotionInfo = null,

    pub const _desc_table = .{
        .MJJMPIFLMKF = fd(6, .{ .Varint = .Simple }),
        .motion = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EntityBindPropScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetClientPausedCsReq = struct {
    paused: bool = false,

    pub const _desc_table = .{
        .paused = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetClientPausedScRsp = struct {
    paused: bool = false,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .paused = fd(5, .{ .Varint = .Simple }),
        .retcode = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DeactivateFarmElementCsReq = struct {
    entity_id: u32 = 0,

    pub const _desc_table = .{
        .entity_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DeactivateFarmElementScRsp = struct {
    entity_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .entity_id = fd(10, .{ .Varint = .Simple }),
        .retcode = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ActivateFarmElementCsReq = struct {
    entity_id: u32 = 0,
    world_level: u32 = 0,

    pub const _desc_table = .{
        .entity_id = fd(11, .{ .Varint = .Simple }),
        .world_level = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ActivateFarmElementScRsp = struct {
    world_level: u32 = 0,
    entity_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .world_level = fd(14, .{ .Varint = .Simple }),
        .entity_id = fd(13, .{ .Varint = .Simple }),
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AvatarPresetHp = struct {
    avatar_id: u32 = 0,
    JLAFLDCHDGJ: u32 = 0,

    pub const _desc_table = .{
        .avatar_id = fd(8, .{ .Varint = .Simple }),
        .JLAFLDCHDGJ = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SpringRecoverConfig = struct {
    EIDNIGIFNAA: u32 = 0,
    GHDEPANCGPF: bool = false,
    BCGLMLABOGF: ArrayList(AvatarPresetHp),

    pub const _desc_table = .{
        .EIDNIGIFNAA = fd(12, .{ .Varint = .Simple }),
        .GHDEPANCGPF = fd(10, .{ .Varint = .Simple }),
        .BCGLMLABOGF = fd(2, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdateMechanismBarScNotify = struct {
    plane_id: u32 = 0,
    floor_id: u32 = 0,
    GIGKDAPGNME: ?MechanismBarInfo = null,

    pub const _desc_table = .{
        .plane_id = fd(1, .{ .Varint = .Simple }),
        .floor_id = fd(10, .{ .Varint = .Simple }),
        .GIGKDAPGNME = fd(4, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetGroupCustomSaveDataCsReq = struct {
    entry_id: u32 = 0,
    group_id: u32 = 0,
    save_data: ManagedString = .Empty,

    pub const _desc_table = .{
        .entry_id = fd(2, .{ .Varint = .Simple }),
        .group_id = fd(12, .{ .Varint = .Simple }),
        .save_data = fd(15, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetGroupCustomSaveDataScRsp = struct {
    entry_id: u32 = 0,
    retcode: u32 = 0,
    group_id: u32 = 0,

    pub const _desc_table = .{
        .entry_id = fd(7, .{ .Varint = .Simple }),
        .retcode = fd(2, .{ .Varint = .Simple }),
        .group_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ReEnterLastElementStageCsReq = struct {
    stage_id: u32 = 0,

    pub const _desc_table = .{
        .stage_id = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ReEnterLastElementStageScRsp = struct {
    stage_id: u32 = 0,
    retcode: u32 = 0,
    battle_info: ?SceneBattleInfo = null,

    pub const _desc_table = .{
        .stage_id = fd(10, .{ .Varint = .Simple }),
        .retcode = fd(7, .{ .Varint = .Simple }),
        .battle_info = fd(9, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneEntityTeleportCsReq = struct {
    entity_motion: ?EntityMotion = null,
    entry_id: u32 = 0,

    pub const _desc_table = .{
        .entity_motion = fd(12, .{ .SubMessage = {} }),
        .entry_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneEntityTeleportScRsp = struct {
    retcode: u32 = 0,
    client_pos_version: u32 = 0,
    entity_motion: ?EntityMotion = null,

    pub const _desc_table = .{
        .retcode = fd(2, .{ .Varint = .Simple }),
        .client_pos_version = fd(13, .{ .Varint = .Simple }),
        .entity_motion = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterSceneCsReq = struct {
    entry_id: u32 = 0,
    game_story_line_id: u32 = 0,
    is_close_map: bool = false,
    content_id: u32 = 0,
    teleport_id: u32 = 0,

    pub const _desc_table = .{
        .entry_id = fd(9, .{ .Varint = .Simple }),
        .game_story_line_id = fd(6, .{ .Varint = .Simple }),
        .is_close_map = fd(15, .{ .Varint = .Simple }),
        .content_id = fd(2, .{ .Varint = .Simple }),
        .teleport_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterSceneScRsp = struct {
    game_story_line_id: u32 = 0,
    is_over_map: bool = false,
    retcode: u32 = 0,
    is_close_map: bool = false,
    content_id: u32 = 0,

    pub const _desc_table = .{
        .game_story_line_id = fd(4, .{ .Varint = .Simple }),
        .is_over_map = fd(2, .{ .Varint = .Simple }),
        .retcode = fd(1, .{ .Varint = .Simple }),
        .is_close_map = fd(13, .{ .Varint = .Simple }),
        .content_id = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterSceneByServerScNotify = struct {
    reason: EnterSceneReason = @enumFromInt(0),
    scene: ?SceneInfo = null,
    lineup: ?LineupInfo = null,

    pub const _desc_table = .{
        .reason = fd(13, .{ .Varint = .Simple }),
        .scene = fd(12, .{ .SubMessage = {} }),
        .lineup = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ScenePlaneEventScNotify = struct {
    get_item_list: ?ItemList = null,
    MHDJADHNDKD: ?ItemList = null,
    MEEKFPCOBAI: ?ItemList = null,
    EPOJGHEBPKC: ?ItemList = null,

    pub const _desc_table = .{
        .get_item_list = fd(11, .{ .SubMessage = {} }),
        .MHDJADHNDKD = fd(2, .{ .SubMessage = {} }),
        .MEEKFPCOBAI = fd(7, .{ .SubMessage = {} }),
        .EPOJGHEBPKC = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetSceneMapInfoCsReq = struct {
    floor_id_list: ArrayList(u32),
    IGFIKGHLLNO: bool = false,
    entry_id_list: ArrayList(u32),
    content_id: u32 = 0,
    entry_story_line_id: u32 = 0,

    pub const _desc_table = .{
        .floor_id_list = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
        .IGFIKGHLLNO = fd(11, .{ .Varint = .Simple }),
        .entry_id_list = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        .content_id = fd(10, .{ .Varint = .Simple }),
        .entry_story_line_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MazePropState = struct {
    config_id: u32 = 0,
    state: u32 = 0,
    group_id: u32 = 0,

    pub const _desc_table = .{
        .config_id = fd(9, .{ .Varint = .Simple }),
        .state = fd(11, .{ .Varint = .Simple }),
        .group_id = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OFCAIGDHPOH = struct {
    extra_info: ?PropExtraInfo = null,
    group_id: u32 = 0,
    config_id: u32 = 0,
    state: u32 = 0,

    pub const _desc_table = .{
        .extra_info = fd(10, .{ .SubMessage = {} }),
        .group_id = fd(15, .{ .Varint = .Simple }),
        .config_id = fd(3, .{ .Varint = .Simple }),
        .state = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MazeGroup = struct {
    group_id: u32 = 0,
    INLDCCLIOAN: i64 = 0,
    NOBKEONAKLE: ArrayList(u32),
    ILBEAAOOJJP: bool = false,

    pub const _desc_table = .{
        .group_id = fd(14, .{ .Varint = .Simple }),
        .INLDCCLIOAN = fd(4, .{ .Varint = .Simple }),
        .NOBKEONAKLE = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .ILBEAAOOJJP = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChestInfo = struct {
    exist_num: u32 = 0,
    opened_num: u32 = 0,
    chest_type: ChestType = @enumFromInt(0),

    pub const _desc_table = .{
        .exist_num = fd(8, .{ .Varint = .Simple }),
        .opened_num = fd(2, .{ .Varint = .Simple }),
        .chest_type = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NPAOGKFKAAE = struct {
    type: u32 = 0,
    FLJINDNJPHL: u32 = 0,
    FOKCIFJMJGL: u32 = 0,

    pub const _desc_table = .{
        .type = fd(4, .{ .Varint = .Simple }),
        .FLJINDNJPHL = fd(10, .{ .Varint = .Simple }),
        .FOKCIFJMJGL = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneMapInfo = struct {
    chest_list: ArrayList(ChestInfo),
    LMNGAHFNAON: ArrayList(OFCAIGDHPOH),
    JMLDMOCNMHM: ArrayList(NPAOGKFKAAE),
    entry_id: u32 = 0,
    dimension_id: u32 = 0,
    floor_id: u32 = 0,
    retcode: u32 = 0,
    cur_map_entry_id: u32 = 0,
    maze_prop_list: ArrayList(MazePropState),
    floor_saved_data: ArrayList(FloorSavedDataEntry),
    unlock_teleport_list: ArrayList(u32),
    maze_group_list: ArrayList(MazeGroup),
    lighten_section_list: ArrayList(u32),

    pub const _desc_table = .{
        .chest_list = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .LMNGAHFNAON = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .JMLDMOCNMHM = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .entry_id = fd(9, .{ .Varint = .Simple }),
        .dimension_id = fd(6, .{ .Varint = .Simple }),
        .floor_id = fd(14, .{ .Varint = .Simple }),
        .retcode = fd(7, .{ .Varint = .Simple }),
        .cur_map_entry_id = fd(4, .{ .Varint = .Simple }),
        .maze_prop_list = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .floor_saved_data = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .unlock_teleport_list = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
        .maze_group_list = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .lighten_section_list = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub const FloorSavedDataEntry = struct {
        key: ManagedString = .Empty,
        value: i32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .String),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetSceneMapInfoScRsp = struct {
    entry_story_line_id: u32 = 0,
    scene_map_info: ArrayList(SceneMapInfo),
    content_id: u32 = 0,
    IGFIKGHLLNO: bool = false,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .entry_story_line_id = fd(6, .{ .Varint = .Simple }),
        .scene_map_info = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .content_id = fd(3, .{ .Varint = .Simple }),
        .IGFIKGHLLNO = fd(14, .{ .Varint = .Simple }),
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncServerSceneChangeNotify = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GameplayCounterCountDownCsReq = struct {
    NMGLNHPANAH: u32 = 0,
    cur_times: u32 = 0,

    pub const _desc_table = .{
        .NMGLNHPANAH = fd(14, .{ .Varint = .Simple }),
        .cur_times = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GameplayCounterCountDownScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GameplayCounterUpdateScNotify = struct {
    NMGLNHPANAH: u32 = 0,
    reason: GameplayCounterUpdateReason = @enumFromInt(0),
    BLOGJDCKAHM: u32 = 0,

    pub const _desc_table = .{
        .NMGLNHPANAH = fd(11, .{ .Varint = .Simple }),
        .reason = fd(7, .{ .Varint = .Simple }),
        .BLOGJDCKAHM = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GameplayCounterRecoverCsReq = struct {
    NMGLNHPANAH: u32 = 0,
    LABOODDALOE: u32 = 0,

    pub const _desc_table = .{
        .NMGLNHPANAH = fd(10, .{ .Varint = .Simple }),
        .LABOODDALOE = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GameplayCounterRecoverScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdateFloorSavedValueNotify = struct {
    dimension_id: u32 = 0,
    floor_id: u32 = 0,
    plane_id: u32 = 0,
    saved_value: ArrayList(SavedValueEntry),

    pub const _desc_table = .{
        .dimension_id = fd(6, .{ .Varint = .Simple }),
        .floor_id = fd(10, .{ .Varint = .Simple }),
        .plane_id = fd(5, .{ .Varint = .Simple }),
        .saved_value = fd(11, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const SavedValueEntry = struct {
        key: ManagedString = .Empty,
        value: i32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .String),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetUnlockTeleportCsReq = struct {
    entry_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .entry_id_list = fd(11, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetUnlockTeleportScRsp = struct {
    unlock_teleport_list: ArrayList(u32),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .unlock_teleport_list = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OpenChestScNotify = struct {
    chest_id: u32 = 0,

    pub const _desc_table = .{
        .chest_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneEntityRefreshInfo = struct {
    BOBJACMDBMN: ?BOBJACMDBMN_union,

    pub const _BOBJACMDBMN_case = enum {
        add_entity,
        delete_entity,
        MHHOAAHDGAO,
    };
    pub const BOBJACMDBMN_union = union(_BOBJACMDBMN_case) {
        add_entity: SceneEntityInfo,
        delete_entity: u32,
        MHHOAAHDGAO: u32,
        pub const _union_desc = .{
            .add_entity = fd(1, .{ .SubMessage = {} }),
            .delete_entity = fd(15, .{ .Varint = .Simple }),
            .MHHOAAHDGAO = fd(12, .{ .Varint = .Simple }),
        };
    };

    pub const _desc_table = .{
        .BOBJACMDBMN = fd(null, .{ .OneOf = BOBJACMDBMN_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CMGFHBHAFFB = struct {
    JAIBIEEKHEG: ManagedString = .Empty,
    AGFIJNIEBKF: i32 = 0,
    DLMAMKINNCO: i32 = 0,

    pub const _desc_table = .{
        .JAIBIEEKHEG = fd(3, .String),
        .AGFIJNIEBKF = fd(12, .{ .Varint = .Simple }),
        .DLMAMKINNCO = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GroupRefreshInfo = struct {
    BCCGJIHNCDN: ArrayList(CMGFHBHAFFB),
    group_id: u32 = 0,
    state: u32 = 0,
    refresh_entity: ArrayList(SceneEntityRefreshInfo),
    refresh_type: SceneGroupRefreshType = @enumFromInt(0),

    pub const _desc_table = .{
        .BCCGJIHNCDN = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .group_id = fd(7, .{ .Varint = .Simple }),
        .state = fd(13, .{ .Varint = .Simple }),
        .refresh_entity = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .refresh_type = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SceneGroupRefreshScNotify = struct {
    floor_id: u32 = 0,
    group_refresh_list: ArrayList(GroupRefreshInfo),
    dimension_id: u32 = 0,

    pub const _desc_table = .{
        .floor_id = fd(15, .{ .Varint = .Simple }),
        .group_refresh_list = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .dimension_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GroupStateInfo = struct {
    entry_id: u32 = 0,
    GDNOPAABGHF: u32 = 0,
    group_state: u32 = 0,
    group_id: u32 = 0,

    pub const _desc_table = .{
        .entry_id = fd(10, .{ .Varint = .Simple }),
        .GDNOPAABGHF = fd(9, .{ .Varint = .Simple }),
        .group_state = fd(7, .{ .Varint = .Simple }),
        .group_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GroupStateChangeCsReq = struct {
    group_state_info: ?GroupStateInfo = null,

    pub const _desc_table = .{
        .group_state_info = fd(15, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GroupStateChangeScRsp = struct {
    group_state_info: ?GroupStateInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .group_state_info = fd(1, .{ .SubMessage = {} }),
        .retcode = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GroupStateChangeScNotify = struct {
    group_state_info: ?GroupStateInfo = null,

    pub const _desc_table = .{
        .group_state_info = fd(15, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnteredSceneInfo = struct {
    plane_id: u32 = 0,
    floor_id: u32 = 0,

    pub const _desc_table = .{
        .plane_id = fd(12, .{ .Varint = .Simple }),
        .floor_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetEnteredSceneCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetEnteredSceneScRsp = struct {
    retcode: u32 = 0,
    entered_scene_info_list: ArrayList(EnteredSceneInfo),

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
        .entered_scene_info_list = fd(15, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnteredSceneChangeScNotify = struct {
    entered_scene_info_list: ArrayList(EnteredSceneInfo),

    pub const _desc_table = .{
        .entered_scene_info_list = fd(12, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RefreshTriggerByClientCsReq = struct {
    trigger_entity_id: u32 = 0,
    trigger_motion: ?MotionInfo = null,
    trigger_name: ManagedString = .Empty,
    trigger_target_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .trigger_entity_id = fd(5, .{ .Varint = .Simple }),
        .trigger_motion = fd(12, .{ .SubMessage = {} }),
        .trigger_name = fd(11, .String),
        .trigger_target_id_list = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RefreshTriggerByClientScRsp = struct {
    refresh_trigger: bool = false,
    retcode: u32 = 0,
    trigger_name: ManagedString = .Empty,
    trigger_entity_id: u32 = 0,

    pub const _desc_table = .{
        .refresh_trigger = fd(6, .{ .Varint = .Simple }),
        .retcode = fd(15, .{ .Varint = .Simple }),
        .trigger_name = fd(9, .String),
        .trigger_entity_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RefreshTriggerByClientScNotify = struct {
    trigger_target_id_list: ArrayList(u32),
    trigger_entity_id: u32 = 0,
    trigger_name: ManagedString = .Empty,

    pub const _desc_table = .{
        .trigger_target_id_list = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .trigger_entity_id = fd(5, .{ .Varint = .Simple }),
        .trigger_name = fd(1, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DeleteSummonUnitCsReq = struct {
    entity_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .entity_id_list = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DeleteSummonUnitScRsp = struct {
    entity_id_list: ArrayList(u32),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .entity_id_list = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UnlockedAreaMapScNotify = struct {
    entry_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .entry_id_list = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UnlockTeleportNotify = struct {
    entry_id: u32 = 0,
    teleport_id: u32 = 0,

    pub const _desc_table = .{
        .entry_id = fd(4, .{ .Varint = .Simple }),
        .teleport_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdateGroupPropertyCsReq = struct {
    MOJOHJEBCNJ: i32 = 0,
    dimension_id: u32 = 0,
    group_id: u32 = 0,
    floor_id: u32 = 0,
    JAIBIEEKHEG: ManagedString = .Empty,

    pub const _desc_table = .{
        .MOJOHJEBCNJ = fd(3, .{ .Varint = .Simple }),
        .dimension_id = fd(2, .{ .Varint = .Simple }),
        .group_id = fd(10, .{ .Varint = .Simple }),
        .floor_id = fd(12, .{ .Varint = .Simple }),
        .JAIBIEEKHEG = fd(4, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdateGroupPropertyScRsp = struct {
    AGFIJNIEBKF: i32 = 0,
    JAIBIEEKHEG: ManagedString = .Empty,
    dimension_id: u32 = 0,
    retcode: u32 = 0,
    group_id: u32 = 0,
    floor_id: u32 = 0,
    DLMAMKINNCO: i32 = 0,

    pub const _desc_table = .{
        .AGFIJNIEBKF = fd(1, .{ .Varint = .Simple }),
        .JAIBIEEKHEG = fd(15, .String),
        .dimension_id = fd(4, .{ .Varint = .Simple }),
        .retcode = fd(5, .{ .Varint = .Simple }),
        .group_id = fd(2, .{ .Varint = .Simple }),
        .floor_id = fd(6, .{ .Varint = .Simple }),
        .DLMAMKINNCO = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainWorldIdChangeScNotify = struct {
    NPEBNEKDLEN: u32 = 0,

    pub const _desc_table = .{
        .NPEBNEKDLEN = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ServerPrefs = struct {
    server_prefs_id: u32 = 0,
    data: ManagedString = .Empty,

    pub const _desc_table = .{
        .server_prefs_id = fd(11, .{ .Varint = .Simple }),
        .data = fd(15, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetAllServerPrefsDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetAllServerPrefsDataScRsp = struct {
    server_prefs_list: ArrayList(ServerPrefs),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .server_prefs_list = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetServerPrefsDataCsReq = struct {
    server_prefs_id: u32 = 0,

    pub const _desc_table = .{
        .server_prefs_id = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetServerPrefsDataScRsp = struct {
    server_prefs: ?ServerPrefs = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .server_prefs = fd(2, .{ .SubMessage = {} }),
        .retcode = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdateServerPrefsDataCsReq = struct {
    server_prefs: ?ServerPrefs = null,

    pub const _desc_table = .{
        .server_prefs = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UpdateServerPrefsDataScRsp = struct {
    retcode: u32 = 0,
    server_prefs_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(5, .{ .Varint = .Simple }),
        .server_prefs_id = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Shop = struct {
    begin_time: i64 = 0,
    end_time: i64 = 0,
    shop_id: u32 = 0,
    city_level: u32 = 0,
    city_taken_level_reward: u64 = 0,
    city_exp: u32 = 0,
    goods_list: ArrayList(Goods),

    pub const _desc_table = .{
        .begin_time = fd(12, .{ .Varint = .Simple }),
        .end_time = fd(11, .{ .Varint = .Simple }),
        .shop_id = fd(13, .{ .Varint = .Simple }),
        .city_level = fd(5, .{ .Varint = .Simple }),
        .city_taken_level_reward = fd(10, .{ .Varint = .Simple }),
        .city_exp = fd(9, .{ .Varint = .Simple }),
        .goods_list = fd(3, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Goods = struct {
    buy_times: u32 = 0,
    item_id: u32 = 0,
    end_time: i64 = 0,
    goods_id: u32 = 0,
    begin_time: i64 = 0,

    pub const _desc_table = .{
        .buy_times = fd(8, .{ .Varint = .Simple }),
        .item_id = fd(4, .{ .Varint = .Simple }),
        .end_time = fd(11, .{ .Varint = .Simple }),
        .goods_id = fd(7, .{ .Varint = .Simple }),
        .begin_time = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetShopListCsReq = struct {
    shop_type: u32 = 0,

    pub const _desc_table = .{
        .shop_type = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetShopListScRsp = struct {
    shop_list: ArrayList(Shop),
    shop_type: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .shop_list = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .shop_type = fd(6, .{ .Varint = .Simple }),
        .retcode = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BuyGoodsCsReq = struct {
    FMPNHEAIMDN: ArrayList(u32),
    goods_num: u32 = 0,
    interacted_prop_entity_id: u32 = 0,
    goods_id: u32 = 0,
    item_id: u32 = 0,
    shop_id: u32 = 0,

    pub const _desc_table = .{
        .FMPNHEAIMDN = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
        .goods_num = fd(11, .{ .Varint = .Simple }),
        .interacted_prop_entity_id = fd(6, .{ .Varint = .Simple }),
        .goods_id = fd(1, .{ .Varint = .Simple }),
        .item_id = fd(9, .{ .Varint = .Simple }),
        .shop_id = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BuyGoodsScRsp = struct {
    retcode: u32 = 0,
    goods_id: u32 = 0,
    return_item_list: ?ItemList = null,
    goods_buy_times: u32 = 0,
    shop_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(2, .{ .Varint = .Simple }),
        .goods_id = fd(9, .{ .Varint = .Simple }),
        .return_item_list = fd(4, .{ .SubMessage = {} }),
        .goods_buy_times = fd(3, .{ .Varint = .Simple }),
        .shop_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeCityShopRewardCsReq = struct {
    level: u32 = 0,
    shop_id: u32 = 0,

    pub const _desc_table = .{
        .level = fd(2, .{ .Varint = .Simple }),
        .shop_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeCityShopRewardScRsp = struct {
    level: u32 = 0,
    shop_id: u32 = 0,
    reward: ?ItemList = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .level = fd(14, .{ .Varint = .Simple }),
        .shop_id = fd(3, .{ .Varint = .Simple }),
        .reward = fd(12, .{ .SubMessage = {} }),
        .retcode = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CityShopInfoScNotify = struct {
    shop_id: u32 = 0,
    exp: u32 = 0,
    taken_level_reward: u64 = 0,
    level: u32 = 0,

    pub const _desc_table = .{
        .shop_id = fd(6, .{ .Varint = .Simple }),
        .exp = fd(1, .{ .Varint = .Simple }),
        .taken_level_reward = fd(2, .{ .Varint = .Simple }),
        .level = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FAFGMLPADMI = struct {
    HALBHKNPIKH: bool = false,
    unique_id: u32 = 0,
    BEJEEDAEBBE: u32 = 0,
    item_list: ArrayList(u32),
    IGJCPPKAIBI: ArrayList(u32),
    FCLNOOGEHMC: u32 = 0,

    pub const _desc_table = .{
        .HALBHKNPIKH = fd(3, .{ .Varint = .Simple }),
        .unique_id = fd(8, .{ .Varint = .Simple }),
        .BEJEEDAEBBE = fd(11, .{ .Varint = .Simple }),
        .item_list = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .IGJCPPKAIBI = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
        .FCLNOOGEHMC = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IPJAIINEGEL = struct {
    ECBALMAEBJC: u32 = 0,
    BEJEEDAEBBE: u32 = 0,

    pub const _desc_table = .{
        .ECBALMAEBJC = fd(10, .{ .Varint = .Simple }),
        .BEJEEDAEBBE = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SpaceZooDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SpaceZooDataScRsp = struct {
    KMOADEOGAPA: ArrayList(u32),
    AAGIHKBFMFI: ArrayList(FAFGMLPADMI),
    KJFHKICGGDE: ArrayList(u32),
    INIHLANCNFI: ArrayList(IPJAIINEGEL),
    retcode: u32 = 0,
    PMCMECDLEMC: ArrayList(u32),
    BNHNDBNABFN: ArrayList(u32),
    PBLCAHNMFJG: u32 = 0,
    DPLKBEEHPLB: ArrayList(u32),

    pub const _desc_table = .{
        .KMOADEOGAPA = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .AAGIHKBFMFI = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .KJFHKICGGDE = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
        .INIHLANCNFI = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(14, .{ .Varint = .Simple }),
        .PMCMECDLEMC = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
        .BNHNDBNABFN = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
        .PBLCAHNMFJG = fd(13, .{ .Varint = .Simple }),
        .DPLKBEEHPLB = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SpaceZooBornCsReq = struct {
    HDCBACOOIND: ArrayList(u32),
    LHEONPHGBNB: u32 = 0,

    pub const _desc_table = .{
        .HDCBACOOIND = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .LHEONPHGBNB = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SpaceZooBornScRsp = struct {
    GOEAOFNFJOD: ArrayList(IPJAIINEGEL),
    KPKDHGHDGNB: ?FAFGMLPADMI = null,
    retcode: u32 = 0,
    IKLPNCGBPPC: bool = false,

    pub const _desc_table = .{
        .GOEAOFNFJOD = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .KPKDHGHDGNB = fd(1, .{ .SubMessage = {} }),
        .retcode = fd(14, .{ .Varint = .Simple }),
        .IKLPNCGBPPC = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SpaceZooMutateCsReq = struct {
    unique_id: u32 = 0,
    item_id: u32 = 0,

    pub const _desc_table = .{
        .unique_id = fd(14, .{ .Varint = .Simple }),
        .item_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SpaceZooMutateScRsp = struct {
    retcode: u32 = 0,
    EFLCMHMAJAL: ?FAFGMLPADMI = null,
    GOEAOFNFJOD: ArrayList(IPJAIINEGEL),
    IKLPNCGBPPC: bool = false,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
        .EFLCMHMAJAL = fd(9, .{ .SubMessage = {} }),
        .GOEAOFNFJOD = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .IKLPNCGBPPC = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SpaceZooOpCatteryCsReq = struct {
    NILEEDJLGIN: u32 = 0,
    op_type: u32 = 0,
    ALGEIENIOAN: u32 = 0,

    pub const _desc_table = .{
        .NILEEDJLGIN = fd(5, .{ .Varint = .Simple }),
        .op_type = fd(7, .{ .Varint = .Simple }),
        .ALGEIENIOAN = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SpaceZooOpCatteryScRsp = struct {
    KJFHKICGGDE: ArrayList(u32),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .KJFHKICGGDE = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SpaceZooDeleteCatCsReq = struct {
    DEJAOOEBBHA: ArrayList(u32),

    pub const _desc_table = .{
        .DEJAOOEBBHA = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SpaceZooDeleteCatScRsp = struct {
    NFHEAGELICI: ArrayList(u32),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .NFHEAGELICI = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SpaceZooCatUpdateNotify = struct {
    FPMNCAGJEBG: bool = false,
    IKLPNCGBPPC: bool = false,
    AIKMBPPNOKD: ArrayList(FAFGMLPADMI),

    pub const _desc_table = .{
        .FPMNCAGJEBG = fd(8, .{ .Varint = .Simple }),
        .IKLPNCGBPPC = fd(7, .{ .Varint = .Simple }),
        .AIKMBPPNOKD = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SpaceZooExchangeItemCsReq = struct {
    item_id: u32 = 0,

    pub const _desc_table = .{
        .item_id = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SpaceZooExchangeItemScRsp = struct {
    retcode: u32 = 0,
    item_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(2, .{ .Varint = .Simple }),
        .item_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SpaceZooTakeCsReq = struct {
    HLNMAJIDIFD: u32 = 0,

    pub const _desc_table = .{
        .HLNMAJIDIFD = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SpaceZooTakeScRsp = struct {
    HLNMAJIDIFD: u32 = 0,
    reward: ?ItemList = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .HLNMAJIDIFD = fd(12, .{ .Varint = .Simple }),
        .reward = fd(9, .{ .SubMessage = {} }),
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MJCJAIKPLLM = struct {
    ACELAGJPHMA: bool = false,
    CBINDIAAMJG: u32 = 0,
    group_id: u32 = 0,
    MPAECAPOHEO: u32 = 0,
    IFANGMHNKBB: u32 = 0,

    pub const _desc_table = .{
        .ACELAGJPHMA = fd(14, .{ .Varint = .Simple }),
        .CBINDIAAMJG = fd(15, .{ .Varint = .Simple }),
        .group_id = fd(8, .{ .Varint = .Simple }),
        .MPAECAPOHEO = fd(11, .{ .Varint = .Simple }),
        .IFANGMHNKBB = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetStarFightDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetStarFightDataScRsp = struct {
    retcode: u32 = 0,
    BDIIMMHJLCN: ArrayList(MJCJAIKPLLM),

    pub const _desc_table = .{
        .retcode = fd(2, .{ .Varint = .Simple }),
        .BDIIMMHJLCN = fd(10, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AEDAOIFFIGN = struct {
    avatar_type: AvatarType = @enumFromInt(0),
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .avatar_type = fd(15, .{ .Varint = .Simple }),
        .avatar_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartStarFightLevelCsReq = struct {
    NEDFIBONLKB: u32 = 0,
    avatar_list: ArrayList(AEDAOIFFIGN),
    group_id: u32 = 0,

    pub const _desc_table = .{
        .NEDFIBONLKB = fd(13, .{ .Varint = .Simple }),
        .avatar_list = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .group_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartStarFightLevelScRsp = struct {
    NEDFIBONLKB: u32 = 0,
    battle_info: ?SceneBattleInfo = null,
    group_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .NEDFIBONLKB = fd(14, .{ .Varint = .Simple }),
        .battle_info = fd(15, .{ .SubMessage = {} }),
        .group_id = fd(5, .{ .Varint = .Simple }),
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StarFightDataChangeNotify = struct {
    group_id: u32 = 0,
    FMCDALALFIA: ?MJCJAIKPLLM = null,

    pub const _desc_table = .{
        .group_id = fd(2, .{ .Varint = .Simple }),
        .FMCDALALFIA = fd(15, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetStoryLineInfoCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetStoryLineInfoScRsp = struct {
    unfinished_story_line_id_list: ArrayList(u32),
    cur_story_line_id: u32 = 0,
    retcode: u32 = 0,
    trial_avatar_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .unfinished_story_line_id_list = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
        .cur_story_line_id = fd(13, .{ .Varint = .Simple }),
        .retcode = fd(2, .{ .Varint = .Simple }),
        .trial_avatar_id_list = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StoryLineInfoScNotify = struct {
    trial_avatar_id_list: ArrayList(u32),
    unfinished_story_line_id_list: ArrayList(u32),
    FIMCEJGDAGF: u32 = 0,
    cur_story_line_id: u32 = 0,

    pub const _desc_table = .{
        .trial_avatar_id_list = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
        .unfinished_story_line_id_list = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
        .FIMCEJGDAGF = fd(3, .{ .Varint = .Simple }),
        .cur_story_line_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChangeStoryLineFinishScNotify = struct {
    cur_story_line_id: u32 = 0,
    KOOCCEIGHMA: bool = false,
    KIDKHJECJLF: u32 = 0,
    action: ChangeStoryLineAction = @enumFromInt(0),

    pub const _desc_table = .{
        .cur_story_line_id = fd(14, .{ .Varint = .Simple }),
        .KOOCCEIGHMA = fd(7, .{ .Varint = .Simple }),
        .KIDKHJECJLF = fd(5, .{ .Varint = .Simple }),
        .action = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StoryLineTrialAvatarChangeScNotify = struct {
    CLIIGMNMHNA: bool = false,
    KFMFFGGJMNE: ArrayList(u32),
    IBLBNIANPHD: ArrayList(u32),

    pub const _desc_table = .{
        .CLIIGMNMHNA = fd(6, .{ .Varint = .Simple }),
        .KFMFFGGJMNE = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .IBLBNIANPHD = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StrongChallengeAvatar = struct {
    avatar_type: AvatarType = @enumFromInt(0),
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .avatar_type = fd(6, .{ .Varint = .Simple }),
        .avatar_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JPFJGFOPKHB = struct {
    buff_list: ArrayList(u32),
    avatar_list: ArrayList(StrongChallengeAvatar),

    pub const _desc_table = .{
        .buff_list = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
        .avatar_list = fd(3, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CAAAKPFOEJI = struct {
    max_score: u32 = 0,
    JGBAINFDBAN: u32 = 0,
    stage_id: u32 = 0,
    panel_id: u32 = 0,
    AHINPCKGKJG: ?JPFJGFOPKHB = null,

    pub const _desc_table = .{
        .max_score = fd(1, .{ .Varint = .Simple }),
        .JGBAINFDBAN = fd(14, .{ .Varint = .Simple }),
        .stage_id = fd(8, .{ .Varint = .Simple }),
        .panel_id = fd(11, .{ .Varint = .Simple }),
        .AHINPCKGKJG = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HLKGCNFCCIA = struct {
    ALCEDMLHFLM: ArrayList(ALCEDMLHFLMEntry),

    pub const _desc_table = .{
        .ALCEDMLHFLM = fd(4, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const ALCEDMLHFLMEntry = struct {
        key: u32 = 0,
        value: ?CAAAKPFOEJI = null,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetStrongChallengeActivityDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetStrongChallengeActivityDataScRsp = struct {
    GIILGFFKHDA: ?HLKGCNFCCIA = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .GIILGFFKHDA = fd(11, .{ .SubMessage = {} }),
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterStrongChallengeActivityStageCsReq = struct {
    stage_id: u32 = 0,
    avatar_list: ArrayList(StrongChallengeAvatar),
    buff_list: ArrayList(u32),

    pub const _desc_table = .{
        .stage_id = fd(3, .{ .Varint = .Simple }),
        .avatar_list = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .buff_list = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterStrongChallengeActivityStageScRsp = struct {
    battle_info: ?SceneBattleInfo = null,
    retcode: u32 = 0,
    stage_id: u32 = 0,

    pub const _desc_table = .{
        .battle_info = fd(12, .{ .SubMessage = {} }),
        .retcode = fd(5, .{ .Varint = .Simple }),
        .stage_id = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StrongChallengeActivityBattleEndScNotify = struct {
    stage_id: u32 = 0,
    AHJFPNGDBDO: u32 = 0,
    end_status: BattleEndStatus = @enumFromInt(0),
    JAMLOKNCAKC: u32 = 0,
    max_score: u32 = 0,
    score_id: u32 = 0,
    total_damage: u32 = 0,
    GGBECCHPHCD: u32 = 0,

    pub const _desc_table = .{
        .stage_id = fd(2, .{ .Varint = .Simple }),
        .AHJFPNGDBDO = fd(12, .{ .Varint = .Simple }),
        .end_status = fd(9, .{ .Varint = .Simple }),
        .JAMLOKNCAKC = fd(1, .{ .Varint = .Simple }),
        .max_score = fd(7, .{ .Varint = .Simple }),
        .score_id = fd(6, .{ .Varint = .Simple }),
        .total_damage = fd(4, .{ .Varint = .Simple }),
        .GGBECCHPHCD = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PGBHMOLFBMM = struct {
    group_id: u32 = 0,
    NEDFIBONLKB: u32 = 0,
    star: u32 = 0,

    pub const _desc_table = .{
        .group_id = fd(6, .{ .Varint = .Simple }),
        .NEDFIBONLKB = fd(10, .{ .Varint = .Simple }),
        .star = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetSummonActivityDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetSummonActivityDataScRsp = struct {
    retcode: u32 = 0,
    JHOMKEMCDMG: ArrayList(PGBHMOLFBMM),

    pub const _desc_table = .{
        .retcode = fd(11, .{ .Varint = .Simple }),
        .JHOMKEMCDMG = fd(13, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ONOEPLFNELL = struct {
    avatar_id: u32 = 0,
    avatar_type: AvatarType = @enumFromInt(0),

    pub const _desc_table = .{
        .avatar_id = fd(9, .{ .Varint = .Simple }),
        .avatar_type = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterSummonActivityStageCsReq = struct {
    NEDFIBONLKB: u32 = 0,
    group_id: u32 = 0,
    MNOEDECLHBJ: ?ONOEPLFNELL = null,
    avatar_list: ArrayList(ONOEPLFNELL),

    pub const _desc_table = .{
        .NEDFIBONLKB = fd(15, .{ .Varint = .Simple }),
        .group_id = fd(2, .{ .Varint = .Simple }),
        .MNOEDECLHBJ = fd(1, .{ .SubMessage = {} }),
        .avatar_list = fd(9, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterSummonActivityStageScRsp = struct {
    retcode: u32 = 0,
    battle_info: ?SceneBattleInfo = null,
    NEDFIBONLKB: u32 = 0,
    group_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(14, .{ .Varint = .Simple }),
        .battle_info = fd(11, .{ .SubMessage = {} }),
        .NEDFIBONLKB = fd(2, .{ .Varint = .Simple }),
        .group_id = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SummonActivityBattleEndScNotify = struct {
    group_id: u32 = 0,
    star: u32 = 0,
    HMFFHGBKOGL: u32 = 0,
    NEDFIBONLKB: u32 = 0,

    pub const _desc_table = .{
        .group_id = fd(5, .{ .Varint = .Simple }),
        .star = fd(8, .{ .Varint = .Simple }),
        .HMFFHGBKOGL = fd(2, .{ .Varint = .Simple }),
        .NEDFIBONLKB = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HandInfo = struct {
    config_id: u32 = 0,
    MCBIOHMIMGN: u32 = 0,
    MJNNBLCDCBJ: ManagedString = .Empty,
    OFOLPKMALGI: ?MotionInfo = null,
    GFJIIABANLM: u32 = 0,

    pub const _desc_table = .{
        .config_id = fd(15, .{ .Varint = .Simple }),
        .MCBIOHMIMGN = fd(10, .{ .Varint = .Simple }),
        .MJNNBLCDCBJ = fd(9, .String),
        .OFOLPKMALGI = fd(7, .{ .SubMessage = {} }),
        .GFJIIABANLM = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwitchHandDataCsReq = struct {
    config_id: u32 = 0,

    pub const _desc_table = .{
        .config_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwitchHandDataScRsp = struct {
    ABOJJANDFNO: u32 = 0,
    LBOMDFHFFCF: ArrayList(HandInfo),
    retcode: u32 = 0,
    DLNGHHDMJJM: u32 = 0,

    pub const _desc_table = .{
        .ABOJJANDFNO = fd(9, .{ .Varint = .Simple }),
        .LBOMDFHFFCF = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(2, .{ .Varint = .Simple }),
        .DLNGHHDMJJM = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwitchHandStartCsReq = struct {
    config_id: u32 = 0,

    pub const _desc_table = .{
        .config_id = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwitchHandStartScRsp = struct {
    retcode: u32 = 0,
    config_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
        .config_id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwitchHandFinishCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwitchHandFinishScRsp = struct {
    CMFMACMIPEE: ?HandInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .CMFMACMIPEE = fd(12, .{ .SubMessage = {} }),
        .retcode = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PMGECPBKJCJ = struct {
    IEFMADJGADB: u32 = 0,
    KDLPEIGHJAK: u32 = 0,
    group_id: u32 = 0,
    op_type: HandPropType = @enumFromInt(0),

    pub const _desc_table = .{
        .IEFMADJGADB = fd(11, .{ .Varint = .Simple }),
        .KDLPEIGHJAK = fd(14, .{ .Varint = .Simple }),
        .group_id = fd(9, .{ .Varint = .Simple }),
        .op_type = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwitchHandUpdateCsReq = struct {
    OPBHJAGOAGG: ?HandInfo = null,
    CLBMGBFANLC: ?PMGECPBKJCJ = null,

    pub const _desc_table = .{
        .OPBHJAGOAGG = fd(11, .{ .SubMessage = {} }),
        .CLBMGBFANLC = fd(4, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwitchHandUpdateScRsp = struct {
    retcode: u32 = 0,
    CMFMACMIPEE: ?HandInfo = null,
    CLBMGBFANLC: ?PMGECPBKJCJ = null,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
        .CMFMACMIPEE = fd(9, .{ .SubMessage = {} }),
        .CLBMGBFANLC = fd(10, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwitchHandCoinUpdateCsReq = struct {
    MCBIOHMIMGN: u32 = 0,

    pub const _desc_table = .{
        .MCBIOHMIMGN = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwitchHandCoinUpdateScRsp = struct {
    retcode: u32 = 0,
    MCBIOHMIMGN: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(3, .{ .Varint = .Simple }),
        .MCBIOHMIMGN = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwitchHandResetHandPosCsReq = struct {
    OFOLPKMALGI: ?MotionInfo = null,
    config_id: u32 = 0,

    pub const _desc_table = .{
        .OFOLPKMALGI = fd(2, .{ .SubMessage = {} }),
        .config_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwitchHandResetHandPosScRsp = struct {
    retcode: u32 = 0,
    LBOMDFHFFCF: ?HandInfo = null,

    pub const _desc_table = .{
        .retcode = fd(6, .{ .Varint = .Simple }),
        .LBOMDFHFFCF = fd(4, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwitchHandResetGameCsReq = struct {
    DPJNCBBOHKE: ?HandInfo = null,

    pub const _desc_table = .{
        .DPJNCBBOHKE = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwitchHandResetGameScRsp = struct {
    LBOMDFHFFCF: ?HandInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .LBOMDFHFFCF = fd(9, .{ .SubMessage = {} }),
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ALEFDNLLKLB = struct {
    NNCJOECKCKA: ?BPPMEIGAHGI = null,
    GBEABIMOBIC: ?PGGGCFBKDPK = null,
    pending_action: ?JKMFMMPMNAM = null,
    EENJBPMNDOL: u32 = 0,
    LJGCPNOGIFO: ?DMJLKIFEMMN = null,
    AFPDJDKNENI: ?OCBOLHFOIGI = null,
    FDEIGEPCCBP: ArrayList(u32),
    skill_info: ?GJBNIIINKFB = null,

    pub const _desc_table = .{
        .NNCJOECKCKA = fd(9, .{ .SubMessage = {} }),
        .GBEABIMOBIC = fd(13, .{ .SubMessage = {} }),
        .pending_action = fd(1, .{ .SubMessage = {} }),
        .EENJBPMNDOL = fd(5, .{ .Varint = .Simple }),
        .LJGCPNOGIFO = fd(8, .{ .SubMessage = {} }),
        .AFPDJDKNENI = fd(14, .{ .SubMessage = {} }),
        .FDEIGEPCCBP = fd(11, .{ .PackedList = .{ .Varint = .Simple } }),
        .skill_info = fd(15, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GJBNIIINKFB = struct {
    CCKHKBNMAPN: ArrayList(u32),
    BILEGELKMCB: u32 = 0,
    MCEGAIBNMGB: u32 = 0,

    pub const _desc_table = .{
        .CCKHKBNMAPN = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
        .BILEGELKMCB = fd(7, .{ .Varint = .Simple }),
        .MCEGAIBNMGB = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PGGGCFBKDPK = struct {
    game_story_line_id: u32 = 0,
    CNBCKEFNFGE: ArrayList(u32),

    pub const _desc_table = .{
        .game_story_line_id = fd(12, .{ .Varint = .Simple }),
        .CNBCKEFNFGE = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MMOIBACBPKA = struct {
    PJGBFKNJPNO: HDIJJMDPILE = @enumFromInt(0),
    value: u32 = 0,

    pub const _desc_table = .{
        .PJGBFKNJPNO = fd(9, .{ .Varint = .Simple }),
        .value = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BPPMEIGAHGI = struct {
    MIGFMPJBELG: ArrayList(MMOIBACBPKA),
    IOMGDIKELIA: u32 = 0,
    PDMDKAPCOJM: u32 = 0,

    pub const _desc_table = .{
        .MIGFMPJBELG = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .IOMGDIKELIA = fd(3, .{ .Varint = .Simple }),
        .PDMDKAPCOJM = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LEEHJGNBGNK = struct {
    level: u32 = 0,
    queue_position: u32 = 0,

    pub const _desc_table = .{
        .level = fd(5, .{ .Varint = .Simple }),
        .queue_position = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OCBOLHFOIGI = struct {
    FMDKHADMCOC: ArrayList(LEEHJGNBGNK),

    pub const _desc_table = .{
        .FMDKHADMCOC = fd(7, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DMJLKIFEMMN = struct {
    IGHLABGGIJE: u32 = 0,
    KFELKJLDKEH: ?KFELKJLDKEH_union,

    pub const _KFELKJLDKEH_case = enum {
        GAIBHJHDOHB,
        KPJAFBCPEGI,
    };
    pub const KFELKJLDKEH_union = union(_KFELKJLDKEH_case) {
        GAIBHJHDOHB: KLINPBNKIIA,
        KPJAFBCPEGI: PBMKKICMLDA,
        pub const _union_desc = .{
            .GAIBHJHDOHB = fd(7, .{ .SubMessage = {} }),
            .KPJAFBCPEGI = fd(8, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .IGHLABGGIJE = fd(284, .{ .Varint = .Simple }),
        .KFELKJLDKEH = fd(null, .{ .OneOf = KFELKJLDKEH_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PIIBOJCEJJN = struct {
    daily_index: u32 = 0,
    GIMLNDLOFFA: u32 = 0,

    pub const _desc_table = .{
        .daily_index = fd(2, .{ .Varint = .Simple }),
        .GIMLNDLOFFA = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KLINPBNKIIA = struct {
    CCLJMNCKECP: BJNCDEFEEJI = @enumFromInt(0),
    EIJDEOPOFNB: ArrayList(u32),
    DNCBPCENKIF: ArrayList(PIIBOJCEJJN),

    pub const _desc_table = .{
        .CCLJMNCKECP = fd(5, .{ .Varint = .Simple }),
        .EIJDEOPOFNB = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
        .DNCBPCENKIF = fd(6, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PBMKKICMLDA = struct {
    FHBOMFBLGPD: u32 = 0,

    pub const _desc_table = .{
        .FHBOMFBLGPD = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JKMFMMPMNAM = struct {
    KFELKJLDKEH: ?KFELKJLDKEH_union,

    pub const _KFELKJLDKEH_case = enum {
        KANGPCOKFNE,
        HHCIFNFMKLA,
        OCGPLMNKMLK,
        AKMNKLADOLM,
        KKDDANDLFBD,
        AFFNCONKEKP,
        CNIBNGJDNJP,
        OAPMKLFJKKG,
    };
    pub const KFELKJLDKEH_union = union(_KFELKJLDKEH_case) {
        KANGPCOKFNE: DPDIEGOAGBP,
        HHCIFNFMKLA: FPEGPJCEOEI,
        OCGPLMNKMLK: FKHFONPKDIP,
        AKMNKLADOLM: AEJCCMEPLGO,
        KKDDANDLFBD: NIGCOPGHAMJ,
        AFFNCONKEKP: KHPHAIFNJEI,
        CNIBNGJDNJP: PLODIDCJOKA,
        OAPMKLFJKKG: KHCAKPOMGNK,
        pub const _union_desc = .{
            .KANGPCOKFNE = fd(9, .{ .SubMessage = {} }),
            .HHCIFNFMKLA = fd(7, .{ .SubMessage = {} }),
            .OCGPLMNKMLK = fd(2, .{ .SubMessage = {} }),
            .AKMNKLADOLM = fd(11, .{ .SubMessage = {} }),
            .KKDDANDLFBD = fd(5, .{ .SubMessage = {} }),
            .AFFNCONKEKP = fd(12, .{ .SubMessage = {} }),
            .CNIBNGJDNJP = fd(3, .{ .SubMessage = {} }),
            .OAPMKLFJKKG = fd(14, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .KFELKJLDKEH = fd(null, .{ .OneOf = KFELKJLDKEH_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DPDIEGOAGBP = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FPEGPJCEOEI = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FKHFONPKDIP = struct {
    dialogue_id: u32 = 0,

    pub const _desc_table = .{
        .dialogue_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AEJCCMEPLGO = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NIGCOPGHAMJ = struct {
    HHGAPDFINDI: bool = false,
    BGLEHMKMAPG: u32 = 0,

    pub const _desc_table = .{
        .HHGAPDFINDI = fd(14, .{ .Varint = .Simple }),
        .BGLEHMKMAPG = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KHPHAIFNJEI = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PLODIDCJOKA = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KHCAKPOMGNK = struct {
    MMKIJAEMNBL: bool = false,
    BGLEHMKMAPG: u32 = 0,

    pub const _desc_table = .{
        .MMKIJAEMNBL = fd(15, .{ .Varint = .Simple }),
        .BGLEHMKMAPG = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OMOJDEIFDAM = struct {
    rogue_action: ?CGHKIDBJHFH = null,
    source: PKHJBPMIBBA = @enumFromInt(0),

    pub const _desc_table = .{
        .rogue_action = fd(6, .{ .SubMessage = {} }),
        .source = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CGHKIDBJHFH = struct {
    KFELKJLDKEH: ?KFELKJLDKEH_union,

    pub const _KFELKJLDKEH_case = enum {
        PJABKIFDNND,
        NIHIFEMOKAM,
        MLCGALIHAIP,
        BIDDDNIPBLE,
        DIJHPEHONOK,
        EDHBKECGOLI,
        MFHBHKIMDCA,
        NPFPAJLCLNN,
        IOMGDIKELIA,
        GKAHDHELILD,
        GNPEAMELJDJ,
        CBAKIHCDENP,
    };
    pub const KFELKJLDKEH_union = union(_KFELKJLDKEH_case) {
        PJABKIFDNND: NLCALKLPGOG,
        NIHIFEMOKAM: OJLEHPPJBBC,
        MLCGALIHAIP: OJLEHPPJBBC,
        BIDDDNIPBLE: OCJGNPIFOBM,
        DIJHPEHONOK: NMENKIGNBCA,
        EDHBKECGOLI: NIGCOPGHAMJ,
        MFHBHKIMDCA: HJKDNGIHMAA,
        NPFPAJLCLNN: u32,
        IOMGDIKELIA: u32,
        GKAHDHELILD: KHCAKPOMGNK,
        GNPEAMELJDJ: KHPHAIFNJEI,
        CBAKIHCDENP: u32,
        pub const _union_desc = .{
            .PJABKIFDNND = fd(10, .{ .SubMessage = {} }),
            .NIHIFEMOKAM = fd(9, .{ .SubMessage = {} }),
            .MLCGALIHAIP = fd(7, .{ .SubMessage = {} }),
            .BIDDDNIPBLE = fd(1, .{ .SubMessage = {} }),
            .DIJHPEHONOK = fd(2, .{ .SubMessage = {} }),
            .EDHBKECGOLI = fd(8, .{ .SubMessage = {} }),
            .MFHBHKIMDCA = fd(11, .{ .SubMessage = {} }),
            .NPFPAJLCLNN = fd(3, .{ .Varint = .Simple }),
            .IOMGDIKELIA = fd(2020, .{ .Varint = .Simple }),
            .GKAHDHELILD = fd(1923, .{ .SubMessage = {} }),
            .GNPEAMELJDJ = fd(1913, .{ .SubMessage = {} }),
            .CBAKIHCDENP = fd(209, .{ .Varint = .Simple }),
        };
    };

    pub const _desc_table = .{
        .KFELKJLDKEH = fd(null, .{ .OneOf = KFELKJLDKEH_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HJKDNGIHMAA = struct {
    dialogue_id: u32 = 0,

    pub const _desc_table = .{
        .dialogue_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NLCALKLPGOG = struct {
    OGJOFMCMFPG: u32 = 0,
    BMALPKEKBEL: u32 = 0,
    PJGBFKNJPNO: HDIJJMDPILE = @enumFromInt(0),

    pub const _desc_table = .{
        .OGJOFMCMFPG = fd(15, .{ .Varint = .Simple }),
        .BMALPKEKBEL = fd(7, .{ .Varint = .Simple }),
        .PJGBFKNJPNO = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OJLEHPPJBBC = struct {
    OGJOFMCMFPG: u32 = 0,
    BMALPKEKBEL: u32 = 0,

    pub const _desc_table = .{
        .OGJOFMCMFPG = fd(7, .{ .Varint = .Simple }),
        .BMALPKEKBEL = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OCJGNPIFOBM = struct {
    queue_position: u32 = 0,
    GFFBDANDHMK: u32 = 0,
    level: u32 = 0,

    pub const _desc_table = .{
        .queue_position = fd(8, .{ .Varint = .Simple }),
        .GFFBDANDHMK = fd(7, .{ .Varint = .Simple }),
        .level = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NMENKIGNBCA = struct {
    EENJBPMNDOL: u32 = 0,
    IFNMBNGIFPH: ?DMJLKIFEMMN = null,

    pub const _desc_table = .{
        .EENJBPMNDOL = fd(9, .{ .Varint = .Simple }),
        .IFNMBNGIFPH = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FGPBIBIJCOH = struct {
    BGLEHMKMAPG: u32 = 0,
    HHGAPDFINDI: bool = false,

    pub const _desc_table = .{
        .BGLEHMKMAPG = fd(11, .{ .Varint = .Simple }),
        .HHGAPDFINDI = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingGameSyncChangeScNotify = struct {
    LEADMNEIMDP: ArrayList(OMOJDEIFDAM),

    pub const _desc_table = .{
        .LEADMNEIMDP = fd(2, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HDFKPEEBGEN = struct {
    progress: u32 = 0,
    id: u32 = 0,

    pub const _desc_table = .{
        .progress = fd(2, .{ .Varint = .Simple }),
        .id = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NOKODMNOHMN = struct {
    ONILFFENAMO: ArrayList(u32),
    NCKCMGCBEHK: ArrayList(HDFKPEEBGEN),

    pub const _desc_table = .{
        .ONILFFENAMO = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
        .NCKCMGCBEHK = fd(9, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetSwordTrainingDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetSwordTrainingDataScRsp = struct {
    retcode: u32 = 0,
    CNBCKEFNFGE: ArrayList(u32),
    DCHGIODEDDK: u32 = 0,
    KLBPECANFIG: bool = false,
    GAJBFPCPIGM: ?ALEFDNLLKLB = null,
    KJKBKEGIGHK: ?NOKODMNOHMN = null,
    JOEFNHGGAGO: ArrayList(u32),
    FABKPHMJGHL: ArrayList(u32),

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
        .CNBCKEFNFGE = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .DCHGIODEDDK = fd(15, .{ .Varint = .Simple }),
        .KLBPECANFIG = fd(11, .{ .Varint = .Simple }),
        .GAJBFPCPIGM = fd(3, .{ .SubMessage = {} }),
        .KJKBKEGIGHK = fd(2, .{ .SubMessage = {} }),
        .JOEFNHGGAGO = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
        .FABKPHMJGHL = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingTurnActionCsReq = struct {
    BHNFGPEHOMO: ArrayList(u32),
    PHAJEHIBKFI: ArrayList(u32),

    pub const _desc_table = .{
        .BHNFGPEHOMO = fd(11, .{ .PackedList = .{ .Varint = .Simple } }),
        .PHAJEHIBKFI = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingTurnActionScRsp = struct {
    retcode: u32 = 0,
    BHNFGPEHOMO: ArrayList(u32),

    pub const _desc_table = .{
        .retcode = fd(5, .{ .Varint = .Simple }),
        .BHNFGPEHOMO = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingDailyPhaseConfirmCsReq = struct {
    IFENLNHLBAB: BJNCDEFEEJI = @enumFromInt(0),

    pub const _desc_table = .{
        .IFENLNHLBAB = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingDailyPhaseConfirmScRsp = struct {
    retcode: u32 = 0,
    MLLAEFJEMCF: bool = false,

    pub const _desc_table = .{
        .retcode = fd(6, .{ .Varint = .Simple }),
        .MLLAEFJEMCF = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingDialogueSelectOptionCsReq = struct {
    option_id: u32 = 0,

    pub const _desc_table = .{
        .option_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingDialogueSelectOptionScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingExamResultConfirmCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingExamResultConfirmScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterSwordTrainingExamCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterSwordTrainingExamScRsp = struct {
    retcode: u32 = 0,
    battle_info: ?SceneBattleInfo = null,

    pub const _desc_table = .{
        .retcode = fd(5, .{ .Varint = .Simple }),
        .battle_info = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingLearnSkillCsReq = struct {
    skill_id: u32 = 0,

    pub const _desc_table = .{
        .skill_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingLearnSkillScRsp = struct {
    skill_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .skill_id = fd(3, .{ .Varint = .Simple }),
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingStartGameCsReq = struct {
    game_story_line_id: u32 = 0,

    pub const _desc_table = .{
        .game_story_line_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingStartGameScRsp = struct {
    retcode: u32 = 0,
    GAJBFPCPIGM: ?ALEFDNLLKLB = null,

    pub const _desc_table = .{
        .retcode = fd(15, .{ .Varint = .Simple }),
        .GAJBFPCPIGM = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingStoryConfirmCsReq = struct {
    BGLEHMKMAPG: u32 = 0,

    pub const _desc_table = .{
        .BGLEHMKMAPG = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingStoryConfirmScRsp = struct {
    retcode: u32 = 0,
    BGLEHMKMAPG: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(5, .{ .Varint = .Simple }),
        .BGLEHMKMAPG = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingGiveUpGameCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingGiveUpGameScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingGameSettleScNotify = struct {
    PIGEEBCKCOO: u32 = 0,
    reason: HDMKPHALALG = @enumFromInt(0),
    PPIMFPOOOKB: ArrayList(u32),
    reward: ?ItemList = null,
    IFNMBNGIFPH: u32 = 0,
    CCDCHKKMGJF: ArrayList(u32),
    game_story_line_id: u32 = 0,
    FPBNIPMHANH: u32 = 0,

    pub const _desc_table = .{
        .PIGEEBCKCOO = fd(7, .{ .Varint = .Simple }),
        .reason = fd(15, .{ .Varint = .Simple }),
        .PPIMFPOOOKB = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
        .reward = fd(9, .{ .SubMessage = {} }),
        .IFNMBNGIFPH = fd(1, .{ .Varint = .Simple }),
        .CCDCHKKMGJF = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .game_story_line_id = fd(14, .{ .Varint = .Simple }),
        .FPBNIPMHANH = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingUnlockSyncScNotify = struct {
    NCKCMGCBEHK: ArrayList(HDFKPEEBGEN),
    ONILFFENAMO: ArrayList(u32),

    pub const _desc_table = .{
        .NCKCMGCBEHK = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .ONILFFENAMO = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingSelectEndingCsReq = struct {
    DECJMBHNNHD: u32 = 0,

    pub const _desc_table = .{
        .DECJMBHNNHD = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingSelectEndingScRsp = struct {
    retcode: u32 = 0,
    DECJMBHNNHD: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(8, .{ .Varint = .Simple }),
        .DECJMBHNNHD = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingRestoreGameCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingRestoreGameScRsp = struct {
    GAJBFPCPIGM: ?ALEFDNLLKLB = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .GAJBFPCPIGM = fd(8, .{ .SubMessage = {} }),
        .retcode = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingStoryBattleCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingStoryBattleScRsp = struct {
    retcode: u32 = 0,
    battle_info: ?SceneBattleInfo = null,

    pub const _desc_table = .{
        .retcode = fd(11, .{ .Varint = .Simple }),
        .battle_info = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingActionTurnSettleScNotify = struct {
    MCCCNLIIIBC: ArrayList(MMOIBACBPKA),
    CGFCMKNCCDC: u32 = 0,

    pub const _desc_table = .{
        .MCCCNLIIIBC = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .CGFCMKNCCDC = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingResumeGameCsReq = struct {
    game_story_line_id: u32 = 0,

    pub const _desc_table = .{
        .game_story_line_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingResumeGameScRsp = struct {
    retcode: u32 = 0,
    GAJBFPCPIGM: ?ALEFDNLLKLB = null,

    pub const _desc_table = .{
        .retcode = fd(10, .{ .Varint = .Simple }),
        .GAJBFPCPIGM = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingSetSkillTraceCsReq = struct {
    skill_id: u32 = 0,

    pub const _desc_table = .{
        .skill_id = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingSetSkillTraceScRsp = struct {
    skill_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .skill_id = fd(12, .{ .Varint = .Simple }),
        .retcode = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingMarkEndingViewedCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SwordTrainingMarkEndingViewedScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BasicModuleSync = struct {
    week_cocoon_finished_count: u32 = 0,
    stamina: u32 = 0,

    pub const _desc_table = .{
        .week_cocoon_finished_count = fd(6, .{ .Varint = .Simple }),
        .stamina = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerBoardModuleSync = struct {
    signature: ManagedString = .Empty,
    PAGJKDJIGPI: bool = false,
    ALMMHKFKHLK: ArrayList(u32),
    unlocked_head_icon_list: ArrayList(HeadIconData),

    pub const _desc_table = .{
        .signature = fd(11, .String),
        .PAGJKDJIGPI = fd(9, .{ .Varint = .Simple }),
        .ALMMHKFKHLK = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
        .unlocked_head_icon_list = fd(10, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AvatarSync = struct {
    avatar_list: ArrayList(Avatar),

    pub const _desc_table = .{
        .avatar_list = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MissionSync = struct {
    HNEPOEDCIDK: ArrayList(u32),
    finished_main_mission_id_list: ArrayList(u32),
    mission_list: ArrayList(Mission),
    EJBGGJONBOL: ArrayList(IKAMMKLBOCO),
    ANIHPCKNGBM: ArrayList(u32),
    MCFONOPKOKD: ArrayList(u32),
    GAEGMBIOGOH: ArrayList(FHABEIKAFBO),

    pub const _desc_table = .{
        .HNEPOEDCIDK = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
        .finished_main_mission_id_list = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .mission_list = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .EJBGGJONBOL = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .ANIHPCKNGBM = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .MCFONOPKOKD = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        .GAEGMBIOGOH = fd(6, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DMBMPAHKHLA = struct {
    LKKIDNJCFJA: ArrayList(u32),
    DINGKFDBCJJ: ArrayList(u32),

    pub const _desc_table = .{
        .LKKIDNJCFJA = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
        .DINGKFDBCJJ = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SyncStatus = struct {
    LNEJLGEFPLE: ArrayList(u32),
    section_status: ArrayList(SectionStatus),
    CNGLDJNPOPI: ArrayList(u32),
    message_group_status: ArrayList(GroupStatus),

    pub const _desc_table = .{
        .LNEJLGEFPLE = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
        .section_status = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .CNGLDJNPOPI = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
        .message_group_status = fd(9, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PlayerSyncScNotify = struct {
    basic_module_sync: ?BasicModuleSync = null,
    CGLEKFODMAG: ArrayList(NKDOHHODNNH),
    IGIPEIMGEAA: ArrayList(GKDIHIFFHFD),
    total_achievement_exp: u32 = 0,
    basic_info: ?PlayerBasicInfo = null,
    OMJOPKGJPLG: ?DMBMPAHKHLA = null,
    equipment_list: ArrayList(Equipment),
    relic_list: ArrayList(Relic),
    wait_del_resource_list: ArrayList(WaitDelResource),
    material_list: ArrayList(Material),
    multi_path_avatar_info_list: ArrayList(MultiPathAvatarInfo),
    FCOKFFEAPMI: ArrayList(Material),
    playerboard_module_sync: ?PlayerBoardModuleSync = null,
    sync_status: ?SyncStatus = null,
    avatar_sync: ?AvatarSync = null,
    MJOKLHFPGAD: ?ItemList = null,
    quest_list: ArrayList(Quest),
    del_relic_list: ArrayList(u32),
    mission_sync: ?MissionSync = null,
    new_item_hint_list: ArrayList(u32),
    del_equipment_list: ArrayList(u32),

    pub const _desc_table = .{
        .basic_module_sync = fd(10, .{ .SubMessage = {} }),
        .CGLEKFODMAG = fd(1311, .{ .List = .{ .SubMessage = {} } }),
        .IGIPEIMGEAA = fd(709, .{ .List = .{ .SubMessage = {} } }),
        .total_achievement_exp = fd(405, .{ .Varint = .Simple }),
        .basic_info = fd(5, .{ .SubMessage = {} }),
        .OMJOPKGJPLG = fd(153, .{ .SubMessage = {} }),
        .equipment_list = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .relic_list = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .wait_del_resource_list = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .material_list = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .multi_path_avatar_info_list = fd(549, .{ .List = .{ .SubMessage = {} } }),
        .FCOKFFEAPMI = fd(249, .{ .List = .{ .SubMessage = {} } }),
        .playerboard_module_sync = fd(1978, .{ .SubMessage = {} }),
        .sync_status = fd(1160, .{ .SubMessage = {} }),
        .avatar_sync = fd(13, .{ .SubMessage = {} }),
        .MJOKLHFPGAD = fd(507, .{ .SubMessage = {} }),
        .quest_list = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .del_relic_list = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .mission_sync = fd(12, .{ .SubMessage = {} }),
        .new_item_hint_list = fd(1447, .{ .PackedList = .{ .Varint = .Simple } }),
        .del_equipment_list = fd(11, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetNpcTakenRewardCsReq = struct {
    npc_id: u32 = 0,

    pub const _desc_table = .{
        .npc_id = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetNpcTakenRewardScRsp = struct {
    talk_event_list: ArrayList(u32),
    retcode: u32 = 0,
    npc_id: u32 = 0,

    pub const _desc_table = .{
        .talk_event_list = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(11, .{ .Varint = .Simple }),
        .npc_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeTalkRewardCsReq = struct {
    IEMOEOIMHMA: u32 = 0,
    OLCONCNJMMP: ?Vector = null,

    pub const _desc_table = .{
        .IEMOEOIMHMA = fd(8, .{ .Varint = .Simple }),
        .OLCONCNJMMP = fd(7, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeTalkRewardScRsp = struct {
    retcode: u32 = 0,
    IEMOEOIMHMA: u32 = 0,
    reward: ?ItemList = null,

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
        .IEMOEOIMHMA = fd(2, .{ .Varint = .Simple }),
        .reward = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFirstTalkNpcCsReq = struct {
    npc_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .npc_id_list = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FirstNpcTalkInfo = struct {
    is_meet: bool = false,
    npc_id: u32 = 0,

    pub const _desc_table = .{
        .is_meet = fd(5, .{ .Varint = .Simple }),
        .npc_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFirstTalkNpcScRsp = struct {
    retcode: u32 = 0,
    npc_meet_status_list: ArrayList(FirstNpcTalkInfo),

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
        .npc_meet_status_list = fd(8, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishFirstTalkNpcCsReq = struct {
    npc_id: u32 = 0,

    pub const _desc_table = .{
        .npc_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishFirstTalkNpcScRsp = struct {
    npc_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .npc_id = fd(3, .{ .Varint = .Simple }),
        .retcode = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SelectInclinationTextCsReq = struct {
    talk_sentence_id: u32 = 0,

    pub const _desc_table = .{
        .talk_sentence_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SelectInclinationTextScRsp = struct {
    retcode: u32 = 0,
    talk_sentence_id: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(5, .{ .Varint = .Simple }),
        .talk_sentence_id = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NpcMeetByPerformanceStatus = struct {
    is_meet: bool = false,
    performance_id: u32 = 0,

    pub const _desc_table = .{
        .is_meet = fd(12, .{ .Varint = .Simple }),
        .performance_id = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFirstTalkByPerformanceNpcCsReq = struct {
    performance_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .performance_id_list = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetFirstTalkByPerformanceNpcScRsp = struct {
    retcode: u32 = 0,
    npc_meet_status_list: ArrayList(NpcMeetByPerformanceStatus),

    pub const _desc_table = .{
        .retcode = fd(4, .{ .Varint = .Simple }),
        .npc_meet_status_list = fd(5, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishFirstTalkByPerformanceNpcCsReq = struct {
    performance_id: u32 = 0,

    pub const _desc_table = .{
        .performance_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishFirstTalkByPerformanceNpcScRsp = struct {
    retcode: u32 = 0,
    performance_id: u32 = 0,
    reward: ?ItemList = null,

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
        .performance_id = fd(12, .{ .Varint = .Simple }),
        .reward = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EJDGKNKHKHH = struct {
    level: u32 = 0,
    id: u32 = 0,

    pub const _desc_table = .{
        .level = fd(13, .{ .Varint = .Simple }),
        .id = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BKMGDPHACKE = struct {
    BIINNCNDPCG: bool = false,
    id: u32 = 0,

    pub const _desc_table = .{
        .BIINNCNDPCG = fd(3, .{ .Varint = .Simple }),
        .id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FLOICKMNMLL = struct {
    DGPEJFLJNOJ: ArrayList(BKMGDPHACKE),
    CNIJNMDGEDD: ArrayList(EJDGKNKHKHH),

    pub const _desc_table = .{
        .DGPEJFLJNOJ = fd(11, .{ .List = .{ .SubMessage = {} } }),
        .CNIJNMDGEDD = fd(3, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OFDGOGDBHAC = struct {
    LIBLLKBLDCH: ArrayList(u32),
    OMICAJEOLJF: ArrayList(u32),

    pub const _desc_table = .{
        .LIBLLKBLDCH = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
        .OMICAJEOLJF = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TarotBookGetDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TarotBookGetDataScRsp = struct {
    HEFJEJHOJEA: ?FLOICKMNMLL = null,
    FDCKFKFKHLO: u32 = 0,
    NDCJJPGNFLN: ArrayList(NDCJJPGNFLNEntry),
    JKEMDJIAMHI: ArrayList(JKEMDJIAMHIEntry),
    LENPIDMPECP: u32 = 0,
    retcode: u32 = 0,
    energy_info: u32 = 0,
    IPNINOPEKBP: ?OFDGOGDBHAC = null,

    pub const _desc_table = .{
        .HEFJEJHOJEA = fd(1, .{ .SubMessage = {} }),
        .FDCKFKFKHLO = fd(4, .{ .Varint = .Simple }),
        .NDCJJPGNFLN = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .JKEMDJIAMHI = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .LENPIDMPECP = fd(6, .{ .Varint = .Simple }),
        .retcode = fd(13, .{ .Varint = .Simple }),
        .energy_info = fd(5, .{ .Varint = .Simple }),
        .IPNINOPEKBP = fd(11, .{ .SubMessage = {} }),
    };

    pub const NDCJJPGNFLNEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const JKEMDJIAMHIEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TarotBookOpenPackCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TarotBookOpenPackScRsp = struct {
    retcode: u32 = 0,
    CJENCDIFLCF: ArrayList(CJENCDIFLCFEntry),
    energy_info: u32 = 0,
    FDCKFKFKHLO: u32 = 0,
    LENPIDMPECP: u32 = 0,
    IIKBCNBJKKI: ArrayList(IIKBCNBJKKIEntry),

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
        .CJENCDIFLCF = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .energy_info = fd(11, .{ .Varint = .Simple }),
        .FDCKFKFKHLO = fd(4, .{ .Varint = .Simple }),
        .LENPIDMPECP = fd(14, .{ .Varint = .Simple }),
        .IIKBCNBJKKI = fd(2, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const CJENCDIFLCFEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const IIKBCNBJKKIEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TarotBookUnlockStoryCsReq = struct {
    PPIMFPOOOKB: ArrayList(u32),

    pub const _desc_table = .{
        .PPIMFPOOOKB = fd(3, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TarotBookUnlockStoryScRsp = struct {
    PPDGGOCIEDE: ?EJDGKNKHKHH = null,
    PPIMFPOOOKB: ArrayList(u32),
    NDCJJPGNFLN: ArrayList(NDCJJPGNFLNEntry),
    JKEMDJIAMHI: ArrayList(JKEMDJIAMHIEntry),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .PPDGGOCIEDE = fd(15, .{ .SubMessage = {} }),
        .PPIMFPOOOKB = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .NDCJJPGNFLN = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .JKEMDJIAMHI = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(10, .{ .Varint = .Simple }),
    };

    pub const NDCJJPGNFLNEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const JKEMDJIAMHIEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TarotBookFinishStoryCsReq = struct {
    BGLEHMKMAPG: u32 = 0,

    pub const _desc_table = .{
        .BGLEHMKMAPG = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TarotBookFinishStoryScRsp = struct {
    retcode: u32 = 0,
    BGLEHMKMAPG: u32 = 0,
    HEFJEJHOJEA: ?FLOICKMNMLL = null,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
        .BGLEHMKMAPG = fd(8, .{ .Varint = .Simple }),
        .HEFJEJHOJEA = fd(13, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TarotBookModifyEnergyScNotify = struct {
    energy_info: u32 = 0,
    sub_mission_id: u32 = 0,

    pub const _desc_table = .{
        .energy_info = fd(6, .{ .Varint = .Simple }),
        .sub_mission_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TarotBookFinishInteractionCsReq = struct {
    NBLHJJJEGNO: u32 = 0,

    pub const _desc_table = .{
        .NBLHJJJEGNO = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TarotBookFinishInteractionScRsp = struct {
    retcode: u32 = 0,
    NBLHJJJEGNO: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
        .NBLHJJJEGNO = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TarotBookUnlockInteractionCsReq = struct {
    OHKHPOLFIBP: ArrayList(u32),

    pub const _desc_table = .{
        .OHKHPOLFIBP = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TarotBookUnlockInteractionScRsp = struct {
    OHKHPOLFIBP: ArrayList(u32),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .OHKHPOLFIBP = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TarotBookSyncDataScNotify = struct {
    LENPIDMPECP: u32 = 0,
    FDCKFKFKHLO: u32 = 0,
    NDCJJPGNFLN: ArrayList(NDCJJPGNFLNEntry),
    JKEMDJIAMHI: ArrayList(JKEMDJIAMHIEntry),
    energy_info: u32 = 0,
    HEFJEJHOJEA: ?FLOICKMNMLL = null,

    pub const _desc_table = .{
        .LENPIDMPECP = fd(12, .{ .Varint = .Simple }),
        .FDCKFKFKHLO = fd(14, .{ .Varint = .Simple }),
        .NDCJJPGNFLN = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .JKEMDJIAMHI = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .energy_info = fd(3, .{ .Varint = .Simple }),
        .HEFJEJHOJEA = fd(2, .{ .SubMessage = {} }),
    };

    pub const NDCJJPGNFLNEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const JKEMDJIAMHIEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TarotBookMultiOpenPackAndUnlockStoryCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TarotBookMultiOpenPackAndUnlockStoryScRsp = struct {
    HEFJEJHOJEA: ?FLOICKMNMLL = null,
    retcode: u32 = 0,
    NGBLPGNJOMD: ArrayList(u32),
    energy_info: u32 = 0,
    LENPIDMPECP: u32 = 0,
    FDCKFKFKHLO: u32 = 0,
    NDCJJPGNFLN: ArrayList(NDCJJPGNFLNEntry),
    JKEMDJIAMHI: ArrayList(JKEMDJIAMHIEntry),

    pub const _desc_table = .{
        .HEFJEJHOJEA = fd(3, .{ .SubMessage = {} }),
        .retcode = fd(10, .{ .Varint = .Simple }),
        .NGBLPGNJOMD = fd(11, .{ .PackedList = .{ .Varint = .Simple } }),
        .energy_info = fd(15, .{ .Varint = .Simple }),
        .LENPIDMPECP = fd(4, .{ .Varint = .Simple }),
        .FDCKFKFKHLO = fd(12, .{ .Varint = .Simple }),
        .NDCJJPGNFLN = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .JKEMDJIAMHI = fd(7, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const NDCJJPGNFLNEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const JKEMDJIAMHIEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OGJDNLIJKFB = struct {
    NINLFBGLBLL: u32 = 0,
    KEGCJPPOKBK: u32 = 0,
    max_score: u32 = 0,

    pub const _desc_table = .{
        .NINLFBGLBLL = fd(8, .{ .Varint = .Simple }),
        .KEGCJPPOKBK = fd(3, .{ .Varint = .Simple }),
        .max_score = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetTelevisionActivityDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetTelevisionActivityDataScRsp = struct {
    retcode: u32 = 0,
    KADGMHHGKMP: ArrayList(OGJDNLIJKFB),

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
        .KADGMHHGKMP = fd(9, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TelevisionActivityDataChangeScNotify = struct {
    KADGMHHGKMP: ArrayList(OGJDNLIJKFB),

    pub const _desc_table = .{
        .KADGMHHGKMP = fd(14, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TelevisionActivityBattleEndScNotify = struct {
    FIDIOIHLLGA: u32 = 0,
    FCEPIPCCOMN: u32 = 0,
    DFCCBDPNLEA: ?OGJDNLIJKFB = null,
    HOEHIOBIIEJ: u32 = 0,
    NPJEECEDPOK: u32 = 0,

    pub const _desc_table = .{
        .FIDIOIHLLGA = fd(6, .{ .Varint = .Simple }),
        .FCEPIPCCOMN = fd(10, .{ .Varint = .Simple }),
        .DFCCBDPNLEA = fd(11, .{ .SubMessage = {} }),
        .HOEHIOBIIEJ = fd(14, .{ .Varint = .Simple }),
        .NPJEECEDPOK = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const DEPEAHJNKGJ = struct {
    avatar_id: u32 = 0,
    avatar_type: AvatarType = @enumFromInt(0),

    pub const _desc_table = .{
        .avatar_id = fd(13, .{ .Varint = .Simple }),
        .avatar_type = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterTelevisionActivityStageCsReq = struct {
    buff_list: ArrayList(u32),
    avatar_list: ArrayList(DEPEAHJNKGJ),
    NINLFBGLBLL: u32 = 0,

    pub const _desc_table = .{
        .buff_list = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
        .avatar_list = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .NINLFBGLBLL = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterTelevisionActivityStageScRsp = struct {
    battle_info: ?SceneBattleInfo = null,
    NINLFBGLBLL: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .battle_info = fd(9, .{ .SubMessage = {} }),
        .NINLFBGLBLL = fd(13, .{ .Varint = .Simple }),
        .retcode = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IOMOPENEMBF = struct {
    NLFNJPMACPM: u32 = 0,
    FANOKEMBMPB: u32 = 0,
    ADINNBPINAK: u32 = 0,
    HBJKEEBDJML: ManagedString = .Empty,
    NKIOIIOIAOG: ManagedString = .Empty,

    pub const _desc_table = .{
        .NLFNJPMACPM = fd(10, .{ .Varint = .Simple }),
        .FANOKEMBMPB = fd(2, .{ .Varint = .Simple }),
        .ADINNBPINAK = fd(13, .{ .Varint = .Simple }),
        .HBJKEEBDJML = fd(5, .String),
        .NKIOIIOIAOG = fd(15, .String),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TextJoinSaveCsReq = struct {
    ADINNBPINAK: u32 = 0,
    HBJKEEBDJML: ManagedString = .Empty,
    FANOKEMBMPB: u32 = 0,

    pub const _desc_table = .{
        .ADINNBPINAK = fd(6, .{ .Varint = .Simple }),
        .HBJKEEBDJML = fd(7, .String),
        .FANOKEMBMPB = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TextJoinSaveScRsp = struct {
    HBJKEEBDJML: ManagedString = .Empty,
    ADINNBPINAK: u32 = 0,
    FANOKEMBMPB: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .HBJKEEBDJML = fd(13, .String),
        .ADINNBPINAK = fd(14, .{ .Varint = .Simple }),
        .FANOKEMBMPB = fd(10, .{ .Varint = .Simple }),
        .retcode = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TextJoinQueryCsReq = struct {
    PONENNKHCMJ: ArrayList(u32),

    pub const _desc_table = .{
        .PONENNKHCMJ = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TextJoinQueryScRsp = struct {
    NKKKOPACOKG: ArrayList(IOMOPENEMBF),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .NKKKOPACOKG = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TextJoinBatchSaveCsReq = struct {
    NKKKOPACOKG: ArrayList(IOMOPENEMBF),

    pub const _desc_table = .{
        .NKKKOPACOKG = fd(6, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TextJoinBatchSaveScRsp = struct {
    retcode: u32 = 0,
    NKKKOPACOKG: ArrayList(IOMOPENEMBF),

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
        .NKKKOPACOKG = fd(8, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CGLIGECGAKN = struct {
    stage_id: u32 = 0,
    max_score: u32 = 0,

    pub const _desc_table = .{
        .stage_id = fd(5, .{ .Varint = .Simple }),
        .max_score = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetTrackPhotoActivityDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetTrackPhotoActivityDataScRsp = struct {
    retcode: u32 = 0,
    EMGFLDOPKGL: ArrayList(CGLIGECGAKN),

    pub const _desc_table = .{
        .retcode = fd(11, .{ .Varint = .Simple }),
        .EMGFLDOPKGL = fd(5, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GEOAEOFJOGC = struct {
    KFBOAONLDEM: bool = false,
    entity_id: u32 = 0,

    pub const _desc_table = .{
        .KFBOAONLDEM = fd(9, .{ .Varint = .Simple }),
        .entity_id = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SettleTrackPhotoStageCsReq = struct {
    stage_id: u32 = 0,
    cost_time: u32 = 0,
    LPIHANIOJFI: ArrayList(GEOAEOFJOGC),

    pub const _desc_table = .{
        .stage_id = fd(10, .{ .Varint = .Simple }),
        .cost_time = fd(3, .{ .Varint = .Simple }),
        .LPIHANIOJFI = fd(9, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SettleTrackPhotoStageScRsp = struct {
    score_id: u32 = 0,
    stage_id: u32 = 0,
    LPIHANIOJFI: ArrayList(GEOAEOFJOGC),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .score_id = fd(9, .{ .Varint = .Simple }),
        .stage_id = fd(11, .{ .Varint = .Simple }),
        .LPIHANIOJFI = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartTrackPhotoStageCsReq = struct {
    stage_id: u32 = 0,
    DJFCMLIPDAB: bool = false,

    pub const _desc_table = .{
        .stage_id = fd(7, .{ .Varint = .Simple }),
        .DJFCMLIPDAB = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartTrackPhotoStageScRsp = struct {
    retcode: u32 = 0,
    MDLNDGIJNML: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(3, .{ .Varint = .Simple }),
        .MDLNDGIJNML = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const QuitTrackPhotoStageCsReq = struct {
    stage_id: u32 = 0,

    pub const _desc_table = .{
        .stage_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const QuitTrackPhotoStageScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FPLMDELMJKB = struct {
    cur_index: u32 = 0,
    card_id: u32 = 0,
    HCPGEALODME: ArrayList(u32),
    unique_id: u32 = 0,

    pub const _desc_table = .{
        .cur_index = fd(12, .{ .Varint = .Simple }),
        .card_id = fd(5, .{ .Varint = .Simple }),
        .HCPGEALODME = fd(9, .{ .PackedList = .{ .Varint = .Simple } }),
        .unique_id = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HBCINIKPAFI = struct {
    FODPDMPBAND: ArrayList(FPLMDELMJKB),

    pub const _desc_table = .{
        .FODPDMPBAND = fd(5, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CGCONJFFFBB = struct {
    FODPDMPBAND: ?HBCINIKPAFI = null,
    HAFCKONEHFM: u32 = 0,
    LKLLMPOKOGH: bool = false,

    pub const _desc_table = .{
        .FODPDMPBAND = fd(5, .{ .SubMessage = {} }),
        .HAFCKONEHFM = fd(13, .{ .Varint = .Simple }),
        .LKLLMPOKOGH = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KKNLMCJIGAF = struct {
    GHFAIHLCELN: u32 = 0,
    HFNHLCFNHKD: u32 = 0,
    unique_id: u32 = 0,
    display_value: u32 = 0,

    pub const _desc_table = .{
        .GHFAIHLCELN = fd(14, .{ .Varint = .Simple }),
        .HFNHLCFNHKD = fd(4, .{ .Varint = .Simple }),
        .unique_id = fd(15, .{ .Varint = .Simple }),
        .display_value = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KACKJJDJONI = struct {
    HCFOCPKFOBG: u32 = 0,
    NCDCGFKOLOE: u32 = 0,
    BLHPICIOFAI: u32 = 0,
    PAPKGJOJPII: u32 = 0,
    KDDPPGOCOMB: ArrayList(u32),
    JODNMDOAMKC: u32 = 0,

    pub const _desc_table = .{
        .HCFOCPKFOBG = fd(10, .{ .Varint = .Simple }),
        .NCDCGFKOLOE = fd(8, .{ .Varint = .Simple }),
        .BLHPICIOFAI = fd(1, .{ .Varint = .Simple }),
        .PAPKGJOJPII = fd(9, .{ .Varint = .Simple }),
        .KDDPPGOCOMB = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
        .JODNMDOAMKC = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EDFABKMNBLI = struct {
    BIHMELMJHPO: u32 = 0,
    LLJEFMPDJKH: u32 = 0,
    MKOAMBMKDID: ArrayList(KKNLMCJIGAF),
    GDGHCBGHLND: ?KACKJJDJONI = null,

    pub const _desc_table = .{
        .BIHMELMJHPO = fd(12, .{ .Varint = .Simple }),
        .LLJEFMPDJKH = fd(6, .{ .Varint = .Simple }),
        .MKOAMBMKDID = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .GDGHCBGHLND = fd(9, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FPDFCGKIILE = struct {
    KPAKAPNHNND: u32 = 0,
    KHHLNGGECPB: u32 = 0,

    pub const _desc_table = .{
        .KPAKAPNHNND = fd(11, .{ .Varint = .Simple }),
        .KHHLNGGECPB = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GOCKBLNJIBG = struct {
    skill_level: u32 = 0,
    skill_id: u32 = 0,
    JGMIPMDPPIJ: u32 = 0,

    pub const _desc_table = .{
        .skill_level = fd(4, .{ .Varint = .Simple }),
        .skill_id = fd(7, .{ .Varint = .Simple }),
        .JGMIPMDPPIJ = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MAONNNELGCC = struct {
    passenger_id: u32 = 0,
    MIHLFGCGKNO: u32 = 0,
    BOJBPOELFCI: ?FPDFCGKIILE = null,

    pub const _desc_table = .{
        .passenger_id = fd(3, .{ .Varint = .Simple }),
        .MIHLFGCGKNO = fd(14, .{ .Varint = .Simple }),
        .BOJBPOELFCI = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartyPassenger = struct {
    PCLMNBILAPH: ArrayList(u32),
    record_id: u32 = 0,
    CINMLCKBHIM: bool = false,
    passenger_id: u32 = 0,

    pub const _desc_table = .{
        .PCLMNBILAPH = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
        .record_id = fd(7, .{ .Varint = .Simple }),
        .CINMLCKBHIM = fd(15, .{ .Varint = .Simple }),
        .passenger_id = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LHLEEHCBMOL = struct {
    skill_list: ArrayList(GOCKBLNJIBG),
    CFKPAICDJPJ: ArrayList(u32),
    KBGDCEHIFFJ: ArrayList(MAONNNELGCC),
    cur_index: u32 = 0,
    PKIDBDGPILO: u32 = 0,
    OAFAAEEMNFB: u32 = 0,

    pub const _desc_table = .{
        .skill_list = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .CFKPAICDJPJ = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
        .KBGDCEHIFFJ = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .cur_index = fd(14, .{ .Varint = .Simple }),
        .PKIDBDGPILO = fd(3, .{ .Varint = .Simple }),
        .OAFAAEEMNFB = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartyPassengerInfo = struct {
    PCLMNBILAPH: ArrayList(u32),
    passenger_info_list: ArrayList(TrainPartyPassenger),

    pub const _desc_table = .{
        .PCLMNBILAPH = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .passenger_info_list = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartyArea = struct {
    step_id_list: ArrayList(u32),
    area_step_info: ?AreaStepInfo = null,
    area_id: u32 = 0,
    dynamic_info: ArrayList(AreaDynamicInfo),
    progress: u32 = 0,
    verify_step_id_list: ArrayList(u32),
    static_prop_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .step_id_list = fd(15, .{ .PackedList = .{ .Varint = .Simple } }),
        .area_step_info = fd(13, .{ .SubMessage = {} }),
        .area_id = fd(12, .{ .Varint = .Simple }),
        .dynamic_info = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .progress = fd(3, .{ .Varint = .Simple }),
        .verify_step_id_list = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .static_prop_id_list = fd(7, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const INDFFNNHOHC = struct {
    step_id_list: ArrayList(u32),
    area_id: u32 = 0,

    pub const _desc_table = .{
        .step_id_list = fd(10, .{ .PackedList = .{ .Varint = .Simple } }),
        .area_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PPKDPAJPAGF = struct {
    GJFHPCIEBOJ: u32 = 0,
    status: KNOOCOCANAM = @enumFromInt(0),
    JLHDKOLMEDA: u32 = 0,

    pub const _desc_table = .{
        .GJFHPCIEBOJ = fd(7, .{ .Varint = .Simple }),
        .status = fd(10, .{ .Varint = .Simple }),
        .JLHDKOLMEDA = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AreaStepInfo = struct {
    IMEKHGCIEDN: ArrayList(PPKDPAJPAGF),
    HEIDCIKEDPD: u32 = 0,

    pub const _desc_table = .{
        .IMEKHGCIEDN = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .HEIDCIKEDPD = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const AreaDynamicInfo = struct {
    diy_dynamic_id: u32 = 0,
    dice_slot_id: u32 = 0,

    pub const _desc_table = .{
        .diy_dynamic_id = fd(2, .{ .Varint = .Simple }),
        .dice_slot_id = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartyInfo = struct {
    cur_fund: u32 = 0,
    PPFFKFGOLLJ: u32 = 0,
    EEBNAAPBKCN: u32 = 0,
    dynamic_id_list: ArrayList(u32),
    FLBNEKGIDBO: u32 = 0,
    EOHBBEAKODF: ArrayList(INDFFNNHOHC),
    CNAJOIGNMLJ: u32 = 0,
    area_list: ArrayList(TrainPartyArea),
    CIGACGHPDGK: ArrayList(u32),
    OBOKGLCMKKE: u32 = 0,

    pub const _desc_table = .{
        .cur_fund = fd(2, .{ .Varint = .Simple }),
        .PPFFKFGOLLJ = fd(3, .{ .Varint = .Simple }),
        .EEBNAAPBKCN = fd(1, .{ .Varint = .Simple }),
        .dynamic_id_list = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
        .FLBNEKGIDBO = fd(11, .{ .Varint = .Simple }),
        .EOHBBEAKODF = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .CNAJOIGNMLJ = fd(7, .{ .Varint = .Simple }),
        .area_list = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .CIGACGHPDGK = fd(6, .{ .PackedList = .{ .Varint = .Simple } }),
        .OBOKGLCMKKE = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartyData = struct {
    train_party_info: ?TrainPartyInfo = null,
    CEFMBAFCNPK: ?CDNGNDNLNAJ = null,
    unlock_area_num: u32 = 0,
    AIANOFKNLHG: u32 = 0,
    passenger_info: ?TrainPartyPassengerInfo = null,
    record_id: u32 = 0,

    pub const _desc_table = .{
        .train_party_info = fd(12, .{ .SubMessage = {} }),
        .CEFMBAFCNPK = fd(8, .{ .SubMessage = {} }),
        .unlock_area_num = fd(13, .{ .Varint = .Simple }),
        .AIANOFKNLHG = fd(3, .{ .Varint = .Simple }),
        .passenger_info = fd(6, .{ .SubMessage = {} }),
        .record_id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CDNGNDNLNAJ = struct {
    AAKHCNEDBCD: ?LHLEEHCBMOL = null,
    EEIHDCPOLEF: ?EDFABKMNBLI = null,
    GONEAKBDGEK: u32 = 0,
    GBFCLMLIMHC: ?GCFEHMENONM = null,
    HBHEAJIJEGF: ?CGCONJFFFBB = null,

    pub const _desc_table = .{
        .AAKHCNEDBCD = fd(9, .{ .SubMessage = {} }),
        .EEIHDCPOLEF = fd(11, .{ .SubMessage = {} }),
        .GONEAKBDGEK = fd(15, .{ .Varint = .Simple }),
        .GBFCLMLIMHC = fd(6, .{ .SubMessage = {} }),
        .HBHEAJIJEGF = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartyGetDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartyGetDataScRsp = struct {
    retcode: u32 = 0,
    train_party_data: ?TrainPartyData = null,

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
        .train_party_data = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartyUseCardCsReq = struct {
    EEGHHHKCGHB: u32 = 0,

    pub const _desc_table = .{
        .EEGHHHKCGHB = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartyUseCardScRsp = struct {
    retcode: u32 = 0,
    EEGHHHKCGHB: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
        .EEGHHHKCGHB = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartyMoveScNotify = struct {
    PEADIOCNIMF: ArrayList(KKNLMCJIGAF),
    GHEEOEOHMFI: u32 = 0,

    pub const _desc_table = .{
        .PEADIOCNIMF = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .GHEEOEOHMFI = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartySettleNotify = struct {
    HILOMEKAFBP: ?FKMBFLMEGEB = null,
    EEGHHHKCGHB: u32 = 0,

    pub const _desc_table = .{
        .HILOMEKAFBP = fd(8, .{ .SubMessage = {} }),
        .EEGHHHKCGHB = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FKMBFLMEGEB = struct {
    FOAPLIALHDI: ArrayList(BAEPNHDCIEM),
    HEIJCNLNHHI: u32 = 0,
    KBGDCEHIFFJ: ArrayList(MAONNNELGCC),

    pub const _desc_table = .{
        .FOAPLIALHDI = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .HEIJCNLNHHI = fd(9, .{ .Varint = .Simple }),
        .KBGDCEHIFFJ = fd(15, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BAEPNHDCIEM = struct {
    IJFIHGCKNHG: u32 = 0,
    switch_list: ArrayList(u32),

    pub const _desc_table = .{
        .IJFIHGCKNHG = fd(7, .{ .Varint = .Simple }),
        .switch_list = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NCLCBOPCEJG = struct {
    HMFFHBHALGE: ?FPLMDELMJKB = null,

    pub const _desc_table = .{
        .HMFFHBHALGE = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IDBEOMMCKIK = struct {
    BOJBPOELFCI: ?FPDFCGKIILE = null,
    passenger_id: u32 = 0,

    pub const _desc_table = .{
        .BOJBPOELFCI = fd(3, .{ .SubMessage = {} }),
        .passenger_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IBOMHKHBAAO = struct {
    NFEOLNAOGDK: ArrayList(IDBEOMMCKIK),

    pub const _desc_table = .{
        .NFEOLNAOGDK = fd(7, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ENJHDLHKINO = struct {
    pending_action: ?GCFEHMENONM = null,

    pub const _desc_table = .{
        .pending_action = fd(13, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FNOGHGHPJPD = struct {
    cur_index: u32 = 0,

    pub const _desc_table = .{
        .cur_index = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JLDHCFGGEAO = struct {
    MHMEDDEHBHI: ?GOCKBLNJIBG = null,

    pub const _desc_table = .{
        .MHMEDDEHBHI = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PFGIAHAIDLM = struct {
    skill_list: ArrayList(GOCKBLNJIBG),

    pub const _desc_table = .{
        .skill_list = fd(9, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JHMNLCOBJCJ = struct {
    ABBNHMGGPIL: ?TrainPartyPassenger = null,

    pub const _desc_table = .{
        .ABBNHMGGPIL = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FKJLBFNIGGM = struct {
    PCLMNBILAPH: ArrayList(u32),

    pub const _desc_table = .{
        .PCLMNBILAPH = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HAKMEBIAJCF = struct {
    MKOAMBMKDID: ArrayList(KKNLMCJIGAF),

    pub const _desc_table = .{
        .MKOAMBMKDID = fd(12, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HMOPIBLFCLN = struct {
    LKLLMPOKOGH: bool = false,
    HAFCKONEHFM: u32 = 0,
    GDGHCBGHLND: ?KACKJJDJONI = null,
    LNMMKFMEAJM: ?HBCINIKPAFI = null,

    pub const _desc_table = .{
        .LKLLMPOKOGH = fd(15, .{ .Varint = .Simple }),
        .HAFCKONEHFM = fd(6, .{ .Varint = .Simple }),
        .GDGHCBGHLND = fd(11, .{ .SubMessage = {} }),
        .LNMMKFMEAJM = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PLKCMGDEDCK = struct {
    src: CBEJAJENOHJ = @enumFromInt(0),
    PPHBGCABELF: ?PPHBGCABELF_union,

    pub const _PPHBGCABELF_case = enum {
        LNMMKFMEAJM,
        FPFDJNDNPIM,
        NJKJNBDBOCA,
        LGJGBIGHONP,
        DGNKBNGIPKI,
        MKKPCHHNHCJ,
        PKPJEFGGBOO,
        NHACNNJPALP,
        AHPDPOOLJLE,
        AFMIEICDNEA,
    };
    pub const PPHBGCABELF_union = union(_PPHBGCABELF_case) {
        LNMMKFMEAJM: HBCINIKPAFI,
        FPFDJNDNPIM: IBOMHKHBAAO,
        NJKJNBDBOCA: ENJHDLHKINO,
        LGJGBIGHONP: FNOGHGHPJPD,
        DGNKBNGIPKI: HAKMEBIAJCF,
        MKKPCHHNHCJ: JLDHCFGGEAO,
        PKPJEFGGBOO: HMOPIBLFCLN,
        NHACNNJPALP: PFGIAHAIDLM,
        AHPDPOOLJLE: JHMNLCOBJCJ,
        AFMIEICDNEA: FKJLBFNIGGM,
        pub const _union_desc = .{
            .LNMMKFMEAJM = fd(781, .{ .SubMessage = {} }),
            .FPFDJNDNPIM = fd(1303, .{ .SubMessage = {} }),
            .NJKJNBDBOCA = fd(483, .{ .SubMessage = {} }),
            .LGJGBIGHONP = fd(694, .{ .SubMessage = {} }),
            .DGNKBNGIPKI = fd(764, .{ .SubMessage = {} }),
            .MKKPCHHNHCJ = fd(151, .{ .SubMessage = {} }),
            .PKPJEFGGBOO = fd(1469, .{ .SubMessage = {} }),
            .NHACNNJPALP = fd(1986, .{ .SubMessage = {} }),
            .AHPDPOOLJLE = fd(558, .{ .SubMessage = {} }),
            .AFMIEICDNEA = fd(693, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .src = fd(4, .{ .Varint = .Simple }),
        .PPHBGCABELF = fd(null, .{ .OneOf = PPHBGCABELF_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartySyncUpdateScNotify = struct {
    FFLPKLLDHLM: ArrayList(PLKCMGDEDCK),

    pub const _desc_table = .{
        .FFLPKLLDHLM = fd(6, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GCFEHMENONM = struct {
    queue_position: u32 = 0,
    DMJFKDOOFMP: ?DMJFKDOOFMP_union,

    pub const _DMJFKDOOFMP_case = enum {
        IAMKDJCFMIB,
        LEEHAEOBEBA,
        OAOOFNJGIDH,
        PMMGOCJFEEJ,
    };
    pub const DMJFKDOOFMP_union = union(_DMJFKDOOFMP_case) {
        IAMKDJCFMIB: NJKENNCJLCF,
        LEEHAEOBEBA: MIIAIODLEOA,
        OAOOFNJGIDH: EMMDENJBFPF,
        PMMGOCJFEEJ: EPBGFBEDANM,
        pub const _union_desc = .{
            .IAMKDJCFMIB = fd(1447, .{ .SubMessage = {} }),
            .LEEHAEOBEBA = fd(345, .{ .SubMessage = {} }),
            .OAOOFNJGIDH = fd(55, .{ .SubMessage = {} }),
            .PMMGOCJFEEJ = fd(433, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .queue_position = fd(4, .{ .Varint = .Simple }),
        .DMJFKDOOFMP = fd(null, .{ .OneOf = DMJFKDOOFMP_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HHPIAFBHJCF = struct {
    confirm: bool = false,
    option_id: u32 = 0,

    pub const _desc_table = .{
        .confirm = fd(6, .{ .Varint = .Simple }),
        .option_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NJKENNCJLCF = struct {
    event_id: u32 = 0,
    option_list: ArrayList(HHPIAFBHJCF),
    HOIOKBKGFDN: IJDNOJEMIAN = @enumFromInt(0),

    pub const _desc_table = .{
        .event_id = fd(11, .{ .Varint = .Simple }),
        .option_list = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .HOIOKBKGFDN = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HPFKGDDIFHG = struct {
    event_id: u32 = 0,
    option_id: u32 = 0,

    pub const _desc_table = .{
        .event_id = fd(4, .{ .Varint = .Simple }),
        .option_id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BFIFANAOCPC = struct {
    HILOMEKAFBP: ?FKMBFLMEGEB = null,

    pub const _desc_table = .{
        .HILOMEKAFBP = fd(11, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OCMHOFEMNHI = struct {
    level: u32 = 0,
    skill_id: u32 = 0,
    JGMIPMDPPIJ: u32 = 0,

    pub const _desc_table = .{
        .level = fd(4, .{ .Varint = .Simple }),
        .skill_id = fd(13, .{ .Varint = .Simple }),
        .JGMIPMDPPIJ = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MIIAIODLEOA = struct {
    passenger_id: u32 = 0,
    GANAKFAIBFC: ArrayList(OCMHOFEMNHI),

    pub const _desc_table = .{
        .passenger_id = fd(9, .{ .Varint = .Simple }),
        .GANAKFAIBFC = fd(13, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EPBGFBEDANM = struct {
    IDAIHKMMDEK: u32 = 0,
    LLIJAGDKJCO: ArrayList(GOCKBLNJIBG),

    pub const _desc_table = .{
        .IDAIHKMMDEK = fd(2, .{ .Varint = .Simple }),
        .LLIJAGDKJCO = fd(11, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GLBFBNHFCNO = struct {
    IEHHDALHGPI: u32 = 0,

    pub const _desc_table = .{
        .IEHHDALHGPI = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MBINMAONBCD = struct {
    skill_list: ArrayList(GOCKBLNJIBG),

    pub const _desc_table = .{
        .skill_list = fd(4, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PJJDMMBKKCN = struct {
    passenger_id: u32 = 0,
    unique_id: u32 = 0,
    KHHLNGGECPB: u32 = 0,

    pub const _desc_table = .{
        .passenger_id = fd(7, .{ .Varint = .Simple }),
        .unique_id = fd(3, .{ .Varint = .Simple }),
        .KHHLNGGECPB = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HEOJLDBKKGE = struct {
    num: u32 = 0,
    passenger_id: u32 = 0,

    pub const _desc_table = .{
        .num = fd(10, .{ .Varint = .Simple }),
        .passenger_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EMMDENJBFPF = struct {
    NPJEECEDPOK: u32 = 0,
    MMEIPHBNKED: ArrayList(PJJDMMBKKCN),
    KJMLIAMGDLE: ArrayList(BJGLDLJKIDH),
    CCGBHHFBAFJ: ArrayList(HEOJLDBKKGE),
    KMLPPMNMPKE: u32 = 0,
    MLIIJGOAECK: u32 = 0,
    MLIPPLKIIFD: u32 = 0,
    CFOKIGIHCFP: u32 = 0,

    pub const _desc_table = .{
        .NPJEECEDPOK = fd(8, .{ .Varint = .Simple }),
        .MMEIPHBNKED = fd(14, .{ .List = .{ .SubMessage = {} } }),
        .KJMLIAMGDLE = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .CCGBHHFBAFJ = fd(15, .{ .List = .{ .SubMessage = {} } }),
        .KMLPPMNMPKE = fd(6, .{ .Varint = .Simple }),
        .MLIIJGOAECK = fd(5, .{ .Varint = .Simple }),
        .MLIPPLKIIFD = fd(11, .{ .Varint = .Simple }),
        .CFOKIGIHCFP = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LPCNJMFIPNP = struct {
    skill_type: LCDEMGACEKD = @enumFromInt(0),
    FLEJAGFJDKM: u32 = 0,
    skill_id: u32 = 0,

    pub const _desc_table = .{
        .skill_type = fd(9, .{ .Varint = .Simple }),
        .FLEJAGFJDKM = fd(5, .{ .Varint = .Simple }),
        .skill_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OAJOPDGKJDO = struct {
    unique_id: u32 = 0,
    EGLMGHLEKEF: u32 = 0,
    FAJCCGHLCAC: ArrayList(LPCNJMFIPNP),

    pub const _desc_table = .{
        .unique_id = fd(15, .{ .Varint = .Simple }),
        .EGLMGHLEKEF = fd(7, .{ .Varint = .Simple }),
        .FAJCCGHLCAC = fd(8, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PHOEFKFBIKD = struct {
    MKEGODINHNC: u32 = 0,
    OJCJNBGNICF: ?ItemList = null,
    NPOJMHHIBKI: ArrayList(u32),

    pub const _desc_table = .{
        .MKEGODINHNC = fd(15, .{ .Varint = .Simple }),
        .OJCJNBGNICF = fd(13, .{ .SubMessage = {} }),
        .NPOJMHHIBKI = fd(12, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PECGLKCICGO = struct {
    CANNGFDAFOE: ArrayList(u32),

    pub const _desc_table = .{
        .CANNGFDAFOE = fd(13, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JBOCJHNDAMC = struct {
    BIHFECJHPGH: ArrayList(LPCNJMFIPNP),
    MFAKJHFMAIB: ?PHOEFKFBIKD = null,
    NPJEECEDPOK: u32 = 0,
    CFOKIGIHCFP: u32 = 0,
    OMGGNAEAHIF: ArrayList(OAJOPDGKJDO),
    CCGBHHFBAFJ: ArrayList(HEOJLDBKKGE),
    score_id: u32 = 0,
    IJPPKNKNLNL: DMLCPAKDBLJ = @enumFromInt(0),
    GDGHCBGHLND: ?KACKJJDJONI = null,
    MMEIPHBNKED: ArrayList(PJJDMMBKKCN),

    pub const _desc_table = .{
        .BIHFECJHPGH = fd(8, .{ .List = .{ .SubMessage = {} } }),
        .MFAKJHFMAIB = fd(9, .{ .SubMessage = {} }),
        .NPJEECEDPOK = fd(11, .{ .Varint = .Simple }),
        .CFOKIGIHCFP = fd(12, .{ .Varint = .Simple }),
        .OMGGNAEAHIF = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .CCGBHHFBAFJ = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .score_id = fd(10, .{ .Varint = .Simple }),
        .IJPPKNKNLNL = fd(6, .{ .Varint = .Simple }),
        .GDGHCBGHLND = fd(2, .{ .SubMessage = {} }),
        .MMEIPHBNKED = fd(1, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ENCJKPGOIAL = struct {
    CANNGFDAFOE: ArrayList(u32),

    pub const _desc_table = .{
        .CANNGFDAFOE = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FBGLLDNLGPE = struct {
    KMLPPMNMPKE: u32 = 0,
    NICGNEMCHED: ArrayList(LPCNJMFIPNP),
    MMEIPHBNKED: ArrayList(PJJDMMBKKCN),
    CCGBHHFBAFJ: ArrayList(HEOJLDBKKGE),

    pub const _desc_table = .{
        .KMLPPMNMPKE = fd(4, .{ .Varint = .Simple }),
        .NICGNEMCHED = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .MMEIPHBNKED = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .CCGBHHFBAFJ = fd(10, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartyHandlePendingActionCsReq = struct {
    queue_position: u32 = 0,
    GNGLHJGMAOK: ?GNGLHJGMAOK_union,

    pub const _GNGLHJGMAOK_case = enum {
        IAMKDJCFMIB,
        PMMGOCJFEEJ,
        LGBJAELDPNB,
        BGJMFBHCMKL,
    };
    pub const GNGLHJGMAOK_union = union(_GNGLHJGMAOK_case) {
        IAMKDJCFMIB: HPFKGDDIFHG,
        PMMGOCJFEEJ: GLBFBNHFCNO,
        LGBJAELDPNB: PECGLKCICGO,
        BGJMFBHCMKL: ENCJKPGOIAL,
        pub const _union_desc = .{
            .IAMKDJCFMIB = fd(1433, .{ .SubMessage = {} }),
            .PMMGOCJFEEJ = fd(1375, .{ .SubMessage = {} }),
            .LGBJAELDPNB = fd(1327, .{ .SubMessage = {} }),
            .BGJMFBHCMKL = fd(271, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .queue_position = fd(4, .{ .Varint = .Simple }),
        .GNGLHJGMAOK = fd(null, .{ .OneOf = GNGLHJGMAOK_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartyHandlePendingActionScRsp = struct {
    HILOMEKAFBP: ?FKMBFLMEGEB = null,
    DLNCBJFGKAA: bool = false,
    queue_position: u32 = 0,
    retcode: u32 = 0,
    GNGLHJGMAOK: ?GNGLHJGMAOK_union,

    pub const _GNGLHJGMAOK_case = enum {
        LAELPNHHJIK,
        PMOJBJMKFAN,
        AFDNDBADDKP,
        LEDFNCDFAMK,
    };
    pub const GNGLHJGMAOK_union = union(_GNGLHJGMAOK_case) {
        LAELPNHHJIK: BFIFANAOCPC,
        PMOJBJMKFAN: MBINMAONBCD,
        AFDNDBADDKP: JBOCJHNDAMC,
        LEDFNCDFAMK: FBGLLDNLGPE,
        pub const _union_desc = .{
            .LAELPNHHJIK = fd(377, .{ .SubMessage = {} }),
            .PMOJBJMKFAN = fd(547, .{ .SubMessage = {} }),
            .AFDNDBADDKP = fd(1617, .{ .SubMessage = {} }),
            .LEDFNCDFAMK = fd(642, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .HILOMEKAFBP = fd(1, .{ .SubMessage = {} }),
        .DLNCBJFGKAA = fd(11, .{ .Varint = .Simple }),
        .queue_position = fd(2, .{ .Varint = .Simple }),
        .retcode = fd(12, .{ .Varint = .Simple }),
        .GNGLHJGMAOK = fd(null, .{ .OneOf = GNGLHJGMAOK_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartyBuildStartStepCsReq = struct {
    HEIDCIKEDPD: u32 = 0,
    area_id: u32 = 0,
    GJFHPCIEBOJ: u32 = 0,
    ALAODDBGHPL: ?AreaDynamicInfo = null,

    pub const _desc_table = .{
        .HEIDCIKEDPD = fd(3, .{ .Varint = .Simple }),
        .area_id = fd(10, .{ .Varint = .Simple }),
        .GJFHPCIEBOJ = fd(8, .{ .Varint = .Simple }),
        .ALAODDBGHPL = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartyBuildStartStepScRsp = struct {
    cur_fund: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .cur_fund = fd(10, .{ .Varint = .Simple }),
        .retcode = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const CIKOHJNAGON = struct {
    area_id: u32 = 0,
    KCJBMKJLFBA: ?AreaDynamicInfo = null,

    pub const _desc_table = .{
        .area_id = fd(6, .{ .Varint = .Simple }),
        .KCJBMKJLFBA = fd(14, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartyBuildDiyCsReq = struct {
    dice_slot_id: u32 = 0,
    area_id: u32 = 0,
    GANHKLNPAPI: bool = false,
    diy_dynamic_id: u32 = 0,

    pub const _desc_table = .{
        .dice_slot_id = fd(6, .{ .Varint = .Simple }),
        .area_id = fd(5, .{ .Varint = .Simple }),
        .GANHKLNPAPI = fd(4, .{ .Varint = .Simple }),
        .diy_dynamic_id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartyBuildDiyScRsp = struct {
    GANHKLNPAPI: bool = false,
    area_id: u32 = 0,
    retcode: u32 = 0,
    dynamic_info: ArrayList(AreaDynamicInfo),
    FFLPKLLDHLM: ArrayList(CIKOHJNAGON),

    pub const _desc_table = .{
        .GANHKLNPAPI = fd(4, .{ .Varint = .Simple }),
        .area_id = fd(15, .{ .Varint = .Simple }),
        .retcode = fd(6, .{ .Varint = .Simple }),
        .dynamic_info = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .FFLPKLLDHLM = fd(13, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KMBDKDLNHMC = struct {
    OKHCJKLJGHF: u32 = 0,
    CGFIHJCCGCD: ArrayList(PPKDPAJPAGF),

    pub const _desc_table = .{
        .OKHCJKLJGHF = fd(15, .{ .Varint = .Simple }),
        .CGFIHJCCGCD = fd(6, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JNAHOJLCNJA = struct {
    HEIDCIKEDPD: u32 = 0,
    CGFIHJCCGCD: ArrayList(PPKDPAJPAGF),
    area_id: u32 = 0,
    progress: u32 = 0,

    pub const _desc_table = .{
        .HEIDCIKEDPD = fd(4, .{ .Varint = .Simple }),
        .CGFIHJCCGCD = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .area_id = fd(14, .{ .Varint = .Simple }),
        .progress = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const IEFKFKFMEPL = struct {
    OBOKGLCMKKE: u32 = 0,
    PPFFKFGOLLJ: u32 = 0,

    pub const _desc_table = .{
        .OBOKGLCMKKE = fd(8, .{ .Varint = .Simple }),
        .PPFFKFGOLLJ = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FNPMCDNKDFJ = struct {
    BDCCOPIEHIN: u32 = 0,

    pub const _desc_table = .{
        .BDCCOPIEHIN = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GEGJHBMLOEM = struct {
    FLBNEKGIDBO: u32 = 0,

    pub const _desc_table = .{
        .FLBNEKGIDBO = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BFDDPPLMKPG = struct {
    MNLEIKIEHHP: u32 = 0,
    area_id: u32 = 0,

    pub const _desc_table = .{
        .MNLEIKIEHHP = fd(7, .{ .Varint = .Simple }),
        .area_id = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KMLEHLLOGJG = struct {
    diy_dynamic_id: u32 = 0,

    pub const _desc_table = .{
        .diy_dynamic_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OKFGJEIHLJM = struct {
    FBFIHJIIABO: u32 = 0,

    pub const _desc_table = .{
        .FBFIHJIIABO = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KAKJCJOMFGH = struct {
    CNAJOIGNMLJ: u32 = 0,

    pub const _desc_table = .{
        .CNAJOIGNMLJ = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const MCLNCBCPAFF = struct {
    CGFIHJCCGCD: ArrayList(u32),
    area_id: u32 = 0,

    pub const _desc_table = .{
        .CGFIHJCCGCD = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
        .area_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LNDGCGOBDJL = struct {
    area_list: ArrayList(MCLNCBCPAFF),

    pub const _desc_table = .{
        .area_list = fd(8, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PPKGJKIFELK = struct {
    PPHBGCABELF: ?PPHBGCABELF_union,

    pub const _PPHBGCABELF_case = enum {
        MAPLOGDNBGB,
        EKFLEJANKME,
        JOBEJAFKECD,
        DBLBHNPHHKB,
        CKBNOJAPNNB,
        NEPCONHOFKJ,
        EGDGPIKBNLK,
        BHOFHHEMLOG,
        HAEADFOOLND,
        GAIBCBGHHGL,
    };
    pub const PPHBGCABELF_union = union(_PPHBGCABELF_case) {
        MAPLOGDNBGB: OKFGJEIHLJM,
        EKFLEJANKME: KMBDKDLNHMC,
        JOBEJAFKECD: JNAHOJLCNJA,
        DBLBHNPHHKB: IEFKFKFMEPL,
        CKBNOJAPNNB: FNPMCDNKDFJ,
        NEPCONHOFKJ: BFDDPPLMKPG,
        EGDGPIKBNLK: KMLEHLLOGJG,
        BHOFHHEMLOG: GEGJHBMLOEM,
        HAEADFOOLND: KAKJCJOMFGH,
        GAIBCBGHHGL: LNDGCGOBDJL,
        pub const _union_desc = .{
            .MAPLOGDNBGB = fd(584, .{ .SubMessage = {} }),
            .EKFLEJANKME = fd(1365, .{ .SubMessage = {} }),
            .JOBEJAFKECD = fd(590, .{ .SubMessage = {} }),
            .DBLBHNPHHKB = fd(1962, .{ .SubMessage = {} }),
            .CKBNOJAPNNB = fd(1399, .{ .SubMessage = {} }),
            .NEPCONHOFKJ = fd(642, .{ .SubMessage = {} }),
            .EGDGPIKBNLK = fd(1185, .{ .SubMessage = {} }),
            .BHOFHHEMLOG = fd(1063, .{ .SubMessage = {} }),
            .HAEADFOOLND = fd(1778, .{ .SubMessage = {} }),
            .GAIBCBGHHGL = fd(1100, .{ .SubMessage = {} }),
        };
    };

    pub const _desc_table = .{
        .PPHBGCABELF = fd(null, .{ .OneOf = PPHBGCABELF_union }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartyBuildingUpdateNotify = struct {
    BJDFKEMKAOL: ArrayList(PPKGJKIFELK),

    pub const _desc_table = .{
        .BJDFKEMKAOL = fd(4, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartyEnterCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartyEnterScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartyLeaveCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartyLeaveScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const BJGLDLJKIDH = struct {
    JLLNMGBENAF: DMLCPAKDBLJ = @enumFromInt(0),
    level: u32 = 0,

    pub const _desc_table = .{
        .JLLNMGBENAF = fd(8, .{ .Varint = .Simple }),
        .level = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartyGamePlaySettleNotify = struct {
    record_id: u32 = 0,
    HANFPHGEMGF: ?TrainPartyPassengerInfo = null,
    OLBAGKMFDAJ: ArrayList(u32),
    AIANOFKNLHG: u32 = 0,

    pub const _desc_table = .{
        .record_id = fd(12, .{ .Varint = .Simple }),
        .HANFPHGEMGF = fd(13, .{ .SubMessage = {} }),
        .OLBAGKMFDAJ = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        .AIANOFKNLHG = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartyGamePlayStartCsReq = struct {
    KBGDCEHIFFJ: ArrayList(u32),
    GONEAKBDGEK: u32 = 0,

    pub const _desc_table = .{
        .KBGDCEHIFFJ = fd(5, .{ .PackedList = .{ .Varint = .Simple } }),
        .GONEAKBDGEK = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartyGamePlayStartScRsp = struct {
    KMDPHCMBJGB: ?CDNGNDNLNAJ = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .KMDPHCMBJGB = fd(9, .{ .SubMessage = {} }),
        .retcode = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartyAddBuildDynamicBuffCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartyAddBuildDynamicBuffScRsp = struct {
    buff_id: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .buff_id = fd(12, .{ .Varint = .Simple }),
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartyTakeBuildLevelAwardCsReq = struct {
    ECCLPIFMMPP: u32 = 0,

    pub const _desc_table = .{
        .ECCLPIFMMPP = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainPartyTakeBuildLevelAwardScRsp = struct {
    item_list: ?ItemList = null,
    retcode: u32 = 0,
    ECCLPIFMMPP: u32 = 0,

    pub const _desc_table = .{
        .item_list = fd(3, .{ .SubMessage = {} }),
        .retcode = fd(10, .{ .Varint = .Simple }),
        .ECCLPIFMMPP = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainVisitorBehavior = struct {
    visitor_id: u32 = 0,
    is_meet: bool = false,

    pub const _desc_table = .{
        .visitor_id = fd(10, .{ .Varint = .Simple }),
        .is_meet = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainVisitorBehaviorFinishCsReq = struct {
    visitor_id: u32 = 0,

    pub const _desc_table = .{
        .visitor_id = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainVisitorBehaviorFinishScRsp = struct {
    retcode: u32 = 0,
    visitor_id: u32 = 0,
    reward: ?ItemList = null,

    pub const _desc_table = .{
        .retcode = fd(12, .{ .Varint = .Simple }),
        .visitor_id = fd(9, .{ .Varint = .Simple }),
        .reward = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetTrainVisitorBehaviorCsReq = struct {
    OIFNLNBKDMA: ArrayList(u32),

    pub const _desc_table = .{
        .OIFNLNBKDMA = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetTrainVisitorBehaviorScRsp = struct {
    ECFOPDHGKFB: ArrayList(TrainVisitorBehavior),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .ECFOPDHGKFB = fd(6, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainRefreshTimeNotify = struct {
    AKALBJECJIK: u64 = 0,

    pub const _desc_table = .{
        .AKALBJECJIK = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TrainVisitorRewardSendNotify = struct {
    visitor_id: u32 = 0,
    reward: ?ItemList = null,
    type: TrainVisitorRewardSendType = @enumFromInt(0),

    pub const _desc_table = .{
        .visitor_id = fd(5, .{ .Varint = .Simple }),
        .reward = fd(1, .{ .SubMessage = {} }),
        .type = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HGLKMJFEHMB = struct {
    EDHHGCPDKIK: ArrayList(u32),
    IJABKDEPGMA: bool = false,
    visitor_id: u32 = 0,
    OPAOKGJBOOE: u32 = 0,
    status: TrainVisitorStatus = @enumFromInt(0),

    pub const _desc_table = .{
        .EDHHGCPDKIK = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
        .IJABKDEPGMA = fd(10, .{ .Varint = .Simple }),
        .visitor_id = fd(4, .{ .Varint = .Simple }),
        .OPAOKGJBOOE = fd(5, .{ .Varint = .Simple }),
        .status = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetTrainVisitorRegisterCsReq = struct {
    type: TrainVisitorRegisterGetType = @enumFromInt(0),

    pub const _desc_table = .{
        .type = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetTrainVisitorRegisterScRsp = struct {
    FDMFKALJBAJ: ArrayList(HGLKMJFEHMB),
    FAMHPMFOIJH: ArrayList(u32),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .FDMFKALJBAJ = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .FAMHPMFOIJH = fd(1, .{ .PackedList = .{ .Varint = .Simple } }),
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeTrainVisitorUntakenBehaviorRewardCsReq = struct {
    visitor_id: u32 = 0,

    pub const _desc_table = .{
        .visitor_id = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeTrainVisitorUntakenBehaviorRewardScRsp = struct {
    visitor_id: u32 = 0,
    retcode: u32 = 0,
    EDHHGCPDKIK: ArrayList(u32),

    pub const _desc_table = .{
        .visitor_id = fd(9, .{ .Varint = .Simple }),
        .retcode = fd(12, .{ .Varint = .Simple }),
        .EDHHGCPDKIK = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ShowNewSupplementVisitorCsReq = struct {
    FAMHPMFOIJH: ArrayList(u32),

    pub const _desc_table = .{
        .FAMHPMFOIJH = fd(8, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ShowNewSupplementVisitorScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const NHBDDINFKOH = struct {
    IIMOPLCFHAH: u32 = 0,
    item_id: u32 = 0,
    unique_id: u64 = 0,
    IEAGBPEMFLG: i32 = 0,
    LLJAEGOBHMP: i32 = 0,
    KBCDECDNEFM: u32 = 0,

    pub const _desc_table = .{
        .IIMOPLCFHAH = fd(8, .{ .Varint = .Simple }),
        .item_id = fd(12, .{ .Varint = .Simple }),
        .unique_id = fd(4, .{ .Varint = .Simple }),
        .IEAGBPEMFLG = fd(9, .{ .Varint = .Simple }),
        .LLJAEGOBHMP = fd(15, .{ .Varint = .Simple }),
        .KBCDECDNEFM = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KCHJHCLJOCK = struct {
    CPODEJOFPDD: u32 = 0,
    HJBPKCFKHLI: ArrayList(NHBDDINFKOH),
    CLFGFABOIOP: HGKKPPLJBOI = @enumFromInt(0),
    EMBKICMEFCO: DCJAOPDINOI = @enumFromInt(0),
    DIPHGGHFMCP: u32 = 0,

    pub const _desc_table = .{
        .CPODEJOFPDD = fd(2, .{ .Varint = .Simple }),
        .HJBPKCFKHLI = fd(4, .{ .List = .{ .SubMessage = {} } }),
        .CLFGFABOIOP = fd(10, .{ .Varint = .Simple }),
        .EMBKICMEFCO = fd(11, .{ .Varint = .Simple }),
        .DIPHGGHFMCP = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TravelBrochureGetDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TravelBrochureGetDataScRsp = struct {
    custom_value: u32 = 0,
    retcode: u32 = 0,
    MIBCLBGMDLA: ArrayList(MIBCLBGMDLAEntry),
    FKBBOMHEKPE: ArrayList(FKBBOMHEKPEEntry),

    pub const _desc_table = .{
        .custom_value = fd(15, .{ .Varint = .Simple }),
        .retcode = fd(8, .{ .Varint = .Simple }),
        .MIBCLBGMDLA = fd(5, .{ .List = .{ .SubMessage = {} } }),
        .FKBBOMHEKPE = fd(9, .{ .List = .{ .SubMessage = {} } }),
    };

    pub const MIBCLBGMDLAEntry = struct {
        key: u32 = 0,
        value: ?KCHJHCLJOCK = null,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .SubMessage = {} }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const FKBBOMHEKPEEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TravelBrochurePageUnlockScNotify = struct {
    CPODEJOFPDD: u32 = 0,

    pub const _desc_table = .{
        .CPODEJOFPDD = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TravelBrochureSelectMessageCsReq = struct {
    DIPHGGHFMCP: u32 = 0,
    CPODEJOFPDD: u32 = 0,

    pub const _desc_table = .{
        .DIPHGGHFMCP = fd(14, .{ .Varint = .Simple }),
        .CPODEJOFPDD = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TravelBrochureSelectMessageScRsp = struct {
    retcode: u32 = 0,
    reward: ?ItemList = null,
    CAGGLKLIIMF: ?KCHJHCLJOCK = null,

    pub const _desc_table = .{
        .retcode = fd(13, .{ .Varint = .Simple }),
        .reward = fd(8, .{ .SubMessage = {} }),
        .CAGGLKLIIMF = fd(11, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TravelBrochureApplyPasterCsReq = struct {
    KBCDECDNEFM: u32 = 0,
    item_id: u32 = 0,
    CPODEJOFPDD: u32 = 0,
    IEAGBPEMFLG: i32 = 0,
    IIMOPLCFHAH: u32 = 0,
    LLJAEGOBHMP: i32 = 0,

    pub const _desc_table = .{
        .KBCDECDNEFM = fd(15, .{ .Varint = .Simple }),
        .item_id = fd(10, .{ .Varint = .Simple }),
        .CPODEJOFPDD = fd(3, .{ .Varint = .Simple }),
        .IEAGBPEMFLG = fd(11, .{ .Varint = .Simple }),
        .IIMOPLCFHAH = fd(1, .{ .Varint = .Simple }),
        .LLJAEGOBHMP = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TravelBrochureApplyPasterScRsp = struct {
    CAGGLKLIIMF: ?KCHJHCLJOCK = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .CAGGLKLIIMF = fd(6, .{ .SubMessage = {} }),
        .retcode = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TravelBrochureRemovePasterCsReq = struct {
    item_id: u32 = 0,
    unique_id: u64 = 0,
    CPODEJOFPDD: u32 = 0,

    pub const _desc_table = .{
        .item_id = fd(7, .{ .Varint = .Simple }),
        .unique_id = fd(6, .{ .Varint = .Simple }),
        .CPODEJOFPDD = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TravelBrochureRemovePasterScRsp = struct {
    retcode: u32 = 0,
    CAGGLKLIIMF: ?KCHJHCLJOCK = null,

    pub const _desc_table = .{
        .retcode = fd(2, .{ .Varint = .Simple }),
        .CAGGLKLIIMF = fd(13, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TravelBrochureUpdatePasterPosCsReq = struct {
    unique_id: u64 = 0,
    item_id: u32 = 0,
    IEAGBPEMFLG: i32 = 0,
    LLJAEGOBHMP: i32 = 0,
    CPODEJOFPDD: u32 = 0,
    IIMOPLCFHAH: u32 = 0,
    KBCDECDNEFM: u32 = 0,

    pub const _desc_table = .{
        .unique_id = fd(9, .{ .Varint = .Simple }),
        .item_id = fd(14, .{ .Varint = .Simple }),
        .IEAGBPEMFLG = fd(2, .{ .Varint = .Simple }),
        .LLJAEGOBHMP = fd(15, .{ .Varint = .Simple }),
        .CPODEJOFPDD = fd(4, .{ .Varint = .Simple }),
        .IIMOPLCFHAH = fd(8, .{ .Varint = .Simple }),
        .KBCDECDNEFM = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TravelBrochureUpdatePasterPosScRsp = struct {
    retcode: u32 = 0,
    CAGGLKLIIMF: ?KCHJHCLJOCK = null,

    pub const _desc_table = .{
        .retcode = fd(13, .{ .Varint = .Simple }),
        .CAGGLKLIIMF = fd(3, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TravelBrochureGetPasterScNotify = struct {
    num: u32 = 0,
    FKKOBDMFHIL: u32 = 0,

    pub const _desc_table = .{
        .num = fd(10, .{ .Varint = .Simple }),
        .FKKOBDMFHIL = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GKDIHIFFHFD = struct {
    num: u32 = 0,
    FKKOBDMFHIL: u32 = 0,

    pub const _desc_table = .{
        .num = fd(8, .{ .Varint = .Simple }),
        .FKKOBDMFHIL = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TravelBrochureSetCustomValueCsReq = struct {
    value: u32 = 0,

    pub const _desc_table = .{
        .value = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TravelBrochureSetCustomValueScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TravelBrochureSetPageDescStatusCsReq = struct {
    CPODEJOFPDD: u32 = 0,
    GEIBGFDENJA: DCJAOPDINOI = @enumFromInt(0),

    pub const _desc_table = .{
        .CPODEJOFPDD = fd(13, .{ .Varint = .Simple }),
        .GEIBGFDENJA = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TravelBrochureSetPageDescStatusScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TravelBrochurePageResetCsReq = struct {
    CPODEJOFPDD: u32 = 0,

    pub const _desc_table = .{
        .CPODEJOFPDD = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TravelBrochurePageResetScRsp = struct {
    CAGGLKLIIMF: ?KCHJHCLJOCK = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .CAGGLKLIIMF = fd(9, .{ .SubMessage = {} }),
        .retcode = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KBJPHLNAPGI = struct {
    item_id: u32 = 0,
    IIMOPLCFHAH: u32 = 0,
    LLJAEGOBHMP: i32 = 0,
    KBCDECDNEFM: u32 = 0,
    IEAGBPEMFLG: i32 = 0,

    pub const _desc_table = .{
        .item_id = fd(13, .{ .Varint = .Simple }),
        .IIMOPLCFHAH = fd(15, .{ .Varint = .Simple }),
        .LLJAEGOBHMP = fd(12, .{ .Varint = .Simple }),
        .KBCDECDNEFM = fd(5, .{ .Varint = .Simple }),
        .IEAGBPEMFLG = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TravelBrochureApplyPasterListCsReq = struct {
    GEDGLNCPGGN: ArrayList(KBJPHLNAPGI),
    CPODEJOFPDD: u32 = 0,

    pub const _desc_table = .{
        .GEDGLNCPGGN = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .CPODEJOFPDD = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TravelBrochureApplyPasterListScRsp = struct {
    CAGGLKLIIMF: ?KCHJHCLJOCK = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .CAGGLKLIIMF = fd(8, .{ .SubMessage = {} }),
        .retcode = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const INJFOHNJGMG = struct {
    type: IMKNBJCOIOP = @enumFromInt(0),
    ILHGNEPLODM: u32 = 0,
    NCLOMNEHPMJ: u32 = 0,
    JELMCJBICJN: u32 = 0,
    EGKDINMMENA: u32 = 0,

    pub const _desc_table = .{
        .type = fd(15, .{ .Varint = .Simple }),
        .ILHGNEPLODM = fd(10, .{ .Varint = .Simple }),
        .NCLOMNEHPMJ = fd(1, .{ .Varint = .Simple }),
        .JELMCJBICJN = fd(11, .{ .Varint = .Simple }),
        .EGKDINMMENA = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TreasureDungeonDataScNotify = struct {
    DLEJPJJCELJ: ?KLCKNKLPONM = null,

    pub const _desc_table = .{
        .DLEJPJJCELJ = fd(15, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TreasureDungeonFinishScNotify = struct {
    JBCGKLDMHNL: ArrayList(JBCGKLDMHNLEntry),
    NLMDEMOHBOO: u32 = 0,
    PIKAPDJHGND: u32 = 0,
    is_win: bool = false,
    AECNCDPJPDG: u32 = 0,
    KGMMPGFGODJ: ArrayList(KGMMPGFGODJEntry),
    HOHHBIHFJEH: u32 = 0,

    pub const _desc_table = .{
        .JBCGKLDMHNL = fd(13, .{ .List = .{ .SubMessage = {} } }),
        .NLMDEMOHBOO = fd(7, .{ .Varint = .Simple }),
        .PIKAPDJHGND = fd(11, .{ .Varint = .Simple }),
        .is_win = fd(2, .{ .Varint = .Simple }),
        .AECNCDPJPDG = fd(6, .{ .Varint = .Simple }),
        .KGMMPGFGODJ = fd(10, .{ .List = .{ .SubMessage = {} } }),
        .HOHHBIHFJEH = fd(14, .{ .Varint = .Simple }),
    };

    pub const JBCGKLDMHNLEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub const KGMMPGFGODJEntry = struct {
        key: u32 = 0,
        value: u32 = 0,

        pub const _desc_table = .{
            .key = fd(1, .{ .Varint = .Simple }),
            .value = fd(2, .{ .Varint = .Simple }),
        };

        pub usingnamespace protobuf.MessageMixins(@This());
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const KLCKNKLPONM = struct {
    PHHKBAENBMM: u32 = 0,
    JAFNPNMOHCM: u32 = 0,
    BBCKFJIHIDM: ArrayList(INJFOHNJGMG),
    MKOAMBMKDID: ArrayList(LKCMFEAAHHM),
    buff_list: ArrayList(ENBNFOLCDIE),
    GFFOJCCKLFM: ArrayList(PCAIGNJKAFA),
    NMFAPGOLODJ: bool = false,
    map_id: u32 = 0,
    CFDPDENPPDH: bool = false,
    NLMDEMOHBOO: u32 = 0,
    NODBPKHOJEC: bool = false,
    item_list: ArrayList(LHANBGNJCIF),
    KJJOMEPHJEE: ArrayList(LKHHGJPPMPP),
    FCJECKCICKB: u32 = 0,
    PIKAPDJHGND: u32 = 0,
    avatar_list: ArrayList(PCAIGNJKAFA),
    IIALGLDDNAD: u32 = 0,
    NCBHADLOAGA: u32 = 0,

    pub const _desc_table = .{
        .PHHKBAENBMM = fd(8, .{ .Varint = .Simple }),
        .JAFNPNMOHCM = fd(10, .{ .Varint = .Simple }),
        .BBCKFJIHIDM = fd(12, .{ .List = .{ .SubMessage = {} } }),
        .MKOAMBMKDID = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .buff_list = fd(1906, .{ .List = .{ .SubMessage = {} } }),
        .GFFOJCCKLFM = fd(2023, .{ .List = .{ .SubMessage = {} } }),
        .NMFAPGOLODJ = fd(163, .{ .Varint = .Simple }),
        .map_id = fd(9, .{ .Varint = .Simple }),
        .CFDPDENPPDH = fd(432, .{ .Varint = .Simple }),
        .NLMDEMOHBOO = fd(3, .{ .Varint = .Simple }),
        .NODBPKHOJEC = fd(29, .{ .Varint = .Simple }),
        .item_list = fd(1544, .{ .List = .{ .SubMessage = {} } }),
        .KJJOMEPHJEE = fd(868, .{ .List = .{ .SubMessage = {} } }),
        .FCJECKCICKB = fd(1, .{ .Varint = .Simple }),
        .PIKAPDJHGND = fd(14, .{ .Varint = .Simple }),
        .avatar_list = fd(638, .{ .List = .{ .SubMessage = {} } }),
        .IIALGLDDNAD = fd(464, .{ .Varint = .Simple }),
        .NCBHADLOAGA = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LHANBGNJCIF = struct {
    item_id: u32 = 0,
    item_count: u32 = 0,

    pub const _desc_table = .{
        .item_id = fd(4, .{ .Varint = .Simple }),
        .item_count = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const PCAIGNJKAFA = struct {
    sp_bar: ?SpBarInfo = null,
    avatar_type: u32 = 0,
    avatar_id: u32 = 0,
    EAJLJNBNPNP: u32 = 0,
    hp: u32 = 0,

    pub const _desc_table = .{
        .sp_bar = fd(2, .{ .SubMessage = {} }),
        .avatar_type = fd(3, .{ .Varint = .Simple }),
        .avatar_id = fd(13, .{ .Varint = .Simple }),
        .EAJLJNBNPNP = fd(5, .{ .Varint = .Simple }),
        .hp = fd(7, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LKHHGJPPMPP = struct {
    avatar_id: u32 = 0,
    avatar_type: u32 = 0,

    pub const _desc_table = .{
        .avatar_id = fd(14, .{ .Varint = .Simple }),
        .avatar_type = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ENBNFOLCDIE = struct {
    buff_id: u32 = 0,
    AKAHNMLNEFN: u32 = 0,

    pub const _desc_table = .{
        .buff_id = fd(7, .{ .Varint = .Simple }),
        .AKAHNMLNEFN = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LKCMFEAAHHM = struct {
    buff_list: ArrayList(GGGCOCPGBBH),
    OLLHOBHDDEN: u32 = 0,
    DEMNCGLLJCP: bool = false,
    LIMMILEAPJM: bool = false,
    KNLFELDECAL: bool = false,
    HEMJHDOEEBL: bool = false,
    MONHIBBPKEE: u32 = 0,
    HFNHLCFNHKD: u32 = 0,

    pub const _desc_table = .{
        .buff_list = fd(1757, .{ .List = .{ .SubMessage = {} } }),
        .OLLHOBHDDEN = fd(13, .{ .Varint = .Simple }),
        .DEMNCGLLJCP = fd(9, .{ .Varint = .Simple }),
        .LIMMILEAPJM = fd(11, .{ .Varint = .Simple }),
        .KNLFELDECAL = fd(10, .{ .Varint = .Simple }),
        .HEMJHDOEEBL = fd(7, .{ .Varint = .Simple }),
        .MONHIBBPKEE = fd(12, .{ .Varint = .Simple }),
        .HFNHLCFNHKD = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GGGCOCPGBBH = struct {
    LEAAEBAFCHP: u32 = 0,
    buff_id: u32 = 0,
    HFNHLCFNHKD: u32 = 0,
    EGKDINMMENA: u32 = 0,
    ECGHNFCCBJJ: u32 = 0,

    pub const _desc_table = .{
        .LEAAEBAFCHP = fd(13, .{ .Varint = .Simple }),
        .buff_id = fd(14, .{ .Varint = .Simple }),
        .HFNHLCFNHKD = fd(3, .{ .Varint = .Simple }),
        .EGKDINMMENA = fd(10, .{ .Varint = .Simple }),
        .ECGHNFCCBJJ = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ABHFABFGPOF = struct {
    FCJECKCICKB: u32 = 0,
    BIINNCNDPCG: bool = false,
    JAFNPNMOHCM: u32 = 0,
    CLOONOIFEFO: bool = false,
    PIKAPDJHGND: u32 = 0,
    NKHKDJKEGDH: u32 = 0,
    NLMDEMOHBOO: u32 = 0,

    pub const _desc_table = .{
        .FCJECKCICKB = fd(6, .{ .Varint = .Simple }),
        .BIINNCNDPCG = fd(7, .{ .Varint = .Simple }),
        .JAFNPNMOHCM = fd(14, .{ .Varint = .Simple }),
        .CLOONOIFEFO = fd(1, .{ .Varint = .Simple }),
        .PIKAPDJHGND = fd(13, .{ .Varint = .Simple }),
        .NKHKDJKEGDH = fd(2, .{ .Varint = .Simple }),
        .NLMDEMOHBOO = fd(10, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetTreasureDungeonActivityDataCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetTreasureDungeonActivityDataScRsp = struct {
    HIOOKMOANDN: ArrayList(ABHFABFGPOF),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .HIOOKMOANDN = fd(3, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterTreasureDungeonCsReq = struct {
    avatar_list: ArrayList(JACKEJLKJNA),
    NLMDEMOHBOO: u32 = 0,

    pub const _desc_table = .{
        .avatar_list = fd(2, .{ .List = .{ .SubMessage = {} } }),
        .NLMDEMOHBOO = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const EnterTreasureDungeonScRsp = struct {
    DLEJPJJCELJ: ?KLCKNKLPONM = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .DLEJPJJCELJ = fd(1, .{ .SubMessage = {} }),
        .retcode = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OpenTreasureDungeonGridCsReq = struct {
    HFNHLCFNHKD: u32 = 0,
    NLMDEMOHBOO: u32 = 0,

    pub const _desc_table = .{
        .HFNHLCFNHKD = fd(4, .{ .Varint = .Simple }),
        .NLMDEMOHBOO = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const OpenTreasureDungeonGridScRsp = struct {
    retcode: u32 = 0,
    DLEJPJJCELJ: ?KLCKNKLPONM = null,

    pub const _desc_table = .{
        .retcode = fd(7, .{ .Varint = .Simple }),
        .DLEJPJJCELJ = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const InteractTreasureDungeonGridCsReq = struct {
    NLMDEMOHBOO: u32 = 0,
    display_value: u32 = 0,
    HFNHLCFNHKD: u32 = 0,

    pub const _desc_table = .{
        .NLMDEMOHBOO = fd(6, .{ .Varint = .Simple }),
        .display_value = fd(2, .{ .Varint = .Simple }),
        .HFNHLCFNHKD = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const InteractTreasureDungeonGridScRsp = struct {
    retcode: u32 = 0,
    DLEJPJJCELJ: ?KLCKNKLPONM = null,

    pub const _desc_table = .{
        .retcode = fd(15, .{ .Varint = .Simple }),
        .DLEJPJJCELJ = fd(8, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UseTreasureDungeonItemCsReq = struct {
    item_id: u32 = 0,
    HFNHLCFNHKD: u32 = 0,
    NLMDEMOHBOO: u32 = 0,

    pub const _desc_table = .{
        .item_id = fd(15, .{ .Varint = .Simple }),
        .HFNHLCFNHKD = fd(10, .{ .Varint = .Simple }),
        .NLMDEMOHBOO = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UseTreasureDungeonItemScRsp = struct {
    retcode: u32 = 0,
    DLEJPJJCELJ: ?KLCKNKLPONM = null,

    pub const _desc_table = .{
        .retcode = fd(11, .{ .Varint = .Simple }),
        .DLEJPJJCELJ = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const JACKEJLKJNA = struct {
    avatar_type: AvatarType = @enumFromInt(0),
    avatar_id: u32 = 0,

    pub const _desc_table = .{
        .avatar_type = fd(13, .{ .Varint = .Simple }),
        .avatar_id = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightTreasureDungeonMonsterCsReq = struct {
    NLMDEMOHBOO: u32 = 0,
    HFNHLCFNHKD: u32 = 0,
    avatar_list: ArrayList(JACKEJLKJNA),

    pub const _desc_table = .{
        .NLMDEMOHBOO = fd(14, .{ .Varint = .Simple }),
        .HFNHLCFNHKD = fd(8, .{ .Varint = .Simple }),
        .avatar_list = fd(12, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FightTreasureDungeonMonsterScRsp = struct {
    battle_info: ?SceneBattleInfo = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .battle_info = fd(9, .{ .SubMessage = {} }),
        .retcode = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const QuitTreasureDungeonCsReq = struct {
    NLMDEMOHBOO: u32 = 0,
    PCPDFJHDJCC: bool = false,

    pub const _desc_table = .{
        .NLMDEMOHBOO = fd(15, .{ .Varint = .Simple }),
        .PCPDFJHDJCC = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const QuitTreasureDungeonScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Tutorial = struct {
    id: u32 = 0,
    status: TutorialStatus = @enumFromInt(0),

    pub const _desc_table = .{
        .id = fd(13, .{ .Varint = .Simple }),
        .status = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TutorialGuide = struct {
    id: u32 = 0,
    status: TutorialStatus = @enumFromInt(0),

    pub const _desc_table = .{
        .id = fd(5, .{ .Varint = .Simple }),
        .status = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetTutorialCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetTutorialScRsp = struct {
    retcode: u32 = 0,
    tutorial_list: ArrayList(Tutorial),

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
        .tutorial_list = fd(5, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetTutorialGuideCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetTutorialGuideScRsp = struct {
    tutorial_guide_list: ArrayList(TutorialGuide),
    retcode: u32 = 0,

    pub const _desc_table = .{
        .tutorial_guide_list = fd(1, .{ .List = .{ .SubMessage = {} } }),
        .retcode = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UnlockTutorialCsReq = struct {
    tutorial_id: u32 = 0,

    pub const _desc_table = .{
        .tutorial_id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UnlockTutorialScRsp = struct {
    tutorial: ?Tutorial = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .tutorial = fd(4, .{ .SubMessage = {} }),
        .retcode = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UnlockTutorialGuideCsReq = struct {
    group_id: u32 = 0,

    pub const _desc_table = .{
        .group_id = fd(1, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const UnlockTutorialGuideScRsp = struct {
    retcode: u32 = 0,
    tutorial_guide: ?TutorialGuide = null,

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
        .tutorial_guide = fd(5, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishTutorialCsReq = struct {
    tutorial_id: u32 = 0,
    BMLEMOBCNCM: MPJPPGHFHEH = @enumFromInt(0),

    pub const _desc_table = .{
        .tutorial_id = fd(5, .{ .Varint = .Simple }),
        .BMLEMOBCNCM = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishTutorialScRsp = struct {
    tutorial: ?Tutorial = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .tutorial = fd(6, .{ .SubMessage = {} }),
        .retcode = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishTutorialGuideCsReq = struct {
    group_id: u32 = 0,

    pub const _desc_table = .{
        .group_id = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const FinishTutorialGuideScRsp = struct {
    tutorial_guide: ?TutorialGuide = null,
    retcode: u32 = 0,
    reward: ?ItemList = null,

    pub const _desc_table = .{
        .tutorial_guide = fd(15, .{ .SubMessage = {} }),
        .retcode = fd(14, .{ .Varint = .Simple }),
        .reward = fd(13, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Waypoint = struct {
    id: u32 = 0,
    is_new: bool = false,
    KHFGDKNGFDP: u32 = 0,

    pub const _desc_table = .{
        .id = fd(7, .{ .Varint = .Simple }),
        .is_new = fd(3, .{ .Varint = .Simple }),
        .KHFGDKNGFDP = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ChapterBrief = struct {
    id: u32 = 0,
    is_new: bool = false,
    NCKELKEGBGL: u32 = 0,
    taken_reward_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .id = fd(9, .{ .Varint = .Simple }),
        .is_new = fd(5, .{ .Varint = .Simple }),
        .NCKELKEGBGL = fd(8, .{ .Varint = .Simple }),
        .taken_reward_id_list = fd(14, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const Chapter = struct {
    GOKHJLMPNFF: ?ChapterBrief = null,
    KONBFJPINHN: ArrayList(Waypoint),

    pub const _desc_table = .{
        .GOKHJLMPNFF = fd(14, .{ .SubMessage = {} }),
        .KONBFJPINHN = fd(13, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetWaypointCsReq = struct {
    KIEKJEFFPHK: u32 = 0,

    pub const _desc_table = .{
        .KIEKJEFFPHK = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetWaypointScRsp = struct {
    HOEAHBIFKCI: u32 = 0,
    retcode: u32 = 0,
    FJJFLKCMIDJ: ?Chapter = null,

    pub const _desc_table = .{
        .HOEAHBIFKCI = fd(12, .{ .Varint = .Simple }),
        .retcode = fd(7, .{ .Varint = .Simple }),
        .FJJFLKCMIDJ = fd(1, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetCurWaypointCsReq = struct {
    NKCMNAFAIOI: u32 = 0,

    pub const _desc_table = .{
        .NKCMNAFAIOI = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const SetCurWaypointScRsp = struct {
    HOEAHBIFKCI: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .HOEAHBIFKCI = fd(12, .{ .Varint = .Simple }),
        .retcode = fd(4, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetChapterCsReq = struct {
    pub const _desc_table = .{};

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetChapterScRsp = struct {
    retcode: u32 = 0,
    IELPICLBBJI: ArrayList(ChapterBrief),
    HOEAHBIFKCI: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
        .IELPICLBBJI = fd(9, .{ .List = .{ .SubMessage = {} } }),
        .HOEAHBIFKCI = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const WaypointShowNewCsNotify = struct {
    NKCMNAFAIOI: u32 = 0,
    KIEKJEFFPHK: u32 = 0,

    pub const _desc_table = .{
        .NKCMNAFAIOI = fd(3, .{ .Varint = .Simple }),
        .KIEKJEFFPHK = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeChapterRewardCsReq = struct {
    KIEKJEFFPHK: u32 = 0,
    AKDGHHNKLEJ: u32 = 0,

    pub const _desc_table = .{
        .KIEKJEFFPHK = fd(12, .{ .Varint = .Simple }),
        .AKDGHHNKLEJ = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const TakeChapterRewardScRsp = struct {
    AKDGHHNKLEJ: u32 = 0,
    KIEKJEFFPHK: u32 = 0,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .AKDGHHNKLEJ = fd(10, .{ .Varint = .Simple }),
        .KIEKJEFFPHK = fd(2, .{ .Varint = .Simple }),
        .retcode = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HFPFFJIMCKM = struct {
    BDNFLICNFHN: bool = false,
    motion: ?MotionInfo = null,
    LKJMLIDAODM: u32 = 0,
    OPCLDNLLNFH: ArrayList(Vector),

    pub const _desc_table = .{
        .BDNFLICNFHN = fd(10, .{ .Varint = .Simple }),
        .motion = fd(2, .{ .SubMessage = {} }),
        .LKJMLIDAODM = fd(6, .{ .Varint = .Simple }),
        .OPCLDNLLNFH = fd(9, .{ .List = .{ .SubMessage = {} } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const HEHPIOGGIEG = struct {
    uuid: ManagedString = .Empty,
    HEFJEJHOJEA: ?HFPFFJIMCKM = null,
    BDNFLICNFHN: bool = false,
    OPCLDNLLNFH: ArrayList(Vector),
    id: u32 = 0,
    LKJMLIDAODM: u32 = 0,

    pub const _desc_table = .{
        .uuid = fd(6, .String),
        .HEFJEJHOJEA = fd(15, .{ .SubMessage = {} }),
        .BDNFLICNFHN = fd(5, .{ .Varint = .Simple }),
        .OPCLDNLLNFH = fd(7, .{ .List = .{ .SubMessage = {} } }),
        .id = fd(12, .{ .Varint = .Simple }),
        .LKJMLIDAODM = fd(8, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartWolfBroGameCsReq = struct {
    motion: ?MotionInfo = null,
    id: u32 = 0,
    group_state_info: ?GroupStateInfo = null,
    DJFCMLIPDAB: bool = false,

    pub const _desc_table = .{
        .motion = fd(6, .{ .SubMessage = {} }),
        .id = fd(7, .{ .Varint = .Simple }),
        .group_state_info = fd(14, .{ .SubMessage = {} }),
        .DJFCMLIPDAB = fd(15, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const StartWolfBroGameScRsp = struct {
    retcode: u32 = 0,
    DNPLIHJGJIH: ?HEHPIOGGIEG = null,

    pub const _desc_table = .{
        .retcode = fd(11, .{ .Varint = .Simple }),
        .DNPLIHJGJIH = fd(2, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ArchiveWolfBroGameCsReq = struct {
    motion: ?MotionInfo = null,
    id: u32 = 0,

    pub const _desc_table = .{
        .motion = fd(6, .{ .SubMessage = {} }),
        .id = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const ArchiveWolfBroGameScRsp = struct {
    DNPLIHJGJIH: ?HEHPIOGGIEG = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .DNPLIHJGJIH = fd(10, .{ .SubMessage = {} }),
        .retcode = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RestoreWolfBroGameArchiveCsReq = struct {
    id: u32 = 0,

    pub const _desc_table = .{
        .id = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const RestoreWolfBroGameArchiveScRsp = struct {
    DNPLIHJGJIH: ?HEHPIOGGIEG = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .DNPLIHJGJIH = fd(7, .{ .SubMessage = {} }),
        .retcode = fd(9, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const QuitWolfBroGameCsReq = struct {
    id: u32 = 0,

    pub const _desc_table = .{
        .id = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const QuitWolfBroGameScRsp = struct {
    DNPLIHJGJIH: ?HEHPIOGGIEG = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .DNPLIHJGJIH = fd(11, .{ .SubMessage = {} }),
        .retcode = fd(3, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetWolfBroGameDataCsReq = struct {
    id: u32 = 0,

    pub const _desc_table = .{
        .id = fd(12, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const GetWolfBroGameDataScRsp = struct {
    DNPLIHJGJIH: ?HEHPIOGGIEG = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .DNPLIHJGJIH = fd(9, .{ .SubMessage = {} }),
        .retcode = fd(11, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const WolfBroGameDataChangeScNotify = struct {
    DNPLIHJGJIH: ?HEHPIOGGIEG = null,

    pub const _desc_table = .{
        .DNPLIHJGJIH = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const WolfBroGameUseBulletCsReq = struct {
    MIBCFIMMIKG: ?Vector = null,
    assist_monster_entity_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .MIBCFIMMIKG = fd(4, .{ .SubMessage = {} }),
        .assist_monster_entity_id_list = fd(2, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const WolfBroGameUseBulletScRsp = struct {
    retcode: u32 = 0,
    DNPLIHJGJIH: ?HEHPIOGGIEG = null,

    pub const _desc_table = .{
        .retcode = fd(9, .{ .Varint = .Simple }),
        .DNPLIHJGJIH = fd(12, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const WolfBroGamePickupBulletCsReq = struct {
    MIBCFIMMIKG: ?Vector = null,

    pub const _desc_table = .{
        .MIBCFIMMIKG = fd(6, .{ .SubMessage = {} }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const WolfBroGamePickupBulletScRsp = struct {
    DNPLIHJGJIH: ?HEHPIOGGIEG = null,
    retcode: u32 = 0,

    pub const _desc_table = .{
        .DNPLIHJGJIH = fd(5, .{ .SubMessage = {} }),
        .retcode = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const WolfBroGameActivateBulletCsReq = struct {
    config_id: u32 = 0,
    group_id: u32 = 0,

    pub const _desc_table = .{
        .config_id = fd(13, .{ .Varint = .Simple }),
        .group_id = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const WolfBroGameActivateBulletScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(6, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const WolfBroGameExplodeMonsterCsReq = struct {
    assist_monster_entity_id_list: ArrayList(u32),

    pub const _desc_table = .{
        .assist_monster_entity_id_list = fd(4, .{ .PackedList = .{ .Varint = .Simple } }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const WolfBroGameExplodeMonsterScRsp = struct {
    retcode: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(14, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const WorldUnlockCsReq = struct {
    NPEBNEKDLEN: u32 = 0,

    pub const _desc_table = .{
        .NPEBNEKDLEN = fd(2, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const WorldUnlockScRsp = struct {
    retcode: u32 = 0,
    NPEBNEKDLEN: u32 = 0,

    pub const _desc_table = .{
        .retcode = fd(1, .{ .Varint = .Simple }),
        .NPEBNEKDLEN = fd(5, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};

pub const LNKFBAEDODI = struct {
    DGHNGBLHAIL: u32 = 0,
    authkey_ver: u32 = 0,
    GKJKKDAOPAM: u32 = 0,
    OLCCIMLMMAD: u32 = 0,
    ELHEPMNLAPG: u32 = 0,
    PIAMLFBIHPI: u32 = 0,
    CFCAJEMDFKJ: u32 = 0,
    FEPHHKIGOOP: u32 = 0,
    MOPDHNENCPC: u32 = 0,
    EDFPCONIKDC: u32 = 0,
    id: u32 = 0,
    HOGHLBEEDGA: u32 = 0,
    BIPFIFCJCBN: u32 = 0,

    pub const _desc_table = .{
        .DGHNGBLHAIL = fd(1, .{ .Varint = .Simple }),
        .authkey_ver = fd(2, .{ .Varint = .Simple }),
        .GKJKKDAOPAM = fd(3, .{ .Varint = .Simple }),
        .OLCCIMLMMAD = fd(4, .{ .Varint = .Simple }),
        .ELHEPMNLAPG = fd(5, .{ .Varint = .Simple }),
        .PIAMLFBIHPI = fd(6, .{ .Varint = .Simple }),
        .CFCAJEMDFKJ = fd(7, .{ .Varint = .Simple }),
        .FEPHHKIGOOP = fd(8, .{ .Varint = .Simple }),
        .MOPDHNENCPC = fd(9, .{ .Varint = .Simple }),
        .EDFPCONIKDC = fd(10, .{ .Varint = .Simple }),
        .id = fd(11, .{ .Varint = .Simple }),
        .HOGHLBEEDGA = fd(12, .{ .Varint = .Simple }),
        .BIPFIFCJCBN = fd(13, .{ .Varint = .Simple }),
    };

    pub usingnamespace protobuf.MessageMixins(@This());
};
